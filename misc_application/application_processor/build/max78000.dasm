
/home/bristopherwoods/Desktop/CTFs/MITRE/eCTF-Monorepo_2024/application_processor/build/max78000.elf:     file format elf32-littlearm


Disassembly of section .text:

10010000 <__isr_vector>:
10010000:	20020000 	.word	0x20020000
10010004:	10011101 	.word	0x10011101
10010008:	10010f85 	.word	0x10010f85
1001000c:	1001113f 	.word	0x1001113f
10010010:	10011141 	.word	0x10011141
10010014:	10011143 	.word	0x10011143
10010018:	10011145 	.word	0x10011145
	...
1001002c:	10011147 	.word	0x10011147
10010030:	10011149 	.word	0x10011149
10010034:	00000000 	.word	0x00000000
10010038:	1001114b 	.word	0x1001114b
1001003c:	1001114d 	.word	0x1001114d
10010040:	10011151 	.word	0x10011151
10010044:	10011153 	.word	0x10011153
10010048:	10011155 	.word	0x10011155
1001004c:	10011157 	.word	0x10011157
10010050:	10011159 	.word	0x10011159
10010054:	1001115b 	.word	0x1001115b
10010058:	1001115d 	.word	0x1001115d
1001005c:	1001115f 	.word	0x1001115f
10010060:	10011161 	.word	0x10011161
10010064:	10011163 	.word	0x10011163
10010068:	10011165 	.word	0x10011165
1001006c:	10011167 	.word	0x10011167
10010070:	10011169 	.word	0x10011169
10010074:	1001116b 	.word	0x1001116b
10010078:	1001116d 	.word	0x1001116d
1001007c:	1001116f 	.word	0x1001116f
10010080:	10011171 	.word	0x10011171
10010084:	10011173 	.word	0x10011173
10010088:	10011175 	.word	0x10011175
1001008c:	10011177 	.word	0x10011177
10010090:	10011179 	.word	0x10011179
10010094:	1001117b 	.word	0x1001117b
10010098:	1001117d 	.word	0x1001117d
1001009c:	1001117f 	.word	0x1001117f
100100a0:	10010f1d 	.word	0x10010f1d
100100a4:	10010f25 	.word	0x10010f25
100100a8:	10011185 	.word	0x10011185
100100ac:	10011187 	.word	0x10011187
100100b0:	10011189 	.word	0x10011189
100100b4:	1001118b 	.word	0x1001118b
100100b8:	1001118d 	.word	0x1001118d
100100bc:	1001118f 	.word	0x1001118f
100100c0:	10011191 	.word	0x10011191
100100c4:	10011193 	.word	0x10011193
100100c8:	10011195 	.word	0x10011195
100100cc:	10011197 	.word	0x10011197
100100d0:	10011199 	.word	0x10011199
100100d4:	1001119b 	.word	0x1001119b
100100d8:	1001119d 	.word	0x1001119d
100100dc:	1001119f 	.word	0x1001119f
100100e0:	100111a1 	.word	0x100111a1
100100e4:	100111a3 	.word	0x100111a3
100100e8:	100111a5 	.word	0x100111a5
100100ec:	100111a7 	.word	0x100111a7
100100f0:	100111a9 	.word	0x100111a9
100100f4:	100111ab 	.word	0x100111ab
100100f8:	100111ad 	.word	0x100111ad
100100fc:	100111af 	.word	0x100111af
10010100:	100111b1 	.word	0x100111b1
10010104:	100111b3 	.word	0x100111b3
10010108:	100111b5 	.word	0x100111b5
1001010c:	100111b7 	.word	0x100111b7
10010110:	100111b9 	.word	0x100111b9
10010114:	100111bb 	.word	0x100111bb
10010118:	100111bd 	.word	0x100111bd
1001011c:	100111bf 	.word	0x100111bf
10010120:	100111c1 	.word	0x100111c1
10010124:	100111c3 	.word	0x100111c3
10010128:	100111c5 	.word	0x100111c5
1001012c:	100111c7 	.word	0x100111c7
10010130:	100111c9 	.word	0x100111c9
10010134:	100111cb 	.word	0x100111cb
10010138:	100111cd 	.word	0x100111cd
1001013c:	100111cf 	.word	0x100111cf
10010140:	100111d1 	.word	0x100111d1
10010144:	100111d3 	.word	0x100111d3
10010148:	100111d5 	.word	0x100111d5
1001014c:	100111d7 	.word	0x100111d7
10010150:	100111d9 	.word	0x100111d9
10010154:	100111db 	.word	0x100111db
10010158:	100111dd 	.word	0x100111dd
1001015c:	100111df 	.word	0x100111df
10010160:	100111e1 	.word	0x100111e1
10010164:	100111e3 	.word	0x100111e3
10010168:	100111e5 	.word	0x100111e5
1001016c:	100111e7 	.word	0x100111e7
10010170:	100111e9 	.word	0x100111e9
10010174:	100111eb 	.word	0x100111eb
10010178:	100111ed 	.word	0x100111ed
1001017c:	100111ef 	.word	0x100111ef
10010180:	100111f1 	.word	0x100111f1
10010184:	100111f3 	.word	0x100111f3
10010188:	100111f5 	.word	0x100111f5
1001018c:	100111f7 	.word	0x100111f7
10010190:	100111f9 	.word	0x100111f9
10010194:	100111fb 	.word	0x100111fb
10010198:	100111fd 	.word	0x100111fd
1001019c:	100111ff 	.word	0x100111ff
100101a0:	10011201 	.word	0x10011201
100101a4:	10011203 	.word	0x10011203
100101a8:	10011205 	.word	0x10011205
100101ac:	10011207 	.word	0x10011207
100101b0:	10011209 	.word	0x10011209
100101b4:	1001120b 	.word	0x1001120b
100101b8:	1001120d 	.word	0x1001120d
100101bc:	1001120f 	.word	0x1001120f
100101c0:	10011211 	.word	0x10011211
100101c4:	10011213 	.word	0x10011213
100101c8:	10011215 	.word	0x10011215
100101cc:	10011217 	.word	0x10011217
100101d0:	10011219 	.word	0x10011219
100101d4:	1001121b 	.word	0x1001121b
100101d8:	1001121d 	.word	0x1001121d
100101dc:	1001121f 	.word	0x1001121f
	...

10010200 <firmware_startup>:
10010200:	4800      	ldr	r0, [pc, #0]	@ (10010204 <firmware_startup+0x4>)
10010202:	4780      	blx	r0
10010204:	10011101 	.word	0x10011101

10010208 <deregister_tm_clones>:
10010208:	4803      	ldr	r0, [pc, #12]	@ (10010218 <deregister_tm_clones+0x10>)
1001020a:	4b04      	ldr	r3, [pc, #16]	@ (1001021c <deregister_tm_clones+0x14>)
1001020c:	4283      	cmp	r3, r0
1001020e:	d002      	beq.n	10010216 <deregister_tm_clones+0xe>
10010210:	4b03      	ldr	r3, [pc, #12]	@ (10010220 <deregister_tm_clones+0x18>)
10010212:	b103      	cbz	r3, 10010216 <deregister_tm_clones+0xe>
10010214:	4718      	bx	r3
10010216:	4770      	bx	lr
10010218:	20000bcc 	.word	0x20000bcc
1001021c:	20000bcc 	.word	0x20000bcc
10010220:	00000000 	.word	0x00000000

10010224 <register_tm_clones>:
10010224:	4805      	ldr	r0, [pc, #20]	@ (1001023c <register_tm_clones+0x18>)
10010226:	4b06      	ldr	r3, [pc, #24]	@ (10010240 <register_tm_clones+0x1c>)
10010228:	1a1b      	subs	r3, r3, r0
1001022a:	0fd9      	lsrs	r1, r3, #31
1001022c:	eb01 01a3 	add.w	r1, r1, r3, asr #2
10010230:	1049      	asrs	r1, r1, #1
10010232:	d002      	beq.n	1001023a <register_tm_clones+0x16>
10010234:	4b03      	ldr	r3, [pc, #12]	@ (10010244 <register_tm_clones+0x20>)
10010236:	b103      	cbz	r3, 1001023a <register_tm_clones+0x16>
10010238:	4718      	bx	r3
1001023a:	4770      	bx	lr
1001023c:	20000bcc 	.word	0x20000bcc
10010240:	20000bcc 	.word	0x20000bcc
10010244:	00000000 	.word	0x00000000

10010248 <__do_global_dtors_aux>:
10010248:	b510      	push	{r4, lr}
1001024a:	4c06      	ldr	r4, [pc, #24]	@ (10010264 <__do_global_dtors_aux+0x1c>)
1001024c:	7823      	ldrb	r3, [r4, #0]
1001024e:	b943      	cbnz	r3, 10010262 <__do_global_dtors_aux+0x1a>
10010250:	f7ff ffda 	bl	10010208 <deregister_tm_clones>
10010254:	4b04      	ldr	r3, [pc, #16]	@ (10010268 <__do_global_dtors_aux+0x20>)
10010256:	b113      	cbz	r3, 1001025e <__do_global_dtors_aux+0x16>
10010258:	4804      	ldr	r0, [pc, #16]	@ (1001026c <__do_global_dtors_aux+0x24>)
1001025a:	f3af 8000 	nop.w
1001025e:	2301      	movs	r3, #1
10010260:	7023      	strb	r3, [r4, #0]
10010262:	bd10      	pop	{r4, pc}
10010264:	20000c00 	.word	0x20000c00
10010268:	00000000 	.word	0x00000000
1001026c:	10027b90 	.word	0x10027b90

10010270 <frame_dummy>:
10010270:	b508      	push	{r3, lr}
10010272:	4b05      	ldr	r3, [pc, #20]	@ (10010288 <frame_dummy+0x18>)
10010274:	b11b      	cbz	r3, 1001027e <frame_dummy+0xe>
10010276:	4905      	ldr	r1, [pc, #20]	@ (1001028c <frame_dummy+0x1c>)
10010278:	4805      	ldr	r0, [pc, #20]	@ (10010290 <frame_dummy+0x20>)
1001027a:	f3af 8000 	nop.w
1001027e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
10010282:	f7ff bfcf 	b.w	10010224 <register_tm_clones>
10010286:	bf00      	nop
10010288:	00000000 	.word	0x00000000
1001028c:	20000c04 	.word	0x20000c04
10010290:	10027b90 	.word	0x10027b90

10010294 <deobfuscate>:
/********************************* REFERENCE FLAG **********************************/
// trust me, it's easier to get the boot reference flag by
// getting this running than to try to untangle this
// NOTE: you're not allowed to do this in your code
// Remove this in your design
typedef uint32_t aErjfkdfru;const aErjfkdfru aseiFuengleR[]={0x1ffe4b6,0x3098ac,0x2f56101,0x11a38bb,0x485124,0x11644a7,0x3c74e8,0x3c74e8,0x2f56101,0x12614f7,0x1ffe4b6,0x11a38bb,0x1ffe4b6,0x12614f7,0x1ffe4b6,0x12220e3,0x3098ac,0x1ffe4b6,0x2ca498,0x11a38bb,0xe6d3b7,0x1ffe4b6,0x127bc,0x3098ac,0x11a38bb,0x1d073c6,0x51bd0,0x127bc,0x2e590b1,0x1cc7fb2,0x1d073c6,0xeac7cb,0x51bd0,0x2ba13d5,0x2b22bad,0x2179d2e,0};const aErjfkdfru djFIehjkklIH[]={0x138e798,0x2cdbb14,0x1f9f376,0x23bcfda,0x1d90544,0x1cad2d2,0x860e2c,0x860e2c,0x1f9f376,0x38ec6f2,0x138e798,0x23bcfda,0x138e798,0x38ec6f2,0x138e798,0x31dc9ea,0x2cdbb14,0x138e798,0x25cbe0c,0x23bcfda,0x199a72,0x138e798,0x11c82b4,0x2cdbb14,0x23bcfda,0x3225338,0x18d7fbc,0x11c82b4,0x35ff56,0x2b15630,0x3225338,0x8a977a,0x18d7fbc,0x29067fe,0x1ae6dee,0x4431c8,0};typedef int skerufjp;skerufjp siNfidpL(skerufjp verLKUDSfj){aErjfkdfru ubkerpYBd=12+1;skerufjp xUrenrkldxpxx=2253667944%0x432a1f32;aErjfkdfru UfejrlcpD=1361423303;verLKUDSfj=(verLKUDSfj+0x12345678)%60466176;while(xUrenrkldxpxx--!=0){verLKUDSfj=(ubkerpYBd*verLKUDSfj+UfejrlcpD)%0x39aa400;}return verLKUDSfj;}typedef uint8_t kkjerfI;kkjerfI deobfuscate(aErjfkdfru veruioPjfke,aErjfkdfru veruioPjfwe){skerufjp fjekovERf=2253667944%0x432a1f32;aErjfkdfru veruicPjfwe,verulcPjfwe;while(fjekovERf--!=0){veruioPjfwe=(veruioPjfwe-siNfidpL(veruioPjfke))%0x39aa400;veruioPjfke=(veruioPjfke-siNfidpL(veruioPjfwe))%60466176;}veruicPjfwe=(veruioPjfke+0x39aa400)%60466176;verulcPjfwe=(veruioPjfwe+60466176)%0x39aa400;return veruicPjfwe*60466176+verulcPjfwe-89;}
10010294:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
10010298:	4a29      	ldr	r2, [pc, #164]	@ (10010340 <deobfuscate+0xac>)
1001029a:	4e2a      	ldr	r6, [pc, #168]	@ (10010344 <deobfuscate+0xb0>)
1001029c:	4f2a      	ldr	r7, [pc, #168]	@ (10010348 <deobfuscate+0xb4>)
1001029e:	4d2b      	ldr	r5, [pc, #172]	@ (1001034c <deobfuscate+0xb8>)
100102a0:	4c2b      	ldr	r4, [pc, #172]	@ (10010350 <deobfuscate+0xbc>)
100102a2:	f04f 0c04 	mov.w	ip, #4
100102a6:	eb00 0e06 	add.w	lr, r0, r6
100102aa:	fb87 380e 	smull	r3, r8, r7, lr
100102ae:	ea4f 73ee 	mov.w	r3, lr, asr #31
100102b2:	ebc3 53e8 	rsb	r3, r3, r8, asr #23
100102b6:	fb02 e313 	mls	r3, r2, r3, lr
100102ba:	f04f 0804 	mov.w	r8, #4
100102be:	eb03 0e43 	add.w	lr, r3, r3, lsl #1
100102c2:	eb03 038e 	add.w	r3, r3, lr, lsl #2
100102c6:	442b      	add	r3, r5
100102c8:	ea4f 2e93 	mov.w	lr, r3, lsr #10
100102cc:	fba4 9e0e 	umull	r9, lr, r4, lr
100102d0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
100102d4:	f1b8 0801 	subs.w	r8, r8, #1
100102d8:	fb02 331e 	mls	r3, r2, lr, r3
100102dc:	d1ef      	bne.n	100102be <deobfuscate+0x2a>
100102de:	1acb      	subs	r3, r1, r3
100102e0:	0a99      	lsrs	r1, r3, #10
100102e2:	fba4 e101 	umull	lr, r1, r4, r1
100102e6:	0949      	lsrs	r1, r1, #5
100102e8:	fb02 3111 	mls	r1, r2, r1, r3
100102ec:	eb01 0e06 	add.w	lr, r1, r6
100102f0:	ea4f 239e 	mov.w	r3, lr, lsr #10
100102f4:	fba4 8303 	umull	r8, r3, r4, r3
100102f8:	095b      	lsrs	r3, r3, #5
100102fa:	fb02 e313 	mls	r3, r2, r3, lr
100102fe:	f04f 0804 	mov.w	r8, #4
10010302:	eb03 0e43 	add.w	lr, r3, r3, lsl #1
10010306:	eb03 038e 	add.w	r3, r3, lr, lsl #2
1001030a:	442b      	add	r3, r5
1001030c:	ea4f 2e93 	mov.w	lr, r3, lsr #10
10010310:	fba4 9e0e 	umull	r9, lr, r4, lr
10010314:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
10010318:	f1b8 0801 	subs.w	r8, r8, #1
1001031c:	fb02 331e 	mls	r3, r2, lr, r3
10010320:	d1ef      	bne.n	10010302 <deobfuscate+0x6e>
10010322:	1ac3      	subs	r3, r0, r3
10010324:	0a98      	lsrs	r0, r3, #10
10010326:	fba4 e000 	umull	lr, r0, r4, r0
1001032a:	0940      	lsrs	r0, r0, #5
1001032c:	f1bc 0c01 	subs.w	ip, ip, #1
10010330:	fb02 3010 	mls	r0, r2, r0, r3
10010334:	d1b7      	bne.n	100102a6 <deobfuscate+0x12>
10010336:	4807      	ldr	r0, [pc, #28]	@ (10010354 <deobfuscate+0xc0>)
10010338:	4408      	add	r0, r1
1001033a:	b2c0      	uxtb	r0, r0
1001033c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10010340:	039aa400 	.word	0x039aa400
10010344:	12345678 	.word	0x12345678
10010348:	2383f4bf 	.word	0x2383f4bf
1001034c:	5125abc7 	.word	0x5125abc7
10010350:	002383f5 	.word	0x002383f5
10010354:	039aa3a7 	.word	0x039aa3a7

10010358 <init>:

/********************************* UTILITIES **********************************/

// Initialize the device
// This must be called on startup to initialize the flash and i2c interfaces
void init() {
10010358:	b510      	push	{r4, lr}
  \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
1001035a:	b662      	cpsie	i

    // Setup Flash
    flash_simple_init();

    // Test application has been booted before
    flash_simple_read(FLASH_ADDR, (uint32_t*)&flash_status, sizeof(flash_entry));
1001035c:	4c18      	ldr	r4, [pc, #96]	@ (100103c0 <init+0x68>)
    flash_simple_init();
1001035e:	f000 fcc3 	bl	10010ce8 <flash_simple_init>
    flash_simple_read(FLASH_ADDR, (uint32_t*)&flash_status, sizeof(flash_entry));
10010362:	2288      	movs	r2, #136	@ 0x88
10010364:	4817      	ldr	r0, [pc, #92]	@ (100103c4 <init+0x6c>)
10010366:	4621      	mov	r1, r4
10010368:	f000 fcd8 	bl	10010d1c <flash_simple_read>

    // Write Component IDs from flash if first boot e.g. flash unwritten
    if (flash_status.flash_magic != FLASH_MAGIC) {
1001036c:	4b16      	ldr	r3, [pc, #88]	@ (100103c8 <init+0x70>)
1001036e:	6822      	ldr	r2, [r4, #0]
10010370:	429a      	cmp	r2, r3
10010372:	d01a      	beq.n	100103aa <init+0x52>
        print_debug("First boot, setting flash!\n");
10010374:	4815      	ldr	r0, [pc, #84]	@ (100103cc <init+0x74>)
10010376:	f005 f813 	bl	100153a0 <printf>
1001037a:	4815      	ldr	r0, [pc, #84]	@ (100103d0 <init+0x78>)
1001037c:	f005 f870 	bl	10015460 <puts>
10010380:	4814      	ldr	r0, [pc, #80]	@ (100103d4 <init+0x7c>)
10010382:	f005 f80d 	bl	100153a0 <printf>
10010386:	4b14      	ldr	r3, [pc, #80]	@ (100103d8 <init+0x80>)
10010388:	681b      	ldr	r3, [r3, #0]
1001038a:	6898      	ldr	r0, [r3, #8]
1001038c:	f005 f95e 	bl	1001564c <fflush>

        flash_status.flash_magic = FLASH_MAGIC;
10010390:	a109      	add	r1, pc, #36	@ (adr r1, 100103b8 <init+0x60>)
10010392:	e9d1 0100 	ldrd	r0, r1, [r1]
        flash_status.component_cnt = COMPONENT_CNT;
        uint32_t component_ids[COMPONENT_CNT] = {COMPONENT_IDS};
        memcpy(flash_status.component_ids, component_ids, 
10010396:	f04f 3311 	mov.w	r3, #286331153	@ 0x11111111
        flash_status.flash_magic = FLASH_MAGIC;
1001039a:	e9c4 0100 	strd	r0, r1, [r4]
            COMPONENT_CNT*sizeof(uint32_t));

        flash_simple_write(FLASH_ADDR, (uint32_t*)&flash_status, sizeof(flash_entry));
1001039e:	2288      	movs	r2, #136	@ 0x88
100103a0:	4808      	ldr	r0, [pc, #32]	@ (100103c4 <init+0x6c>)
        memcpy(flash_status.component_ids, component_ids, 
100103a2:	60a3      	str	r3, [r4, #8]
        flash_simple_write(FLASH_ADDR, (uint32_t*)&flash_status, sizeof(flash_entry));
100103a4:	4621      	mov	r1, r4
100103a6:	f000 fcbb 	bl	10010d20 <flash_simple_write>
    }
    
    // Initialize board link interface
    board_link_init();
}
100103aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    board_link_init();
100103ae:	f000 bc0f 	b.w	10010bd0 <board_link_init>
100103b2:	bf00      	nop
100103b4:	f3af 8000 	nop.w
100103b8:	deadbeef 	.word	0xdeadbeef
100103bc:	00000001 	.word	0x00000001
100103c0:	20000c20 	.word	0x20000c20
100103c4:	1007e000 	.word	0x1007e000
100103c8:	deadbeef 	.word	0xdeadbeef
100103cc:	10020560 	.word	0x10020560
100103d0:	1002056c 	.word	0x1002056c
100103d4:	10020588 	.word	0x10020588
100103d8:	20000590 	.word	0x20000590

100103dc <scan_components>:
    return len;
}

/******************************** COMPONENT COMMS ********************************/

int scan_components() {
100103dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    // Print out provisioned component IDs
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
100103e0:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 100104a4 <scan_components+0xc8>
100103e4:	4e30      	ldr	r6, [pc, #192]	@ (100104a8 <scan_components+0xcc>)
100103e6:	f8da 3004 	ldr.w	r3, [sl, #4]
int scan_components() {
100103ea:	f5ad 7d00 	sub.w	sp, sp, #512	@ 0x200
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
100103ee:	b1db      	cbz	r3, 10010428 <scan_components+0x4c>
        print_info("P>0x%08x\n", flash_status.component_ids[i]);
100103f0:	f8df 90b8 	ldr.w	r9, [pc, #184]	@ 100104ac <scan_components+0xd0>
100103f4:	f8df 80b8 	ldr.w	r8, [pc, #184]	@ 100104b0 <scan_components+0xd4>
100103f8:	4f2e      	ldr	r7, [pc, #184]	@ (100104b4 <scan_components+0xd8>)
100103fa:	f10a 0504 	add.w	r5, sl, #4
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
100103fe:	2400      	movs	r4, #0
        print_info("P>0x%08x\n", flash_status.component_ids[i]);
10010400:	4648      	mov	r0, r9
10010402:	f004 ffcd 	bl	100153a0 <printf>
10010406:	f855 1f04 	ldr.w	r1, [r5, #4]!
1001040a:	4640      	mov	r0, r8
1001040c:	f004 ffc8 	bl	100153a0 <printf>
10010410:	4638      	mov	r0, r7
10010412:	f004 ffc5 	bl	100153a0 <printf>
10010416:	6833      	ldr	r3, [r6, #0]
10010418:	6898      	ldr	r0, [r3, #8]
1001041a:	f005 f917 	bl	1001564c <fflush>
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1001041e:	f8da 3004 	ldr.w	r3, [sl, #4]
10010422:	3401      	adds	r4, #1
10010424:	42a3      	cmp	r3, r4
10010426:	d8eb      	bhi.n	10010400 <scan_components+0x24>
        int len = issue_cmd(addr, transmit_buffer, receive_buffer);

        // Success, device is present
        if (len > 0) {
            scan_message* scan = (scan_message*) receive_buffer;
            print_info("F>0x%08x\n", scan->component_id);
10010428:	4d20      	ldr	r5, [pc, #128]	@ (100104ac <scan_components+0xd0>)
1001042a:	f8df 808c 	ldr.w	r8, [pc, #140]	@ 100104b8 <scan_components+0xdc>
1001042e:	4f21      	ldr	r7, [pc, #132]	@ (100104b4 <scan_components+0xd8>)
    for (i2c_addr_t addr = 0x8; addr < 0x7F; addr++) {
10010430:	2408      	movs	r4, #8
10010432:	2c36      	cmp	r4, #54	@ 0x36
10010434:	bf08      	it	eq
10010436:	2437      	moveq	r4, #55	@ 0x37
        command->opcode = COMPONENT_CMD_SCAN;
10010438:	2101      	movs	r1, #1
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1001043a:	aa40      	add	r2, sp, #256	@ 0x100
1001043c:	4620      	mov	r0, r4
        command->opcode = COMPONENT_CMD_SCAN;
1001043e:	f88d 1100 	strb.w	r1, [sp, #256]	@ 0x100
    int result = send_packet(addr, sizeof(uint8_t), transmit);
10010442:	f000 fbc9 	bl	10010bd8 <send_packet>
10010446:	4603      	mov	r3, r0
    if (result == ERROR_RETURN) {
10010448:	3301      	adds	r3, #1
    int len = poll_and_receive_packet(addr, receive);
1001044a:	4669      	mov	r1, sp
1001044c:	4620      	mov	r0, r4
    if (result == ERROR_RETURN) {
1001044e:	d012      	beq.n	10010476 <scan_components+0x9a>
    int len = poll_and_receive_packet(addr, receive);
10010450:	f000 fbdc 	bl	10010c0c <poll_and_receive_packet>
10010454:	4603      	mov	r3, r0
        if (len > 0) {
10010456:	2b00      	cmp	r3, #0
            print_info("F>0x%08x\n", scan->component_id);
10010458:	4628      	mov	r0, r5
        if (len > 0) {
1001045a:	dd0c      	ble.n	10010476 <scan_components+0x9a>
            print_info("F>0x%08x\n", scan->component_id);
1001045c:	f004 ffa0 	bl	100153a0 <printf>
10010460:	9900      	ldr	r1, [sp, #0]
10010462:	4640      	mov	r0, r8
10010464:	f004 ff9c 	bl	100153a0 <printf>
10010468:	4638      	mov	r0, r7
1001046a:	f004 ff99 	bl	100153a0 <printf>
1001046e:	6833      	ldr	r3, [r6, #0]
10010470:	6898      	ldr	r0, [r3, #8]
10010472:	f005 f8eb 	bl	1001564c <fflush>
    for (i2c_addr_t addr = 0x8; addr < 0x7F; addr++) {
10010476:	3401      	adds	r4, #1
10010478:	b2e4      	uxtb	r4, r4
1001047a:	2c7f      	cmp	r4, #127	@ 0x7f
1001047c:	d1d9      	bne.n	10010432 <scan_components+0x56>
        }
    }
    print_success("List\n");
1001047e:	480f      	ldr	r0, [pc, #60]	@ (100104bc <scan_components+0xe0>)
10010480:	f004 ff8e 	bl	100153a0 <printf>
10010484:	480e      	ldr	r0, [pc, #56]	@ (100104c0 <scan_components+0xe4>)
10010486:	f004 ffeb 	bl	10015460 <puts>
1001048a:	480a      	ldr	r0, [pc, #40]	@ (100104b4 <scan_components+0xd8>)
1001048c:	f004 ff88 	bl	100153a0 <printf>
10010490:	6833      	ldr	r3, [r6, #0]
10010492:	6898      	ldr	r0, [r3, #8]
10010494:	f005 f8da 	bl	1001564c <fflush>
    return SUCCESS_RETURN;
}
10010498:	2000      	movs	r0, #0
1001049a:	f50d 7d00 	add.w	sp, sp, #512	@ 0x200
1001049e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
100104a2:	bf00      	nop
100104a4:	20000c20 	.word	0x20000c20
100104a8:	20000590 	.word	0x20000590
100104ac:	1002058c 	.word	0x1002058c
100104b0:	10020598 	.word	0x10020598
100104b4:	10020588 	.word	0x10020588
100104b8:	100205a4 	.word	0x100205a4
100104bc:	100205b0 	.word	0x100205b0
100104c0:	100205bc 	.word	0x100205bc

100104c4 <validate_components>:

int validate_components() {
100104c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    // Buffers for board link communication
    uint8_t receive_buffer[MAX_I2C_MESSAGE_LEN];
    uint8_t transmit_buffer[MAX_I2C_MESSAGE_LEN];

    // Send validate command to each component
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
100104c8:	4f24      	ldr	r7, [pc, #144]	@ (1001055c <validate_components+0x98>)
100104ca:	687b      	ldr	r3, [r7, #4]
int validate_components() {
100104cc:	f5ad 7d00 	sub.w	sp, sp, #512	@ 0x200
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
100104d0:	2b00      	cmp	r3, #0
100104d2:	d037      	beq.n	10010544 <validate_components+0x80>
100104d4:	1d3d      	adds	r5, r7, #4
100104d6:	2600      	movs	r6, #0
        // Set the I2C address of the component
        i2c_addr_t addr = component_id_to_i2c_addr(flash_status.component_ids[i]);

        // Create command message
        command_message* command = (command_message*) transmit_buffer;
        command->opcode = COMPONENT_CMD_VALIDATE;
100104d8:	f04f 0802 	mov.w	r8, #2
100104dc:	e003      	b.n	100104e6 <validate_components+0x22>
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
100104de:	687b      	ldr	r3, [r7, #4]
100104e0:	3601      	adds	r6, #1
100104e2:	42b3      	cmp	r3, r6
100104e4:	d92e      	bls.n	10010544 <validate_components+0x80>
        i2c_addr_t addr = component_id_to_i2c_addr(flash_status.component_ids[i]);
100104e6:	f855 0f04 	ldr.w	r0, [r5, #4]!
100104ea:	f000 fb73 	bl	10010bd4 <component_id_to_i2c_addr>
    int result = send_packet(addr, sizeof(uint8_t), transmit);
100104ee:	2101      	movs	r1, #1
100104f0:	aa40      	add	r2, sp, #256	@ 0x100
        i2c_addr_t addr = component_id_to_i2c_addr(flash_status.component_ids[i]);
100104f2:	4604      	mov	r4, r0
        command->opcode = COMPONENT_CMD_VALIDATE;
100104f4:	f88d 8100 	strb.w	r8, [sp, #256]	@ 0x100
    int result = send_packet(addr, sizeof(uint8_t), transmit);
100104f8:	f000 fb6e 	bl	10010bd8 <send_packet>
100104fc:	4603      	mov	r3, r0
    if (result == ERROR_RETURN) {
100104fe:	3301      	adds	r3, #1
    int len = poll_and_receive_packet(addr, receive);
10010500:	4669      	mov	r1, sp
10010502:	4620      	mov	r0, r4
    if (result == ERROR_RETURN) {
10010504:	d023      	beq.n	1001054e <validate_components+0x8a>
    int len = poll_and_receive_packet(addr, receive);
10010506:	f000 fb81 	bl	10010c0c <poll_and_receive_packet>
    if (len == ERROR_RETURN) {
1001050a:	3001      	adds	r0, #1
1001050c:	d01f      	beq.n	1001054e <validate_components+0x8a>
            return ERROR_RETURN;
        }

        validate_message* validate = (validate_message*) receive_buffer;
        // Check that the result is correct
        if (validate->component_id != flash_status.component_ids[i]) {
1001050e:	9a00      	ldr	r2, [sp, #0]
10010510:	682b      	ldr	r3, [r5, #0]
10010512:	429a      	cmp	r2, r3
10010514:	d0e3      	beq.n	100104de <validate_components+0x1a>
            print_error("Component ID: 0x%08x invalid\n", flash_status.component_ids[i]);
10010516:	3602      	adds	r6, #2
10010518:	4811      	ldr	r0, [pc, #68]	@ (10010560 <validate_components+0x9c>)
1001051a:	f004 ff41 	bl	100153a0 <printf>
1001051e:	4811      	ldr	r0, [pc, #68]	@ (10010564 <validate_components+0xa0>)
10010520:	f857 1026 	ldr.w	r1, [r7, r6, lsl #2]
10010524:	f004 ff3c 	bl	100153a0 <printf>
10010528:	480f      	ldr	r0, [pc, #60]	@ (10010568 <validate_components+0xa4>)
1001052a:	f004 ff39 	bl	100153a0 <printf>
1001052e:	4b0f      	ldr	r3, [pc, #60]	@ (1001056c <validate_components+0xa8>)
10010530:	681b      	ldr	r3, [r3, #0]
10010532:	6898      	ldr	r0, [r3, #8]
10010534:	f005 f88a 	bl	1001564c <fflush>
            return ERROR_RETURN;
10010538:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
            return ERROR_RETURN;
        }
    }
    return SUCCESS_RETURN;
}
1001053c:	f50d 7d00 	add.w	sp, sp, #512	@ 0x200
10010540:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return SUCCESS_RETURN;
10010544:	2000      	movs	r0, #0
}
10010546:	f50d 7d00 	add.w	sp, sp, #512	@ 0x200
1001054a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            print_error("Could not validate component\n");
1001054e:	4804      	ldr	r0, [pc, #16]	@ (10010560 <validate_components+0x9c>)
10010550:	f004 ff26 	bl	100153a0 <printf>
10010554:	4806      	ldr	r0, [pc, #24]	@ (10010570 <validate_components+0xac>)
10010556:	f004 ff83 	bl	10015460 <puts>
1001055a:	e7e5      	b.n	10010528 <validate_components+0x64>
1001055c:	20000c20 	.word	0x20000c20
10010560:	100205c4 	.word	0x100205c4
10010564:	100205f0 	.word	0x100205f0
10010568:	10020588 	.word	0x10020588
1001056c:	20000590 	.word	0x20000590
10010570:	100205d0 	.word	0x100205d0

10010574 <boot_components>:

int boot_components() {
10010574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    // Buffers for board link communication
    uint8_t receive_buffer[MAX_I2C_MESSAGE_LEN];
    uint8_t transmit_buffer[MAX_I2C_MESSAGE_LEN];

    // Send boot command to each component
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
10010578:	4f29      	ldr	r7, [pc, #164]	@ (10010620 <boot_components+0xac>)
1001057a:	687b      	ldr	r3, [r7, #4]
int boot_components() {
1001057c:	f5ad 7d01 	sub.w	sp, sp, #516	@ 0x204
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
10010580:	b3a3      	cbz	r3, 100105ec <boot_components+0x78>
10010582:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 10010624 <boot_components+0xb0>
            print_error("Could not boot component\n");
            return ERROR_RETURN;
        }

        // Print boot message from component
        print_info("0x%x>%s\n", flash_status.component_ids[i], receive_buffer);
10010586:	f8df 90a0 	ldr.w	r9, [pc, #160]	@ 10010628 <boot_components+0xb4>
1001058a:	f8df b0a0 	ldr.w	fp, [pc, #160]	@ 1001062c <boot_components+0xb8>
1001058e:	f8df a0a0 	ldr.w	sl, [pc, #160]	@ 10010630 <boot_components+0xbc>
10010592:	1d3e      	adds	r6, r7, #4
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
10010594:	2500      	movs	r5, #0
        i2c_addr_t addr = component_id_to_i2c_addr(flash_status.component_ids[i]);
10010596:	f856 0f04 	ldr.w	r0, [r6, #4]!
1001059a:	f000 fb1b 	bl	10010bd4 <component_id_to_i2c_addr>
        command->opcode = COMPONENT_CMD_BOOT;
1001059e:	2303      	movs	r3, #3
    int result = send_packet(addr, sizeof(uint8_t), transmit);
100105a0:	2101      	movs	r1, #1
100105a2:	aa40      	add	r2, sp, #256	@ 0x100
        i2c_addr_t addr = component_id_to_i2c_addr(flash_status.component_ids[i]);
100105a4:	4604      	mov	r4, r0
        command->opcode = COMPONENT_CMD_BOOT;
100105a6:	f88d 3100 	strb.w	r3, [sp, #256]	@ 0x100
    int result = send_packet(addr, sizeof(uint8_t), transmit);
100105aa:	f000 fb15 	bl	10010bd8 <send_packet>
100105ae:	4603      	mov	r3, r0
    if (result == ERROR_RETURN) {
100105b0:	3301      	adds	r3, #1
    int len = poll_and_receive_packet(addr, receive);
100105b2:	4669      	mov	r1, sp
100105b4:	4620      	mov	r0, r4
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
100105b6:	f105 0501 	add.w	r5, r5, #1
    if (result == ERROR_RETURN) {
100105ba:	d01c      	beq.n	100105f6 <boot_components+0x82>
    int len = poll_and_receive_packet(addr, receive);
100105bc:	f000 fb26 	bl	10010c0c <poll_and_receive_packet>
100105c0:	4603      	mov	r3, r0
    if (len == ERROR_RETURN) {
100105c2:	3301      	adds	r3, #1
        print_info("0x%x>%s\n", flash_status.component_ids[i], receive_buffer);
100105c4:	4648      	mov	r0, r9
    if (len == ERROR_RETURN) {
100105c6:	d016      	beq.n	100105f6 <boot_components+0x82>
        print_info("0x%x>%s\n", flash_status.component_ids[i], receive_buffer);
100105c8:	f004 feea 	bl	100153a0 <printf>
100105cc:	6831      	ldr	r1, [r6, #0]
100105ce:	466a      	mov	r2, sp
100105d0:	4658      	mov	r0, fp
100105d2:	f004 fee5 	bl	100153a0 <printf>
100105d6:	4650      	mov	r0, sl
100105d8:	f004 fee2 	bl	100153a0 <printf>
100105dc:	f8d8 3000 	ldr.w	r3, [r8]
100105e0:	6898      	ldr	r0, [r3, #8]
100105e2:	f005 f833 	bl	1001564c <fflush>
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
100105e6:	687b      	ldr	r3, [r7, #4]
100105e8:	42ab      	cmp	r3, r5
100105ea:	d8d4      	bhi.n	10010596 <boot_components+0x22>
    }
    return SUCCESS_RETURN;
100105ec:	2000      	movs	r0, #0
}
100105ee:	f50d 7d01 	add.w	sp, sp, #516	@ 0x204
100105f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            print_error("Could not boot component\n");
100105f6:	480f      	ldr	r0, [pc, #60]	@ (10010634 <boot_components+0xc0>)
100105f8:	f004 fed2 	bl	100153a0 <printf>
100105fc:	480e      	ldr	r0, [pc, #56]	@ (10010638 <boot_components+0xc4>)
100105fe:	f004 ff2f 	bl	10015460 <puts>
10010602:	480b      	ldr	r0, [pc, #44]	@ (10010630 <boot_components+0xbc>)
10010604:	f004 fecc 	bl	100153a0 <printf>
10010608:	f8d8 3000 	ldr.w	r3, [r8]
1001060c:	6898      	ldr	r0, [r3, #8]
1001060e:	f005 f81d 	bl	1001564c <fflush>
            return ERROR_RETURN;
10010612:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10010616:	f50d 7d01 	add.w	sp, sp, #516	@ 0x204
1001061a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001061e:	bf00      	nop
10010620:	20000c20 	.word	0x20000c20
10010624:	20000590 	.word	0x20000590
10010628:	1002058c 	.word	0x1002058c
1001062c:	10020610 	.word	0x10020610
10010630:	10020588 	.word	0x10020588
10010634:	100205c4 	.word	0x100205c4
10010638:	1002061c 	.word	0x1002061c

1001063c <attest_component>:

int attest_component(uint32_t component_id) {
1001063c:	b530      	push	{r4, r5, lr}
1001063e:	f5ad 7d01 	sub.w	sp, sp, #516	@ 0x204
10010642:	4604      	mov	r4, r0
    // Buffers for board link communication
    uint8_t receive_buffer[MAX_I2C_MESSAGE_LEN];
    uint8_t transmit_buffer[MAX_I2C_MESSAGE_LEN];

    // Set the I2C address of the component
    i2c_addr_t addr = component_id_to_i2c_addr(component_id);
10010644:	f000 fac6 	bl	10010bd4 <component_id_to_i2c_addr>

    // Create command message
    command_message* command = (command_message*) transmit_buffer;
    command->opcode = COMPONENT_CMD_ATTEST;
10010648:	2304      	movs	r3, #4
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1001064a:	aa40      	add	r2, sp, #256	@ 0x100
1001064c:	2101      	movs	r1, #1
    i2c_addr_t addr = component_id_to_i2c_addr(component_id);
1001064e:	4605      	mov	r5, r0
    command->opcode = COMPONENT_CMD_ATTEST;
10010650:	f88d 3100 	strb.w	r3, [sp, #256]	@ 0x100
    int result = send_packet(addr, sizeof(uint8_t), transmit);
10010654:	f000 fac0 	bl	10010bd8 <send_packet>
    if (result == ERROR_RETURN) {
10010658:	3001      	adds	r0, #1
1001065a:	d025      	beq.n	100106a8 <attest_component+0x6c>
    int len = poll_and_receive_packet(addr, receive);
1001065c:	4669      	mov	r1, sp
1001065e:	4628      	mov	r0, r5
10010660:	f000 fad4 	bl	10010c0c <poll_and_receive_packet>
    if (len == ERROR_RETURN) {
10010664:	3001      	adds	r0, #1
10010666:	d01f      	beq.n	100106a8 <attest_component+0x6c>
        print_error("Could not attest component\n");
        return ERROR_RETURN;
    }

    // Print out attestation data 
    print_info("C>0x%08x", component_id);
10010668:	4818      	ldr	r0, [pc, #96]	@ (100106cc <attest_component+0x90>)
1001066a:	f004 fe99 	bl	100153a0 <printf>
1001066e:	4621      	mov	r1, r4
10010670:	4817      	ldr	r0, [pc, #92]	@ (100106d0 <attest_component+0x94>)
10010672:	4c18      	ldr	r4, [pc, #96]	@ (100106d4 <attest_component+0x98>)
10010674:	f004 fe94 	bl	100153a0 <printf>
10010678:	4817      	ldr	r0, [pc, #92]	@ (100106d8 <attest_component+0x9c>)
1001067a:	f004 fe91 	bl	100153a0 <printf>
1001067e:	6823      	ldr	r3, [r4, #0]
10010680:	6898      	ldr	r0, [r3, #8]
10010682:	f004 ffe3 	bl	1001564c <fflush>
    print_info("%s\n", receive_buffer);
10010686:	4811      	ldr	r0, [pc, #68]	@ (100106cc <attest_component+0x90>)
10010688:	f004 fe8a 	bl	100153a0 <printf>
1001068c:	4668      	mov	r0, sp
1001068e:	f004 fee7 	bl	10015460 <puts>
10010692:	4811      	ldr	r0, [pc, #68]	@ (100106d8 <attest_component+0x9c>)
10010694:	f004 fe84 	bl	100153a0 <printf>
10010698:	6823      	ldr	r3, [r4, #0]
1001069a:	6898      	ldr	r0, [r3, #8]
1001069c:	f004 ffd6 	bl	1001564c <fflush>
    return SUCCESS_RETURN;
100106a0:	2000      	movs	r0, #0
}
100106a2:	f50d 7d01 	add.w	sp, sp, #516	@ 0x204
100106a6:	bd30      	pop	{r4, r5, pc}
        print_error("Could not attest component\n");
100106a8:	480c      	ldr	r0, [pc, #48]	@ (100106dc <attest_component+0xa0>)
100106aa:	f004 fe79 	bl	100153a0 <printf>
100106ae:	480c      	ldr	r0, [pc, #48]	@ (100106e0 <attest_component+0xa4>)
100106b0:	f004 fed6 	bl	10015460 <puts>
100106b4:	4808      	ldr	r0, [pc, #32]	@ (100106d8 <attest_component+0x9c>)
100106b6:	f004 fe73 	bl	100153a0 <printf>
100106ba:	4b06      	ldr	r3, [pc, #24]	@ (100106d4 <attest_component+0x98>)
100106bc:	681b      	ldr	r3, [r3, #0]
100106be:	6898      	ldr	r0, [r3, #8]
100106c0:	f004 ffc4 	bl	1001564c <fflush>
        return ERROR_RETURN;
100106c4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100106c8:	e7eb      	b.n	100106a2 <attest_component+0x66>
100106ca:	bf00      	nop
100106cc:	1002058c 	.word	0x1002058c
100106d0:	10020638 	.word	0x10020638
100106d4:	20000590 	.word	0x20000590
100106d8:	10020588 	.word	0x10020588
100106dc:	100205c4 	.word	0x100205c4
100106e0:	10020644 	.word	0x10020644

100106e4 <boot>:
/********************************* AP LOGIC ***********************************/

// Boot sequence
// YOUR DESIGN MUST NOT CHANGE THIS FUNCTION
// Boot message is customized through the AP_BOOT_MSG macro
void boot() {
100106e4:	b508      	push	{r3, lr}
    #else
    // Everything after this point is modifiable in your design
    // LED loop to show that boot occurred
    while (1) {
        LED_On(LED1);
        MXC_Delay(500000);
100106e6:	4c13      	ldr	r4, [pc, #76]	@ (10010734 <boot+0x50>)
        LED_On(LED1);
100106e8:	2000      	movs	r0, #0
100106ea:	f000 fcd5 	bl	10011098 <LED_On>
        MXC_Delay(500000);
100106ee:	4620      	mov	r0, r4
100106f0:	f000 fec8 	bl	10011484 <MXC_Delay>
        LED_On(LED2);
100106f4:	2001      	movs	r0, #1
100106f6:	f000 fccf 	bl	10011098 <LED_On>
        MXC_Delay(500000);
100106fa:	4620      	mov	r0, r4
100106fc:	f000 fec2 	bl	10011484 <MXC_Delay>
        LED_On(LED3);
10010700:	2002      	movs	r0, #2
10010702:	f000 fcc9 	bl	10011098 <LED_On>
        MXC_Delay(500000);
10010706:	4620      	mov	r0, r4
10010708:	f000 febc 	bl	10011484 <MXC_Delay>
        LED_Off(LED1);
1001070c:	2000      	movs	r0, #0
1001070e:	f000 fccf 	bl	100110b0 <LED_Off>
        MXC_Delay(500000);
10010712:	4620      	mov	r0, r4
10010714:	f000 feb6 	bl	10011484 <MXC_Delay>
        LED_Off(LED2);
10010718:	2001      	movs	r0, #1
1001071a:	f000 fcc9 	bl	100110b0 <LED_Off>
        MXC_Delay(500000);
1001071e:	4620      	mov	r0, r4
10010720:	f000 feb0 	bl	10011484 <MXC_Delay>
        LED_Off(LED3);
10010724:	2002      	movs	r0, #2
10010726:	f000 fcc3 	bl	100110b0 <LED_Off>
        MXC_Delay(500000);
1001072a:	4620      	mov	r0, r4
1001072c:	f000 feaa 	bl	10011484 <MXC_Delay>
    while (1) {
10010730:	e7da      	b.n	100106e8 <boot+0x4>
10010732:	bf00      	nop
10010734:	0007a120 	.word	0x0007a120

10010738 <attempt_boot.part.0>:
    print_error("Invalid Token!\n");
    return ERROR_RETURN;
}

// Boot the components and board if the components validate
void attempt_boot() {
10010738:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    if (validate_components()) {
        print_error("Components could not be validated\n");
        return;
    }
    print_debug("All Components validated\n");
1001073c:	482e      	ldr	r0, [pc, #184]	@ (100107f8 <attempt_boot.part.0+0xc0>)
1001073e:	4d2f      	ldr	r5, [pc, #188]	@ (100107fc <attempt_boot.part.0+0xc4>)
void attempt_boot() {
10010740:	b08a      	sub	sp, #40	@ 0x28
    print_debug("All Components validated\n");
10010742:	f004 fe2d 	bl	100153a0 <printf>
10010746:	482e      	ldr	r0, [pc, #184]	@ (10010800 <attempt_boot.part.0+0xc8>)
10010748:	f004 fe8a 	bl	10015460 <puts>
1001074c:	482d      	ldr	r0, [pc, #180]	@ (10010804 <attempt_boot.part.0+0xcc>)
1001074e:	f004 fe27 	bl	100153a0 <printf>
10010752:	682b      	ldr	r3, [r5, #0]
10010754:	6898      	ldr	r0, [r3, #8]
10010756:	f004 ff79 	bl	1001564c <fflush>
    if (boot_components()) {
1001075a:	f7ff ff0b 	bl	10010574 <boot_components>
1001075e:	b178      	cbz	r0, 10010780 <attempt_boot.part.0+0x48>
        print_error("Failed to boot all components\n");
10010760:	4829      	ldr	r0, [pc, #164]	@ (10010808 <attempt_boot.part.0+0xd0>)
10010762:	f004 fe1d 	bl	100153a0 <printf>
10010766:	4829      	ldr	r0, [pc, #164]	@ (1001080c <attempt_boot.part.0+0xd4>)
10010768:	f004 fe7a 	bl	10015460 <puts>
1001076c:	4825      	ldr	r0, [pc, #148]	@ (10010804 <attempt_boot.part.0+0xcc>)
1001076e:	f004 fe17 	bl	100153a0 <printf>
10010772:	682b      	ldr	r3, [r5, #0]
10010774:	6898      	ldr	r0, [r3, #8]
    // This always needs to be printed when booting
    print_info("AP>%s\n", AP_BOOT_MSG);
    print_success("Boot\n");
    // Boot
    boot();
}
10010776:	b00a      	add	sp, #40	@ 0x28
10010778:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        print_error("Failed to boot all components\n");
1001077c:	f004 bf66 	b.w	1001564c <fflush>
10010780:	4604      	mov	r4, r0
10010782:	f8df 808c 	ldr.w	r8, [pc, #140]	@ 10010810 <attempt_boot.part.0+0xd8>
10010786:	4f23      	ldr	r7, [pc, #140]	@ (10010814 <attempt_boot.part.0+0xdc>)
    for (int i = 0; aseiFuengleR[i]; i++) {
10010788:	4823      	ldr	r0, [pc, #140]	@ (10010818 <attempt_boot.part.0+0xe0>)
1001078a:	466e      	mov	r6, sp
        flag[i] = deobfuscate(aseiFuengleR[i], djFIehjkklIH[i]);
1001078c:	f858 1b04 	ldr.w	r1, [r8], #4
10010790:	f7ff fd80 	bl	10010294 <deobfuscate>
10010794:	7030      	strb	r0, [r6, #0]
    for (int i = 0; aseiFuengleR[i]; i++) {
10010796:	f857 0f04 	ldr.w	r0, [r7, #4]!
        flag[i+1] = 0;
1001079a:	f806 4f01 	strb.w	r4, [r6, #1]!
    for (int i = 0; aseiFuengleR[i]; i++) {
1001079e:	2800      	cmp	r0, #0
100107a0:	d1f4      	bne.n	1001078c <attempt_boot.part.0+0x54>
    print_debug("%s\n", flag);
100107a2:	4815      	ldr	r0, [pc, #84]	@ (100107f8 <attempt_boot.part.0+0xc0>)
100107a4:	f004 fdfc 	bl	100153a0 <printf>
100107a8:	4668      	mov	r0, sp
100107aa:	f004 fe59 	bl	10015460 <puts>
100107ae:	4815      	ldr	r0, [pc, #84]	@ (10010804 <attempt_boot.part.0+0xcc>)
100107b0:	f004 fdf6 	bl	100153a0 <printf>
100107b4:	682b      	ldr	r3, [r5, #0]
100107b6:	6898      	ldr	r0, [r3, #8]
100107b8:	f004 ff48 	bl	1001564c <fflush>
    print_info("AP>%s\n", AP_BOOT_MSG);
100107bc:	4817      	ldr	r0, [pc, #92]	@ (1001081c <attempt_boot.part.0+0xe4>)
100107be:	f004 fdef 	bl	100153a0 <printf>
100107c2:	4917      	ldr	r1, [pc, #92]	@ (10010820 <attempt_boot.part.0+0xe8>)
100107c4:	4817      	ldr	r0, [pc, #92]	@ (10010824 <attempt_boot.part.0+0xec>)
100107c6:	f004 fdeb 	bl	100153a0 <printf>
100107ca:	480e      	ldr	r0, [pc, #56]	@ (10010804 <attempt_boot.part.0+0xcc>)
100107cc:	f004 fde8 	bl	100153a0 <printf>
100107d0:	682b      	ldr	r3, [r5, #0]
100107d2:	6898      	ldr	r0, [r3, #8]
100107d4:	f004 ff3a 	bl	1001564c <fflush>
    print_success("Boot\n");
100107d8:	4813      	ldr	r0, [pc, #76]	@ (10010828 <attempt_boot.part.0+0xf0>)
100107da:	f004 fde1 	bl	100153a0 <printf>
100107de:	4813      	ldr	r0, [pc, #76]	@ (1001082c <attempt_boot.part.0+0xf4>)
100107e0:	f004 fe3e 	bl	10015460 <puts>
100107e4:	4807      	ldr	r0, [pc, #28]	@ (10010804 <attempt_boot.part.0+0xcc>)
100107e6:	f004 fddb 	bl	100153a0 <printf>
100107ea:	682b      	ldr	r3, [r5, #0]
100107ec:	6898      	ldr	r0, [r3, #8]
100107ee:	f004 ff2d 	bl	1001564c <fflush>
    boot();
100107f2:	f7ff ff77 	bl	100106e4 <boot>
100107f6:	bf00      	nop
100107f8:	10020560 	.word	0x10020560
100107fc:	20000590 	.word	0x20000590
10010800:	10020660 	.word	0x10020660
10010804:	10020588 	.word	0x10020588
10010808:	100205c4 	.word	0x100205c4
1001080c:	1002067c 	.word	0x1002067c
10010810:	10020870 	.word	0x10020870
10010814:	10020904 	.word	0x10020904
10010818:	01ffe4b6 	.word	0x01ffe4b6
1001081c:	1002058c 	.word	0x1002058c
10010820:	1002069c 	.word	0x1002069c
10010824:	100206b8 	.word	0x100206b8
10010828:	100205b0 	.word	0x100205b0
1001082c:	100206c0 	.word	0x100206c0

10010830 <validate_pin>:
int validate_pin() {
10010830:	b510      	push	{r4, lr}
10010832:	b08e      	sub	sp, #56	@ 0x38
    recv_input("Enter pin: ", buf, buf_len);
10010834:	2232      	movs	r2, #50	@ 0x32
10010836:	481a      	ldr	r0, [pc, #104]	@ (100108a0 <validate_pin+0x70>)
10010838:	a901      	add	r1, sp, #4
1001083a:	f000 fa0b 	bl	10010c54 <recv_input>
    if (!strcmp(buf, AP_PIN)) {
1001083e:	4b19      	ldr	r3, [pc, #100]	@ (100108a4 <validate_pin+0x74>)
10010840:	9a01      	ldr	r2, [sp, #4]
10010842:	429a      	cmp	r2, r3
10010844:	d012      	beq.n	1001086c <validate_pin+0x3c>
    print_error("Invalid PIN!\n");
10010846:	4818      	ldr	r0, [pc, #96]	@ (100108a8 <validate_pin+0x78>)
10010848:	f004 fdaa 	bl	100153a0 <printf>
1001084c:	4817      	ldr	r0, [pc, #92]	@ (100108ac <validate_pin+0x7c>)
1001084e:	f004 fe07 	bl	10015460 <puts>
10010852:	4817      	ldr	r0, [pc, #92]	@ (100108b0 <validate_pin+0x80>)
10010854:	f004 fda4 	bl	100153a0 <printf>
10010858:	4b16      	ldr	r3, [pc, #88]	@ (100108b4 <validate_pin+0x84>)
1001085a:	681b      	ldr	r3, [r3, #0]
1001085c:	6898      	ldr	r0, [r3, #8]
    return ERROR_RETURN;
1001085e:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
    print_error("Invalid PIN!\n");
10010862:	f004 fef3 	bl	1001564c <fflush>
}
10010866:	4620      	mov	r0, r4
10010868:	b00e      	add	sp, #56	@ 0x38
1001086a:	bd10      	pop	{r4, pc}
    if (!strcmp(buf, AP_PIN)) {
1001086c:	f8bd 2008 	ldrh.w	r2, [sp, #8]
10010870:	f243 6335 	movw	r3, #13877	@ 0x3635
10010874:	429a      	cmp	r2, r3
10010876:	d1e6      	bne.n	10010846 <validate_pin+0x16>
10010878:	f89d 400a 	ldrb.w	r4, [sp, #10]
1001087c:	2c00      	cmp	r4, #0
1001087e:	d1e2      	bne.n	10010846 <validate_pin+0x16>
        print_debug("Pin Accepted!\n");
10010880:	480d      	ldr	r0, [pc, #52]	@ (100108b8 <validate_pin+0x88>)
10010882:	f004 fd8d 	bl	100153a0 <printf>
10010886:	480d      	ldr	r0, [pc, #52]	@ (100108bc <validate_pin+0x8c>)
10010888:	f004 fdea 	bl	10015460 <puts>
1001088c:	4808      	ldr	r0, [pc, #32]	@ (100108b0 <validate_pin+0x80>)
1001088e:	f004 fd87 	bl	100153a0 <printf>
10010892:	4b08      	ldr	r3, [pc, #32]	@ (100108b4 <validate_pin+0x84>)
10010894:	681b      	ldr	r3, [r3, #0]
10010896:	6898      	ldr	r0, [r3, #8]
10010898:	f004 fed8 	bl	1001564c <fflush>
        return SUCCESS_RETURN;
1001089c:	e7e3      	b.n	10010866 <validate_pin+0x36>
1001089e:	bf00      	nop
100108a0:	100206c8 	.word	0x100206c8
100108a4:	34333231 	.word	0x34333231
100108a8:	100205c4 	.word	0x100205c4
100108ac:	100206ec 	.word	0x100206ec
100108b0:	10020588 	.word	0x10020588
100108b4:	20000590 	.word	0x20000590
100108b8:	10020560 	.word	0x10020560
100108bc:	100206dc 	.word	0x100206dc

100108c0 <validate_token>:
int validate_token() {
100108c0:	b510      	push	{r4, lr}
100108c2:	b08e      	sub	sp, #56	@ 0x38
    recv_input("Enter token: ", buf, buf_len);
100108c4:	2232      	movs	r2, #50	@ 0x32
100108c6:	481d      	ldr	r0, [pc, #116]	@ (1001093c <validate_token+0x7c>)
100108c8:	a901      	add	r1, sp, #4
100108ca:	f000 f9c3 	bl	10010c54 <recv_input>
    if (!strcmp(buf, AP_TOKEN)) {
100108ce:	4b1c      	ldr	r3, [pc, #112]	@ (10010940 <validate_token+0x80>)
100108d0:	9a01      	ldr	r2, [sp, #4]
100108d2:	429a      	cmp	r2, r3
100108d4:	d012      	beq.n	100108fc <validate_token+0x3c>
    print_error("Invalid Token!\n");
100108d6:	481b      	ldr	r0, [pc, #108]	@ (10010944 <validate_token+0x84>)
100108d8:	f004 fd62 	bl	100153a0 <printf>
100108dc:	481a      	ldr	r0, [pc, #104]	@ (10010948 <validate_token+0x88>)
100108de:	f004 fdbf 	bl	10015460 <puts>
100108e2:	481a      	ldr	r0, [pc, #104]	@ (1001094c <validate_token+0x8c>)
100108e4:	f004 fd5c 	bl	100153a0 <printf>
100108e8:	4b19      	ldr	r3, [pc, #100]	@ (10010950 <validate_token+0x90>)
100108ea:	681b      	ldr	r3, [r3, #0]
100108ec:	6898      	ldr	r0, [r3, #8]
    return ERROR_RETURN;
100108ee:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
    print_error("Invalid Token!\n");
100108f2:	f004 feab 	bl	1001564c <fflush>
}
100108f6:	4620      	mov	r0, r4
100108f8:	b00e      	add	sp, #56	@ 0x38
100108fa:	bd10      	pop	{r4, pc}
    if (!strcmp(buf, AP_TOKEN)) {
100108fc:	9a02      	ldr	r2, [sp, #8]
100108fe:	f103 3304 	add.w	r3, r3, #67372036	@ 0x4040404
10010902:	429a      	cmp	r2, r3
10010904:	d1e7      	bne.n	100108d6 <validate_token+0x16>
10010906:	9a03      	ldr	r2, [sp, #12]
10010908:	f1a3 33d4 	sub.w	r3, r3, #3570717908	@ 0xd4d4d4d4
1001090c:	3b28      	subs	r3, #40	@ 0x28
1001090e:	429a      	cmp	r2, r3
10010910:	d1e1      	bne.n	100108d6 <validate_token+0x16>
10010912:	4b10      	ldr	r3, [pc, #64]	@ (10010954 <validate_token+0x94>)
10010914:	9a04      	ldr	r2, [sp, #16]
10010916:	429a      	cmp	r2, r3
10010918:	d1dd      	bne.n	100108d6 <validate_token+0x16>
        print_debug("Token Accepted!\n");
1001091a:	480f      	ldr	r0, [pc, #60]	@ (10010958 <validate_token+0x98>)
1001091c:	f004 fd40 	bl	100153a0 <printf>
10010920:	480e      	ldr	r0, [pc, #56]	@ (1001095c <validate_token+0x9c>)
10010922:	f004 fd9d 	bl	10015460 <puts>
10010926:	4809      	ldr	r0, [pc, #36]	@ (1001094c <validate_token+0x8c>)
10010928:	f004 fd3a 	bl	100153a0 <printf>
1001092c:	4b08      	ldr	r3, [pc, #32]	@ (10010950 <validate_token+0x90>)
1001092e:	681b      	ldr	r3, [r3, #0]
10010930:	6898      	ldr	r0, [r3, #8]
    if (!strcmp(buf, AP_TOKEN)) {
10010932:	2400      	movs	r4, #0
        print_debug("Token Accepted!\n");
10010934:	f004 fe8a 	bl	1001564c <fflush>
        return SUCCESS_RETURN;
10010938:	e7dd      	b.n	100108f6 <validate_token+0x36>
1001093a:	bf00      	nop
1001093c:	100206fc 	.word	0x100206fc
10010940:	34333231 	.word	0x34333231
10010944:	100205c4 	.word	0x100205c4
10010948:	1002072c 	.word	0x1002072c
1001094c:	10020588 	.word	0x10020588
10010950:	20000590 	.word	0x20000590
10010954:	00666564 	.word	0x00666564
10010958:	10020560 	.word	0x10020560
1001095c:	1002071c 	.word	0x1002071c

10010960 <attempt_replace>:

// Replace a component if the PIN is correct
void attempt_replace() {
10010960:	b570      	push	{r4, r5, r6, lr}
10010962:	b090      	sub	sp, #64	@ 0x40
    int buf_len = 50;
    char buf[50];

    if (validate_token()) {
10010964:	f7ff ffac 	bl	100108c0 <validate_token>
10010968:	b108      	cbz	r0, 1001096e <attempt_replace+0xe>
    }

    // Component Out was not found
    print_error("Component 0x%08x is not provisioned for the system\r\n",
            component_id_out);
}
1001096a:	b010      	add	sp, #64	@ 0x40
1001096c:	bd70      	pop	{r4, r5, r6, pc}
    uint32_t component_id_in = 0;
1001096e:	4604      	mov	r4, r0
    recv_input("Component ID In: ", buf, buf_len);
10010970:	2232      	movs	r2, #50	@ 0x32
10010972:	4830      	ldr	r0, [pc, #192]	@ (10010a34 <attempt_replace+0xd4>)
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
10010974:	4e30      	ldr	r6, [pc, #192]	@ (10010a38 <attempt_replace+0xd8>)
    recv_input("Component ID In: ", buf, buf_len);
10010976:	a903      	add	r1, sp, #12
    uint32_t component_id_out = 0;
10010978:	e9cd 4401 	strd	r4, r4, [sp, #4]
    recv_input("Component ID In: ", buf, buf_len);
1001097c:	f000 f96a 	bl	10010c54 <recv_input>
    sscanf(buf, "%x", &component_id_in);
10010980:	492e      	ldr	r1, [pc, #184]	@ (10010a3c <attempt_replace+0xdc>)
10010982:	aa01      	add	r2, sp, #4
10010984:	a803      	add	r0, sp, #12
10010986:	f002 fb1b 	bl	10012fc0 <sscanf>
    recv_input("Component ID Out: ", buf, buf_len);
1001098a:	482d      	ldr	r0, [pc, #180]	@ (10010a40 <attempt_replace+0xe0>)
1001098c:	2232      	movs	r2, #50	@ 0x32
1001098e:	a903      	add	r1, sp, #12
10010990:	f000 f960 	bl	10010c54 <recv_input>
    sscanf(buf, "%x", &component_id_out);
10010994:	4929      	ldr	r1, [pc, #164]	@ (10010a3c <attempt_replace+0xdc>)
10010996:	aa02      	add	r2, sp, #8
10010998:	a803      	add	r0, sp, #12
1001099a:	f002 fb11 	bl	10012fc0 <sscanf>
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1001099e:	6871      	ldr	r1, [r6, #4]
100109a0:	2900      	cmp	r1, #0
100109a2:	d035      	beq.n	10010a10 <attempt_replace+0xb0>
        if (flash_status.component_ids[i] == component_id_out) {
100109a4:	9d02      	ldr	r5, [sp, #8]
100109a6:	1d33      	adds	r3, r6, #4
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
100109a8:	4620      	mov	r0, r4
100109aa:	e002      	b.n	100109b2 <attempt_replace+0x52>
100109ac:	3001      	adds	r0, #1
100109ae:	4288      	cmp	r0, r1
100109b0:	d02e      	beq.n	10010a10 <attempt_replace+0xb0>
        if (flash_status.component_ids[i] == component_id_out) {
100109b2:	f853 2f04 	ldr.w	r2, [r3, #4]!
100109b6:	42aa      	cmp	r2, r5
100109b8:	d1f8      	bne.n	100109ac <attempt_replace+0x4c>
            flash_status.component_ids[i] = component_id_in;
100109ba:	1c83      	adds	r3, r0, #2
100109bc:	9a01      	ldr	r2, [sp, #4]
            flash_simple_erase_page(FLASH_ADDR);
100109be:	4821      	ldr	r0, [pc, #132]	@ (10010a44 <attempt_replace+0xe4>)
            flash_status.component_ids[i] = component_id_in;
100109c0:	f846 2023 	str.w	r2, [r6, r3, lsl #2]
            flash_simple_erase_page(FLASH_ADDR);
100109c4:	f000 f9a8 	bl	10010d18 <flash_simple_erase_page>
            flash_simple_write(FLASH_ADDR, (uint32_t*)&flash_status, sizeof(flash_entry));
100109c8:	491b      	ldr	r1, [pc, #108]	@ (10010a38 <attempt_replace+0xd8>)
100109ca:	481e      	ldr	r0, [pc, #120]	@ (10010a44 <attempt_replace+0xe4>)
            print_debug("Replaced 0x%08x with 0x%08x\n", component_id_out,
100109cc:	4c1e      	ldr	r4, [pc, #120]	@ (10010a48 <attempt_replace+0xe8>)
            flash_simple_write(FLASH_ADDR, (uint32_t*)&flash_status, sizeof(flash_entry));
100109ce:	2288      	movs	r2, #136	@ 0x88
100109d0:	f000 f9a6 	bl	10010d20 <flash_simple_write>
            print_debug("Replaced 0x%08x with 0x%08x\n", component_id_out,
100109d4:	481d      	ldr	r0, [pc, #116]	@ (10010a4c <attempt_replace+0xec>)
100109d6:	f004 fce3 	bl	100153a0 <printf>
100109da:	e9dd 2101 	ldrd	r2, r1, [sp, #4]
100109de:	481c      	ldr	r0, [pc, #112]	@ (10010a50 <attempt_replace+0xf0>)
100109e0:	f004 fcde 	bl	100153a0 <printf>
100109e4:	481b      	ldr	r0, [pc, #108]	@ (10010a54 <attempt_replace+0xf4>)
100109e6:	f004 fcdb 	bl	100153a0 <printf>
100109ea:	6823      	ldr	r3, [r4, #0]
100109ec:	6898      	ldr	r0, [r3, #8]
100109ee:	f004 fe2d 	bl	1001564c <fflush>
            print_success("Replace\n");
100109f2:	4819      	ldr	r0, [pc, #100]	@ (10010a58 <attempt_replace+0xf8>)
100109f4:	f004 fcd4 	bl	100153a0 <printf>
100109f8:	4818      	ldr	r0, [pc, #96]	@ (10010a5c <attempt_replace+0xfc>)
100109fa:	f004 fd31 	bl	10015460 <puts>
100109fe:	4815      	ldr	r0, [pc, #84]	@ (10010a54 <attempt_replace+0xf4>)
10010a00:	f004 fcce 	bl	100153a0 <printf>
10010a04:	6823      	ldr	r3, [r4, #0]
10010a06:	6898      	ldr	r0, [r3, #8]
10010a08:	f004 fe20 	bl	1001564c <fflush>
}
10010a0c:	b010      	add	sp, #64	@ 0x40
10010a0e:	bd70      	pop	{r4, r5, r6, pc}
    print_error("Component 0x%08x is not provisioned for the system\r\n",
10010a10:	4813      	ldr	r0, [pc, #76]	@ (10010a60 <attempt_replace+0x100>)
10010a12:	f004 fcc5 	bl	100153a0 <printf>
10010a16:	9902      	ldr	r1, [sp, #8]
10010a18:	4812      	ldr	r0, [pc, #72]	@ (10010a64 <attempt_replace+0x104>)
10010a1a:	f004 fcc1 	bl	100153a0 <printf>
10010a1e:	480d      	ldr	r0, [pc, #52]	@ (10010a54 <attempt_replace+0xf4>)
10010a20:	f004 fcbe 	bl	100153a0 <printf>
10010a24:	4b08      	ldr	r3, [pc, #32]	@ (10010a48 <attempt_replace+0xe8>)
10010a26:	681b      	ldr	r3, [r3, #0]
10010a28:	6898      	ldr	r0, [r3, #8]
10010a2a:	f004 fe0f 	bl	1001564c <fflush>
}
10010a2e:	b010      	add	sp, #64	@ 0x40
10010a30:	bd70      	pop	{r4, r5, r6, pc}
10010a32:	bf00      	nop
10010a34:	10020760 	.word	0x10020760
10010a38:	20000c20 	.word	0x20000c20
10010a3c:	10020774 	.word	0x10020774
10010a40:	10020778 	.word	0x10020778
10010a44:	1007e000 	.word	0x1007e000
10010a48:	20000590 	.word	0x20000590
10010a4c:	10020560 	.word	0x10020560
10010a50:	1002078c 	.word	0x1002078c
10010a54:	10020588 	.word	0x10020588
10010a58:	100205b0 	.word	0x100205b0
10010a5c:	100207ac 	.word	0x100207ac
10010a60:	100205c4 	.word	0x100205c4
10010a64:	100207b4 	.word	0x100207b4

10010a68 <attempt_attest>:

// Attest a component if the PIN is correct
void attempt_attest() {
10010a68:	b500      	push	{lr}
10010a6a:	b08f      	sub	sp, #60	@ 0x3c
    int buf_len = 50;
    char buf[buf_len];

    if (validate_pin()) {
10010a6c:	f7ff fee0 	bl	10010830 <validate_pin>
10010a70:	b9d0      	cbnz	r0, 10010aa8 <attempt_attest+0x40>
        return;
    }
    uint32_t component_id;
    recv_input("Component ID: ", buf, buf_len);
10010a72:	480f      	ldr	r0, [pc, #60]	@ (10010ab0 <attempt_attest+0x48>)
10010a74:	2232      	movs	r2, #50	@ 0x32
10010a76:	a901      	add	r1, sp, #4
10010a78:	f000 f8ec 	bl	10010c54 <recv_input>
    sscanf(buf, "%x", &component_id);
10010a7c:	490d      	ldr	r1, [pc, #52]	@ (10010ab4 <attempt_attest+0x4c>)
10010a7e:	466a      	mov	r2, sp
10010a80:	a801      	add	r0, sp, #4
10010a82:	f002 fa9d 	bl	10012fc0 <sscanf>
    attest_component(component_id);
10010a86:	9800      	ldr	r0, [sp, #0]
10010a88:	f7ff fdd8 	bl	1001063c <attest_component>
    print_success("Attest\n");
10010a8c:	480a      	ldr	r0, [pc, #40]	@ (10010ab8 <attempt_attest+0x50>)
10010a8e:	f004 fc87 	bl	100153a0 <printf>
10010a92:	480a      	ldr	r0, [pc, #40]	@ (10010abc <attempt_attest+0x54>)
10010a94:	f004 fce4 	bl	10015460 <puts>
10010a98:	4809      	ldr	r0, [pc, #36]	@ (10010ac0 <attempt_attest+0x58>)
10010a9a:	f004 fc81 	bl	100153a0 <printf>
10010a9e:	4b09      	ldr	r3, [pc, #36]	@ (10010ac4 <attempt_attest+0x5c>)
10010aa0:	681b      	ldr	r3, [r3, #0]
10010aa2:	6898      	ldr	r0, [r3, #8]
10010aa4:	f004 fdd2 	bl	1001564c <fflush>
}
10010aa8:	b00f      	add	sp, #60	@ 0x3c
10010aaa:	f85d fb04 	ldr.w	pc, [sp], #4
10010aae:	bf00      	nop
10010ab0:	100207ec 	.word	0x100207ec
10010ab4:	10020774 	.word	0x10020774
10010ab8:	100205b0 	.word	0x100205b0
10010abc:	100207fc 	.word	0x100207fc
10010ac0:	10020588 	.word	0x10020588
10010ac4:	20000590 	.word	0x20000590

10010ac8 <main>:

/*********************************** MAIN *************************************/

int main() {
10010ac8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10010acc:	b09a      	sub	sp, #104	@ 0x68
    // Initialize board
    init();
10010ace:	f7ff fc43 	bl	10010358 <init>

    // Print the component IDs to be helpful
    // Your design does not need to do this
    print_info("Application Processor Started\n");
10010ad2:	4832      	ldr	r0, [pc, #200]	@ (10010b9c <main+0xd4>)
10010ad4:	f8df 90c8 	ldr.w	r9, [pc, #200]	@ 10010ba0 <main+0xd8>

    // Handle commands forever
    int buf_len = 100;
    char buf[buf_len];
    while (1) {
        recv_input("Enter Command: ", buf, buf_len);
10010ad8:	4d32      	ldr	r5, [pc, #200]	@ (10010ba4 <main+0xdc>)

        // Execute requested command
        if (!strcmp(buf, "list")) {
10010ada:	4c33      	ldr	r4, [pc, #204]	@ (10010ba8 <main+0xe0>)
            scan_components();
        } else if (!strcmp(buf, "boot")) {
10010adc:	4e33      	ldr	r6, [pc, #204]	@ (10010bac <main+0xe4>)
            attempt_boot();
        } else if (!strcmp(buf, "replace")) {
10010ade:	4f34      	ldr	r7, [pc, #208]	@ (10010bb0 <main+0xe8>)
            attempt_replace();
        } else if (!strcmp(buf, "attest")) {
10010ae0:	f8df 80d0 	ldr.w	r8, [pc, #208]	@ 10010bb4 <main+0xec>
        } else if (!strcmp(buf, "replace")) {
10010ae4:	f8df a0d0 	ldr.w	sl, [pc, #208]	@ 10010bb8 <main+0xf0>
    print_info("Application Processor Started\n");
10010ae8:	f004 fc5a 	bl	100153a0 <printf>
10010aec:	4833      	ldr	r0, [pc, #204]	@ (10010bbc <main+0xf4>)
10010aee:	f004 fcb7 	bl	10015460 <puts>
10010af2:	4833      	ldr	r0, [pc, #204]	@ (10010bc0 <main+0xf8>)
10010af4:	f004 fc54 	bl	100153a0 <printf>
10010af8:	f8d9 3000 	ldr.w	r3, [r9]
10010afc:	6898      	ldr	r0, [r3, #8]
10010afe:	f004 fda5 	bl	1001564c <fflush>
        recv_input("Enter Command: ", buf, buf_len);
10010b02:	2264      	movs	r2, #100	@ 0x64
10010b04:	a901      	add	r1, sp, #4
10010b06:	4628      	mov	r0, r5
10010b08:	f000 f8a4 	bl	10010c54 <recv_input>
        if (!strcmp(buf, "list")) {
10010b0c:	9b01      	ldr	r3, [sp, #4]
10010b0e:	42a3      	cmp	r3, r4
10010b10:	d018      	beq.n	10010b44 <main+0x7c>
        } else if (!strcmp(buf, "boot")) {
10010b12:	9b01      	ldr	r3, [sp, #4]
10010b14:	42b3      	cmp	r3, r6
10010b16:	d01c      	beq.n	10010b52 <main+0x8a>
        } else if (!strcmp(buf, "replace")) {
10010b18:	9b01      	ldr	r3, [sp, #4]
10010b1a:	42bb      	cmp	r3, r7
10010b1c:	d023      	beq.n	10010b66 <main+0x9e>
        } else if (!strcmp(buf, "attest")) {
10010b1e:	9b01      	ldr	r3, [sp, #4]
10010b20:	4543      	cmp	r3, r8
10010b22:	d026      	beq.n	10010b72 <main+0xaa>
            attempt_attest();
        } else {
            print_error("Unrecognized command '%s'\n", buf);
10010b24:	4827      	ldr	r0, [pc, #156]	@ (10010bc4 <main+0xfc>)
10010b26:	f004 fc3b 	bl	100153a0 <printf>
10010b2a:	4827      	ldr	r0, [pc, #156]	@ (10010bc8 <main+0x100>)
10010b2c:	a901      	add	r1, sp, #4
10010b2e:	f004 fc37 	bl	100153a0 <printf>
10010b32:	4823      	ldr	r0, [pc, #140]	@ (10010bc0 <main+0xf8>)
10010b34:	f004 fc34 	bl	100153a0 <printf>
10010b38:	f8d9 3000 	ldr.w	r3, [r9]
10010b3c:	6898      	ldr	r0, [r3, #8]
10010b3e:	f004 fd85 	bl	1001564c <fflush>
10010b42:	e7de      	b.n	10010b02 <main+0x3a>
        if (!strcmp(buf, "list")) {
10010b44:	f89d 3008 	ldrb.w	r3, [sp, #8]
10010b48:	2b00      	cmp	r3, #0
10010b4a:	d1e2      	bne.n	10010b12 <main+0x4a>
            scan_components();
10010b4c:	f7ff fc46 	bl	100103dc <scan_components>
10010b50:	e7d7      	b.n	10010b02 <main+0x3a>
        } else if (!strcmp(buf, "boot")) {
10010b52:	f89d 3008 	ldrb.w	r3, [sp, #8]
10010b56:	2b00      	cmp	r3, #0
10010b58:	d1de      	bne.n	10010b18 <main+0x50>
    if (validate_components()) {
10010b5a:	f7ff fcb3 	bl	100104c4 <validate_components>
10010b5e:	b9a8      	cbnz	r0, 10010b8c <main+0xc4>
10010b60:	f7ff fdea 	bl	10010738 <attempt_boot.part.0>
10010b64:	e7cd      	b.n	10010b02 <main+0x3a>
        } else if (!strcmp(buf, "replace")) {
10010b66:	9b02      	ldr	r3, [sp, #8]
10010b68:	4553      	cmp	r3, sl
10010b6a:	d1d8      	bne.n	10010b1e <main+0x56>
            attempt_replace();
10010b6c:	f7ff fef8 	bl	10010960 <attempt_replace>
10010b70:	e7c7      	b.n	10010b02 <main+0x3a>
        } else if (!strcmp(buf, "attest")) {
10010b72:	f8bd 2008 	ldrh.w	r2, [sp, #8]
10010b76:	f247 4373 	movw	r3, #29811	@ 0x7473
10010b7a:	429a      	cmp	r2, r3
10010b7c:	d1d2      	bne.n	10010b24 <main+0x5c>
10010b7e:	f89d 300a 	ldrb.w	r3, [sp, #10]
10010b82:	2b00      	cmp	r3, #0
10010b84:	d1ce      	bne.n	10010b24 <main+0x5c>
            attempt_attest();
10010b86:	f7ff ff6f 	bl	10010a68 <attempt_attest>
10010b8a:	e7ba      	b.n	10010b02 <main+0x3a>
        print_error("Components could not be validated\n");
10010b8c:	480d      	ldr	r0, [pc, #52]	@ (10010bc4 <main+0xfc>)
10010b8e:	f004 fc07 	bl	100153a0 <printf>
10010b92:	480e      	ldr	r0, [pc, #56]	@ (10010bcc <main+0x104>)
10010b94:	f004 fc64 	bl	10015460 <puts>
10010b98:	e7cb      	b.n	10010b32 <main+0x6a>
10010b9a:	bf00      	nop
10010b9c:	1002058c 	.word	0x1002058c
10010ba0:	20000590 	.word	0x20000590
10010ba4:	10020824 	.word	0x10020824
10010ba8:	7473696c 	.word	0x7473696c
10010bac:	746f6f62 	.word	0x746f6f62
10010bb0:	6c706572 	.word	0x6c706572
10010bb4:	65747461 	.word	0x65747461
10010bb8:	00656361 	.word	0x00656361
10010bbc:	10020804 	.word	0x10020804
10010bc0:	10020588 	.word	0x10020588
10010bc4:	100205c4 	.word	0x100205c4
10010bc8:	10020854 	.word	0x10020854
10010bcc:	1002073c 	.word	0x1002073c

10010bd0 <board_link_init>:
 * @brief Initialize the board link connection
 * 
 * Initiailize the underlying i2c simple interface
*/
void board_link_init(void) {
    i2c_simple_controller_init();
10010bd0:	f000 b8b2 	b.w	10010d38 <i2c_simple_controller_init>

10010bd4 <component_id_to_i2c_addr>:
 * 
 * @return i2c_addr_t, i2c address
*/
i2c_addr_t component_id_to_i2c_addr(uint32_t component_id) {
    return (uint8_t) component_id & COMPONENT_ADDR_MASK;
}
10010bd4:	b2c0      	uxtb	r0, r0
10010bd6:	4770      	bx	lr

10010bd8 <send_packet>:
 * 
 * @return status: SUCCESS_RETURN if success, ERROR_RETURN if error
 *
 * Function sends an arbitrary packet over i2c to a specified component
*/
int send_packet(i2c_addr_t address, uint8_t len, uint8_t* packet) {
10010bd8:	b570      	push	{r4, r5, r6, lr}
10010bda:	4604      	mov	r4, r0
10010bdc:	460d      	mov	r5, r1
10010bde:	4616      	mov	r6, r2

    int result;
    result = i2c_simple_write_receive_len(address, len);
10010be0:	f000 f92e 	bl	10010e40 <i2c_simple_write_receive_len>
    if (result < SUCCESS_RETURN) {
10010be4:	2800      	cmp	r0, #0
10010be6:	db0d      	blt.n	10010c04 <send_packet+0x2c>
        return ERROR_RETURN;
    }
    result = i2c_simple_write_data_generic(address, RECEIVE, len, packet);
10010be8:	4633      	mov	r3, r6
10010bea:	462a      	mov	r2, r5
10010bec:	2100      	movs	r1, #0
10010bee:	4620      	mov	r0, r4
10010bf0:	f000 f974 	bl	10010edc <i2c_simple_write_data_generic>
    if (result < SUCCESS_RETURN) {
10010bf4:	2800      	cmp	r0, #0
10010bf6:	db05      	blt.n	10010c04 <send_packet+0x2c>
        return ERROR_RETURN;
    }
    result = i2c_simple_write_receive_done(address, true);
10010bf8:	2101      	movs	r1, #1
10010bfa:	4620      	mov	r0, r4
10010bfc:	f000 f904 	bl	10010e08 <i2c_simple_write_receive_done>
    if (result < SUCCESS_RETURN) {
10010c00:	17c0      	asrs	r0, r0, #31
        return ERROR_RETURN;
    }

    return SUCCESS_RETURN;
}
10010c02:	bd70      	pop	{r4, r5, r6, pc}
        return ERROR_RETURN;
10010c04:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10010c08:	bd70      	pop	{r4, r5, r6, pc}
10010c0a:	bf00      	nop

10010c0c <poll_and_receive_packet>:
 * @param address: i2c_addr_t, i2c address
 * @param packet: uint8_t*, pointer to a buffer where a packet will be received 
 * 
 * @return int: size of data received, ERROR_RETURN if error
*/
int poll_and_receive_packet(i2c_addr_t address, uint8_t* packet) {
10010c0c:	b570      	push	{r4, r5, r6, lr}
10010c0e:	4604      	mov	r4, r0
10010c10:	460e      	mov	r6, r1

    int result = SUCCESS_RETURN;
10010c12:	e002      	b.n	10010c1a <poll_and_receive_packet+0xe>
    while (true) {
        result = i2c_simple_read_transmit_done(address);
        if (result < SUCCESS_RETURN) {
            return ERROR_RETURN;
        }
        else if (result == SUCCESS_RETURN) {
10010c14:	d00b      	beq.n	10010c2e <poll_and_receive_packet+0x22>
            break;
        }
        MXC_Delay(50);
10010c16:	f000 fc35 	bl	10011484 <MXC_Delay>
        result = i2c_simple_read_transmit_done(address);
10010c1a:	4620      	mov	r0, r4
10010c1c:	f000 f8b0 	bl	10010d80 <i2c_simple_read_transmit_done>
        if (result < SUCCESS_RETURN) {
10010c20:	2800      	cmp	r0, #0
        MXC_Delay(50);
10010c22:	f04f 0032 	mov.w	r0, #50	@ 0x32
        if (result < SUCCESS_RETURN) {
10010c26:	daf5      	bge.n	10010c14 <poll_and_receive_packet+0x8>
            return ERROR_RETURN;
10010c28:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
    if (result < SUCCESS_RETURN) {
        return ERROR_RETURN;
    }

    return len;
}
10010c2c:	bd70      	pop	{r4, r5, r6, pc}
    uint8_t len = i2c_simple_read_transmit_len(address);
10010c2e:	4620      	mov	r0, r4
10010c30:	f000 f8c8 	bl	10010dc4 <i2c_simple_read_transmit_len>
    result = i2c_simple_read_data_generic(address, TRANSMIT, len, packet);
10010c34:	b2c5      	uxtb	r5, r0
10010c36:	4633      	mov	r3, r6
10010c38:	462a      	mov	r2, r5
10010c3a:	2103      	movs	r1, #3
10010c3c:	4620      	mov	r0, r4
10010c3e:	f000 f935 	bl	10010eac <i2c_simple_read_data_generic>
    if (result < SUCCESS_RETURN) {
10010c42:	2800      	cmp	r0, #0
10010c44:	dbf0      	blt.n	10010c28 <poll_and_receive_packet+0x1c>
    i2c_simple_write_transmit_done(address, true);
10010c46:	2101      	movs	r1, #1
10010c48:	4620      	mov	r0, r4
10010c4a:	f000 f913 	bl	10010e74 <i2c_simple_write_transmit_done>
    return len;
10010c4e:	4628      	mov	r0, r5
}
10010c50:	bd70      	pop	{r4, r5, r6, pc}
10010c52:	bf00      	nop

10010c54 <recv_input>:
 */

#include "host_messaging.h"

// Print a message through USB UART and then receive a line over USB UART
void recv_input(const char *msg, char *buf, int buf_len) {
10010c54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10010c56:	4607      	mov	r7, r0
    print_debug(msg);
10010c58:	4812      	ldr	r0, [pc, #72]	@ (10010ca4 <recv_input+0x50>)
10010c5a:	4e13      	ldr	r6, [pc, #76]	@ (10010ca8 <recv_input+0x54>)
void recv_input(const char *msg, char *buf, int buf_len) {
10010c5c:	460c      	mov	r4, r1
10010c5e:	4615      	mov	r5, r2
    print_debug(msg);
10010c60:	f004 fb9e 	bl	100153a0 <printf>
10010c64:	4638      	mov	r0, r7
10010c66:	f004 fb9b 	bl	100153a0 <printf>
10010c6a:	4810      	ldr	r0, [pc, #64]	@ (10010cac <recv_input+0x58>)
10010c6c:	f004 fb98 	bl	100153a0 <printf>
10010c70:	6833      	ldr	r3, [r6, #0]
10010c72:	6898      	ldr	r0, [r3, #8]
10010c74:	f004 fcea 	bl	1001564c <fflush>
    fflush(0);
10010c78:	2000      	movs	r0, #0
10010c7a:	f004 fce7 	bl	1001564c <fflush>
    print_ack();
10010c7e:	480c      	ldr	r0, [pc, #48]	@ (10010cb0 <recv_input+0x5c>)
10010c80:	f004 fb8e 	bl	100153a0 <printf>
10010c84:	6833      	ldr	r3, [r6, #0]
10010c86:	6898      	ldr	r0, [r3, #8]
10010c88:	f004 fce0 	bl	1001564c <fflush>
    fgets(buf, buf_len, stdin);
10010c8c:	6833      	ldr	r3, [r6, #0]
10010c8e:	4629      	mov	r1, r5
10010c90:	685a      	ldr	r2, [r3, #4]
10010c92:	4620      	mov	r0, r4
10010c94:	f004 fd84 	bl	100157a0 <fgets>
    puts("");
}
10010c98:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    puts("");
10010c9c:	4805      	ldr	r0, [pc, #20]	@ (10010cb4 <recv_input+0x60>)
10010c9e:	f004 bbdf 	b.w	10015460 <puts>
10010ca2:	bf00      	nop
10010ca4:	10020560 	.word	0x10020560
10010ca8:	20000590 	.word	0x20000590
10010cac:	10020588 	.word	0x10020588
10010cb0:	10020998 	.word	0x10020998
10010cb4:	100207e8 	.word	0x100207e8

10010cb8 <flash_simple_irq>:
 * 
 * This ISR allows for access to the flash through simple_flash to operate
 */
void flash_simple_irq(void) {
    uint32_t temp;
    temp = MXC_FLC0->intr;
10010cb8:	4a09      	ldr	r2, [pc, #36]	@ (10010ce0 <flash_simple_irq+0x28>)
10010cba:	6a53      	ldr	r3, [r2, #36]	@ 0x24

    if (temp & MXC_F_FLC_INTR_DONE) {
10010cbc:	07d9      	lsls	r1, r3, #31
10010cbe:	d503      	bpl.n	10010cc8 <flash_simple_irq+0x10>
        MXC_FLC0->intr &= ~MXC_F_FLC_INTR_DONE;
10010cc0:	6a51      	ldr	r1, [r2, #36]	@ 0x24
10010cc2:	f021 0101 	bic.w	r1, r1, #1
10010cc6:	6251      	str	r1, [r2, #36]	@ 0x24
    }

    if (temp & MXC_F_FLC_INTR_AF) {
10010cc8:	079b      	lsls	r3, r3, #30
10010cca:	d400      	bmi.n	10010cce <flash_simple_irq+0x16>
        MXC_FLC0->intr &= ~MXC_F_FLC_INTR_AF;
        printf(" -> Interrupt! (Flash access failure)\n\n");
    }
}
10010ccc:	4770      	bx	lr
        MXC_FLC0->intr &= ~MXC_F_FLC_INTR_AF;
10010cce:	4a04      	ldr	r2, [pc, #16]	@ (10010ce0 <flash_simple_irq+0x28>)
        printf(" -> Interrupt! (Flash access failure)\n\n");
10010cd0:	4804      	ldr	r0, [pc, #16]	@ (10010ce4 <flash_simple_irq+0x2c>)
        MXC_FLC0->intr &= ~MXC_F_FLC_INTR_AF;
10010cd2:	6a53      	ldr	r3, [r2, #36]	@ 0x24
10010cd4:	f023 0302 	bic.w	r3, r3, #2
10010cd8:	6253      	str	r3, [r2, #36]	@ 0x24
        printf(" -> Interrupt! (Flash access failure)\n\n");
10010cda:	f004 bbc1 	b.w	10015460 <puts>
10010cde:	bf00      	nop
10010ce0:	40029000 	.word	0x40029000
10010ce4:	100209a4 	.word	0x100209a4

10010ce8 <flash_simple_init>:
 * @brief Initialize the Simple Flash Interface
 * 
 * This function registers the interrupt for the flash system,
 * enables the interrupt, and disables ICC
*/
void flash_simple_init(void) {
10010ce8:	b508      	push	{r3, lr}
    // Setup Flash
    MXC_NVIC_SetVector(FLC0_IRQn, flash_simple_irq);
10010cea:	4908      	ldr	r1, [pc, #32]	@ (10010d0c <flash_simple_init+0x24>)
10010cec:	2017      	movs	r0, #23
10010cee:	f000 fc03 	bl	100114f8 <MXC_NVIC_SetVector>
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
10010cf2:	4b07      	ldr	r3, [pc, #28]	@ (10010d10 <flash_simple_init+0x28>)
10010cf4:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
10010cf8:	601a      	str	r2, [r3, #0]
    NVIC_EnableIRQ(FLC0_IRQn);
    MXC_FLC_EnableInt(MXC_F_FLC_INTR_DONEIE | MXC_F_FLC_INTR_AFIE);
10010cfa:	f44f 7040 	mov.w	r0, #768	@ 0x300
10010cfe:	f000 fd47 	bl	10011790 <MXC_FLC_EnableInt>
    MXC_ICC_Disable(MXC_ICC0);
}
10010d02:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    MXC_ICC_Disable(MXC_ICC0);
10010d06:	4803      	ldr	r0, [pc, #12]	@ (10010d14 <flash_simple_init+0x2c>)
10010d08:	f001 bde8 	b.w	100128dc <MXC_ICC_Disable>
10010d0c:	10010cb9 	.word	0x10010cb9
10010d10:	e000e100 	.word	0xe000e100
10010d14:	4002a000 	.word	0x4002a000

10010d18 <flash_simple_erase_page>:
 * Flash memory can only be erased in a large block size called a page.
 * Once erased, memory can only be written one way e.g. 1->0.
 * In order to be re-written the entire page must be erased.
*/
int flash_simple_erase_page(uint32_t address) {
    return MXC_FLC_PageErase(address);
10010d18:	f016 bf2a 	b.w	10027b70 <__MXC_FLC_PageErase_veneer>

10010d1c <flash_simple_read>:
 * 
 * This function reads data from the specified flash page into the buffer
 * with the specified amount of bytes
*/
void flash_simple_read(uint32_t address, uint32_t* buffer, uint32_t size) {
    MXC_FLC_Read(address, buffer, size);
10010d1c:	f000 bd36 	b.w	1001178c <MXC_FLC_Read>

10010d20 <flash_simple_write>:
 * This function writes data to the specified flash page from the buffer passed
 * with the specified amount of bytes. Flash memory can only be written in one
 * way e.g. 1->0. To rewrite previously written memory see the 
 * flash_simple_erase_page documentation.
*/
int flash_simple_write(uint32_t address, uint32_t* buffer, uint32_t size) {
10010d20:	460b      	mov	r3, r1
    return MXC_FLC_Write(address, size, buffer);
10010d22:	4611      	mov	r1, r2
10010d24:	461a      	mov	r2, r3
10010d26:	f000 bd2f 	b.w	10011788 <MXC_FLC_Write>
10010d2a:	bf00      	nop

10010d2c <I2C_Handler>:
 * @brief Built-In I2C Interrupt Handler
 *
 * Utilize the built-in I2C interrupt handler to allow for the use
 * of MXC_I2C_Master_Transaction() function calls
 */
static void I2C_Handler(void) { MXC_I2C_AsyncHandler(I2C_INTERFACE); }
10010d2c:	4801      	ldr	r0, [pc, #4]	@ (10010d34 <I2C_Handler+0x8>)
10010d2e:	f000 bf93 	b.w	10011c58 <MXC_I2C_AsyncHandler>
10010d32:	bf00      	nop
10010d34:	4001e000 	.word	0x4001e000

10010d38 <i2c_simple_controller_init>:
 * @brief Initialize the I2C Connection
 * 
 * Initialize the I2C by enabling the module, setting the correct
 * frequency, and enabling the interrupt to our I2C_Handler
*/
int i2c_simple_controller_init(void) {
10010d38:	b510      	push	{r4, lr}
    int error;

    // Initialize the I2C Interface
    error = MXC_I2C_Init(I2C_INTERFACE, true, 0);
10010d3a:	480c      	ldr	r0, [pc, #48]	@ (10010d6c <i2c_simple_controller_init+0x34>)
10010d3c:	2200      	movs	r2, #0
10010d3e:	2101      	movs	r1, #1
10010d40:	f000 ff26 	bl	10011b90 <MXC_I2C_Init>
    if (error != E_NO_ERROR) {
10010d44:	4604      	mov	r4, r0
10010d46:	b960      	cbnz	r0, 10010d62 <i2c_simple_controller_init+0x2a>
        printf("Failed to initialize I2C.\n");
        return error;
    }
    // Set frequency to frequency macro
    MXC_I2C_SetFrequency(I2C_INTERFACE, I2C_FREQ);
10010d48:	4909      	ldr	r1, [pc, #36]	@ (10010d70 <i2c_simple_controller_init+0x38>)
10010d4a:	4808      	ldr	r0, [pc, #32]	@ (10010d6c <i2c_simple_controller_init+0x34>)
10010d4c:	f000 ff6a 	bl	10011c24 <MXC_I2C_SetFrequency>
    
    // Set up interrupt
    MXC_NVIC_SetVector(MXC_I2C_GET_IRQ(MXC_I2C_GET_IDX(I2C_INTERFACE)), I2C_Handler);
10010d50:	4908      	ldr	r1, [pc, #32]	@ (10010d74 <i2c_simple_controller_init+0x3c>)
10010d52:	2024      	movs	r0, #36	@ 0x24
10010d54:	f000 fbd0 	bl	100114f8 <MXC_NVIC_SetVector>
10010d58:	4b07      	ldr	r3, [pc, #28]	@ (10010d78 <i2c_simple_controller_init+0x40>)
10010d5a:	2210      	movs	r2, #16
10010d5c:	605a      	str	r2, [r3, #4]
    NVIC_EnableIRQ(MXC_I2C_GET_IRQ(MXC_I2C_GET_IDX(I2C_INTERFACE)));

    return E_NO_ERROR;
}
10010d5e:	4620      	mov	r0, r4
10010d60:	bd10      	pop	{r4, pc}
        printf("Failed to initialize I2C.\n");
10010d62:	4806      	ldr	r0, [pc, #24]	@ (10010d7c <i2c_simple_controller_init+0x44>)
10010d64:	f004 fb7c 	bl	10015460 <puts>
}
10010d68:	4620      	mov	r0, r4
10010d6a:	bd10      	pop	{r4, pc}
10010d6c:	4001e000 	.word	0x4001e000
10010d70:	000186a0 	.word	0x000186a0
10010d74:	10010d2d 	.word	0x10010d2d
10010d78:	e000e100 	.word	0xe000e100
10010d7c:	100209cc 	.word	0x100209cc

10010d80 <i2c_simple_read_transmit_done>:
 * @return int: TRANSMIT_DONE value, negative if error
 *
 * Read the TRANSMIT_DONE for an I2C peripheral
 * and return the value 
*/
int i2c_simple_read_transmit_done(i2c_addr_t addr) {
10010d80:	b510      	push	{r4, lr}
*/
int i2c_simple_read_status_generic(i2c_addr_t addr, ECTF_I2C_REGS reg) {
    uint8_t value = 0;

    mxc_i2c_req_t request;
    request.i2c = I2C_INTERFACE;
10010d82:	490f      	ldr	r1, [pc, #60]	@ (10010dc0 <i2c_simple_read_transmit_done+0x40>)
int i2c_simple_read_transmit_done(i2c_addr_t addr) {
10010d84:	b08a      	sub	sp, #40	@ 0x28
10010d86:	2404      	movs	r4, #4
    request.addr = addr;
10010d88:	e9cd 1002 	strd	r1, r0, [sp, #8]
    uint8_t value = 0;
10010d8c:	2300      	movs	r3, #0
    request.tx_len = 1;
10010d8e:	2201      	movs	r2, #1
10010d90:	f88d 4006 	strb.w	r4, [sp, #6]
    request.tx_buf = (uint8_t*)&reg;
    request.rx_len = 1;
    request.rx_buf = (uint8_t*)&value;
10010d94:	f10d 0107 	add.w	r1, sp, #7
    request.tx_buf = (uint8_t*)&reg;
10010d98:	f10d 0406 	add.w	r4, sp, #6
    request.restart = 0;
    request.callback = NULL;

    int result = MXC_I2C_MasterTransaction(&request);
10010d9c:	a802      	add	r0, sp, #8
    request.tx_buf = (uint8_t*)&reg;
10010d9e:	e9cd 4204 	strd	r4, r2, [sp, #16]
    request.rx_buf = (uint8_t*)&value;
10010da2:	e9cd 1206 	strd	r1, r2, [sp, #24]
    request.callback = NULL;
10010da6:	e9cd 3308 	strd	r3, r3, [sp, #32]
    uint8_t value = 0;
10010daa:	f88d 3007 	strb.w	r3, [sp, #7]
    int result = MXC_I2C_MasterTransaction(&request);
10010dae:	f000 ff4d 	bl	10011c4c <MXC_I2C_MasterTransaction>
    if (result < 0) {
10010db2:	2800      	cmp	r0, #0
        return result;
    }
    return value;
10010db4:	bfa8      	it	ge
10010db6:	f89d 0007 	ldrbge.w	r0, [sp, #7]
}
10010dba:	b00a      	add	sp, #40	@ 0x28
10010dbc:	bd10      	pop	{r4, pc}
10010dbe:	bf00      	nop
10010dc0:	4001e000 	.word	0x4001e000

10010dc4 <i2c_simple_read_transmit_len>:
int i2c_simple_read_transmit_len(i2c_addr_t addr) {
10010dc4:	b510      	push	{r4, lr}
    request.i2c = I2C_INTERFACE;
10010dc6:	490f      	ldr	r1, [pc, #60]	@ (10010e04 <i2c_simple_read_transmit_len+0x40>)
int i2c_simple_read_transmit_len(i2c_addr_t addr) {
10010dc8:	b08a      	sub	sp, #40	@ 0x28
10010dca:	2405      	movs	r4, #5
    request.addr = addr;
10010dcc:	e9cd 1002 	strd	r1, r0, [sp, #8]
    uint8_t value = 0;
10010dd0:	2300      	movs	r3, #0
    request.tx_len = 1;
10010dd2:	2201      	movs	r2, #1
10010dd4:	f88d 4006 	strb.w	r4, [sp, #6]
    request.rx_buf = (uint8_t*)&value;
10010dd8:	f10d 0107 	add.w	r1, sp, #7
    request.tx_buf = (uint8_t*)&reg;
10010ddc:	f10d 0406 	add.w	r4, sp, #6
    int result = MXC_I2C_MasterTransaction(&request);
10010de0:	a802      	add	r0, sp, #8
    request.tx_buf = (uint8_t*)&reg;
10010de2:	e9cd 4204 	strd	r4, r2, [sp, #16]
    request.rx_buf = (uint8_t*)&value;
10010de6:	e9cd 1206 	strd	r1, r2, [sp, #24]
    request.callback = NULL;
10010dea:	e9cd 3308 	strd	r3, r3, [sp, #32]
    uint8_t value = 0;
10010dee:	f88d 3007 	strb.w	r3, [sp, #7]
    int result = MXC_I2C_MasterTransaction(&request);
10010df2:	f000 ff2b 	bl	10011c4c <MXC_I2C_MasterTransaction>
    if (result < 0) {
10010df6:	2800      	cmp	r0, #0
    return value;
10010df8:	bfa8      	it	ge
10010dfa:	f89d 0007 	ldrbge.w	r0, [sp, #7]
}
10010dfe:	b00a      	add	sp, #40	@ 0x28
10010e00:	bd10      	pop	{r4, pc}
10010e02:	bf00      	nop
10010e04:	4001e000 	.word	0x4001e000

10010e08 <i2c_simple_write_receive_done>:
int i2c_simple_write_receive_done(i2c_addr_t addr, bool done) {
10010e08:	b530      	push	{r4, r5, lr}
10010e0a:	b08b      	sub	sp, #44	@ 0x2c
10010e0c:	4605      	mov	r5, r0
    uint8_t packet[2];
    packet[0] = (uint8_t) reg;
    packet[1] = value;
    
    mxc_i2c_req_t request;
    request.i2c = I2C_INTERFACE;
10010e0e:	4a0b      	ldr	r2, [pc, #44]	@ (10010e3c <i2c_simple_write_receive_done+0x34>)
10010e10:	9202      	str	r2, [sp, #8]
    packet[0] = (uint8_t) reg;
10010e12:	2001      	movs	r0, #1
    request.addr = addr;
    request.tx_len = 2;
    request.tx_buf = packet;
    request.rx_len = 0;
10010e14:	2300      	movs	r3, #0
    packet[0] = (uint8_t) reg;
10010e16:	f88d 0004 	strb.w	r0, [sp, #4]
    request.tx_buf = packet;
10010e1a:	aa01      	add	r2, sp, #4
    request.tx_len = 2;
10010e1c:	2402      	movs	r4, #2
    request.rx_buf = 0;
    request.restart = 0;
    request.callback = NULL;

    return MXC_I2C_MasterTransaction(&request);
10010e1e:	a802      	add	r0, sp, #8
    request.tx_buf = packet;
10010e20:	e9cd 2404 	strd	r2, r4, [sp, #16]
    request.rx_buf = 0;
10010e24:	e9cd 3306 	strd	r3, r3, [sp, #24]
    request.callback = NULL;
10010e28:	e9cd 3308 	strd	r3, r3, [sp, #32]
    packet[1] = value;
10010e2c:	f88d 1005 	strb.w	r1, [sp, #5]
    request.addr = addr;
10010e30:	9503      	str	r5, [sp, #12]
    return MXC_I2C_MasterTransaction(&request);
10010e32:	f000 ff0b 	bl	10011c4c <MXC_I2C_MasterTransaction>
}
10010e36:	b00b      	add	sp, #44	@ 0x2c
10010e38:	bd30      	pop	{r4, r5, pc}
10010e3a:	bf00      	nop
10010e3c:	4001e000 	.word	0x4001e000

10010e40 <i2c_simple_write_receive_len>:
int i2c_simple_write_receive_len(i2c_addr_t addr, uint8_t len) {
10010e40:	b510      	push	{r4, lr}
10010e42:	b08a      	sub	sp, #40	@ 0x28
10010e44:	4604      	mov	r4, r0
    request.i2c = I2C_INTERFACE;
10010e46:	480a      	ldr	r0, [pc, #40]	@ (10010e70 <i2c_simple_write_receive_len+0x30>)
    packet[1] = value;
10010e48:	f88d 1005 	strb.w	r1, [sp, #5]
    request.rx_len = 0;
10010e4c:	2300      	movs	r3, #0
    packet[0] = (uint8_t) reg;
10010e4e:	2202      	movs	r2, #2
    request.i2c = I2C_INTERFACE;
10010e50:	9002      	str	r0, [sp, #8]
    request.tx_buf = packet;
10010e52:	a901      	add	r1, sp, #4
    return MXC_I2C_MasterTransaction(&request);
10010e54:	a802      	add	r0, sp, #8
    request.tx_buf = packet;
10010e56:	e9cd 1204 	strd	r1, r2, [sp, #16]
    request.rx_buf = 0;
10010e5a:	e9cd 3306 	strd	r3, r3, [sp, #24]
    request.callback = NULL;
10010e5e:	e9cd 3308 	strd	r3, r3, [sp, #32]
    packet[0] = (uint8_t) reg;
10010e62:	f88d 2004 	strb.w	r2, [sp, #4]
    request.addr = addr;
10010e66:	9403      	str	r4, [sp, #12]
    return MXC_I2C_MasterTransaction(&request);
10010e68:	f000 fef0 	bl	10011c4c <MXC_I2C_MasterTransaction>
}
10010e6c:	b00a      	add	sp, #40	@ 0x28
10010e6e:	bd10      	pop	{r4, pc}
10010e70:	4001e000 	.word	0x4001e000

10010e74 <i2c_simple_write_transmit_done>:
int i2c_simple_write_transmit_done(i2c_addr_t addr, bool done) {
10010e74:	b530      	push	{r4, r5, lr}
10010e76:	b08b      	sub	sp, #44	@ 0x2c
10010e78:	4605      	mov	r5, r0
    request.i2c = I2C_INTERFACE;
10010e7a:	4a0b      	ldr	r2, [pc, #44]	@ (10010ea8 <i2c_simple_write_transmit_done+0x34>)
10010e7c:	9202      	str	r2, [sp, #8]
    packet[0] = (uint8_t) reg;
10010e7e:	2004      	movs	r0, #4
    request.rx_len = 0;
10010e80:	2300      	movs	r3, #0
    request.tx_buf = packet;
10010e82:	eb0d 0200 	add.w	r2, sp, r0
    packet[0] = (uint8_t) reg;
10010e86:	f88d 0004 	strb.w	r0, [sp, #4]
    request.tx_len = 2;
10010e8a:	2402      	movs	r4, #2
    return MXC_I2C_MasterTransaction(&request);
10010e8c:	a802      	add	r0, sp, #8
    request.tx_buf = packet;
10010e8e:	e9cd 2404 	strd	r2, r4, [sp, #16]
    request.rx_buf = 0;
10010e92:	e9cd 3306 	strd	r3, r3, [sp, #24]
    request.callback = NULL;
10010e96:	e9cd 3308 	strd	r3, r3, [sp, #32]
    packet[1] = value;
10010e9a:	f88d 1005 	strb.w	r1, [sp, #5]
    request.addr = addr;
10010e9e:	9503      	str	r5, [sp, #12]
    return MXC_I2C_MasterTransaction(&request);
10010ea0:	f000 fed4 	bl	10011c4c <MXC_I2C_MasterTransaction>
}
10010ea4:	b00b      	add	sp, #44	@ 0x2c
10010ea6:	bd30      	pop	{r4, r5, pc}
10010ea8:	4001e000 	.word	0x4001e000

10010eac <i2c_simple_read_data_generic>:
{
10010eac:	b530      	push	{r4, r5, lr}
10010eae:	b08b      	sub	sp, #44	@ 0x2c
    request.i2c = I2C_INTERFACE;
10010eb0:	4d09      	ldr	r5, [pc, #36]	@ (10010ed8 <i2c_simple_read_data_generic+0x2c>)
{
10010eb2:	f88d 1007 	strb.w	r1, [sp, #7]
    request.addr = addr;
10010eb6:	9003      	str	r0, [sp, #12]
    request.tx_buf = (uint8_t*)&reg;
10010eb8:	f10d 0107 	add.w	r1, sp, #7
    request.tx_len = 1;
10010ebc:	2001      	movs	r0, #1
    request.tx_buf = (uint8_t*)&reg;
10010ebe:	e9cd 1004 	strd	r1, r0, [sp, #16]
    request.restart = 0;
10010ec2:	2400      	movs	r4, #0
    return MXC_I2C_MasterTransaction(&request);
10010ec4:	a802      	add	r0, sp, #8
    request.rx_buf = buf;
10010ec6:	e9cd 3206 	strd	r3, r2, [sp, #24]
    request.callback = NULL;
10010eca:	e9cd 4408 	strd	r4, r4, [sp, #32]
    request.i2c = I2C_INTERFACE;
10010ece:	9502      	str	r5, [sp, #8]
    return MXC_I2C_MasterTransaction(&request);
10010ed0:	f000 febc 	bl	10011c4c <MXC_I2C_MasterTransaction>
}
10010ed4:	b00b      	add	sp, #44	@ 0x2c
10010ed6:	bd30      	pop	{r4, r5, pc}
10010ed8:	4001e000 	.word	0x4001e000

10010edc <i2c_simple_write_data_generic>:
int i2c_simple_write_data_generic(i2c_addr_t addr, ECTF_I2C_REGS reg, uint8_t len, uint8_t* buf) {
10010edc:	b570      	push	{r4, r5, r6, lr}
10010ede:	b0ca      	sub	sp, #296	@ 0x128
10010ee0:	468c      	mov	ip, r1
10010ee2:	4605      	mov	r5, r0
    memcpy(&packet[1], buf, len);
10010ee4:	4619      	mov	r1, r3
10010ee6:	f10d 0025 	add.w	r0, sp, #37	@ 0x25
int i2c_simple_write_data_generic(i2c_addr_t addr, ECTF_I2C_REGS reg, uint8_t len, uint8_t* buf) {
10010eea:	4614      	mov	r4, r2
    packet[0] = reg;
10010eec:	f88d c024 	strb.w	ip, [sp, #36]	@ 0x24
    memcpy(&packet[1], buf, len);
10010ef0:	f004 fd86 	bl	10015a00 <memcpy>
    request.i2c = I2C_INTERFACE;
10010ef4:	4b08      	ldr	r3, [pc, #32]	@ (10010f18 <i2c_simple_write_data_generic+0x3c>)
10010ef6:	9301      	str	r3, [sp, #4]
    packet[0] = reg;
10010ef8:	ae09      	add	r6, sp, #36	@ 0x24
    request.rx_len = 0;
10010efa:	2300      	movs	r3, #0
    request.tx_len = len+1;
10010efc:	3401      	adds	r4, #1
    return MXC_I2C_MasterTransaction(&request);
10010efe:	a801      	add	r0, sp, #4
    request.rx_buf = 0;
10010f00:	e9cd 3305 	strd	r3, r3, [sp, #20]
    request.callback = NULL;
10010f04:	e9cd 3307 	strd	r3, r3, [sp, #28]
    request.addr = addr;
10010f08:	9502      	str	r5, [sp, #8]
    request.tx_len = len+1;
10010f0a:	9404      	str	r4, [sp, #16]
    request.tx_buf = packet;
10010f0c:	9603      	str	r6, [sp, #12]
    return MXC_I2C_MasterTransaction(&request);
10010f0e:	f000 fe9d 	bl	10011c4c <MXC_I2C_MasterTransaction>
}
10010f12:	b04a      	add	sp, #296	@ 0x128
10010f14:	bd70      	pop	{r4, r5, r6, pc}
10010f16:	bf00      	nop
10010f18:	4001e000 	.word	0x4001e000

10010f1c <GPIO0_IRQHandler>:
 * NOTE: This weak definition is included to support Push Button 0 interrupts in
 *       case the user does not define this interrupt handler in their application.
 **/
__weak void GPIO0_IRQHandler(void)
{
    MXC_GPIO_Handler(MXC_GPIO_GET_IDX(MXC_GPIO0));
10010f1c:	2000      	movs	r0, #0
10010f1e:	f000 bd9d 	b.w	10011a5c <MXC_GPIO_Handler>
10010f22:	bf00      	nop

10010f24 <GPIO1_IRQHandler>:
 * NOTE: This weak definition is included to support Push Button 1 interrupts in
 *       case the user does not define this interrupt handler in their application.
 **/
__weak void GPIO1_IRQHandler(void)
{
    MXC_GPIO_Handler(MXC_GPIO_GET_IDX(MXC_GPIO1));
10010f24:	2001      	movs	r0, #1
10010f26:	f000 bd99 	b.w	10011a5c <MXC_GPIO_Handler>
10010f2a:	bf00      	nop

10010f2c <Board_Init>:
}

/******************************************************************************/
int Board_Init(void)
{
10010f2c:	b510      	push	{r4, lr}
#ifndef __riscv
    int err;

    // Enable GPIO
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
10010f2e:	2000      	movs	r0, #0
10010f30:	f000 fb2a 	bl	10011588 <MXC_SYS_ClockEnable>
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
10010f34:	2001      	movs	r0, #1
10010f36:	f000 fb27 	bl	10011588 <MXC_SYS_ClockEnable>
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
10010f3a:	2040      	movs	r0, #64	@ 0x40
10010f3c:	f000 fb24 	bl	10011588 <MXC_SYS_ClockEnable>
/******************************************************************************/
int Console_Init(void)
{
    int err;

    if ((err = MXC_UART_Init(ConsoleUart, CONSOLE_BAUD, MXC_UART_IBRO_CLK)) != E_NO_ERROR) {
10010f40:	4b0d      	ldr	r3, [pc, #52]	@ (10010f78 <Board_Init+0x4c>)
10010f42:	2202      	movs	r2, #2
10010f44:	6818      	ldr	r0, [r3, #0]
10010f46:	f44f 31e1 	mov.w	r1, #115200	@ 0x1c200
10010f4a:	f001 fd1f 	bl	1001298c <MXC_UART_Init>
    if ((err = Console_Init()) < E_NO_ERROR) {
10010f4e:	1e04      	subs	r4, r0, #0
10010f50:	db03      	blt.n	10010f5a <Board_Init+0x2e>
    if ((err = PB_Init()) != E_NO_ERROR) {
10010f52:	f000 f8b9 	bl	100110c8 <PB_Init>
10010f56:	4604      	mov	r4, r0
10010f58:	b108      	cbz	r0, 10010f5e <Board_Init+0x32>
}
10010f5a:	4620      	mov	r0, r4
10010f5c:	bd10      	pop	{r4, pc}
    if ((err = LED_Init()) != E_NO_ERROR) {
10010f5e:	f000 f87b 	bl	10011058 <LED_Init>
10010f62:	4604      	mov	r4, r0
10010f64:	2800      	cmp	r0, #0
10010f66:	d1f8      	bne.n	10010f5a <Board_Init+0x2e>
    MXC_SIMO->vrego_c = 0x43; // Set CNN voltage
10010f68:	4b04      	ldr	r3, [pc, #16]	@ (10010f7c <Board_Init+0x50>)
    MXC_Delay(200000);
10010f6a:	4805      	ldr	r0, [pc, #20]	@ (10010f80 <Board_Init+0x54>)
    MXC_SIMO->vrego_c = 0x43; // Set CNN voltage
10010f6c:	2243      	movs	r2, #67	@ 0x43
10010f6e:	60da      	str	r2, [r3, #12]
    MXC_Delay(200000);
10010f70:	f000 fa88 	bl	10011484 <MXC_Delay>
}
10010f74:	4620      	mov	r0, r4
10010f76:	bd10      	pop	{r4, pc}
10010f78:	20000000 	.word	0x20000000
10010f7c:	40004400 	.word	0x40004400
10010f80:	00030d40 	.word	0x00030d40

10010f84 <NMI_Handler>:
}

/******************************************************************************/
void NMI_Handler(void)
{
    __NOP();
10010f84:	bf00      	nop
}
10010f86:	4770      	bx	lr

10010f88 <_close>:
    return -1;
}
int _close(int file)
{
    return -1;
}
10010f88:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10010f8c:	4770      	bx	lr
10010f8e:	bf00      	nop

10010f90 <_isatty>:
int _isatty(int file)
10010f90:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10010f94:	4770      	bx	lr
10010f96:	bf00      	nop

10010f98 <_lseek>:
    return -1;
}
int _lseek(int file, off_t offset, int whence)
{
    return -1;
}
10010f98:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10010f9c:	4770      	bx	lr
10010f9e:	bf00      	nop

10010fa0 <_fstat>:
int _fstat(int file, struct stat *st)
{
    return -1;
}
10010fa0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10010fa4:	4770      	bx	lr
10010fa6:	bf00      	nop

10010fa8 <_read>:
   fgetc for stdio */
#if defined(__ICCARM__) || defined(__GNUC__)

#if defined(__GNUC__) // GNUC _read function prototype
int _read(int file, char *ptr, int len)
{
10010fa8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    size_t n;
#endif /*  */

    int num = 0; // count of number received.

    switch (file) {
10010faa:	b9e0      	cbnz	r0, 10010fe6 <_read+0x3e>
    case STDIN_FILENO:
        for (n = 0; n < len; n++) {
10010fac:	2a00      	cmp	r2, #0
10010fae:	dd19      	ble.n	10010fe4 <_read+0x3c>
            *ptr = MXC_UART_ReadCharacter(MXC_UARTn); // read a byte.
10010fb0:	4d10      	ldr	r5, [pc, #64]	@ (10010ff4 <_read+0x4c>)
10010fb2:	460e      	mov	r6, r1
10010fb4:	188f      	adds	r7, r1, r2
        for (n = 0; n < len; n++) {
10010fb6:	460c      	mov	r4, r1
10010fb8:	e002      	b.n	10010fc0 <_read+0x18>
10010fba:	42bb      	cmp	r3, r7
10010fbc:	d00f      	beq.n	10010fde <_read+0x36>
                num++;
                ptr++;

                break;
            } else {
                ptr++;
10010fbe:	461c      	mov	r4, r3
            *ptr = MXC_UART_ReadCharacter(MXC_UARTn); // read a byte.
10010fc0:	4628      	mov	r0, r5
10010fc2:	f001 fddb 	bl	10012b7c <MXC_UART_ReadCharacter>
10010fc6:	b2c1      	uxtb	r1, r0
10010fc8:	7021      	strb	r1, [r4, #0]
            MXC_UART_WriteCharacter(MXC_UARTn, *ptr); // echo the byte.
10010fca:	4628      	mov	r0, r5
10010fcc:	f001 fdd8 	bl	10012b80 <MXC_UART_WriteCharacter>
            if (*ptr == '\r') { // check for end of line.
10010fd0:	7822      	ldrb	r2, [r4, #0]
10010fd2:	2a0d      	cmp	r2, #13
                ptr++;
10010fd4:	f104 0301 	add.w	r3, r4, #1
            if (*ptr == '\r') { // check for end of line.
10010fd8:	d1ef      	bne.n	10010fba <_read+0x12>
                *ptr = '\n';
10010fda:	230a      	movs	r3, #10
10010fdc:	7023      	strb	r3, [r4, #0]
                num++;
10010fde:	f1c6 0601 	rsb	r6, r6, #1
10010fe2:	19a0      	adds	r0, r4, r6
        errno = EBADF;
        return -1;
    }

    return num;
}
10010fe4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        errno = EBADF;
10010fe6:	f002 f875 	bl	100130d4 <__errno>
10010fea:	2309      	movs	r3, #9
10010fec:	6003      	str	r3, [r0, #0]
        return -1;
10010fee:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10010ff2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10010ff4:	40042000 	.word	0x40042000

10010ff8 <_write>:

/* newlib/libc printf() will eventually call write() to get the data to the stdout */
#if defined(__GNUC__)
// GNUC _write function prototype
int _write(int file, char *ptr, int len)
{
10010ff8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
int __write(int file, const unsigned char *ptr, size_t len)
{
    size_t n;
#endif /* __GNUC__ */

    switch (file) {
10010ffa:	1e43      	subs	r3, r0, #1
10010ffc:	2b01      	cmp	r3, #1
10010ffe:	d821      	bhi.n	10011044 <_write+0x4c>
    case STDOUT_FILENO:
    case STDERR_FILENO:

        // This function should be as fast as possible
        // So we'll forgo the UART driver for now
        for (n = 0; n < len; n++) {
10011000:	2a00      	cmp	r2, #0
10011002:	4617      	mov	r7, r2
10011004:	dd12      	ble.n	1001102c <_write+0x34>
10011006:	1e53      	subs	r3, r2, #1
            if (*ptr == '\n') {
                // Wait until there's room in the FIFO
                while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
10011008:	4e12      	ldr	r6, [pc, #72]	@ (10011054 <_write+0x5c>)
1001100a:	1e4c      	subs	r4, r1, #1
1001100c:	18cd      	adds	r5, r1, r3
            if (*ptr == '\n') {
1001100e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
10011012:	2b0a      	cmp	r3, #10
10011014:	d00c      	beq.n	10011030 <_write+0x38>

                MXC_UART_WriteCharacter(MXC_UARTn, '\r');
            }

            // Wait until there's room in the FIFO
            while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
10011016:	480f      	ldr	r0, [pc, #60]	@ (10011054 <_write+0x5c>)
10011018:	f001 fdb6 	bl	10012b88 <MXC_UART_GetTXFIFOAvailable>
1001101c:	2800      	cmp	r0, #0
1001101e:	d0fa      	beq.n	10011016 <_write+0x1e>

            MXC_UART_WriteCharacter(MXC_UARTn, *ptr++);
10011020:	7821      	ldrb	r1, [r4, #0]
10011022:	4630      	mov	r0, r6
10011024:	f001 fdac 	bl	10012b80 <MXC_UART_WriteCharacter>
        for (n = 0; n < len; n++) {
10011028:	42ac      	cmp	r4, r5
1001102a:	d1f0      	bne.n	1001100e <_write+0x16>

        break;

    default:
        errno = EBADF;
        return -1;
1001102c:	4638      	mov	r0, r7
    }

    return len;
}
1001102e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
10011030:	4808      	ldr	r0, [pc, #32]	@ (10011054 <_write+0x5c>)
10011032:	f001 fda9 	bl	10012b88 <MXC_UART_GetTXFIFOAvailable>
10011036:	2800      	cmp	r0, #0
10011038:	d0fa      	beq.n	10011030 <_write+0x38>
                MXC_UART_WriteCharacter(MXC_UARTn, '\r');
1001103a:	210d      	movs	r1, #13
1001103c:	4630      	mov	r0, r6
1001103e:	f001 fd9f 	bl	10012b80 <MXC_UART_WriteCharacter>
10011042:	e7e8      	b.n	10011016 <_write+0x1e>
        errno = EBADF;
10011044:	f002 f846 	bl	100130d4 <__errno>
10011048:	2309      	movs	r3, #9
1001104a:	6003      	str	r3, [r0, #0]
        return -1;
1001104c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10011050:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10011052:	bf00      	nop
10011054:	40042000 	.word	0x40042000

10011058 <LED_Init>:
#include "led.h"
#include "mxc_device.h"

/******************************************************************************/
int LED_Init(void)
{
10011058:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int retval = E_NO_ERROR;
    unsigned int i;

    /* setup GPIO for the LED */
    for (i = 0; i < num_leds; i++) {
1001105a:	4b0d      	ldr	r3, [pc, #52]	@ (10011090 <LED_Init+0x38>)
1001105c:	681f      	ldr	r7, [r3, #0]
1001105e:	b1a7      	cbz	r7, 1001108a <LED_Init+0x32>
10011060:	2500      	movs	r5, #0
10011062:	4c0c      	ldr	r4, [pc, #48]	@ (10011094 <LED_Init+0x3c>)
    int retval = E_NO_ERROR;
10011064:	462e      	mov	r6, r5
//******************************************************************************
void LED_Off(unsigned int idx)
{
    MXC_ASSERT(idx < num_leds);
#if (LED_ON == 0)
    MXC_GPIO_OutSet(led_pin[idx].port, led_pin[idx].mask);
10011066:	e9d4 0100 	ldrd	r0, r1, [r4]
1001106a:	f000 fcc9 	bl	10011a00 <MXC_GPIO_OutSet>
        if (MXC_GPIO_Config(&led_pin[i]) != E_NO_ERROR) {
1001106e:	4620      	mov	r0, r4
10011070:	f000 fbc0 	bl	100117f4 <MXC_GPIO_Config>
    for (i = 0; i < num_leds; i++) {
10011074:	3501      	adds	r5, #1
            retval = E_UNKNOWN;
10011076:	2800      	cmp	r0, #0
10011078:	bf18      	it	ne
1001107a:	f06f 0607 	mvnne.w	r6, #7
    for (i = 0; i < num_leds; i++) {
1001107e:	42bd      	cmp	r5, r7
10011080:	f104 040c 	add.w	r4, r4, #12
10011084:	d1ef      	bne.n	10011066 <LED_Init+0xe>
}
10011086:	4630      	mov	r0, r6
10011088:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    int retval = E_NO_ERROR;
1001108a:	463e      	mov	r6, r7
}
1001108c:	4630      	mov	r0, r6
1001108e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10011090:	100209e8 	.word	0x100209e8
10011094:	100209ec 	.word	0x100209ec

10011098 <LED_On>:
    MXC_GPIO_OutClr(led_pin[idx].port, led_pin[idx].mask);
10011098:	4b04      	ldr	r3, [pc, #16]	@ (100110ac <LED_On+0x14>)
1001109a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
1001109e:	eb03 0280 	add.w	r2, r3, r0, lsl #2
100110a2:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
100110a6:	6851      	ldr	r1, [r2, #4]
100110a8:	f000 bcc0 	b.w	10011a2c <MXC_GPIO_OutClr>
100110ac:	100209ec 	.word	0x100209ec

100110b0 <LED_Off>:
    MXC_GPIO_OutSet(led_pin[idx].port, led_pin[idx].mask);
100110b0:	4b04      	ldr	r3, [pc, #16]	@ (100110c4 <LED_Off+0x14>)
100110b2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
100110b6:	eb03 0280 	add.w	r2, r3, r0, lsl #2
100110ba:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
100110be:	6851      	ldr	r1, [r2, #4]
100110c0:	f000 bc9e 	b.w	10011a00 <MXC_GPIO_OutSet>
100110c4:	100209ec 	.word	0x100209ec

100110c8 <PB_Init>:
#include "mxc_assert.h"
#include "pb.h"

/******************************************************************************/
int PB_Init(void)
{
100110c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int retval = E_NO_ERROR;
    unsigned int i;

    // Enable pushbutton inputs
    for (i = 0; i < num_pbs; i++) {
100110ca:	4b0b      	ldr	r3, [pc, #44]	@ (100110f8 <PB_Init+0x30>)
100110cc:	681f      	ldr	r7, [r3, #0]
100110ce:	b187      	cbz	r7, 100110f2 <PB_Init+0x2a>
100110d0:	2400      	movs	r4, #0
100110d2:	4d0a      	ldr	r5, [pc, #40]	@ (100110fc <PB_Init+0x34>)
    int retval = E_NO_ERROR;
100110d4:	4626      	mov	r6, r4
        if (MXC_GPIO_Config(&pb_pin[i]) != E_NO_ERROR) {
100110d6:	4628      	mov	r0, r5
100110d8:	f000 fb8c 	bl	100117f4 <MXC_GPIO_Config>
    for (i = 0; i < num_pbs; i++) {
100110dc:	3401      	adds	r4, #1
            retval = E_UNKNOWN;
100110de:	2800      	cmp	r0, #0
100110e0:	bf18      	it	ne
100110e2:	f06f 0607 	mvnne.w	r6, #7
    for (i = 0; i < num_pbs; i++) {
100110e6:	42bc      	cmp	r4, r7
100110e8:	f105 050c 	add.w	r5, r5, #12
100110ec:	d1f3      	bne.n	100110d6 <PB_Init+0xe>
        }
    }

    return retval;
}
100110ee:	4630      	mov	r0, r6
100110f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    int retval = E_NO_ERROR;
100110f2:	463e      	mov	r6, r7
}
100110f4:	4630      	mov	r0, r6
100110f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100110f8:	10020a10 	.word	0x10020a10
100110fc:	10020a14 	.word	0x10020a14

10011100 <Reset_Handler>:
10011100:	4847      	ldr	r0, [pc, #284]	@ (10011220 <LPCMP_IRQHandler+0x2>)
10011102:	4685      	mov	sp, r0
10011104:	4847      	ldr	r0, [pc, #284]	@ (10011224 <LPCMP_IRQHandler+0x6>)
10011106:	4780      	blx	r0
10011108:	b980      	cbnz	r0, 1001112c <.SKIPRAMINIT>
1001110a:	4947      	ldr	r1, [pc, #284]	@ (10011228 <LPCMP_IRQHandler+0xa>)
1001110c:	4a47      	ldr	r2, [pc, #284]	@ (1001122c <LPCMP_IRQHandler+0xe>)
1001110e:	4b48      	ldr	r3, [pc, #288]	@ (10011230 <LPCMP_IRQHandler+0x12>)
10011110:	1a9b      	subs	r3, r3, r2
10011112:	dd03      	ble.n	1001111c <Reset_Handler+0x1c>
10011114:	3b04      	subs	r3, #4
10011116:	58c8      	ldr	r0, [r1, r3]
10011118:	50d0      	str	r0, [r2, r3]
1001111a:	dcfb      	bgt.n	10011114 <Reset_Handler+0x14>
1001111c:	4945      	ldr	r1, [pc, #276]	@ (10011234 <LPCMP_IRQHandler+0x16>)
1001111e:	4a46      	ldr	r2, [pc, #280]	@ (10011238 <LPCMP_IRQHandler+0x1a>)
10011120:	2000      	movs	r0, #0
10011122:	4291      	cmp	r1, r2
10011124:	bfbc      	itt	lt
10011126:	f841 0b04 	strlt.w	r0, [r1], #4
1001112a:	e7fa      	blt.n	10011122 <Reset_Handler+0x22>

1001112c <.SKIPRAMINIT>:
1001112c:	4843      	ldr	r0, [pc, #268]	@ (1001123c <LPCMP_IRQHandler+0x1e>)
1001112e:	4780      	blx	r0
10011130:	4843      	ldr	r0, [pc, #268]	@ (10011240 <LPCMP_IRQHandler+0x22>)
10011132:	4780      	blx	r0
10011134:	4843      	ldr	r0, [pc, #268]	@ (10011244 <LPCMP_IRQHandler+0x26>)
10011136:	4780      	blx	r0

10011138 <.SPIN>:
10011138:	f7ff fffe 	bl	10011138 <.SPIN>
1001113c:	e7fe      	b.n	1001113c <.SPIN+0x4>

1001113e <HardFault_Handler>:
1001113e:	e7fe      	b.n	1001113e <HardFault_Handler>

10011140 <MemManage_Handler>:
10011140:	e7fe      	b.n	10011140 <MemManage_Handler>

10011142 <BusFault_Handler>:
10011142:	e7fe      	b.n	10011142 <BusFault_Handler>

10011144 <UsageFault_Handler>:
10011144:	e7fe      	b.n	10011144 <UsageFault_Handler>

10011146 <SVC_Handler>:
10011146:	e7fe      	b.n	10011146 <SVC_Handler>

10011148 <DebugMon_Handler>:
10011148:	e7fe      	b.n	10011148 <DebugMon_Handler>

1001114a <PendSV_Handler>:
1001114a:	e7fe      	b.n	1001114a <PendSV_Handler>

1001114c <SysTick_Handler>:
1001114c:	e7fe      	b.n	1001114c <SysTick_Handler>

1001114e <Default_Handler>:
1001114e:	e7fe      	b.n	1001114e <Default_Handler>

10011150 <PF_IRQHandler>:
10011150:	e7fe      	b.n	10011150 <PF_IRQHandler>

10011152 <WDT0_IRQHandler>:
10011152:	e7fe      	b.n	10011152 <WDT0_IRQHandler>

10011154 <RSV02_IRQHandler>:
10011154:	e7fe      	b.n	10011154 <RSV02_IRQHandler>

10011156 <RTC_IRQHandler>:
10011156:	e7fe      	b.n	10011156 <RTC_IRQHandler>

10011158 <TRNG_IRQHandler>:
10011158:	e7fe      	b.n	10011158 <TRNG_IRQHandler>

1001115a <TMR0_IRQHandler>:
1001115a:	e7fe      	b.n	1001115a <TMR0_IRQHandler>

1001115c <TMR1_IRQHandler>:
1001115c:	e7fe      	b.n	1001115c <TMR1_IRQHandler>

1001115e <TMR2_IRQHandler>:
1001115e:	e7fe      	b.n	1001115e <TMR2_IRQHandler>

10011160 <TMR3_IRQHandler>:
10011160:	e7fe      	b.n	10011160 <TMR3_IRQHandler>

10011162 <TMR4_IRQHandler>:
10011162:	e7fe      	b.n	10011162 <TMR4_IRQHandler>

10011164 <TMR5_IRQHandler>:
10011164:	e7fe      	b.n	10011164 <TMR5_IRQHandler>

10011166 <RSV11_IRQHandler>:
10011166:	e7fe      	b.n	10011166 <RSV11_IRQHandler>

10011168 <RSV12_IRQHandler>:
10011168:	e7fe      	b.n	10011168 <RSV12_IRQHandler>

1001116a <I2C0_IRQHandler>:
1001116a:	e7fe      	b.n	1001116a <I2C0_IRQHandler>

1001116c <UART0_IRQHandler>:
1001116c:	e7fe      	b.n	1001116c <UART0_IRQHandler>

1001116e <UART1_IRQHandler>:
1001116e:	e7fe      	b.n	1001116e <UART1_IRQHandler>

10011170 <SPI1_IRQHandler>:
10011170:	e7fe      	b.n	10011170 <SPI1_IRQHandler>

10011172 <RSV17_IRQHandler>:
10011172:	e7fe      	b.n	10011172 <RSV17_IRQHandler>

10011174 <RSV18_IRQHandler>:
10011174:	e7fe      	b.n	10011174 <RSV18_IRQHandler>

10011176 <RSV19_IRQHandler>:
10011176:	e7fe      	b.n	10011176 <RSV19_IRQHandler>

10011178 <ADC_IRQHandler>:
10011178:	e7fe      	b.n	10011178 <ADC_IRQHandler>

1001117a <RSV21_IRQHandler>:
1001117a:	e7fe      	b.n	1001117a <RSV21_IRQHandler>

1001117c <RSV22_IRQHandler>:
1001117c:	e7fe      	b.n	1001117c <RSV22_IRQHandler>

1001117e <FLC0_IRQHandler>:
1001117e:	e7fe      	b.n	1001117e <FLC0_IRQHandler>
10011180:	e7fe      	b.n	10011180 <FLC0_IRQHandler+0x2>
10011182:	e7fe      	b.n	10011182 <FLC0_IRQHandler+0x4>

10011184 <GPIO2_IRQHandler>:
10011184:	e7fe      	b.n	10011184 <GPIO2_IRQHandler>

10011186 <RSV27_IRQHandler>:
10011186:	e7fe      	b.n	10011186 <RSV27_IRQHandler>

10011188 <DMA0_IRQHandler>:
10011188:	e7fe      	b.n	10011188 <DMA0_IRQHandler>

1001118a <DMA1_IRQHandler>:
1001118a:	e7fe      	b.n	1001118a <DMA1_IRQHandler>

1001118c <DMA2_IRQHandler>:
1001118c:	e7fe      	b.n	1001118c <DMA2_IRQHandler>

1001118e <DMA3_IRQHandler>:
1001118e:	e7fe      	b.n	1001118e <DMA3_IRQHandler>

10011190 <RSV32_IRQHandler>:
10011190:	e7fe      	b.n	10011190 <RSV32_IRQHandler>

10011192 <RSV33_IRQHandler>:
10011192:	e7fe      	b.n	10011192 <RSV33_IRQHandler>

10011194 <UART2_IRQHandler>:
10011194:	e7fe      	b.n	10011194 <UART2_IRQHandler>

10011196 <RSV35_IRQHandler>:
10011196:	e7fe      	b.n	10011196 <RSV35_IRQHandler>

10011198 <I2C1_IRQHandler>:
10011198:	e7fe      	b.n	10011198 <I2C1_IRQHandler>

1001119a <RSV37_IRQHandler>:
1001119a:	e7fe      	b.n	1001119a <RSV37_IRQHandler>

1001119c <RSV38_IRQHandler>:
1001119c:	e7fe      	b.n	1001119c <RSV38_IRQHandler>

1001119e <RSV39_IRQHandler>:
1001119e:	e7fe      	b.n	1001119e <RSV39_IRQHandler>

100111a0 <RSV40_IRQHandler>:
100111a0:	e7fe      	b.n	100111a0 <RSV40_IRQHandler>

100111a2 <RSV41_IRQHandler>:
100111a2:	e7fe      	b.n	100111a2 <RSV41_IRQHandler>

100111a4 <RSV42_IRQHandler>:
100111a4:	e7fe      	b.n	100111a4 <RSV42_IRQHandler>

100111a6 <RSV43_IRQHandler>:
100111a6:	e7fe      	b.n	100111a6 <RSV43_IRQHandler>

100111a8 <RSV44_IRQHandler>:
100111a8:	e7fe      	b.n	100111a8 <RSV44_IRQHandler>

100111aa <RSV45_IRQHandler>:
100111aa:	e7fe      	b.n	100111aa <RSV45_IRQHandler>

100111ac <RSV46_IRQHandler>:
100111ac:	e7fe      	b.n	100111ac <RSV46_IRQHandler>

100111ae <RSV47_IRQHandler>:
100111ae:	e7fe      	b.n	100111ae <RSV47_IRQHandler>

100111b0 <RSV48_IRQHandler>:
100111b0:	e7fe      	b.n	100111b0 <RSV48_IRQHandler>

100111b2 <RSV49_IRQHandler>:
100111b2:	e7fe      	b.n	100111b2 <RSV49_IRQHandler>

100111b4 <RSV50_IRQHandler>:
100111b4:	e7fe      	b.n	100111b4 <RSV50_IRQHandler>

100111b6 <RSV51_IRQHandler>:
100111b6:	e7fe      	b.n	100111b6 <RSV51_IRQHandler>

100111b8 <RSV52_IRQHandler>:
100111b8:	e7fe      	b.n	100111b8 <RSV52_IRQHandler>

100111ba <WUT_IRQHandler>:
100111ba:	e7fe      	b.n	100111ba <WUT_IRQHandler>

100111bc <GPIOWAKE_IRQHandler>:
100111bc:	e7fe      	b.n	100111bc <GPIOWAKE_IRQHandler>

100111be <RSV55_IRQHandler>:
100111be:	e7fe      	b.n	100111be <RSV55_IRQHandler>

100111c0 <SPI0_IRQHandler>:
100111c0:	e7fe      	b.n	100111c0 <SPI0_IRQHandler>

100111c2 <WDT1_IRQHandler>:
100111c2:	e7fe      	b.n	100111c2 <WDT1_IRQHandler>

100111c4 <RSV58_IRQHandler>:
100111c4:	e7fe      	b.n	100111c4 <RSV58_IRQHandler>

100111c6 <PT_IRQHandler>:
100111c6:	e7fe      	b.n	100111c6 <PT_IRQHandler>

100111c8 <RSV60_IRQHandler>:
100111c8:	e7fe      	b.n	100111c8 <RSV60_IRQHandler>

100111ca <RSV61_IRQHandler>:
100111ca:	e7fe      	b.n	100111ca <RSV61_IRQHandler>

100111cc <I2C2_IRQHandler>:
100111cc:	e7fe      	b.n	100111cc <I2C2_IRQHandler>

100111ce <RISCV_IRQHandler>:
100111ce:	e7fe      	b.n	100111ce <RISCV_IRQHandler>

100111d0 <RSV64_IRQHandler>:
100111d0:	e7fe      	b.n	100111d0 <RSV64_IRQHandler>

100111d2 <RSV65_IRQHandler>:
100111d2:	e7fe      	b.n	100111d2 <RSV65_IRQHandler>

100111d4 <RSV66_IRQHandler>:
100111d4:	e7fe      	b.n	100111d4 <RSV66_IRQHandler>

100111d6 <OWM_IRQHandler>:
100111d6:	e7fe      	b.n	100111d6 <OWM_IRQHandler>

100111d8 <RSV68_IRQHandler>:
100111d8:	e7fe      	b.n	100111d8 <RSV68_IRQHandler>

100111da <RSV69_IRQHandler>:
100111da:	e7fe      	b.n	100111da <RSV69_IRQHandler>

100111dc <RSV70_IRQHandler>:
100111dc:	e7fe      	b.n	100111dc <RSV70_IRQHandler>

100111de <RSV71_IRQHandler>:
100111de:	e7fe      	b.n	100111de <RSV71_IRQHandler>

100111e0 <RSV72_IRQHandler>:
100111e0:	e7fe      	b.n	100111e0 <RSV72_IRQHandler>

100111e2 <RSV73_IRQHandler>:
100111e2:	e7fe      	b.n	100111e2 <RSV73_IRQHandler>

100111e4 <RSV74_IRQHandler>:
100111e4:	e7fe      	b.n	100111e4 <RSV74_IRQHandler>

100111e6 <RSV75_IRQHandler>:
100111e6:	e7fe      	b.n	100111e6 <RSV75_IRQHandler>

100111e8 <RSV76_IRQHandler>:
100111e8:	e7fe      	b.n	100111e8 <RSV76_IRQHandler>

100111ea <RSV77_IRQHandler>:
100111ea:	e7fe      	b.n	100111ea <RSV77_IRQHandler>

100111ec <RSV78_IRQHandler>:
100111ec:	e7fe      	b.n	100111ec <RSV78_IRQHandler>

100111ee <RSV79_IRQHandler>:
100111ee:	e7fe      	b.n	100111ee <RSV79_IRQHandler>

100111f0 <RSV80_IRQHandler>:
100111f0:	e7fe      	b.n	100111f0 <RSV80_IRQHandler>

100111f2 <RSV81_IRQHandler>:
100111f2:	e7fe      	b.n	100111f2 <RSV81_IRQHandler>

100111f4 <ECC_IRQHandler>:
100111f4:	e7fe      	b.n	100111f4 <ECC_IRQHandler>

100111f6 <DVS_IRQHandler>:
100111f6:	e7fe      	b.n	100111f6 <DVS_IRQHandler>

100111f8 <SIMO_IRQHandler>:
100111f8:	e7fe      	b.n	100111f8 <SIMO_IRQHandler>

100111fa <RSV85_IRQHandler>:
100111fa:	e7fe      	b.n	100111fa <RSV85_IRQHandler>

100111fc <RSV86_IRQHandler>:
100111fc:	e7fe      	b.n	100111fc <RSV86_IRQHandler>

100111fe <RSV87_IRQHandler>:
100111fe:	e7fe      	b.n	100111fe <RSV87_IRQHandler>

10011200 <UART3_IRQHandler>:
10011200:	e7fe      	b.n	10011200 <UART3_IRQHandler>

10011202 <RSV89_IRQHandler>:
10011202:	e7fe      	b.n	10011202 <RSV89_IRQHandler>

10011204 <RSV90_IRQHandler>:
10011204:	e7fe      	b.n	10011204 <RSV90_IRQHandler>

10011206 <PCIF_IRQHandler>:
10011206:	e7fe      	b.n	10011206 <PCIF_IRQHandler>

10011208 <RSV92_IRQHandler>:
10011208:	e7fe      	b.n	10011208 <RSV92_IRQHandler>

1001120a <RSV93_IRQHandler>:
1001120a:	e7fe      	b.n	1001120a <RSV93_IRQHandler>

1001120c <RSV94_IRQHandler>:
1001120c:	e7fe      	b.n	1001120c <RSV94_IRQHandler>

1001120e <RSV95_IRQHandler>:
1001120e:	e7fe      	b.n	1001120e <RSV95_IRQHandler>

10011210 <RSV96_IRQHandler>:
10011210:	e7fe      	b.n	10011210 <RSV96_IRQHandler>

10011212 <AES_IRQHandler>:
10011212:	e7fe      	b.n	10011212 <AES_IRQHandler>

10011214 <RSV98_IRQHandler>:
10011214:	e7fe      	b.n	10011214 <RSV98_IRQHandler>

10011216 <I2S_IRQHandler>:
10011216:	e7fe      	b.n	10011216 <I2S_IRQHandler>

10011218 <CNN_FIFO_IRQHandler>:
10011218:	e7fe      	b.n	10011218 <CNN_FIFO_IRQHandler>

1001121a <CNN_IRQHandler>:
1001121a:	e7fe      	b.n	1001121a <CNN_IRQHandler>

1001121c <RSV102_IRQHandler>:
1001121c:	e7fe      	b.n	1001121c <RSV102_IRQHandler>

1001121e <LPCMP_IRQHandler>:
1001121e:	e7fe      	b.n	1001121e <LPCMP_IRQHandler>
10011220:	20020000 	.word	0x20020000
10011224:	100112ed 	.word	0x100112ed
10011228:	10027c58 	.word	0x10027c58
1001122c:	20000000 	.word	0x20000000
10011230:	20000bcc 	.word	0x20000bcc
10011234:	20000c00 	.word	0x20000c00
10011238:	20001768 	.word	0x20001768
1001123c:	100112f1 	.word	0x100112f1
10011240:	10015005 	.word	0x10015005
10011244:	10010ac9 	.word	0x10010ac9

10011248 <_sbrk>:
extern unsigned int __HeapLimit;
caddr_t _sbrk(int incr)
{
    char *prev_heap_end;

    if (heap_end == 0) {
10011248:	4a0b      	ldr	r2, [pc, #44]	@ (10011278 <_sbrk+0x30>)
{
1001124a:	b508      	push	{r3, lr}
1001124c:	4603      	mov	r3, r0
    if (heap_end == 0) {
1001124e:	6810      	ldr	r0, [r2, #0]
10011250:	b128      	cbz	r0, 1001125e <_sbrk+0x16>
        heap_end = (caddr_t)&__HeapBase;
    }
    prev_heap_end = heap_end;

    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
10011252:	490a      	ldr	r1, [pc, #40]	@ (1001127c <_sbrk+0x34>)
10011254:	4403      	add	r3, r0
10011256:	428b      	cmp	r3, r1
10011258:	d807      	bhi.n	1001126a <_sbrk+0x22>
        errno = ENOMEM;
        return (caddr_t)-1;
    }

    heap_end += incr;
1001125a:	6013      	str	r3, [r2, #0]

    return (caddr_t)prev_heap_end;
}
1001125c:	bd08      	pop	{r3, pc}
        heap_end = (caddr_t)&__HeapBase;
1001125e:	4808      	ldr	r0, [pc, #32]	@ (10011280 <_sbrk+0x38>)
    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
10011260:	4906      	ldr	r1, [pc, #24]	@ (1001127c <_sbrk+0x34>)
        heap_end = (caddr_t)&__HeapBase;
10011262:	6010      	str	r0, [r2, #0]
    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
10011264:	4403      	add	r3, r0
10011266:	428b      	cmp	r3, r1
10011268:	d9f7      	bls.n	1001125a <_sbrk+0x12>
        errno = ENOMEM;
1001126a:	f001 ff33 	bl	100130d4 <__errno>
1001126e:	230c      	movs	r3, #12
10011270:	6003      	str	r3, [r0, #0]
        return (caddr_t)-1;
10011272:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10011276:	bd08      	pop	{r3, pc}
10011278:	20000ca8 	.word	0x20000ca8
1001127c:	2001f000 	.word	0x2001f000
10011280:	20001770 	.word	0x20001770

10011284 <SystemCoreClockUpdate>:
__weak void SystemCoreClockUpdate(void)
{
    uint32_t base_freq, div, clk_src;

    // Get the clock source and frequency
    clk_src = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_SEL);
10011284:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
10011288:	689a      	ldr	r2, [r3, #8]
1001128a:	f402 6260 	and.w	r2, r2, #3584	@ 0xe00
    switch (clk_src) {
1001128e:	f5b2 6f20 	cmp.w	r2, #2560	@ 0xa00
10011292:	d020      	beq.n	100112d6 <SystemCoreClockUpdate+0x52>
10011294:	d911      	bls.n	100112ba <SystemCoreClockUpdate+0x36>
10011296:	f5b2 6f40 	cmp.w	r2, #3072	@ 0xc00
1001129a:	d017      	beq.n	100112cc <SystemCoreClockUpdate+0x48>
        break;
    case MXC_S_GCR_CLKCTRL_SYSCLK_SEL_INRO:
        base_freq = INRO_FREQ;
        break;
    case MXC_S_GCR_CLKCTRL_SYSCLK_SEL_IPO:
        base_freq = IPO_FREQ;
1001129c:	4b0f      	ldr	r3, [pc, #60]	@ (100112dc <SystemCoreClockUpdate+0x58>)
1001129e:	4910      	ldr	r1, [pc, #64]	@ (100112e0 <SystemCoreClockUpdate+0x5c>)
100112a0:	f5b2 6f60 	cmp.w	r2, #3584	@ 0xe00
100112a4:	bf18      	it	ne
100112a6:	460b      	movne	r3, r1
        // This code should never execute, however, initialize to safe value.
        base_freq = HIRC_FREQ;
        break;
    }

    div = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_DIV) >> MXC_F_GCR_CLKCTRL_SYSCLK_DIV_POS;
100112a8:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000

    SystemCoreClock = base_freq >> div;
100112ac:	490d      	ldr	r1, [pc, #52]	@ (100112e4 <SystemCoreClockUpdate+0x60>)
    div = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_DIV) >> MXC_F_GCR_CLKCTRL_SYSCLK_DIV_POS;
100112ae:	6892      	ldr	r2, [r2, #8]
100112b0:	f3c2 1282 	ubfx	r2, r2, #6, #3
    SystemCoreClock = base_freq >> div;
100112b4:	40d3      	lsrs	r3, r2
100112b6:	600b      	str	r3, [r1, #0]
}
100112b8:	4770      	bx	lr
    switch (clk_src) {
100112ba:	b152      	cbz	r2, 100112d2 <SystemCoreClockUpdate+0x4e>
        base_freq = IPO_FREQ;
100112bc:	4908      	ldr	r1, [pc, #32]	@ (100112e0 <SystemCoreClockUpdate+0x5c>)
100112be:	f247 5330 	movw	r3, #30000	@ 0x7530
100112c2:	f5b2 6fc0 	cmp.w	r2, #1536	@ 0x600
100112c6:	bf18      	it	ne
100112c8:	460b      	movne	r3, r1
100112ca:	e7ed      	b.n	100112a8 <SystemCoreClockUpdate+0x24>
        base_freq = ERTCO_FREQ;
100112cc:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
100112d0:	e7ea      	b.n	100112a8 <SystemCoreClockUpdate+0x24>
        base_freq = ISO_FREQ;
100112d2:	4b05      	ldr	r3, [pc, #20]	@ (100112e8 <SystemCoreClockUpdate+0x64>)
100112d4:	e7e8      	b.n	100112a8 <SystemCoreClockUpdate+0x24>
        base_freq = IBRO_FREQ;
100112d6:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
100112da:	e7e5      	b.n	100112a8 <SystemCoreClockUpdate+0x24>
100112dc:	047868c0 	.word	0x047868c0
100112e0:	05f5e100 	.word	0x05f5e100
100112e4:	20001768 	.word	0x20001768
100112e8:	03938700 	.word	0x03938700

100112ec <PreInit>:
 */
__weak int PreInit(void)
{
    /* Do nothing */
    return 0;
}
100112ec:	2000      	movs	r0, #0
100112ee:	4770      	bx	lr

100112f0 <SystemInit>:
 * You may over-ride this function in your program by defining a custom 
 *  SystemInit(), but care should be taken to reproduce the initialization
 *  steps or a non-functional system may result.
 */
__weak void SystemInit(void)
{
100112f0:	b510      	push	{r4, lr}
    /* Configure the interrupt controller to use the application vector table in */
    /* the application space */
#if defined(__CC_ARM) || defined(__GNUC__)
    /* IAR sets the VTOR pointer incorrectly and causes stack corruption */
    SCB->VTOR = (uint32_t)__isr_vector;
100112f2:	4c0a      	ldr	r4, [pc, #40]	@ (1001131c <SystemInit+0x2c>)
100112f4:	4b0a      	ldr	r3, [pc, #40]	@ (10011320 <SystemInit+0x30>)
100112f6:	60a3      	str	r3, [r4, #8]
#endif /* __CC_ARM || __GNUC__ */

    /* Enable instruction cache */
    MXC_ICC_Enable(MXC_ICC0);
100112f8:	480a      	ldr	r0, [pc, #40]	@ (10011324 <SystemInit+0x34>)
100112fa:	f001 faed 	bl	100128d8 <MXC_ICC_Enable>

    /* Enable FPU on Cortex-M4, which occupies coprocessor slots 10 & 11 */
    /* Grant full access, per "Table B3-24 CPACR bit assignments". */
    /* DDI0403D "ARMv7-M Architecture Reference Manual" */
    SCB->CPACR |= SCB_CPACR_CP10_Msk | SCB_CPACR_CP11_Msk;
100112fe:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
10011302:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
10011306:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
1001130a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
1001130e:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();

    SystemCoreClockUpdate();
10011312:	f7ff ffb7 	bl	10011284 <SystemCoreClockUpdate>

    Board_Init();
10011316:	f7ff fe09 	bl	10010f2c <Board_Init>
}
1001131a:	bd10      	pop	{r4, pc}
1001131c:	e000ed00 	.word	0xe000ed00
10011320:	10010000 	.word	0x10010000
10011324:	4002a000 	.word	0x4002a000

10011328 <MXC_DelayInit>:
    }
}

/* ************************************************************************** */
static void MXC_DelayInit(uint32_t us)
{
10011328:	b538      	push	{r3, r4, r5, lr}
    uint32_t starttick, reload, ticks, lastticks;

    // Record the current tick value and clear the overflow flag
    starttick = SysTick->VAL;
1001132a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000

    // Save the state of control register (and clear the overflow flag)
    ctrl_save = SysTick->CTRL & ~SysTick_CTRL_COUNTFLAG_Msk;
1001132e:	4918      	ldr	r1, [pc, #96]	@ (10011390 <MXC_DelayInit+0x68>)
    starttick = SysTick->VAL;
10011330:	699c      	ldr	r4, [r3, #24]
    ctrl_save = SysTick->CTRL & ~SysTick_CTRL_COUNTFLAG_Msk;
10011332:	691a      	ldr	r2, [r3, #16]
10011334:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
10011338:	600a      	str	r2, [r1, #0]

    // If the SysTick is not running, configure and start it
    if (!(SysTick->CTRL & SysTick_CTRL_ENABLE_Msk)) {
1001133a:	691a      	ldr	r2, [r3, #16]
1001133c:	07d2      	lsls	r2, r2, #31
1001133e:	d41f      	bmi.n	10011380 <MXC_DelayInit+0x58>
        SysTick->LOAD = SysTick_LOAD_RELOAD_Msk;
10011340:	f06f 447f 	mvn.w	r4, #4278190080	@ 0xff000000
        SysTick->VAL = SysTick_VAL_CURRENT_Msk;
        SysTick->CTRL = SysTick_CTRL_ENABLE_Msk | SysTick_CTRL_CLKSOURCE_Msk;
10011344:	2205      	movs	r2, #5
        SysTick->LOAD = SysTick_LOAD_RELOAD_Msk;
10011346:	615c      	str	r4, [r3, #20]
        starttick = SysTick_VAL_CURRENT_Msk;
        reload = SysTick_LOAD_RELOAD_Msk + 1;
10011348:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
        SysTick->VAL = SysTick_VAL_CURRENT_Msk;
1001134c:	619c      	str	r4, [r3, #24]
        SysTick->CTRL = SysTick_CTRL_ENABLE_Msk | SysTick_CTRL_CLKSOURCE_Msk;
1001134e:	611a      	str	r2, [r3, #16]
    } else {
        reload = SysTick->LOAD + 1; // get the current reload value
    }

    // Calculate the total number of ticks to delay
    ticks = (uint32_t)(((uint64_t)us * (uint64_t)SystemCoreClock) / 1000000);
10011350:	4b10      	ldr	r3, [pc, #64]	@ (10011394 <MXC_DelayInit+0x6c>)
10011352:	4a11      	ldr	r2, [pc, #68]	@ (10011398 <MXC_DelayInit+0x70>)
10011354:	6819      	ldr	r1, [r3, #0]
10011356:	2300      	movs	r3, #0
10011358:	fba0 0101 	umull	r0, r1, r0, r1
1001135c:	f00e ff52 	bl	10020204 <__aeabi_uldivmod>

    // How many overflows of the SysTick will occur
    overflows = ticks / reload;
10011360:	4b0e      	ldr	r3, [pc, #56]	@ (1001139c <MXC_DelayInit+0x74>)
10011362:	fbb0 f2f5 	udiv	r2, r0, r5

    // How many remaining ticks after the last overflow
    lastticks = ticks % reload;
10011366:	fb05 0012 	mls	r0, r5, r2, r0

    // Check if there will be another overflow due to the current value of the SysTick
    if (lastticks >= starttick) {
1001136a:	4284      	cmp	r4, r0
    overflows = ticks / reload;
1001136c:	601a      	str	r2, [r3, #0]
    if (lastticks >= starttick) {
1001136e:	d80a      	bhi.n	10011386 <MXC_DelayInit+0x5e>
        overflows++;
10011370:	681a      	ldr	r2, [r3, #0]
10011372:	3201      	adds	r2, #1
10011374:	601a      	str	r2, [r3, #0]
        endtick = reload - (lastticks - starttick);
10011376:	4425      	add	r5, r4
10011378:	4b09      	ldr	r3, [pc, #36]	@ (100113a0 <MXC_DelayInit+0x78>)
1001137a:	1a28      	subs	r0, r5, r0
1001137c:	6018      	str	r0, [r3, #0]
    } else {
        endtick = starttick - lastticks;
    }
}
1001137e:	bd38      	pop	{r3, r4, r5, pc}
        reload = SysTick->LOAD + 1; // get the current reload value
10011380:	695d      	ldr	r5, [r3, #20]
10011382:	3501      	adds	r5, #1
10011384:	e7e4      	b.n	10011350 <MXC_DelayInit+0x28>
        endtick = starttick - lastticks;
10011386:	4b06      	ldr	r3, [pc, #24]	@ (100113a0 <MXC_DelayInit+0x78>)
10011388:	1a20      	subs	r0, r4, r0
1001138a:	6018      	str	r0, [r3, #0]
}
1001138c:	bd38      	pop	{r3, r4, r5, pc}
1001138e:	bf00      	nop
10011390:	20000cb0 	.word	0x20000cb0
10011394:	20001768 	.word	0x20001768
10011398:	000f4240 	.word	0x000f4240
1001139c:	20000004 	.word	0x20000004
100113a0:	20000cb4 	.word	0x20000cb4

100113a4 <MXC_DelayAsync>:

/* ************************************************************************** */
int MXC_DelayAsync(uint32_t us, mxc_delay_complete_t callback)
{
100113a4:	b510      	push	{r4, lr}
    cbFunc = callback;

    // Check if timeout currently ongoing
    if (overflows > 0) {
100113a6:	4c0c      	ldr	r4, [pc, #48]	@ (100113d8 <MXC_DelayAsync+0x34>)
    cbFunc = callback;
100113a8:	4b0c      	ldr	r3, [pc, #48]	@ (100113dc <MXC_DelayAsync+0x38>)
    if (overflows > 0) {
100113aa:	6822      	ldr	r2, [r4, #0]
    cbFunc = callback;
100113ac:	6019      	str	r1, [r3, #0]
    if (overflows > 0) {
100113ae:	2a00      	cmp	r2, #0
100113b0:	dc0e      	bgt.n	100113d0 <MXC_DelayAsync+0x2c>
        return E_BUSY;
    }

    // Check if there is nothing to do
    if (us == 0) {
100113b2:	b908      	cbnz	r0, 100113b8 <MXC_DelayAsync+0x14>
        return E_NO_ERROR;
100113b4:	2000      	movs	r0, #0
    if (overflows > 0) {
        SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;
    }

    return E_NO_ERROR;
}
100113b6:	bd10      	pop	{r4, pc}
    MXC_DelayInit(us);
100113b8:	f7ff ffb6 	bl	10011328 <MXC_DelayInit>
    if (overflows > 0) {
100113bc:	6823      	ldr	r3, [r4, #0]
100113be:	2b00      	cmp	r3, #0
100113c0:	ddf8      	ble.n	100113b4 <MXC_DelayAsync+0x10>
        SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;
100113c2:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
100113c6:	6913      	ldr	r3, [r2, #16]
100113c8:	f043 0302 	orr.w	r3, r3, #2
100113cc:	6113      	str	r3, [r2, #16]
100113ce:	e7f1      	b.n	100113b4 <MXC_DelayAsync+0x10>
        return E_BUSY;
100113d0:	f06f 0005 	mvn.w	r0, #5
}
100113d4:	bd10      	pop	{r4, pc}
100113d6:	bf00      	nop
100113d8:	20000004 	.word	0x20000004
100113dc:	20000cac 	.word	0x20000cac

100113e0 <MXC_DelayCheck>:

/* ************************************************************************** */
int MXC_DelayCheck(void)
{
100113e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    // Check if timeout currently ongoing
    if (overflows < 0) {
100113e2:	4c17      	ldr	r4, [pc, #92]	@ (10011440 <MXC_DelayCheck+0x60>)
100113e4:	6823      	ldr	r3, [r4, #0]
100113e6:	2b00      	cmp	r3, #0
100113e8:	db1e      	blt.n	10011428 <MXC_DelayCheck+0x48>

        return E_NO_ERROR;
    }

    // Check the global values
    if ((overflows == 0) && (SysTick->VAL <= endtick)) {
100113ea:	6826      	ldr	r6, [r4, #0]
100113ec:	bb2e      	cbnz	r6, 1001143a <MXC_DelayCheck+0x5a>
100113ee:	4b15      	ldr	r3, [pc, #84]	@ (10011444 <MXC_DelayCheck+0x64>)
100113f0:	f04f 25e0 	mov.w	r5, #3758153728	@ 0xe000e000
100113f4:	681b      	ldr	r3, [r3, #0]
100113f6:	69aa      	ldr	r2, [r5, #24]
100113f8:	429a      	cmp	r2, r3
100113fa:	d81e      	bhi.n	1001143a <MXC_DelayCheck+0x5a>
}

/* ************************************************************************** */
void MXC_DelayAbort(void)
{
    if (cbFunc != NULL) {
100113fc:	4f12      	ldr	r7, [pc, #72]	@ (10011448 <MXC_DelayCheck+0x68>)
100113fe:	683b      	ldr	r3, [r7, #0]
10011400:	b15b      	cbz	r3, 1001141a <MXC_DelayCheck+0x3a>
        cbFunc(E_ABORT);
10011402:	f06f 000f 	mvn.w	r0, #15
10011406:	4798      	blx	r3
        cbFunc = NULL;
    }

    SysTick->CTRL = ctrl_save;
10011408:	4b10      	ldr	r3, [pc, #64]	@ (1001144c <MXC_DelayCheck+0x6c>)
        cbFunc = NULL;
1001140a:	603e      	str	r6, [r7, #0]
    SysTick->CTRL = ctrl_save;
1001140c:	681a      	ldr	r2, [r3, #0]
1001140e:	612a      	str	r2, [r5, #16]
    overflows = -1;
10011410:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10011414:	6023      	str	r3, [r4, #0]
        return E_NO_ERROR;
10011416:	2000      	movs	r0, #0
}
10011418:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    SysTick->CTRL = ctrl_save;
1001141a:	4a0c      	ldr	r2, [pc, #48]	@ (1001144c <MXC_DelayCheck+0x6c>)
    overflows = -1;
1001141c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
    SysTick->CTRL = ctrl_save;
10011420:	6812      	ldr	r2, [r2, #0]
10011422:	612a      	str	r2, [r5, #16]
    overflows = -1;
10011424:	6023      	str	r3, [r4, #0]
        if (cbFunc != NULL) {
10011426:	e7f6      	b.n	10011416 <MXC_DelayCheck+0x36>
        if (cbFunc != NULL) {
10011428:	4c07      	ldr	r4, [pc, #28]	@ (10011448 <MXC_DelayCheck+0x68>)
1001142a:	6823      	ldr	r3, [r4, #0]
1001142c:	2b00      	cmp	r3, #0
1001142e:	d0f2      	beq.n	10011416 <MXC_DelayCheck+0x36>
            cbFunc(E_NO_ERROR);
10011430:	2000      	movs	r0, #0
10011432:	4798      	blx	r3
            cbFunc = NULL;
10011434:	2300      	movs	r3, #0
10011436:	6023      	str	r3, [r4, #0]
10011438:	e7ed      	b.n	10011416 <MXC_DelayCheck+0x36>
    return E_BUSY;
1001143a:	f06f 0005 	mvn.w	r0, #5
}
1001143e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10011440:	20000004 	.word	0x20000004
10011444:	20000cb4 	.word	0x20000cb4
10011448:	20000cac 	.word	0x20000cac
1001144c:	20000cb0 	.word	0x20000cb0

10011450 <MXC_DelayAbort>:
{
10011450:	b510      	push	{r4, lr}
    if (cbFunc != NULL) {
10011452:	4c09      	ldr	r4, [pc, #36]	@ (10011478 <MXC_DelayAbort+0x28>)
10011454:	6823      	ldr	r3, [r4, #0]
10011456:	b123      	cbz	r3, 10011462 <MXC_DelayAbort+0x12>
        cbFunc(E_ABORT);
10011458:	f06f 000f 	mvn.w	r0, #15
1001145c:	4798      	blx	r3
        cbFunc = NULL;
1001145e:	2300      	movs	r3, #0
10011460:	6023      	str	r3, [r4, #0]
    SysTick->CTRL = ctrl_save;
10011462:	4a06      	ldr	r2, [pc, #24]	@ (1001147c <MXC_DelayAbort+0x2c>)
    overflows = -1;
10011464:	4b06      	ldr	r3, [pc, #24]	@ (10011480 <MXC_DelayAbort+0x30>)
    SysTick->CTRL = ctrl_save;
10011466:	6810      	ldr	r0, [r2, #0]
10011468:	f04f 21e0 	mov.w	r1, #3758153728	@ 0xe000e000
    overflows = -1;
1001146c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
    SysTick->CTRL = ctrl_save;
10011470:	6108      	str	r0, [r1, #16]
    overflows = -1;
10011472:	601a      	str	r2, [r3, #0]
}
10011474:	bd10      	pop	{r4, pc}
10011476:	bf00      	nop
10011478:	20000cac 	.word	0x20000cac
1001147c:	20000cb0 	.word	0x20000cb0
10011480:	20000004 	.word	0x20000004

10011484 <MXC_Delay>:

/* ************************************************************************** */
int MXC_Delay(uint32_t us)
{
10011484:	b538      	push	{r3, r4, r5, lr}
    // Check if timeout currently ongoing
    if (overflows > 0) {
10011486:	4c18      	ldr	r4, [pc, #96]	@ (100114e8 <MXC_Delay+0x64>)
10011488:	6822      	ldr	r2, [r4, #0]
1001148a:	2a00      	cmp	r2, #0
1001148c:	dc29      	bgt.n	100114e2 <MXC_Delay+0x5e>
        return E_BUSY;
    }

    // Check if there is nothing to do
    if (us == 0) {
1001148e:	b908      	cbnz	r0, 10011494 <MXC_Delay+0x10>
        return E_NO_ERROR;
10011490:	2000      	movs	r0, #0
    // Wait for the counter value
    while (SysTick->VAL > endtick) {}

    MXC_DelayAbort();
    return E_NO_ERROR;
}
10011492:	bd38      	pop	{r3, r4, r5, pc}
    MXC_DelayInit(us);
10011494:	f7ff ff48 	bl	10011328 <MXC_DelayInit>
        if (SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) {
10011498:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
    while (overflows > 0) {
1001149c:	e002      	b.n	100114a4 <MXC_Delay+0x20>
        if (SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) {
1001149e:	6913      	ldr	r3, [r2, #16]
100114a0:	03db      	lsls	r3, r3, #15
100114a2:	d41a      	bmi.n	100114da <MXC_Delay+0x56>
    while (overflows > 0) {
100114a4:	6823      	ldr	r3, [r4, #0]
100114a6:	2b00      	cmp	r3, #0
100114a8:	dcf9      	bgt.n	1001149e <MXC_Delay+0x1a>
    while (SysTick->VAL > endtick) {}
100114aa:	4b10      	ldr	r3, [pc, #64]	@ (100114ec <MXC_Delay+0x68>)
100114ac:	681a      	ldr	r2, [r3, #0]
100114ae:	f04f 21e0 	mov.w	r1, #3758153728	@ 0xe000e000
100114b2:	698b      	ldr	r3, [r1, #24]
100114b4:	4293      	cmp	r3, r2
100114b6:	d8fc      	bhi.n	100114b2 <MXC_Delay+0x2e>
    if (cbFunc != NULL) {
100114b8:	4d0d      	ldr	r5, [pc, #52]	@ (100114f0 <MXC_Delay+0x6c>)
100114ba:	682b      	ldr	r3, [r5, #0]
100114bc:	b123      	cbz	r3, 100114c8 <MXC_Delay+0x44>
        cbFunc(E_ABORT);
100114be:	f06f 000f 	mvn.w	r0, #15
100114c2:	4798      	blx	r3
        cbFunc = NULL;
100114c4:	2300      	movs	r3, #0
100114c6:	602b      	str	r3, [r5, #0]
    SysTick->CTRL = ctrl_save;
100114c8:	4b0a      	ldr	r3, [pc, #40]	@ (100114f4 <MXC_Delay+0x70>)
100114ca:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
100114ce:	6819      	ldr	r1, [r3, #0]
100114d0:	6111      	str	r1, [r2, #16]
    overflows = -1;
100114d2:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
100114d6:	6023      	str	r3, [r4, #0]
}
100114d8:	e7da      	b.n	10011490 <MXC_Delay+0xc>
            overflows--;
100114da:	6823      	ldr	r3, [r4, #0]
100114dc:	3b01      	subs	r3, #1
100114de:	6023      	str	r3, [r4, #0]
100114e0:	e7e0      	b.n	100114a4 <MXC_Delay+0x20>
        return E_BUSY;
100114e2:	f06f 0005 	mvn.w	r0, #5
}
100114e6:	bd38      	pop	{r3, r4, r5, pc}
100114e8:	20000004 	.word	0x20000004
100114ec:	20000cb4 	.word	0x20000cb4
100114f0:	20000cac 	.word	0x20000cac
100114f4:	20000cb0 	.word	0x20000cb0

100114f8 <MXC_NVIC_SetVector>:
    memcpy(&ramVectorTable, &__isr_vector, sizeof(ramVectorTable));
    SCB->VTOR = (uint32_t)&ramVectorTable;
}

void MXC_NVIC_SetVector(IRQn_Type irqn, void (*irq_handler)(void))
{
100114f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int index = irqn + 16; /* offset for externals */

    /* If not copied, do copy */
    if (SCB->VTOR != (uint32_t)&ramVectorTable) {
100114fa:	4e0f      	ldr	r6, [pc, #60]	@ (10011538 <MXC_NVIC_SetVector+0x40>)
100114fc:	4b0f      	ldr	r3, [pc, #60]	@ (1001153c <MXC_NVIC_SetVector+0x44>)
100114fe:	68b2      	ldr	r2, [r6, #8]
10011500:	429a      	cmp	r2, r3
{
10011502:	4604      	mov	r4, r0
10011504:	460d      	mov	r5, r1
    int index = irqn + 16; /* offset for externals */
10011506:	f100 0710 	add.w	r7, r0, #16
    if (SCB->VTOR != (uint32_t)&ramVectorTable) {
1001150a:	d007      	beq.n	1001151c <MXC_NVIC_SetVector+0x24>
    memcpy(&ramVectorTable, &__isr_vector, sizeof(ramVectorTable));
1001150c:	4618      	mov	r0, r3
1001150e:	490c      	ldr	r1, [pc, #48]	@ (10011540 <MXC_NVIC_SetVector+0x48>)
10011510:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
10011514:	f004 fa74 	bl	10015a00 <memcpy>
10011518:	4603      	mov	r3, r0
    SCB->VTOR = (uint32_t)&ramVectorTable;
1001151a:	60b0      	str	r0, [r6, #8]
  if ((int32_t)(IRQn) >= 0)
1001151c:	2c00      	cmp	r4, #0
        NVIC_SetRAM();
    }

    ramVectorTable[index] = irq_handler;
1001151e:	f843 5027 	str.w	r5, [r3, r7, lsl #2]
10011522:	db07      	blt.n	10011534 <MXC_NVIC_SetVector+0x3c>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
10011524:	4a07      	ldr	r2, [pc, #28]	@ (10011544 <MXC_NVIC_SetVector+0x4c>)
10011526:	0961      	lsrs	r1, r4, #5
10011528:	2301      	movs	r3, #1
1001152a:	f004 041f 	and.w	r4, r4, #31
1001152e:	40a3      	lsls	r3, r4
10011530:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
    NVIC_EnableIRQ(irqn);
}
10011534:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10011536:	bf00      	nop
10011538:	e000ed00 	.word	0xe000ed00
1001153c:	20000e00 	.word	0x20000e00
10011540:	10010000 	.word	0x10010000
10011544:	e000e100 	.word	0xe000e100

10011548 <MXC_SYS_ClockDisable>:

/* ************************************************************************** */
void MXC_SYS_ClockDisable(mxc_sys_periph_clock_t clock)
{
    /* The mxc_sys_periph_clock_t enum uses enum values that are the offset by 32 and 64 for the perckcn1 register. */
    if (clock > 63) {
10011548:	283f      	cmp	r0, #63	@ 0x3f
1001154a:	d908      	bls.n	1001155e <MXC_SYS_ClockDisable+0x16>
        clock -= 64;
        MXC_LPGCR->pclkdis |= (0x1 << clock);
1001154c:	4a0d      	ldr	r2, [pc, #52]	@ (10011584 <MXC_SYS_ClockDisable+0x3c>)
        clock -= 64;
1001154e:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->pclkdis |= (0x1 << clock);
10011550:	68d1      	ldr	r1, [r2, #12]
10011552:	b2c0      	uxtb	r0, r0
10011554:	2301      	movs	r3, #1
10011556:	4083      	lsls	r3, r0
10011558:	430b      	orrs	r3, r1
1001155a:	60d3      	str	r3, [r2, #12]
1001155c:	4770      	bx	lr
    } else if (clock > 31) {
1001155e:	281f      	cmp	r0, #31
        clock -= 32;
        MXC_GCR->pclkdis1 |= (0x1 << clock);
10011560:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
    } else if (clock > 31) {
10011564:	d907      	bls.n	10011576 <MXC_SYS_ClockDisable+0x2e>
        clock -= 32;
10011566:	3820      	subs	r0, #32
        MXC_GCR->pclkdis1 |= (0x1 << clock);
10011568:	6c91      	ldr	r1, [r2, #72]	@ 0x48
1001156a:	b2c0      	uxtb	r0, r0
1001156c:	2301      	movs	r3, #1
1001156e:	4083      	lsls	r3, r0
10011570:	430b      	orrs	r3, r1
10011572:	6493      	str	r3, [r2, #72]	@ 0x48
10011574:	4770      	bx	lr
    } else {
        MXC_GCR->pclkdis0 |= (0x1 << clock);
10011576:	6a51      	ldr	r1, [r2, #36]	@ 0x24
10011578:	2301      	movs	r3, #1
1001157a:	4083      	lsls	r3, r0
1001157c:	430b      	orrs	r3, r1
1001157e:	6253      	str	r3, [r2, #36]	@ 0x24
    }
}
10011580:	4770      	bx	lr
10011582:	bf00      	nop
10011584:	40080000 	.word	0x40080000

10011588 <MXC_SYS_ClockEnable>:

/* ************************************************************************** */
void MXC_SYS_ClockEnable(mxc_sys_periph_clock_t clock)
{
    /* The mxc_sys_periph_clock_t enum uses enum values that are the offset by 32 and 64 for the perckcn1 register. */
    if (clock > 63) {
10011588:	283f      	cmp	r0, #63	@ 0x3f
1001158a:	d909      	bls.n	100115a0 <MXC_SYS_ClockEnable+0x18>
        clock -= 64;
        MXC_LPGCR->pclkdis &= ~(0x1 << clock);
1001158c:	490e      	ldr	r1, [pc, #56]	@ (100115c8 <MXC_SYS_ClockEnable+0x40>)
        clock -= 64;
1001158e:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->pclkdis &= ~(0x1 << clock);
10011590:	68cb      	ldr	r3, [r1, #12]
10011592:	b2c0      	uxtb	r0, r0
10011594:	2201      	movs	r2, #1
10011596:	4082      	lsls	r2, r0
10011598:	ea23 0302 	bic.w	r3, r3, r2
1001159c:	60cb      	str	r3, [r1, #12]
1001159e:	4770      	bx	lr
    } else if (clock > 31) {
100115a0:	281f      	cmp	r0, #31
        clock -= 32;
        MXC_GCR->pclkdis1 &= ~(0x1 << clock);
100115a2:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
    } else if (clock > 31) {
100115a6:	d908      	bls.n	100115ba <MXC_SYS_ClockEnable+0x32>
        clock -= 32;
100115a8:	3820      	subs	r0, #32
        MXC_GCR->pclkdis1 &= ~(0x1 << clock);
100115aa:	6c8b      	ldr	r3, [r1, #72]	@ 0x48
100115ac:	b2c0      	uxtb	r0, r0
100115ae:	2201      	movs	r2, #1
100115b0:	4082      	lsls	r2, r0
100115b2:	ea23 0302 	bic.w	r3, r3, r2
100115b6:	648b      	str	r3, [r1, #72]	@ 0x48
100115b8:	4770      	bx	lr
    } else {
        MXC_GCR->pclkdis0 &= ~(0x1 << clock);
100115ba:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
100115bc:	2201      	movs	r2, #1
100115be:	4082      	lsls	r2, r0
100115c0:	ea23 0302 	bic.w	r3, r3, r2
100115c4:	624b      	str	r3, [r1, #36]	@ 0x24
    }
}
100115c6:	4770      	bx	lr
100115c8:	40080000 	.word	0x40080000

100115cc <MXC_SYS_ClockSourceEnable>:
    }
}

/******************************************************************************/
int MXC_SYS_ClockSourceEnable(mxc_sys_system_clock_t clock)
{
100115cc:	b510      	push	{r4, lr}
    switch (clock) {
100115ce:	2807      	cmp	r0, #7
100115d0:	d80a      	bhi.n	100115e8 <MXC_SYS_ClockSourceEnable+0x1c>
100115d2:	e8df f000 	tbb	[pc, r0]
100115d6:	090c      	.short	0x090c
100115d8:	47332309 	.word	0x47332309
100115dc:	045b      	.short	0x045b

    default:
        return E_BAD_PARAM;
        break;
    }
}
100115de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return MXC_GPIO_Config(&gpio_cfg_extclk);
100115e2:	4836      	ldr	r0, [pc, #216]	@ (100116bc <MXC_SYS_ClockSourceEnable+0xf0>)
100115e4:	f000 b906 	b.w	100117f4 <MXC_GPIO_Config>
    switch (clock) {
100115e8:	f06f 0002 	mvn.w	r0, #2
}
100115ec:	bd10      	pop	{r4, pc}
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ISO_EN;
100115ee:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    // We do not have access to a system tick in the RV core.
    while (!(MXC_GCR->clkctrl & ready)) {}
    return E_NO_ERROR;
#else
    // Start timeout, wait for ready
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
100115f2:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ISO_EN;
100115f4:	68a3      	ldr	r3, [r4, #8]
100115f6:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
100115fa:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
100115fc:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
10011600:	f7ff fed0 	bl	100113a4 <MXC_DelayAsync>
10011604:	e003      	b.n	1001160e <MXC_SYS_ClockSourceEnable+0x42>
    do {
        if (MXC_GCR->clkctrl & ready) {
            MXC_DelayAbort();
            return E_NO_ERROR;
        }
    } while (MXC_DelayCheck() == E_BUSY);
10011606:	f7ff feeb 	bl	100113e0 <MXC_DelayCheck>
1001160a:	3006      	adds	r0, #6
1001160c:	d152      	bne.n	100116b4 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1001160e:	68a3      	ldr	r3, [r4, #8]
10011610:	0159      	lsls	r1, r3, #5
10011612:	d5f8      	bpl.n	10011606 <MXC_SYS_ClockSourceEnable+0x3a>
            MXC_DelayAbort();
10011614:	f7ff ff1c 	bl	10011450 <MXC_DelayAbort>
            return E_NO_ERROR;
10011618:	2000      	movs	r0, #0
}
1001161a:	bd10      	pop	{r4, pc}
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1001161c:	2100      	movs	r1, #0
1001161e:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
10011622:	f7ff febf 	bl	100113a4 <MXC_DelayAsync>
        if (MXC_GCR->clkctrl & ready) {
10011626:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
1001162a:	e003      	b.n	10011634 <MXC_SYS_ClockSourceEnable+0x68>
    } while (MXC_DelayCheck() == E_BUSY);
1001162c:	f7ff fed8 	bl	100113e0 <MXC_DelayCheck>
10011630:	3006      	adds	r0, #6
10011632:	d13f      	bne.n	100116b4 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
10011634:	68a3      	ldr	r3, [r4, #8]
10011636:	009a      	lsls	r2, r3, #2
10011638:	d4ec      	bmi.n	10011614 <MXC_SYS_ClockSourceEnable+0x48>
1001163a:	e7f7      	b.n	1001162c <MXC_SYS_ClockSourceEnable+0x60>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IPO_EN;
1001163c:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
10011640:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IPO_EN;
10011642:	68a3      	ldr	r3, [r4, #8]
10011644:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
10011648:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1001164a:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1001164e:	f7ff fea9 	bl	100113a4 <MXC_DelayAsync>
10011652:	e003      	b.n	1001165c <MXC_SYS_ClockSourceEnable+0x90>
    } while (MXC_DelayCheck() == E_BUSY);
10011654:	f7ff fec4 	bl	100113e0 <MXC_DelayCheck>
10011658:	3006      	adds	r0, #6
1001165a:	d12b      	bne.n	100116b4 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1001165c:	68a3      	ldr	r3, [r4, #8]
1001165e:	011b      	lsls	r3, r3, #4
10011660:	d5f8      	bpl.n	10011654 <MXC_SYS_ClockSourceEnable+0x88>
10011662:	e7d7      	b.n	10011614 <MXC_SYS_ClockSourceEnable+0x48>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IBRO_EN;
10011664:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
10011668:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IBRO_EN;
1001166a:	68a3      	ldr	r3, [r4, #8]
1001166c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
10011670:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
10011672:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
10011676:	f7ff fe95 	bl	100113a4 <MXC_DelayAsync>
1001167a:	e003      	b.n	10011684 <MXC_SYS_ClockSourceEnable+0xb8>
    } while (MXC_DelayCheck() == E_BUSY);
1001167c:	f7ff feb0 	bl	100113e0 <MXC_DelayCheck>
10011680:	3006      	adds	r0, #6
10011682:	d117      	bne.n	100116b4 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
10011684:	68a3      	ldr	r3, [r4, #8]
10011686:	00d8      	lsls	r0, r3, #3
10011688:	d4c4      	bmi.n	10011614 <MXC_SYS_ClockSourceEnable+0x48>
1001168a:	e7f7      	b.n	1001167c <MXC_SYS_ClockSourceEnable+0xb0>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ERTCO_EN;
1001168c:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
10011690:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ERTCO_EN;
10011692:	68a3      	ldr	r3, [r4, #8]
10011694:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
10011698:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1001169a:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1001169e:	f7ff fe81 	bl	100113a4 <MXC_DelayAsync>
100116a2:	e003      	b.n	100116ac <MXC_SYS_ClockSourceEnable+0xe0>
    } while (MXC_DelayCheck() == E_BUSY);
100116a4:	f7ff fe9c 	bl	100113e0 <MXC_DelayCheck>
100116a8:	3006      	adds	r0, #6
100116aa:	d103      	bne.n	100116b4 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
100116ac:	68a3      	ldr	r3, [r4, #8]
100116ae:	019b      	lsls	r3, r3, #6
100116b0:	d4b0      	bmi.n	10011614 <MXC_SYS_ClockSourceEnable+0x48>
100116b2:	e7f7      	b.n	100116a4 <MXC_SYS_ClockSourceEnable+0xd8>

    return E_TIME_OUT;
100116b4:	f06f 0009 	mvn.w	r0, #9
}
100116b8:	bd10      	pop	{r4, pc}
100116ba:	bf00      	nop
100116bc:	10020a80 	.word	0x10020a80

100116c0 <MXC_SYS_Reset_Periph>:

/* ************************************************************************** */
void MXC_SYS_Reset_Periph(mxc_sys_reset_t reset)
{
    /* The mxc_sys_reset_t enum uses enum values that are the offset by 32 and 64 for the rst register. */
    if (reset > 63) {
100116c0:	283f      	cmp	r0, #63	@ 0x3f
100116c2:	d909      	bls.n	100116d8 <MXC_SYS_Reset_Periph+0x18>
        reset -= 64;
100116c4:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->rst = (0x1 << reset);
100116c6:	490f      	ldr	r1, [pc, #60]	@ (10011704 <MXC_SYS_Reset_Periph+0x44>)
100116c8:	b2c0      	uxtb	r0, r0
100116ca:	2201      	movs	r2, #1
100116cc:	4082      	lsls	r2, r0
100116ce:	608a      	str	r2, [r1, #8]
        while (MXC_LPGCR->rst & (0x1 << reset)) {}
100116d0:	688b      	ldr	r3, [r1, #8]
100116d2:	421a      	tst	r2, r3
100116d4:	d1fc      	bne.n	100116d0 <MXC_SYS_Reset_Periph+0x10>
100116d6:	4770      	bx	lr
    } else if (reset > 31) {
100116d8:	281f      	cmp	r0, #31
100116da:	d90a      	bls.n	100116f2 <MXC_SYS_Reset_Periph+0x32>
        reset -= 32;
100116dc:	3820      	subs	r0, #32
        MXC_GCR->rst1 = (0x1 << reset);
100116de:	b2c0      	uxtb	r0, r0
100116e0:	2201      	movs	r2, #1
100116e2:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
100116e6:	4082      	lsls	r2, r0
100116e8:	644a      	str	r2, [r1, #68]	@ 0x44
        while (MXC_GCR->rst1 & (0x1 << reset)) {}
100116ea:	6c4b      	ldr	r3, [r1, #68]	@ 0x44
100116ec:	421a      	tst	r2, r3
100116ee:	d1fc      	bne.n	100116ea <MXC_SYS_Reset_Periph+0x2a>
100116f0:	4770      	bx	lr
    } else {
        MXC_GCR->rst0 = (0x1 << reset);
100116f2:	2201      	movs	r2, #1
100116f4:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
100116f8:	4082      	lsls	r2, r0
100116fa:	604a      	str	r2, [r1, #4]
        while (MXC_GCR->rst0 & (0x1 << reset)) {}
100116fc:	684b      	ldr	r3, [r1, #4]
100116fe:	421a      	tst	r2, r3
10011700:	d1fc      	bne.n	100116fc <MXC_SYS_Reset_Periph+0x3c>
    }
}
10011702:	4770      	bx	lr
10011704:	40080000 	.word	0x40080000

10011708 <MXC_FLC_Write32>:
    uint32_t addr, aligned;
    int err;
    mxc_flc_regs_t *flc = NULL;

    // Address checked if it is byte addressable
    if (address & 0x3) {
10011708:	0782      	lsls	r2, r0, #30
1001170a:	d133      	bne.n	10011774 <MXC_FLC_Write32+0x6c>
    if ((addr >= MXC_FLASH_MEM_BASE) && (addr < (MXC_FLASH_MEM_BASE + MXC_FLASH_MEM_SIZE))) {
1001170c:	f100 4370 	add.w	r3, r0, #4026531840	@ 0xf0000000
10011710:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
10011714:	4684      	mov	ip, r0
10011716:	460a      	mov	r2, r1
10011718:	d329      	bcc.n	1001176e <MXC_FLC_Write32+0x66>
    } else if ((addr >= MXC_INFO_MEM_BASE) && (addr < (MXC_INFO_MEM_BASE + MXC_INFO_MEM_SIZE))) {
1001171a:	f1a0 5384 	sub.w	r3, r0, #276824064	@ 0x10800000
1001171e:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
10011722:	d227      	bcs.n	10011774 <MXC_FLC_Write32+0x6c>
        return E_BAD_PARAM;
    }

    // Align address to 128-bit word
    aligned = address & 0xfffffff0;
10011724:	f020 030f 	bic.w	r3, r0, #15
    } else if ((addr >= MXC_INFO_MEM_BASE) && (addr < (MXC_INFO_MEM_BASE + MXC_INFO_MEM_SIZE))) {
10011728:	f1a3 5384 	sub.w	r3, r3, #276824064	@ 0x10800000
1001172c:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
10011730:	d220      	bcs.n	10011774 <MXC_FLC_Write32+0x6c>
        *result = (addr & (MXC_INFO_MEM_SIZE - 1)) + MXC_FLASH_MEM_SIZE;
10011732:	f643 73f0 	movw	r3, #16368	@ 0x3ff0
10011736:	4003      	ands	r3, r0
10011738:	f503 2300 	add.w	r3, r3, #524288	@ 0x80000
{
1001173c:	b500      	push	{lr}

    if ((err = MXC_FLC_ME17_GetPhysicalAddress(aligned, &addr)) < E_NO_ERROR) {
        return err;
    }

    err = MXC_FLC_RevA_Write32Using128((mxc_flc_reva_regs_t *)flc, address, data, addr);
1001173e:	480f      	ldr	r0, [pc, #60]	@ (1001177c <MXC_FLC_Write32+0x74>)
{
10011740:	b083      	sub	sp, #12
    err = MXC_FLC_RevA_Write32Using128((mxc_flc_reva_regs_t *)flc, address, data, addr);
10011742:	4661      	mov	r1, ip
10011744:	f016 fa1c 	bl	10027b80 <__MXC_FLC_RevA_Write32Using128_veneer>
    MXC_GCR->sysctrl |= MXC_F_GCR_SYSCTRL_ICC0_FLUSH;
10011748:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
1001174c:	6813      	ldr	r3, [r2, #0]
1001174e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10011752:	6013      	str	r3, [r2, #0]
    while (MXC_GCR->sysctrl & MXC_F_GCR_SYSCTRL_ICC0_FLUSH) {}
10011754:	6813      	ldr	r3, [r2, #0]
10011756:	065b      	lsls	r3, r3, #25
10011758:	d4fc      	bmi.n	10011754 <MXC_FLC_Write32+0x4c>
    line = *line_addr;
1001175a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
    line = *line_addr;
1001175e:	4b08      	ldr	r3, [pc, #32]	@ (10011780 <MXC_FLC_Write32+0x78>)
    line = *line_addr;
10011760:	6812      	ldr	r2, [r2, #0]
10011762:	9201      	str	r2, [sp, #4]
    line = *line_addr;
10011764:	681b      	ldr	r3, [r3, #0]
10011766:	9301      	str	r3, [sp, #4]

    // Flush the cache
    MXC_FLC_ME17_Flash_Operation();

    return err;
}
10011768:	b003      	add	sp, #12
1001176a:	f85d fb04 	ldr.w	pc, [sp], #4
        *result = addr & (MXC_FLASH_MEM_SIZE - 1);
1001176e:	4b05      	ldr	r3, [pc, #20]	@ (10011784 <MXC_FLC_Write32+0x7c>)
10011770:	4003      	ands	r3, r0
10011772:	e7e3      	b.n	1001173c <MXC_FLC_Write32+0x34>
        return E_BAD_PARAM;
10011774:	f06f 0002 	mvn.w	r0, #2
}
10011778:	4770      	bx	lr
1001177a:	bf00      	nop
1001177c:	40029000 	.word	0x40029000
10011780:	10002000 	.word	0x10002000
10011784:	0007fff0 	.word	0x0007fff0

10011788 <MXC_FLC_Write>:
}

//******************************************************************************
int MXC_FLC_Write(uint32_t address, uint32_t length, uint32_t *buffer)
{
    return MXC_FLC_Com_Write(address, length, buffer);
10011788:	f016 b9f6 	b.w	10027b78 <__MXC_FLC_Com_Write_veneer>

1001178c <MXC_FLC_Read>:
}

//******************************************************************************
void MXC_FLC_Read(int address, void *buffer, int len)
{
    MXC_FLC_Com_Read(address, buffer, len);
1001178c:	f016 b9fc 	b.w	10027b88 <__MXC_FLC_Com_Read_veneer>

10011790 <MXC_FLC_EnableInt>:
}

//******************************************************************************
int MXC_FLC_EnableInt(uint32_t flags)
{
    return MXC_FLC_RevA_EnableInt(flags);
10011790:	f000 b800 	b.w	10011794 <MXC_FLC_RevA_EnableInt>

10011794 <MXC_FLC_RevA_EnableInt>:
//******************************************************************************
int MXC_FLC_RevA_EnableInt(uint32_t mask)
{
    mask &= (MXC_F_FLC_REVA_INTR_DONEIE | MXC_F_FLC_REVA_INTR_AFIE);

    if (!mask) {
10011794:	f410 7340 	ands.w	r3, r0, #768	@ 0x300
10011798:	d006      	beq.n	100117a8 <MXC_FLC_RevA_EnableInt+0x14>
        /* No bits set? Wasn't something we can enable. */
        return E_BAD_PARAM;
    }

    /* Apply enables and write back, preserving the flags */
    flc_int->intr |= mask;
1001179a:	4a05      	ldr	r2, [pc, #20]	@ (100117b0 <MXC_FLC_RevA_EnableInt+0x1c>)
1001179c:	6811      	ldr	r1, [r2, #0]
1001179e:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
100117a0:	4313      	orrs	r3, r2

    return E_NO_ERROR;
100117a2:	2000      	movs	r0, #0
    flc_int->intr |= mask;
100117a4:	624b      	str	r3, [r1, #36]	@ 0x24
    return E_NO_ERROR;
100117a6:	4770      	bx	lr
        return E_BAD_PARAM;
100117a8:	f06f 0002 	mvn.w	r0, #2
}
100117ac:	4770      	bx	lr
100117ae:	bf00      	nop
100117b0:	20000008 	.word	0x20000008

100117b4 <MXC_GPIO_Init>:
/* **** Globals **** */

/* **** Functions **** */
int MXC_GPIO_Init(uint32_t portmask)
{
    if (portmask & 0x1) {
100117b4:	07c1      	lsls	r1, r0, #31
{
100117b6:	b510      	push	{r4, lr}
100117b8:	4604      	mov	r4, r0
    if (portmask & 0x1) {
100117ba:	d408      	bmi.n	100117ce <MXC_GPIO_Init+0x1a>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
    }

    if (portmask & 0x2) {
100117bc:	07a2      	lsls	r2, r4, #30
100117be:	d40b      	bmi.n	100117d8 <MXC_GPIO_Init+0x24>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
    }

    if (portmask & 0x4) {
100117c0:	0763      	lsls	r3, r4, #29
100117c2:	d40e      	bmi.n	100117e2 <MXC_GPIO_Init+0x2e>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
    }

    return MXC_GPIO_Common_Init(portmask);
100117c4:	4620      	mov	r0, r4
}
100117c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_GPIO_Common_Init(portmask);
100117ca:	f001 bbbd 	b.w	10012f48 <MXC_GPIO_Common_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
100117ce:	2000      	movs	r0, #0
100117d0:	f7ff feda 	bl	10011588 <MXC_SYS_ClockEnable>
    if (portmask & 0x2) {
100117d4:	07a2      	lsls	r2, r4, #30
100117d6:	d5f3      	bpl.n	100117c0 <MXC_GPIO_Init+0xc>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
100117d8:	2001      	movs	r0, #1
100117da:	f7ff fed5 	bl	10011588 <MXC_SYS_ClockEnable>
    if (portmask & 0x4) {
100117de:	0763      	lsls	r3, r4, #29
100117e0:	d5f0      	bpl.n	100117c4 <MXC_GPIO_Init+0x10>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
100117e2:	2040      	movs	r0, #64	@ 0x40
100117e4:	f7ff fed0 	bl	10011588 <MXC_SYS_ClockEnable>
    return MXC_GPIO_Common_Init(portmask);
100117e8:	4620      	mov	r0, r4
}
100117ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_GPIO_Common_Init(portmask);
100117ee:	f001 bbab 	b.w	10012f48 <MXC_GPIO_Common_Init>
100117f2:	bf00      	nop

100117f4 <MXC_GPIO_Config>:

    return E_NO_ERROR;
}

int MXC_GPIO_Config(const mxc_gpio_cfg_t *cfg)
{
100117f4:	b570      	push	{r4, r5, r6, lr}
    int port, error;
    mxc_gpio_regs_t *gpio = cfg->port;

    port = MXC_GPIO_GET_IDX(cfg->port);
100117f6:	4b7f      	ldr	r3, [pc, #508]	@ (100119f4 <MXC_GPIO_Config+0x200>)
    mxc_gpio_regs_t *gpio = cfg->port;
100117f8:	6805      	ldr	r5, [r0, #0]
    port = MXC_GPIO_GET_IDX(cfg->port);
100117fa:	429d      	cmp	r5, r3
{
100117fc:	4604      	mov	r4, r0
    port = MXC_GPIO_GET_IDX(cfg->port);
100117fe:	d037      	beq.n	10011870 <MXC_GPIO_Config+0x7c>
10011800:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10011804:	429d      	cmp	r5, r3
10011806:	d020      	beq.n	1001184a <MXC_GPIO_Config+0x56>
10011808:	f503 23ee 	add.w	r3, r3, #487424	@ 0x77000
1001180c:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
10011810:	429d      	cmp	r5, r3
10011812:	d07f      	beq.n	10011914 <MXC_GPIO_Config+0x120>
10011814:	4878      	ldr	r0, [pc, #480]	@ (100119f8 <MXC_GPIO_Config+0x204>)
10011816:	1a28      	subs	r0, r5, r0
10011818:	fab0 f080 	clz	r0, r0
1001181c:	0940      	lsrs	r0, r0, #5
1001181e:	00c0      	lsls	r0, r0, #3

    MXC_GPIO_Init(1 << port);
10011820:	f7ff ffc8 	bl	100117b4 <MXC_GPIO_Init>

    if (cfg->port == MXC_GPIO3) {
10011824:	4b74      	ldr	r3, [pc, #464]	@ (100119f8 <MXC_GPIO_Config+0x204>)
10011826:	6822      	ldr	r2, [r4, #0]
10011828:	429a      	cmp	r2, r3
1001182a:	d015      	beq.n	10011858 <MXC_GPIO_Config+0x64>
        default:
            return E_NOT_SUPPORTED;
        }
    } else {
        // Configure alternate function
        error = MXC_GPIO_RevA_SetAF((mxc_gpio_reva_regs_t *)gpio, cfg->func, cfg->mask);
1001182c:	6862      	ldr	r2, [r4, #4]
1001182e:	7a21      	ldrb	r1, [r4, #8]
10011830:	4628      	mov	r0, r5
10011832:	f000 f94b 	bl	10011acc <MXC_GPIO_RevA_SetAF>
        if (error != E_NO_ERROR) {
10011836:	b9d0      	cbnz	r0, 1001186e <MXC_GPIO_Config+0x7a>
            return error;
        }

        // Configure the pad
        switch (cfg->pad) {
10011838:	7a63      	ldrb	r3, [r4, #9]
1001183a:	2b04      	cmp	r3, #4
1001183c:	f200 80d7 	bhi.w	100119ee <MXC_GPIO_Config+0x1fa>
10011840:	e8df f003 	tbb	[pc, r3]
10011844:	2f3e4c5a 	.word	0x2f3e4c5a
10011848:	18          	.byte	0x18
10011849:	00          	.byte	0x00
1001184a:	2002      	movs	r0, #2
    MXC_GPIO_Init(1 << port);
1001184c:	f7ff ffb2 	bl	100117b4 <MXC_GPIO_Init>
    if (cfg->port == MXC_GPIO3) {
10011850:	4b69      	ldr	r3, [pc, #420]	@ (100119f8 <MXC_GPIO_Config+0x204>)
10011852:	6822      	ldr	r2, [r4, #0]
10011854:	429a      	cmp	r2, r3
10011856:	d1e9      	bne.n	1001182c <MXC_GPIO_Config+0x38>
        switch (cfg->func) {
10011858:	7a23      	ldrb	r3, [r4, #8]
1001185a:	2b01      	cmp	r3, #1
1001185c:	f000 80bb 	beq.w	100119d6 <MXC_GPIO_Config+0x1e2>
10011860:	2b02      	cmp	r3, #2
10011862:	f000 80a5 	beq.w	100119b0 <MXC_GPIO_Config+0x1bc>
10011866:	2b00      	cmp	r3, #0
10011868:	d056      	beq.n	10011918 <MXC_GPIO_Config+0x124>
            return E_NOT_SUPPORTED;
1001186a:	f06f 0010 	mvn.w	r0, #16
        }
    }

    // Configure the vssel
    return MXC_GPIO_SetVSSEL(gpio, cfg->vssel, cfg->mask);
}
1001186e:	bd70      	pop	{r4, r5, r6, pc}
10011870:	2001      	movs	r0, #1
10011872:	e7d5      	b.n	10011820 <MXC_GPIO_Config+0x2c>
            gpio->padctrl0 &= ~cfg->mask;
10011874:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
10011876:	6862      	ldr	r2, [r4, #4]
10011878:	ea23 0302 	bic.w	r3, r3, r2
1001187c:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 |= cfg->mask;
1001187e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
10011880:	4313      	orrs	r3, r2
10011882:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps &= ~cfg->mask;
10011884:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
10011888:	ea23 0302 	bic.w	r3, r3, r2
1001188c:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
}

/* ************************************************************************** */
int MXC_GPIO_SetVSSEL(mxc_gpio_regs_t *port, mxc_gpio_vssel_t vssel, uint32_t mask)
{
    if (port == MXC_GPIO3) {
10011890:	4b59      	ldr	r3, [pc, #356]	@ (100119f8 <MXC_GPIO_Config+0x204>)
    return MXC_GPIO_SetVSSEL(gpio, cfg->vssel, cfg->mask);
10011892:	7aa1      	ldrb	r1, [r4, #10]
    if (port == MXC_GPIO3) {
10011894:	429d      	cmp	r5, r3
10011896:	d039      	beq.n	1001190c <MXC_GPIO_Config+0x118>
        }

        return E_NO_ERROR;
    }

    return MXC_GPIO_RevA_SetVSSEL((mxc_gpio_reva_regs_t *)port, vssel, mask);
10011898:	4628      	mov	r0, r5
}
1001189a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_GPIO_RevA_SetVSSEL((mxc_gpio_reva_regs_t *)port, vssel, mask);
1001189e:	f000 b8ff 	b.w	10011aa0 <MXC_GPIO_RevA_SetVSSEL>
            gpio->padctrl0 |= cfg->mask;
100118a2:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
100118a4:	6862      	ldr	r2, [r4, #4]
100118a6:	4313      	orrs	r3, r2
100118a8:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
100118aa:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
100118ac:	ea23 0302 	bic.w	r3, r3, r2
100118b0:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps &= ~cfg->mask;
100118b2:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
100118b6:	ea23 0302 	bic.w	r3, r3, r2
100118ba:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
100118be:	e7e7      	b.n	10011890 <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 &= ~cfg->mask;
100118c0:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
100118c2:	6862      	ldr	r2, [r4, #4]
100118c4:	ea23 0302 	bic.w	r3, r3, r2
100118c8:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 |= cfg->mask;
100118ca:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
100118cc:	4313      	orrs	r3, r2
100118ce:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps |= cfg->mask;
100118d0:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
100118d4:	4313      	orrs	r3, r2
100118d6:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
100118da:	e7d9      	b.n	10011890 <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 |= cfg->mask;
100118dc:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
100118de:	6862      	ldr	r2, [r4, #4]
100118e0:	4313      	orrs	r3, r2
100118e2:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
100118e4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
100118e6:	ea23 0302 	bic.w	r3, r3, r2
100118ea:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps |= cfg->mask;
100118ec:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
100118f0:	4313      	orrs	r3, r2
100118f2:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
100118f6:	e7cb      	b.n	10011890 <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 &= ~cfg->mask;
100118f8:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
100118fa:	6862      	ldr	r2, [r4, #4]
100118fc:	ea23 0302 	bic.w	r3, r3, r2
10011900:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
10011902:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
10011904:	ea23 0302 	bic.w	r3, r3, r2
10011908:	666b      	str	r3, [r5, #100]	@ 0x64
            break;
1001190a:	e7c1      	b.n	10011890 <MXC_GPIO_Config+0x9c>
        if (vssel == MXC_GPIO_VSSEL_VDDIO) {
1001190c:	2900      	cmp	r1, #0
1001190e:	d0ac      	beq.n	1001186a <MXC_GPIO_Config+0x76>
        return E_NO_ERROR;
10011910:	2000      	movs	r0, #0
}
10011912:	bd70      	pop	{r4, r5, r6, pc}
10011914:	2004      	movs	r0, #4
10011916:	e783      	b.n	10011820 <MXC_GPIO_Config+0x2c>
            MXC_MCR->gpio3_ctrl &= ~(P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask));
10011918:	6863      	ldr	r3, [r4, #4]
1001191a:	4938      	ldr	r1, [pc, #224]	@ (100119fc <MXC_GPIO_Config+0x208>)
1001191c:	0058      	lsls	r0, r3, #1
1001191e:	011a      	lsls	r2, r3, #4
10011920:	6a0e      	ldr	r6, [r1, #32]
10011922:	f000 0002 	and.w	r0, r0, #2
10011926:	f002 0220 	and.w	r2, r2, #32
1001192a:	4302      	orrs	r2, r0
1001192c:	ea26 0202 	bic.w	r2, r6, r2
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
10011930:	620a      	str	r2, [r1, #32]
            MXC_MCR->outen &= ~(SQWAVE_OUT_EN(cfg->mask) | PDOWN_OUT_EN(cfg->mask));
10011932:	688a      	ldr	r2, [r1, #8]
10011934:	f3c3 0340 	ubfx	r3, r3, #1, #1
10011938:	4303      	orrs	r3, r0
1001193a:	ea22 0303 	bic.w	r3, r2, r3
1001193e:	608b      	str	r3, [r1, #8]
        switch (cfg->pad) {
10011940:	7a63      	ldrb	r3, [r4, #9]
10011942:	2b04      	cmp	r3, #4
10011944:	d891      	bhi.n	1001186a <MXC_GPIO_Config+0x76>
10011946:	e8df f003 	tbb	[pc, r3]
1001194a:	1b26      	.short	0x1b26
1001194c:	1b03      	.short	0x1b03
1001194e:	03          	.byte	0x03
1001194f:	00          	.byte	0x00
            MXC_MCR->gpio3_ctrl &= ~(P30_DATA_OUT(cfg->mask) | P31_DATA_OUT(cfg->mask));
10011950:	6862      	ldr	r2, [r4, #4]
10011952:	492a      	ldr	r1, [pc, #168]	@ (100119fc <MXC_GPIO_Config+0x208>)
10011954:	00d3      	lsls	r3, r2, #3
10011956:	6a08      	ldr	r0, [r1, #32]
10011958:	f003 0310 	and.w	r3, r3, #16
1001195c:	f002 0601 	and.w	r6, r2, #1
10011960:	4333      	orrs	r3, r6
10011962:	ea20 0303 	bic.w	r3, r0, r3
10011966:	620b      	str	r3, [r1, #32]
            MXC_MCR->gpio3_ctrl &= ~(P30_PULL_DIS(cfg->mask) | P31_PULL_DIS(cfg->mask));
10011968:	0156      	lsls	r6, r2, #5
1001196a:	0093      	lsls	r3, r2, #2
1001196c:	6a08      	ldr	r0, [r1, #32]
1001196e:	f003 0304 	and.w	r3, r3, #4
10011972:	f006 0640 	and.w	r6, r6, #64	@ 0x40
10011976:	4333      	orrs	r3, r6
10011978:	ea20 0303 	bic.w	r3, r0, r3
1001197c:	620b      	str	r3, [r1, #32]
            break;
1001197e:	e787      	b.n	10011890 <MXC_GPIO_Config+0x9c>
            MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(cfg->mask) | P31_DATA_OUT(cfg->mask);
10011980:	491e      	ldr	r1, [pc, #120]	@ (100119fc <MXC_GPIO_Config+0x208>)
10011982:	6862      	ldr	r2, [r4, #4]
10011984:	6a0e      	ldr	r6, [r1, #32]
10011986:	00d3      	lsls	r3, r2, #3
10011988:	f002 0001 	and.w	r0, r2, #1
1001198c:	f003 0310 	and.w	r3, r3, #16
10011990:	4330      	orrs	r0, r6
10011992:	4303      	orrs	r3, r0
10011994:	e7e7      	b.n	10011966 <MXC_GPIO_Config+0x172>
            MXC_MCR->gpio3_ctrl |= P30_PULL_DIS(cfg->mask) | P31_PULL_DIS(cfg->mask);
10011996:	6862      	ldr	r2, [r4, #4]
10011998:	4818      	ldr	r0, [pc, #96]	@ (100119fc <MXC_GPIO_Config+0x208>)
1001199a:	0093      	lsls	r3, r2, #2
1001199c:	0151      	lsls	r1, r2, #5
1001199e:	6a06      	ldr	r6, [r0, #32]
100119a0:	f003 0304 	and.w	r3, r3, #4
100119a4:	f001 0140 	and.w	r1, r1, #64	@ 0x40
100119a8:	430b      	orrs	r3, r1
100119aa:	4333      	orrs	r3, r6
100119ac:	6203      	str	r3, [r0, #32]
            break;
100119ae:	e76f      	b.n	10011890 <MXC_GPIO_Config+0x9c>
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
100119b0:	6863      	ldr	r3, [r4, #4]
100119b2:	4912      	ldr	r1, [pc, #72]	@ (100119fc <MXC_GPIO_Config+0x208>)
100119b4:	0058      	lsls	r0, r3, #1
100119b6:	011a      	lsls	r2, r3, #4
100119b8:	6a0e      	ldr	r6, [r1, #32]
100119ba:	f000 0002 	and.w	r0, r0, #2
100119be:	f002 0220 	and.w	r2, r2, #32
100119c2:	4302      	orrs	r2, r0
100119c4:	4332      	orrs	r2, r6
100119c6:	620a      	str	r2, [r1, #32]
            MXC_MCR->outen |= SQWAVE_OUT_EN(cfg->mask) | PDOWN_OUT_EN(cfg->mask);
100119c8:	688a      	ldr	r2, [r1, #8]
100119ca:	f3c3 0340 	ubfx	r3, r3, #1, #1
100119ce:	4303      	orrs	r3, r0
100119d0:	4313      	orrs	r3, r2
100119d2:	608b      	str	r3, [r1, #8]
            break;
100119d4:	e7b4      	b.n	10011940 <MXC_GPIO_Config+0x14c>
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
100119d6:	6863      	ldr	r3, [r4, #4]
100119d8:	4908      	ldr	r1, [pc, #32]	@ (100119fc <MXC_GPIO_Config+0x208>)
100119da:	0058      	lsls	r0, r3, #1
100119dc:	011a      	lsls	r2, r3, #4
100119de:	6a0e      	ldr	r6, [r1, #32]
100119e0:	f000 0002 	and.w	r0, r0, #2
100119e4:	f002 0220 	and.w	r2, r2, #32
100119e8:	4302      	orrs	r2, r0
100119ea:	4332      	orrs	r2, r6
100119ec:	e7a0      	b.n	10011930 <MXC_GPIO_Config+0x13c>
        switch (cfg->pad) {
100119ee:	f06f 0002 	mvn.w	r0, #2
}
100119f2:	bd70      	pop	{r4, r5, r6, pc}
100119f4:	40008000 	.word	0x40008000
100119f8:	40080600 	.word	0x40080600
100119fc:	40006c00 	.word	0x40006c00

10011a00 <MXC_GPIO_OutSet>:
    if (port == MXC_GPIO3) {
10011a00:	4a08      	ldr	r2, [pc, #32]	@ (10011a24 <MXC_GPIO_OutSet+0x24>)
10011a02:	4290      	cmp	r0, r2
10011a04:	d001      	beq.n	10011a0a <MXC_GPIO_OutSet+0xa>
    MXC_GPIO_RevA_OutSet((mxc_gpio_reva_regs_t *)port, mask);
10011a06:	f000 b843 	b.w	10011a90 <MXC_GPIO_RevA_OutSet>
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
10011a0a:	4807      	ldr	r0, [pc, #28]	@ (10011a28 <MXC_GPIO_OutSet+0x28>)
{
10011a0c:	b410      	push	{r4}
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
10011a0e:	6a04      	ldr	r4, [r0, #32]
10011a10:	00ca      	lsls	r2, r1, #3
10011a12:	f001 0101 	and.w	r1, r1, #1
10011a16:	4321      	orrs	r1, r4
10011a18:	f002 0310 	and.w	r3, r2, #16
10011a1c:	430b      	orrs	r3, r1
}
10011a1e:	bc10      	pop	{r4}
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
10011a20:	6203      	str	r3, [r0, #32]
}
10011a22:	4770      	bx	lr
10011a24:	40080600 	.word	0x40080600
10011a28:	40006c00 	.word	0x40006c00

10011a2c <MXC_GPIO_OutClr>:
    if (port == MXC_GPIO3) {
10011a2c:	4a09      	ldr	r2, [pc, #36]	@ (10011a54 <MXC_GPIO_OutClr+0x28>)
10011a2e:	4290      	cmp	r0, r2
10011a30:	d001      	beq.n	10011a36 <MXC_GPIO_OutClr+0xa>
    MXC_GPIO_RevA_OutClr((mxc_gpio_reva_regs_t *)port, mask);
10011a32:	f000 b82f 	b.w	10011a94 <MXC_GPIO_RevA_OutClr>
{
10011a36:	b410      	push	{r4}
        MXC_MCR->gpio3_ctrl &= ~(P30_DATA_OUT(mask) | P31_DATA_OUT(mask));
10011a38:	4c07      	ldr	r4, [pc, #28]	@ (10011a58 <MXC_GPIO_OutClr+0x2c>)
10011a3a:	00ca      	lsls	r2, r1, #3
10011a3c:	6a20      	ldr	r0, [r4, #32]
10011a3e:	f002 0210 	and.w	r2, r2, #16
10011a42:	f001 0101 	and.w	r1, r1, #1
10011a46:	ea42 0301 	orr.w	r3, r2, r1
10011a4a:	ea20 0303 	bic.w	r3, r0, r3
10011a4e:	6223      	str	r3, [r4, #32]
}
10011a50:	bc10      	pop	{r4}
10011a52:	4770      	bx	lr
10011a54:	40080600 	.word	0x40080600
10011a58:	40006c00 	.word	0x40006c00

10011a5c <MXC_GPIO_Handler>:
    MXC_GPIO_Common_Handler(port);
10011a5c:	f001 ba86 	b.w	10012f6c <MXC_GPIO_Common_Handler>

10011a60 <MXC_GPIO_ClearFlags>:
    if (port == MXC_GPIO3) {
10011a60:	4a03      	ldr	r2, [pc, #12]	@ (10011a70 <MXC_GPIO_ClearFlags+0x10>)
10011a62:	4290      	cmp	r0, r2
10011a64:	d001      	beq.n	10011a6a <MXC_GPIO_ClearFlags+0xa>
    MXC_GPIO_RevA_ClearFlags((mxc_gpio_reva_regs_t *)port, flags);
10011a66:	f000 b817 	b.w	10011a98 <MXC_GPIO_RevA_ClearFlags>
        MXC_PWRSEQ->lpwkst3 = flags;
10011a6a:	4a02      	ldr	r2, [pc, #8]	@ (10011a74 <MXC_GPIO_ClearFlags+0x14>)
10011a6c:	61d1      	str	r1, [r2, #28]
}
10011a6e:	4770      	bx	lr
10011a70:	40080600 	.word	0x40080600
10011a74:	40006800 	.word	0x40006800

10011a78 <MXC_GPIO_GetFlags>:
    if (port == MXC_GPIO3) {
10011a78:	4b03      	ldr	r3, [pc, #12]	@ (10011a88 <MXC_GPIO_GetFlags+0x10>)
10011a7a:	4298      	cmp	r0, r3
10011a7c:	d001      	beq.n	10011a82 <MXC_GPIO_GetFlags+0xa>
    return MXC_GPIO_RevA_GetFlags((mxc_gpio_reva_regs_t *)port);
10011a7e:	f000 b80d 	b.w	10011a9c <MXC_GPIO_RevA_GetFlags>
        return MXC_PWRSEQ->lpwkst3;
10011a82:	4b02      	ldr	r3, [pc, #8]	@ (10011a8c <MXC_GPIO_GetFlags+0x14>)
10011a84:	69d8      	ldr	r0, [r3, #28]
}
10011a86:	4770      	bx	lr
10011a88:	40080600 	.word	0x40080600
10011a8c:	40006800 	.word	0x40006800

10011a90 <MXC_GPIO_RevA_OutSet>:
    return (port->in & mask);
}

void MXC_GPIO_RevA_OutSet(mxc_gpio_reva_regs_t *port, uint32_t mask)
{
    port->out_set = mask;
10011a90:	61c1      	str	r1, [r0, #28]
}
10011a92:	4770      	bx	lr

10011a94 <MXC_GPIO_RevA_OutClr>:

void MXC_GPIO_RevA_OutClr(mxc_gpio_reva_regs_t *port, uint32_t mask)
{
    port->out_clr = mask;
10011a94:	6201      	str	r1, [r0, #32]
}
10011a96:	4770      	bx	lr

10011a98 <MXC_GPIO_RevA_ClearFlags>:
    port->inten_clr = mask;
}

void MXC_GPIO_RevA_ClearFlags(mxc_gpio_reva_regs_t *port, uint32_t flags)
{
    port->intfl_clr = flags;
10011a98:	6481      	str	r1, [r0, #72]	@ 0x48
}
10011a9a:	4770      	bx	lr

10011a9c <MXC_GPIO_RevA_GetFlags>:

uint32_t MXC_GPIO_RevA_GetFlags(mxc_gpio_reva_regs_t *port)
{
    return port->intfl;
10011a9c:	6c00      	ldr	r0, [r0, #64]	@ 0x40
}
10011a9e:	4770      	bx	lr

10011aa0 <MXC_GPIO_RevA_SetVSSEL>:

int MXC_GPIO_RevA_SetVSSEL(mxc_gpio_reva_regs_t *port, mxc_gpio_vssel_t vssel, uint32_t mask)
{
    // Configure the vssel
    switch (vssel) {
10011aa0:	b159      	cbz	r1, 10011aba <MXC_GPIO_RevA_SetVSSEL+0x1a>
10011aa2:	2901      	cmp	r1, #1
10011aa4:	d106      	bne.n	10011ab4 <MXC_GPIO_RevA_SetVSSEL+0x14>
    case MXC_GPIO_VSSEL_VDDIO:
        port->vssel &= ~mask;
        break;

    case MXC_GPIO_VSSEL_VDDIOH:
        port->vssel |= mask;
10011aa6:	f8d0 30c0 	ldr.w	r3, [r0, #192]	@ 0xc0
10011aaa:	4313      	orrs	r3, r2
10011aac:	f8c0 30c0 	str.w	r3, [r0, #192]	@ 0xc0

    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
10011ab0:	2000      	movs	r0, #0
}
10011ab2:	4770      	bx	lr
    switch (vssel) {
10011ab4:	f06f 0002 	mvn.w	r0, #2
10011ab8:	4770      	bx	lr
        port->vssel &= ~mask;
10011aba:	f8d0 30c0 	ldr.w	r3, [r0, #192]	@ 0xc0
10011abe:	ea23 0302 	bic.w	r3, r3, r2
10011ac2:	f8c0 30c0 	str.w	r3, [r0, #192]	@ 0xc0
    return E_NO_ERROR;
10011ac6:	2000      	movs	r0, #0
}
10011ac8:	4770      	bx	lr
10011aca:	bf00      	nop

10011acc <MXC_GPIO_RevA_SetAF>:

int MXC_GPIO_RevA_SetAF(mxc_gpio_reva_regs_t *port, mxc_gpio_func_t func, uint32_t mask)
{
    //This is required for new devices going forward.
    port->inen |= mask;
10011acc:	6b03      	ldr	r3, [r0, #48]	@ 0x30
10011ace:	4313      	orrs	r3, r2
10011ad0:	6303      	str	r3, [r0, #48]	@ 0x30

    //Switch to I/O mode first
    port->en0_set = mask;
10011ad2:	6042      	str	r2, [r0, #4]

    switch (func) {
10011ad4:	2905      	cmp	r1, #5
10011ad6:	d82c      	bhi.n	10011b32 <MXC_GPIO_RevA_SetAF+0x66>
10011ad8:	e8df f001 	tbb	[pc, r1]
10011adc:	1f19120a 	.word	0x1f19120a
10011ae0:	0325      	.short	0x0325
        port->en1_clr = mask;
        port->en0_clr = mask;
        break;

    case MXC_GPIO_FUNC_ALT4:
        port->en3_clr = mask;
10011ae2:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_set = mask;
10011ae6:	6782      	str	r2, [r0, #120]	@ 0x78
        port->en1_set = mask;
10011ae8:	66c2      	str	r2, [r0, #108]	@ 0x6c
        port->en0_clr = mask;
10011aea:	6082      	str	r2, [r0, #8]
#endif
    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
10011aec:	2000      	movs	r0, #0
10011aee:	4770      	bx	lr
        port->outen_clr = mask;
10011af0:	6142      	str	r2, [r0, #20]
        port->en0_set = mask;
10011af2:	6042      	str	r2, [r0, #4]
        port->en1_clr = mask;
10011af4:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en2_clr = mask;
10011af6:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en3_clr = mask;
10011af8:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
    return E_NO_ERROR;
10011afc:	2000      	movs	r0, #0
10011afe:	4770      	bx	lr
        port->outen_set = mask;
10011b00:	6102      	str	r2, [r0, #16]
        port->en0_set = mask;
10011b02:	6042      	str	r2, [r0, #4]
        port->en1_clr = mask;
10011b04:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en2_clr = mask;
10011b06:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en3_clr = mask;
10011b08:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        break;
10011b0c:	e7ee      	b.n	10011aec <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
10011b0e:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_clr = mask;
10011b12:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en1_clr = mask;
10011b14:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en0_clr = mask;
10011b16:	6082      	str	r2, [r0, #8]
        break;
10011b18:	e7e8      	b.n	10011aec <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
10011b1a:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_clr = mask;
10011b1e:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en1_set = mask;
10011b20:	66c2      	str	r2, [r0, #108]	@ 0x6c
        port->en0_clr = mask;
10011b22:	6082      	str	r2, [r0, #8]
        break;
10011b24:	e7e2      	b.n	10011aec <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
10011b26:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_set = mask;
10011b2a:	6782      	str	r2, [r0, #120]	@ 0x78
        port->en1_clr = mask;
10011b2c:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en0_clr = mask;
10011b2e:	6082      	str	r2, [r0, #8]
        break;
10011b30:	e7dc      	b.n	10011aec <MXC_GPIO_RevA_SetAF+0x20>
    switch (func) {
10011b32:	f06f 0002 	mvn.w	r0, #2
}
10011b36:	4770      	bx	lr

10011b38 <MXC_I2C_SetSlaveAddr>:
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
}

int MXC_I2C_SetSlaveAddr(mxc_i2c_regs_t *i2c, unsigned int slaveAddr, int idx)
{
    return MXC_I2C_RevA_SetSlaveAddr((mxc_i2c_reva_regs_t *)i2c, slaveAddr, idx);
10011b38:	f000 b8fa 	b.w	10011d30 <MXC_I2C_RevA_SetSlaveAddr>

10011b3c <MXC_I2C_Shutdown>:
}

int MXC_I2C_Shutdown(mxc_i2c_regs_t *i2c)
{
10011b3c:	b508      	push	{r3, lr}
    // Configure GPIO for I2C
    if (i2c == MXC_I2C0) {
10011b3e:	4b11      	ldr	r3, [pc, #68]	@ (10011b84 <MXC_I2C_Shutdown+0x48>)
10011b40:	4298      	cmp	r0, r3
10011b42:	d00d      	beq.n	10011b60 <MXC_I2C_Shutdown+0x24>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C0);
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_I2C0);
    } else if (i2c == MXC_I2C1) {
10011b44:	4b10      	ldr	r3, [pc, #64]	@ (10011b88 <MXC_I2C_Shutdown+0x4c>)
10011b46:	4298      	cmp	r0, r3
10011b48:	d011      	beq.n	10011b6e <MXC_I2C_Shutdown+0x32>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C1);
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C1);
    } else if (i2c == MXC_I2C2) {
10011b4a:	4b10      	ldr	r3, [pc, #64]	@ (10011b8c <MXC_I2C_Shutdown+0x50>)
10011b4c:	4298      	cmp	r0, r3
10011b4e:	d115      	bne.n	10011b7c <MXC_I2C_Shutdown+0x40>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C2);
10011b50:	2038      	movs	r0, #56	@ 0x38
10011b52:	f7ff fcf9 	bl	10011548 <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C2);
10011b56:	2034      	movs	r0, #52	@ 0x34
10011b58:	f7ff fdb2 	bl	100116c0 <MXC_SYS_Reset_Periph>
    } else {
        return E_NO_DEVICE;
    }

    return E_NO_ERROR;
10011b5c:	2000      	movs	r0, #0
}
10011b5e:	bd08      	pop	{r3, pc}
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C0);
10011b60:	200d      	movs	r0, #13
10011b62:	f7ff fcf1 	bl	10011548 <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_I2C0);
10011b66:	2010      	movs	r0, #16
10011b68:	f7ff fdaa 	bl	100116c0 <MXC_SYS_Reset_Periph>
10011b6c:	e7f6      	b.n	10011b5c <MXC_I2C_Shutdown+0x20>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C1);
10011b6e:	201c      	movs	r0, #28
10011b70:	f7ff fcea 	bl	10011548 <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C1);
10011b74:	2020      	movs	r0, #32
10011b76:	f7ff fda3 	bl	100116c0 <MXC_SYS_Reset_Periph>
10011b7a:	e7ef      	b.n	10011b5c <MXC_I2C_Shutdown+0x20>
        return E_NO_DEVICE;
10011b7c:	f06f 0001 	mvn.w	r0, #1
}
10011b80:	bd08      	pop	{r3, pc}
10011b82:	bf00      	nop
10011b84:	4001d000 	.word	0x4001d000
10011b88:	4001e000 	.word	0x4001e000
10011b8c:	4001f000 	.word	0x4001f000

10011b90 <MXC_I2C_Init>:
    if (i2c == NULL) {
10011b90:	b3c0      	cbz	r0, 10011c04 <MXC_I2C_Init+0x74>
{
10011b92:	b570      	push	{r4, r5, r6, lr}
10011b94:	4604      	mov	r4, r0
    MXC_I2C_Shutdown(i2c); // Clear everything out
10011b96:	460d      	mov	r5, r1
10011b98:	4616      	mov	r6, r2
10011b9a:	f7ff ffcf 	bl	10011b3c <MXC_I2C_Shutdown>
    if (i2c == MXC_I2C0) {
10011b9e:	4b1b      	ldr	r3, [pc, #108]	@ (10011c0c <MXC_I2C_Init+0x7c>)
10011ba0:	429c      	cmp	r4, r3
10011ba2:	d012      	beq.n	10011bca <MXC_I2C_Init+0x3a>
    } else if (i2c == MXC_I2C1) {
10011ba4:	4b1a      	ldr	r3, [pc, #104]	@ (10011c10 <MXC_I2C_Init+0x80>)
10011ba6:	429c      	cmp	r4, r3
10011ba8:	d01c      	beq.n	10011be4 <MXC_I2C_Init+0x54>
    } else if (i2c == MXC_I2C2) {
10011baa:	4b1a      	ldr	r3, [pc, #104]	@ (10011c14 <MXC_I2C_Init+0x84>)
10011bac:	429c      	cmp	r4, r3
10011bae:	d126      	bne.n	10011bfe <MXC_I2C_Init+0x6e>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C2);
10011bb0:	2038      	movs	r0, #56	@ 0x38
10011bb2:	f7ff fce9 	bl	10011588 <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c2);
10011bb6:	4818      	ldr	r0, [pc, #96]	@ (10011c18 <MXC_I2C_Init+0x88>)
10011bb8:	f7ff fe1c 	bl	100117f4 <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
10011bbc:	4632      	mov	r2, r6
10011bbe:	4629      	mov	r1, r5
10011bc0:	4620      	mov	r0, r4
}
10011bc2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
10011bc6:	f000 b84d 	b.w	10011c64 <MXC_I2C_RevA_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C0);
10011bca:	200d      	movs	r0, #13
10011bcc:	f7ff fcdc 	bl	10011588 <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c0);
10011bd0:	4812      	ldr	r0, [pc, #72]	@ (10011c1c <MXC_I2C_Init+0x8c>)
10011bd2:	f7ff fe0f 	bl	100117f4 <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
10011bd6:	4632      	mov	r2, r6
10011bd8:	4629      	mov	r1, r5
10011bda:	4620      	mov	r0, r4
}
10011bdc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
10011be0:	f000 b840 	b.w	10011c64 <MXC_I2C_RevA_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C1);
10011be4:	201c      	movs	r0, #28
10011be6:	f7ff fccf 	bl	10011588 <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c1);
10011bea:	480d      	ldr	r0, [pc, #52]	@ (10011c20 <MXC_I2C_Init+0x90>)
10011bec:	f7ff fe02 	bl	100117f4 <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
10011bf0:	4632      	mov	r2, r6
10011bf2:	4629      	mov	r1, r5
10011bf4:	4620      	mov	r0, r4
}
10011bf6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
10011bfa:	f000 b833 	b.w	10011c64 <MXC_I2C_RevA_Init>
        return E_NO_DEVICE;
10011bfe:	f06f 0001 	mvn.w	r0, #1
}
10011c02:	bd70      	pop	{r4, r5, r6, pc}
        return E_NULL_PTR;
10011c04:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10011c08:	4770      	bx	lr
10011c0a:	bf00      	nop
10011c0c:	4001d000 	.word	0x4001d000
10011c10:	4001e000 	.word	0x4001e000
10011c14:	4001f000 	.word	0x4001f000
10011c18:	10020a5c 	.word	0x10020a5c
10011c1c:	10020a74 	.word	0x10020a74
10011c20:	10020a68 	.word	0x10020a68

10011c24 <MXC_I2C_SetFrequency>:
    return E_NO_ERROR;
}

int MXC_I2C_SetFrequency(mxc_i2c_regs_t *i2c, unsigned int hz)
{
    return MXC_I2C_RevA_SetFrequency((mxc_i2c_reva_regs_t *)i2c, hz);
10011c24:	f000 b89e 	b.w	10011d64 <MXC_I2C_RevA_SetFrequency>

10011c28 <MXC_I2C_GetFrequency>:
}

int MXC_I2C_GetFrequency(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_GetFrequency((mxc_i2c_reva_regs_t *)i2c);
10011c28:	f000 b8ec 	b.w	10011e04 <MXC_I2C_RevA_GetFrequency>

10011c2c <MXC_I2C_Start>:
/* ************************************************************************* */
/* Low-level functions                                                       */
/* ************************************************************************* */
int MXC_I2C_Start(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_Start((mxc_i2c_reva_regs_t *)i2c);
10011c2c:	f000 b8fa 	b.w	10011e24 <MXC_I2C_RevA_Start>

10011c30 <MXC_I2C_Stop>:
}

int MXC_I2C_Stop(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_Stop((mxc_i2c_reva_regs_t *)i2c);
10011c30:	f000 b90c 	b.w	10011e4c <MXC_I2C_RevA_Stop>

10011c34 <MXC_I2C_ReadRXFIFO>:
    return MXC_I2C_RevA_Read((mxc_i2c_reva_regs_t *)i2c, bytes, len, ack);
}

int MXC_I2C_ReadRXFIFO(mxc_i2c_regs_t *i2c, volatile unsigned char *bytes, unsigned int len)
{
    return MXC_I2C_RevA_ReadRXFIFO((mxc_i2c_reva_regs_t *)i2c, bytes, len);
10011c34:	f000 b918 	b.w	10011e68 <MXC_I2C_RevA_ReadRXFIFO>

10011c38 <MXC_I2C_WriteTXFIFO>:
    return MXC_I2C_RevA_GetRXFIFOAvailable((mxc_i2c_reva_regs_t *)i2c);
}

int MXC_I2C_WriteTXFIFO(mxc_i2c_regs_t *i2c, volatile unsigned char *bytes, unsigned int len)
{
    return MXC_I2C_RevA_WriteTXFIFO((mxc_i2c_reva_regs_t *)i2c, bytes, len);
10011c38:	f000 b934 	b.w	10011ea4 <MXC_I2C_RevA_WriteTXFIFO>

10011c3c <MXC_I2C_ClearRXFIFO>:
    return MXC_I2C_RevA_GetTXFIFOAvailable((mxc_i2c_reva_regs_t *)i2c);
}

void MXC_I2C_ClearRXFIFO(mxc_i2c_regs_t *i2c)
{
    MXC_I2C_RevA_ClearRXFIFO((mxc_i2c_reva_regs_t *)i2c);
10011c3c:	f000 b94a 	b.w	10011ed4 <MXC_I2C_RevA_ClearRXFIFO>

10011c40 <MXC_I2C_ClearTXFIFO>:
}

void MXC_I2C_ClearTXFIFO(mxc_i2c_regs_t *i2c)
{
    MXC_I2C_RevA_ClearTXFIFO((mxc_i2c_reva_regs_t *)i2c);
10011c40:	f000 b950 	b.w	10011ee4 <MXC_I2C_RevA_ClearTXFIFO>

10011c44 <MXC_I2C_ClearFlags>:
    return MXC_I2C_RevA_GetFlags((mxc_i2c_reva_regs_t *)i2c, flags0, flags1);
}

void MXC_I2C_ClearFlags(mxc_i2c_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    MXC_I2C_RevA_ClearFlags((mxc_i2c_reva_regs_t *)i2c, flags0, flags1);
10011c44:	f000 b956 	b.w	10011ef4 <MXC_I2C_RevA_ClearFlags>

10011c48 <MXC_I2C_Recover>:
    return MXC_I2C_RevA_GetTimeout((mxc_i2c_reva_regs_t *)i2c);
}

int MXC_I2C_Recover(mxc_i2c_regs_t *i2c, unsigned int retries)
{
    return MXC_I2C_RevA_Recover((mxc_i2c_reva_regs_t *)i2c, retries);
10011c48:	f000 b958 	b.w	10011efc <MXC_I2C_RevA_Recover>

10011c4c <MXC_I2C_MasterTransaction>:
/* Transaction level functions                                               */
/* ************************************************************************* */

int MXC_I2C_MasterTransaction(mxc_i2c_req_t *req)
{
    return MXC_I2C_RevA_MasterTransaction((mxc_i2c_reva_req_t *)req);
10011c4c:	f000 b9c2 	b.w	10011fd4 <MXC_I2C_RevA_MasterTransaction>

10011c50 <MXC_I2C_SetRXThreshold>:
        (mxc_i2c_reva_regs_t *)i2c, (mxc_i2c_reva_slave_handler_t)callback, interruptCheck);
}

int MXC_I2C_SetRXThreshold(mxc_i2c_regs_t *i2c, unsigned int numBytes)
{
    return MXC_I2C_RevA_SetRXThreshold((mxc_i2c_reva_regs_t *)i2c, numBytes);
10011c50:	f000 ba90 	b.w	10012174 <MXC_I2C_RevA_SetRXThreshold>

10011c54 <MXC_I2C_SetTXThreshold>:
    return MXC_I2C_RevA_GetRXThreshold((mxc_i2c_reva_regs_t *)i2c);
}

int MXC_I2C_SetTXThreshold(mxc_i2c_regs_t *i2c, unsigned int numBytes)
{
    return MXC_I2C_RevA_SetTXThreshold((mxc_i2c_reva_regs_t *)i2c, numBytes);
10011c54:	f000 ba9e 	b.w	10012194 <MXC_I2C_RevA_SetTXThreshold>

10011c58 <MXC_I2C_AsyncHandler>:
    MXC_I2C_RevA_AbortAsync((mxc_i2c_reva_regs_t *)i2c);
}

void MXC_I2C_AsyncHandler(mxc_i2c_regs_t *i2c)
{
    MXC_I2C_RevA_AsyncHandler((mxc_i2c_reva_regs_t *)i2c, interruptCheck);
10011c58:	4b01      	ldr	r3, [pc, #4]	@ (10011c60 <MXC_I2C_AsyncHandler+0x8>)
10011c5a:	6819      	ldr	r1, [r3, #0]
10011c5c:	f000 be08 	b.w	10012870 <MXC_I2C_RevA_AsyncHandler>
10011c60:	2000000c 	.word	0x2000000c

10011c64 <MXC_I2C_RevA_Init>:

/* ************************************************************************* */
/* Control/Configuration functions                                           */
/* ************************************************************************* */
int MXC_I2C_RevA_Init(mxc_i2c_reva_regs_t *i2c, int masterMode, unsigned int slaveAddr)
{
10011c64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int err;

    if (i2c == NULL) {
10011c66:	2800      	cmp	r0, #0
10011c68:	d057      	beq.n	10011d1a <MXC_I2C_RevA_Init+0xb6>
        return E_NULL_PTR;
    }

    if ((err = MXC_I2C_Recover((mxc_i2c_regs_t *)i2c, 16)) != E_NO_ERROR) {
10011c6a:	460f      	mov	r7, r1
10011c6c:	2110      	movs	r1, #16
10011c6e:	4615      	mov	r5, r2
10011c70:	4604      	mov	r4, r0
10011c72:	f7ff ffe9 	bl	10011c48 <MXC_I2C_Recover>
10011c76:	4606      	mov	r6, r0
10011c78:	b108      	cbz	r0, 10011c7e <MXC_I2C_RevA_Init+0x1a>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
    }

    return E_NO_ERROR;
}
10011c7a:	4630      	mov	r0, r6
10011c7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
10011c7e:	6823      	ldr	r3, [r4, #0]
10011c80:	f043 0301 	orr.w	r3, r3, #1
10011c84:	6023      	str	r3, [r4, #0]
    MXC_I2C_ClearRXFIFO((mxc_i2c_regs_t *)i2c);
10011c86:	4620      	mov	r0, r4
10011c88:	f7ff ffd8 	bl	10011c3c <MXC_I2C_ClearRXFIFO>
    MXC_I2C_ClearTXFIFO((mxc_i2c_regs_t *)i2c);
10011c8c:	4620      	mov	r0, r4
10011c8e:	f7ff ffd7 	bl	10011c40 <MXC_I2C_ClearTXFIFO>
    MXC_I2C_SetTXThreshold((mxc_i2c_regs_t *)i2c, 2); // set TX threshold to 2 bytes
10011c92:	2102      	movs	r1, #2
10011c94:	4620      	mov	r0, r4
10011c96:	f7ff ffdd 	bl	10011c54 <MXC_I2C_SetTXThreshold>
    MXC_I2C_SetRXThreshold((mxc_i2c_regs_t *)i2c, 6); // set RX threshold to 6 bytes
10011c9a:	2106      	movs	r1, #6
10011c9c:	4620      	mov	r0, r4
10011c9e:	f7ff ffd7 	bl	10011c50 <MXC_I2C_SetRXThreshold>
    if (!masterMode) {
10011ca2:	b1df      	cbz	r7, 10011cdc <MXC_I2C_RevA_Init+0x78>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
10011ca4:	6823      	ldr	r3, [r4, #0]
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
10011ca6:	4a1e      	ldr	r2, [pc, #120]	@ (10011d20 <MXC_I2C_RevA_Init+0xbc>)
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
10011ca8:	f043 0302 	orr.w	r3, r3, #2
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
10011cac:	4294      	cmp	r4, r2
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
10011cae:	6023      	str	r3, [r4, #0]
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
10011cb0:	d02f      	beq.n	10011d12 <MXC_I2C_RevA_Init+0xae>
10011cb2:	4b1c      	ldr	r3, [pc, #112]	@ (10011d24 <MXC_I2C_RevA_Init+0xc0>)
10011cb4:	429c      	cmp	r4, r3
10011cb6:	d00f      	beq.n	10011cd8 <MXC_I2C_RevA_Init+0x74>
10011cb8:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10011cbc:	429c      	cmp	r4, r3
10011cbe:	bf14      	ite	ne
10011cc0:	f04f 34ff 	movne.w	r4, #4294967295	@ 0xffffffff
10011cc4:	2402      	moveq	r4, #2
10011cc6:	4b18      	ldr	r3, [pc, #96]	@ (10011d28 <MXC_I2C_RevA_Init+0xc4>)
10011cc8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
10011ccc:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
10011cd0:	2201      	movs	r2, #1
10011cd2:	605a      	str	r2, [r3, #4]
}
10011cd4:	4630      	mov	r0, r6
10011cd6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
10011cd8:	2401      	movs	r4, #1
10011cda:	e7f4      	b.n	10011cc6 <MXC_I2C_RevA_Init+0x62>
        MXC_I2C_SetSlaveAddr((mxc_i2c_regs_t *)i2c, slaveAddr, 0);
10011cdc:	463a      	mov	r2, r7
10011cde:	4629      	mov	r1, r5
10011ce0:	4620      	mov	r0, r4
10011ce2:	f7ff ff29 	bl	10011b38 <MXC_I2C_SetSlaveAddr>
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 0;
10011ce6:	4b0e      	ldr	r3, [pc, #56]	@ (10011d20 <MXC_I2C_RevA_Init+0xbc>)
10011ce8:	429c      	cmp	r4, r3
10011cea:	d009      	beq.n	10011d00 <MXC_I2C_RevA_Init+0x9c>
10011cec:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10011cf0:	429c      	cmp	r4, r3
10011cf2:	d010      	beq.n	10011d16 <MXC_I2C_RevA_Init+0xb2>
10011cf4:	4f0d      	ldr	r7, [pc, #52]	@ (10011d2c <MXC_I2C_RevA_Init+0xc8>)
10011cf6:	42bc      	cmp	r4, r7
10011cf8:	bf14      	ite	ne
10011cfa:	f04f 37ff 	movne.w	r7, #4294967295	@ 0xffffffff
10011cfe:	2702      	moveq	r7, #2
10011d00:	4b09      	ldr	r3, [pc, #36]	@ (10011d28 <MXC_I2C_RevA_Init+0xc4>)
10011d02:	eb07 0147 	add.w	r1, r7, r7, lsl #1
10011d06:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
10011d0a:	2200      	movs	r2, #0
10011d0c:	605a      	str	r2, [r3, #4]
}
10011d0e:	4630      	mov	r0, r6
10011d10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
10011d12:	4634      	mov	r4, r6
10011d14:	e7d7      	b.n	10011cc6 <MXC_I2C_RevA_Init+0x62>
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 0;
10011d16:	2701      	movs	r7, #1
10011d18:	e7f2      	b.n	10011d00 <MXC_I2C_RevA_Init+0x9c>
        return E_NULL_PTR;
10011d1a:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
10011d1e:	e7ac      	b.n	10011c7a <MXC_I2C_RevA_Init+0x16>
10011d20:	4001d000 	.word	0x4001d000
10011d24:	4001e000 	.word	0x4001e000
10011d28:	20001008 	.word	0x20001008
10011d2c:	4001f000 	.word	0x4001f000

10011d30 <MXC_I2C_RevA_SetSlaveAddr>:

int MXC_I2C_RevA_SetSlaveAddr(mxc_i2c_reva_regs_t *i2c, unsigned int slaveAddr, int idx)
{
    if (i2c == NULL) {
10011d30:	4603      	mov	r3, r0
10011d32:	b1a0      	cbz	r0, 10011d5e <MXC_I2C_RevA_SetSlaveAddr+0x2e>
        return E_NULL_PTR;
    }

    if (idx != 0) {
10011d34:	b96a      	cbnz	r2, 10011d52 <MXC_I2C_RevA_SetSlaveAddr+0x22>
        // Multiple slaves are not supported yet
        return E_NOT_SUPPORTED;
    }

    if (slaveAddr > MXC_F_I2C_REVA_SLAVE_ADDR) {
10011d36:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
10011d3a:	d20d      	bcs.n	10011d58 <MXC_I2C_RevA_SetSlaveAddr+0x28>
        return E_BAD_PARAM;
    }

    i2c->slave = 0;

    if (slaveAddr > MXC_I2C_REVA_MAX_ADDR_WIDTH) {
10011d3c:	297f      	cmp	r1, #127	@ 0x7f
    i2c->slave = 0;
10011d3e:	64c2      	str	r2, [r0, #76]	@ 0x4c
        // Set for 10bit addressing mode
        i2c->slave = MXC_F_I2C_REVA_SLAVE_EXT_ADDR_EN;
10011d40:	bf84      	itt	hi
10011d42:	f44f 4200 	movhi.w	r2, #32768	@ 0x8000
10011d46:	64c2      	strhi	r2, [r0, #76]	@ 0x4c
    }

    i2c->slave |= slaveAddr;
10011d48:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
10011d4a:	430a      	orrs	r2, r1

    return E_NO_ERROR;
10011d4c:	2000      	movs	r0, #0
    i2c->slave |= slaveAddr;
10011d4e:	64da      	str	r2, [r3, #76]	@ 0x4c
    return E_NO_ERROR;
10011d50:	4770      	bx	lr
        return E_NOT_SUPPORTED;
10011d52:	f06f 0010 	mvn.w	r0, #16
10011d56:	4770      	bx	lr
        return E_BAD_PARAM;
10011d58:	f06f 0002 	mvn.w	r0, #2
}
10011d5c:	4770      	bx	lr
        return E_NULL_PTR;
10011d5e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10011d62:	4770      	bx	lr

10011d64 <MXC_I2C_RevA_SetFrequency>:

int MXC_I2C_RevA_SetFrequency(mxc_i2c_reva_regs_t *i2c, unsigned int hz)
{
    unsigned int ticksTotal, hiClks, lowClks;

    if (i2c == NULL) {
10011d64:	2800      	cmp	r0, #0
10011d66:	d03f      	beq.n	10011de8 <MXC_I2C_RevA_SetFrequency+0x84>
{
10011d68:	b410      	push	{r4}
        return E_NULL_PTR;
    }

    if (hz > MXC_I2C_REVA_FASTPLUS_SPEED && hz <= MXC_I2C_REVA_HIGH_SPEED) {
10011d6a:	4a21      	ldr	r2, [pc, #132]	@ (10011df0 <MXC_I2C_RevA_SetFrequency+0x8c>)
10011d6c:	f5a1 2374 	sub.w	r3, r1, #999424	@ 0xf4000
10011d70:	f46f 7410 	mvn.w	r4, #576	@ 0x240
10011d74:	4423      	add	r3, r4
10011d76:	4293      	cmp	r3, r2
10011d78:	d313      	bcc.n	10011da2 <MXC_I2C_RevA_SetFrequency+0x3e>

        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;

        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz

    } else if (hz > MXC_I2C_REVA_HIGH_SPEED) {
10011d7a:	4b1e      	ldr	r3, [pc, #120]	@ (10011df4 <MXC_I2C_RevA_SetFrequency+0x90>)
10011d7c:	4299      	cmp	r1, r3
10011d7e:	d82f      	bhi.n	10011de0 <MXC_I2C_RevA_SetFrequency+0x7c>
        ticksTotal = PeripheralClock / hz;
10011d80:	4b1d      	ldr	r3, [pc, #116]	@ (10011df8 <MXC_I2C_RevA_SetFrequency+0x94>)
        return E_BAD_PARAM;
    }

    // Calculate the period of SCL, 50% duty cycle
    ticksTotal = PeripheralClock / hz;
10011d82:	681b      	ldr	r3, [r3, #0]
10011d84:	085b      	lsrs	r3, r3, #1
10011d86:	fbb3 f3f1 	udiv	r3, r3, r1
    hiClks = (ticksTotal >> 1) - 1;
10011d8a:	085b      	lsrs	r3, r3, #1
    if (ticksTotal % 1) {
        hiClks++;
    }

    // Check for maximum/minimum supported speeds
    if ((hiClks > MXC_F_I2C_REVA_CLKHI_HI) || (lowClks == 0)) {
10011d8c:	1e9a      	subs	r2, r3, #2
10011d8e:	f5b2 7fff 	cmp.w	r2, #510	@ 0x1fe
    hiClks = (ticksTotal >> 1) - 1;
10011d92:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
    if ((hiClks > MXC_F_I2C_REVA_CLKHI_HI) || (lowClks == 0)) {
10011d96:	d823      	bhi.n	10011de0 <MXC_I2C_RevA_SetFrequency+0x7c>
        return E_BAD_PARAM;
    }

    i2c->clklo = lowClks & MXC_F_I2C_REVA_CLKLO_LO;
10011d98:	6343      	str	r3, [r0, #52]	@ 0x34
    i2c->clkhi = hiClks & MXC_F_I2C_REVA_CLKHI_HI;

    // Return the actual speed set, since it won't be exactly what's requested
    return MXC_I2C_GetFrequency((mxc_i2c_regs_t *)i2c);
}
10011d9a:	bc10      	pop	{r4}
    i2c->clkhi = hiClks & MXC_F_I2C_REVA_CLKHI_HI;
10011d9c:	6383      	str	r3, [r0, #56]	@ 0x38
    return MXC_I2C_GetFrequency((mxc_i2c_regs_t *)i2c);
10011d9e:	f7ff bf43 	b.w	10011c28 <MXC_I2C_GetFrequency>
        ticksTotal = PeripheralClock / hz;
10011da2:	4b15      	ldr	r3, [pc, #84]	@ (10011df8 <MXC_I2C_RevA_SetFrequency+0x94>)
        hsLowClks = (ticksTotal * 2) / 3 - 1;
10011da4:	4c15      	ldr	r4, [pc, #84]	@ (10011dfc <MXC_I2C_RevA_SetFrequency+0x98>)
        ticksTotal = PeripheralClock / hz;
10011da6:	681b      	ldr	r3, [r3, #0]
10011da8:	085b      	lsrs	r3, r3, #1
10011daa:	fbb3 f1f1 	udiv	r1, r3, r1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
10011dae:	004a      	lsls	r2, r1, #1
        hsHiClks = ticksTotal / 3 - 1;
10011db0:	fba4 c101 	umull	ip, r1, r4, r1
10011db4:	0849      	lsrs	r1, r1, #1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
10011db6:	fba4 4202 	umull	r4, r2, r4, r2
        hsHiClks = ticksTotal / 3 - 1;
10011dba:	3901      	subs	r1, #1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
10011dbc:	0852      	lsrs	r2, r2, #1
        if ((hsHiClks > 0xF) || (hsLowClks > 0xF)) {
10011dbe:	290f      	cmp	r1, #15
        hsLowClks = (ticksTotal * 2) / 3 - 1;
10011dc0:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
        if ((hsHiClks > 0xF) || (hsLowClks > 0xF)) {
10011dc4:	dc0c      	bgt.n	10011de0 <MXC_I2C_RevA_SetFrequency+0x7c>
10011dc6:	2a0f      	cmp	r2, #15
10011dc8:	dc0a      	bgt.n	10011de0 <MXC_I2C_RevA_SetFrequency+0x7c>
        hsHiClks = (hsHiClks << MXC_F_I2C_REVA_HSCLK_HI_POS) & MXC_F_I2C_REVA_HSCLK_HI;
10011dca:	0209      	lsls	r1, r1, #8
10011dcc:	b289      	uxth	r1, r1
        i2c->hsclk = (hsLowClks | hsHiClks);
10011dce:	b2d2      	uxtb	r2, r2
10011dd0:	430a      	orrs	r2, r1
10011dd2:	63c2      	str	r2, [r0, #60]	@ 0x3c
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;
10011dd4:	6802      	ldr	r2, [r0, #0]
        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz
10011dd6:	490a      	ldr	r1, [pc, #40]	@ (10011e00 <MXC_I2C_RevA_SetFrequency+0x9c>)
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;
10011dd8:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
10011ddc:	6002      	str	r2, [r0, #0]
        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz
10011dde:	e7d2      	b.n	10011d86 <MXC_I2C_RevA_SetFrequency+0x22>
            return E_BAD_PARAM;
10011de0:	f06f 0002 	mvn.w	r0, #2
}
10011de4:	bc10      	pop	{r4}
10011de6:	4770      	bx	lr
        return E_NULL_PTR;
10011de8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10011dec:	4770      	bx	lr
10011dee:	bf00      	nop
10011df0:	00249f00 	.word	0x00249f00
10011df4:	0033e140 	.word	0x0033e140
10011df8:	20001768 	.word	0x20001768
10011dfc:	aaaaaaab 	.word	0xaaaaaaab
10011e00:	00061a80 	.word	0x00061a80

10011e04 <MXC_I2C_RevA_GetFrequency>:
    unsigned int sclCycles = 0;

    // Calculate the speed based on what we've written into registers
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);

    return PeripheralClock / sclCycles;
10011e04:	4906      	ldr	r1, [pc, #24]	@ (10011e20 <MXC_I2C_RevA_GetFrequency+0x1c>)
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);
10011e06:	6b43      	ldr	r3, [r0, #52]	@ 0x34
10011e08:	6b82      	ldr	r2, [r0, #56]	@ 0x38
    return PeripheralClock / sclCycles;
10011e0a:	6808      	ldr	r0, [r1, #0]
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);
10011e0c:	f3c2 0208 	ubfx	r2, r2, #0, #9
10011e10:	f3c3 0308 	ubfx	r3, r3, #0, #9
10011e14:	4413      	add	r3, r2
    return PeripheralClock / sclCycles;
10011e16:	0840      	lsrs	r0, r0, #1
}
10011e18:	fbb0 f0f3 	udiv	r0, r0, r3
10011e1c:	4770      	bx	lr
10011e1e:	bf00      	nop
10011e20:	20001768 	.word	0x20001768

10011e24 <MXC_I2C_RevA_Start>:
/* ************************************************************************* */
/* Low-level functions                                                       */
/* ************************************************************************* */
int MXC_I2C_RevA_Start(mxc_i2c_reva_regs_t *i2c)
{
    if (i2c == NULL) {
10011e24:	b170      	cbz	r0, 10011e44 <MXC_I2C_RevA_Start+0x20>
        return E_NULL_PTR;
    }

    // If we have an incomplete transfer, we need to do a restart
    if (i2c->mstctrl & MXC_F_I2C_REVA_MSTCTRL_START) {
10011e26:	6b03      	ldr	r3, [r0, #48]	@ 0x30
10011e28:	f013 0f01 	tst.w	r3, #1
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
10011e2c:	6b03      	ldr	r3, [r0, #48]	@ 0x30
    if (i2c->mstctrl & MXC_F_I2C_REVA_MSTCTRL_START) {
10011e2e:	d104      	bne.n	10011e3a <MXC_I2C_RevA_Start+0x16>
    } else {
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_START; // No check for start generation
10011e30:	f043 0301 	orr.w	r3, r3, #1
10011e34:	6303      	str	r3, [r0, #48]	@ 0x30
    }

    return E_NO_ERROR;
10011e36:	2000      	movs	r0, #0
10011e38:	4770      	bx	lr
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
10011e3a:	f043 0302 	orr.w	r3, r3, #2
10011e3e:	6303      	str	r3, [r0, #48]	@ 0x30
    return E_NO_ERROR;
10011e40:	2000      	movs	r0, #0
10011e42:	4770      	bx	lr
        return E_NULL_PTR;
10011e44:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10011e48:	4770      	bx	lr
10011e4a:	bf00      	nop

10011e4c <MXC_I2C_RevA_Stop>:

int MXC_I2C_RevA_Stop(mxc_i2c_reva_regs_t *i2c)
{
    if (i2c == NULL) {
10011e4c:	b148      	cbz	r0, 10011e62 <MXC_I2C_RevA_Stop+0x16>
        return E_NULL_PTR;
    }

    i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_STOP;
10011e4e:	6b03      	ldr	r3, [r0, #48]	@ 0x30
10011e50:	f043 0304 	orr.w	r3, r3, #4
10011e54:	6303      	str	r3, [r0, #48]	@ 0x30

    while (i2c->mstctrl & MXC_F_I2C_REVA_MSTCTRL_STOP) {}
10011e56:	6b03      	ldr	r3, [r0, #48]	@ 0x30
10011e58:	f013 0304 	ands.w	r3, r3, #4
10011e5c:	d1fb      	bne.n	10011e56 <MXC_I2C_RevA_Stop+0xa>

    return E_NO_ERROR;
10011e5e:	4618      	mov	r0, r3
10011e60:	4770      	bx	lr
        return E_NULL_PTR;
10011e62:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10011e66:	4770      	bx	lr

10011e68 <MXC_I2C_RevA_ReadRXFIFO>:
int MXC_I2C_RevA_ReadRXFIFO(mxc_i2c_reva_regs_t *i2c, volatile unsigned char *bytes,
                            unsigned int len)
{
    unsigned read = 0;

    if ((i2c == NULL) || (bytes == NULL)) {
10011e68:	b1c8      	cbz	r0, 10011e9e <MXC_I2C_RevA_ReadRXFIFO+0x36>
10011e6a:	b1c1      	cbz	r1, 10011e9e <MXC_I2C_RevA_ReadRXFIFO+0x36>
        return E_NULL_PTR;
    }

    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
10011e6c:	b1aa      	cbz	r2, 10011e9a <MXC_I2C_RevA_ReadRXFIFO+0x32>
{
10011e6e:	b500      	push	{lr}
    unsigned read = 0;
10011e70:	2300      	movs	r3, #0
        bytes[read++] = i2c->fifo;
10011e72:	f101 3eff 	add.w	lr, r1, #4294967295	@ 0xffffffff
10011e76:	e007      	b.n	10011e88 <MXC_I2C_RevA_ReadRXFIFO+0x20>
10011e78:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
10011e7a:	3301      	adds	r3, #1
10011e7c:	fa5f fc81 	uxtb.w	ip, r1
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
10011e80:	429a      	cmp	r2, r3
        bytes[read++] = i2c->fifo;
10011e82:	f80e c003 	strb.w	ip, [lr, r3]
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
10011e86:	d005      	beq.n	10011e94 <MXC_I2C_RevA_ReadRXFIFO+0x2c>
10011e88:	6841      	ldr	r1, [r0, #4]
10011e8a:	0789      	lsls	r1, r1, #30
10011e8c:	d5f4      	bpl.n	10011e78 <MXC_I2C_RevA_ReadRXFIFO+0x10>
    }

    return read;
10011e8e:	4618      	mov	r0, r3
}
10011e90:	f85d fb04 	ldr.w	pc, [sp], #4
    return read;
10011e94:	4610      	mov	r0, r2
}
10011e96:	f85d fb04 	ldr.w	pc, [sp], #4
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
10011e9a:	4610      	mov	r0, r2
10011e9c:	4770      	bx	lr
        return E_NULL_PTR;
10011e9e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10011ea2:	4770      	bx	lr

10011ea4 <MXC_I2C_RevA_WriteTXFIFO>:
int MXC_I2C_RevA_WriteTXFIFO(mxc_i2c_reva_regs_t *i2c, volatile unsigned char *bytes,
                             unsigned int len)
{
    unsigned written = 0;

    if ((i2c == NULL) || (bytes == NULL)) {
10011ea4:	b198      	cbz	r0, 10011ece <MXC_I2C_RevA_WriteTXFIFO+0x2a>
10011ea6:	b191      	cbz	r1, 10011ece <MXC_I2C_RevA_WriteTXFIFO+0x2a>
        return E_NULL_PTR;
    }

    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
10011ea8:	b17a      	cbz	r2, 10011eca <MXC_I2C_RevA_WriteTXFIFO+0x26>
    unsigned written = 0;
10011eaa:	2300      	movs	r3, #0
        i2c->fifo = bytes[written++];
10011eac:	f101 3cff 	add.w	ip, r1, #4294967295	@ 0xffffffff
10011eb0:	e006      	b.n	10011ec0 <MXC_I2C_RevA_WriteTXFIFO+0x1c>
10011eb2:	3301      	adds	r3, #1
    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
10011eb4:	429a      	cmp	r2, r3
        i2c->fifo = bytes[written++];
10011eb6:	f81c 1003 	ldrb.w	r1, [ip, r3]
10011eba:	b2c9      	uxtb	r1, r1
10011ebc:	62c1      	str	r1, [r0, #44]	@ 0x2c
    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
10011ebe:	d004      	beq.n	10011eca <MXC_I2C_RevA_WriteTXFIFO+0x26>
10011ec0:	6841      	ldr	r1, [r0, #4]
10011ec2:	06c9      	lsls	r1, r1, #27
10011ec4:	d5f5      	bpl.n	10011eb2 <MXC_I2C_RevA_WriteTXFIFO+0xe>
    }

    return written;
10011ec6:	4618      	mov	r0, r3
10011ec8:	4770      	bx	lr
10011eca:	4610      	mov	r0, r2
10011ecc:	4770      	bx	lr
        return E_NULL_PTR;
10011ece:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10011ed2:	4770      	bx	lr

10011ed4 <MXC_I2C_RevA_ClearRXFIFO>:
           ((i2c->txctrl1 & MXC_F_I2C_REVA_TXCTRL1_LVL) >> MXC_F_I2C_REVA_TXCTRL1_LVL_POS);
}

void MXC_I2C_RevA_ClearRXFIFO(mxc_i2c_reva_regs_t *i2c)
{
    i2c->rxctrl0 |= MXC_F_I2C_REVA_RXCTRL0_FLUSH;
10011ed4:	69c3      	ldr	r3, [r0, #28]
10011ed6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10011eda:	61c3      	str	r3, [r0, #28]

    while (i2c->rxctrl0 & MXC_F_I2C_REVA_RXCTRL0_FLUSH) {}
10011edc:	69c3      	ldr	r3, [r0, #28]
10011ede:	061b      	lsls	r3, r3, #24
10011ee0:	d4fc      	bmi.n	10011edc <MXC_I2C_RevA_ClearRXFIFO+0x8>
}
10011ee2:	4770      	bx	lr

10011ee4 <MXC_I2C_RevA_ClearTXFIFO>:

void MXC_I2C_RevA_ClearTXFIFO(mxc_i2c_reva_regs_t *i2c)
{
    i2c->txctrl0 |= MXC_F_I2C_REVA_TXCTRL0_FLUSH;
10011ee4:	6a43      	ldr	r3, [r0, #36]	@ 0x24
10011ee6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10011eea:	6243      	str	r3, [r0, #36]	@ 0x24

    while (i2c->txctrl0 & MXC_F_I2C_REVA_TXCTRL0_FLUSH) {}
10011eec:	6a43      	ldr	r3, [r0, #36]	@ 0x24
10011eee:	061b      	lsls	r3, r3, #24
10011ef0:	d4fc      	bmi.n	10011eec <MXC_I2C_RevA_ClearTXFIFO+0x8>
}
10011ef2:	4770      	bx	lr

10011ef4 <MXC_I2C_RevA_ClearFlags>:
    return E_NO_ERROR;
}

void MXC_I2C_RevA_ClearFlags(mxc_i2c_reva_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    i2c->intfl0 = flags0;
10011ef4:	6081      	str	r1, [r0, #8]
    i2c->intfl1 = flags1;
10011ef6:	6102      	str	r2, [r0, #16]
}
10011ef8:	4770      	bx	lr
10011efa:	bf00      	nop

10011efc <MXC_I2C_RevA_Recover>:
int MXC_I2C_RevA_Recover(mxc_i2c_reva_regs_t *i2c, unsigned int retries)
{
    int err;
    unsigned int i;

    if (i2c == NULL) {
10011efc:	2800      	cmp	r0, #0
10011efe:	d065      	beq.n	10011fcc <MXC_I2C_RevA_Recover+0xd0>
        return E_NULL_PTR;
    }

    err = E_COMM_ERR;

    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
10011f00:	6803      	ldr	r3, [r0, #0]
10011f02:	f043 0301 	orr.w	r3, r3, #1
{
10011f06:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
10011f0a:	6003      	str	r3, [r0, #0]
    int swBit = i2c->ctrl & MXC_F_I2C_REVA_CTRL_BB_MODE;
10011f0c:	6807      	ldr	r7, [r0, #0]

    if (i2c == NULL) {
        return E_NULL_PTR;
    }

    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_BB_MODE;
10011f0e:	6803      	ldr	r3, [r0, #0]
10011f10:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
10011f14:	460e      	mov	r6, r1
10011f16:	4604      	mov	r4, r0
10011f18:	f407 6780 	and.w	r7, r7, #1024	@ 0x400
10011f1c:	6003      	str	r3, [r0, #0]

    // Follow the procedure detailed in the header file
    // Delay 10uS between each step to give the line/slaves time to react
    for (i = 0; i < retries; i++) {
10011f1e:	2900      	cmp	r1, #0
10011f20:	d043      	beq.n	10011faa <MXC_I2C_RevA_Recover+0xae>
10011f22:	2500      	movs	r5, #0
10011f24:	e02b      	b.n	10011f7e <MXC_I2C_RevA_Recover+0x82>
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
10011f26:	f7ff faad 	bl	10011484 <MXC_Delay>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_SDA_OUT;
10011f2a:	6823      	ldr	r3, [r4, #0]
10011f2c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
10011f30:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
10011f32:	200a      	movs	r0, #10
10011f34:	f7ff faa6 	bl	10011484 <MXC_Delay>

        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA) {
10011f38:	6823      	ldr	r3, [r4, #0]
10011f3a:	f413 7800 	ands.w	r8, r3, #512	@ 0x200
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
10011f3e:	f04f 000a 	mov.w	r0, #10
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA) {
10011f42:	d12b      	bne.n	10011f9c <MXC_I2C_RevA_Recover+0xa0>
        MXC_Delay(10);
10011f44:	f7ff fa9e 	bl	10011484 <MXC_Delay>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SDA_OUT;
10011f48:	6823      	ldr	r3, [r4, #0]
10011f4a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10011f4e:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
10011f50:	200a      	movs	r0, #10
10011f52:	f7ff fa97 	bl	10011484 <MXC_Delay>

        if (!(i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA)) {
10011f56:	6823      	ldr	r3, [r4, #0]
10011f58:	059a      	lsls	r2, r3, #22
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
10011f5a:	f04f 000a 	mov.w	r0, #10
        if (!(i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA)) {
10011f5e:	d51d      	bpl.n	10011f9c <MXC_I2C_RevA_Recover+0xa0>
        MXC_Delay(10);
10011f60:	f7ff fa90 	bl	10011484 <MXC_Delay>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT;
10011f64:	6823      	ldr	r3, [r4, #0]
10011f66:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10011f6a:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
10011f6c:	200a      	movs	r0, #10
10011f6e:	f7ff fa89 	bl	10011484 <MXC_Delay>

        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
10011f72:	6823      	ldr	r3, [r4, #0]
10011f74:	05db      	lsls	r3, r3, #23
10011f76:	d425      	bmi.n	10011fc4 <MXC_I2C_RevA_Recover+0xc8>
    for (i = 0; i < retries; i++) {
10011f78:	3501      	adds	r5, #1
10011f7a:	42ae      	cmp	r6, r5
10011f7c:	d015      	beq.n	10011faa <MXC_I2C_RevA_Recover+0xae>
        MXC_Delay(10);
10011f7e:	200a      	movs	r0, #10
10011f80:	f7ff fa80 	bl	10011484 <MXC_Delay>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_SCL_OUT;
10011f84:	6823      	ldr	r3, [r4, #0]
10011f86:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
10011f8a:	6023      	str	r3, [r4, #0]
        MXC_Delay(10);
10011f8c:	200a      	movs	r0, #10
10011f8e:	f7ff fa79 	bl	10011484 <MXC_Delay>
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
10011f92:	6823      	ldr	r3, [r4, #0]
10011f94:	05d9      	lsls	r1, r3, #23
        MXC_Delay(10);
10011f96:	f04f 000a 	mov.w	r0, #10
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
10011f9a:	d5c4      	bpl.n	10011f26 <MXC_I2C_RevA_Recover+0x2a>
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
10011f9c:	6823      	ldr	r3, [r4, #0]
    for (i = 0; i < retries; i++) {
10011f9e:	3501      	adds	r5, #1
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
10011fa0:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
    for (i = 0; i < retries; i++) {
10011fa4:	42ae      	cmp	r6, r5
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
10011fa6:	6023      	str	r3, [r4, #0]
    for (i = 0; i < retries; i++) {
10011fa8:	d1e9      	bne.n	10011f7e <MXC_I2C_RevA_Recover+0x82>
    err = E_COMM_ERR;
10011faa:	f06f 0008 	mvn.w	r0, #8
            err = E_NO_ERROR; // We have control
            break;
        }
    }

    if (swBit == 0) {
10011fae:	b91f      	cbnz	r7, 10011fb8 <MXC_I2C_RevA_Recover+0xbc>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_BB_MODE;
10011fb0:	6823      	ldr	r3, [r4, #0]
10011fb2:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
10011fb6:	6023      	str	r3, [r4, #0]
    }

    i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_EN;
10011fb8:	6823      	ldr	r3, [r4, #0]
10011fba:	f023 0301 	bic.w	r3, r3, #1
10011fbe:	6023      	str	r3, [r4, #0]

    return err;
}
10011fc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            err = E_NO_ERROR; // We have control
10011fc4:	4640      	mov	r0, r8
    if (swBit == 0) {
10011fc6:	2f00      	cmp	r7, #0
10011fc8:	d1f6      	bne.n	10011fb8 <MXC_I2C_RevA_Recover+0xbc>
10011fca:	e7f1      	b.n	10011fb0 <MXC_I2C_RevA_Recover+0xb4>
        return E_NULL_PTR;
10011fcc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10011fd0:	4770      	bx	lr
10011fd2:	bf00      	nop

10011fd4 <MXC_I2C_RevA_MasterTransaction>:
/* ************************************************************************* */
/* Transaction level functions                                               */
/* ************************************************************************* */

int MXC_I2C_RevA_MasterTransaction(mxc_i2c_reva_req_t *req)
{
10011fd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    mxc_i2c_reva_regs_t *i2c = req->i2c; // Save off pointer for faster access
10011fd8:	e9d0 4300 	ldrd	r4, r3, [r0]
    unsigned int written = 0;
    unsigned int read = 0;

    if (req->addr > MXC_I2C_REVA_MAX_ADDR_WIDTH) {
10011fdc:	2b7f      	cmp	r3, #127	@ 0x7f
10011fde:	f200 80c3 	bhi.w	10012168 <MXC_I2C_RevA_MasterTransaction+0x194>
        return E_NOT_SUPPORTED;
    }

    if (MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c) < 0) {
10011fe2:	4b63      	ldr	r3, [pc, #396]	@ (10012170 <MXC_I2C_RevA_MasterTransaction+0x19c>)
10011fe4:	429c      	cmp	r4, r3
10011fe6:	4605      	mov	r5, r0
10011fe8:	d008      	beq.n	10011ffc <MXC_I2C_RevA_MasterTransaction+0x28>
10011fea:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10011fee:	429c      	cmp	r4, r3
10011ff0:	d004      	beq.n	10011ffc <MXC_I2C_RevA_MasterTransaction+0x28>
10011ff2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10011ff6:	429c      	cmp	r4, r3
10011ff8:	f040 80b0 	bne.w	1001215c <MXC_I2C_RevA_MasterTransaction+0x188>
        return E_BAD_PARAM;
    }

    if (!(i2c->ctrl & MXC_F_I2C_REVA_CTRL_MST_MODE)) {
10011ffc:	6823      	ldr	r3, [r4, #0]
10011ffe:	079e      	lsls	r6, r3, #30
10012000:	f140 80af 	bpl.w	10012162 <MXC_I2C_RevA_MasterTransaction+0x18e>
    //  send addr w/ read bit
    //  read rx_len bytes acking all
    // stop or restart
    // return good or error

    MXC_I2C_ClearFlags((mxc_i2c_regs_t *)i2c, MXC_I2C_REVA_INTFL0_MASK,
10012004:	2207      	movs	r2, #7
10012006:	f06f 417f 	mvn.w	r1, #4278190080	@ 0xff000000
1001200a:	4620      	mov	r0, r4
1001200c:	f7ff fe1a 	bl	10011c44 <MXC_I2C_ClearFlags>
                       MXC_I2C_REVA_INTFL1_MASK); // Clear all I2C Interrupts
    MXC_I2C_ClearTXFIFO((mxc_i2c_regs_t *)i2c);
10012010:	4620      	mov	r0, r4
10012012:	f7ff fe15 	bl	10011c40 <MXC_I2C_ClearTXFIFO>
    MXC_I2C_ClearRXFIFO((mxc_i2c_regs_t *)i2c);
10012016:	4620      	mov	r0, r4
10012018:	f7ff fe10 	bl	10011c3c <MXC_I2C_ClearRXFIFO>
    i2c->inten0 = 0;
    i2c->inten1 = 0;

    if ((req->rx_len == 0) || (req->tx_len != 0)) {
1001201c:	696a      	ldr	r2, [r5, #20]
    i2c->inten0 = 0;
1001201e:	2300      	movs	r3, #0
10012020:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
10012022:	6163      	str	r3, [r4, #20]
    if ((req->rx_len == 0) || (req->tx_len != 0)) {
10012024:	bb42      	cbnz	r2, 10012078 <MXC_I2C_RevA_MasterTransaction+0xa4>
10012026:	68ea      	ldr	r2, [r5, #12]
        // Load the slave address with write bit set
        i2c->fifo = (req->addr << 1) & ~0x1;
10012028:	686b      	ldr	r3, [r5, #4]
1001202a:	005b      	lsls	r3, r3, #1
1001202c:	62e3      	str	r3, [r4, #44]	@ 0x2c
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_START;
1001202e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10012030:	f043 0301 	orr.w	r3, r3, #1
10012034:	2600      	movs	r6, #0
10012036:	6323      	str	r3, [r4, #48]	@ 0x30

    while (req->tx_len > written) {
        if (i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_TX_THD) {
            written += MXC_I2C_WriteTXFIFO((mxc_i2c_regs_t *)i2c, &req->tx_buf[written],
                                           req->tx_len - written);
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
10012038:	2720      	movs	r7, #32
1001203a:	e004      	b.n	10012046 <MXC_I2C_RevA_MasterTransaction+0x72>
        }

        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
1001203c:	68a3      	ldr	r3, [r4, #8]
1001203e:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
10012042:	d111      	bne.n	10012068 <MXC_I2C_RevA_MasterTransaction+0x94>
    while (req->tx_len > written) {
10012044:	68ea      	ldr	r2, [r5, #12]
10012046:	4296      	cmp	r6, r2
10012048:	d219      	bcs.n	1001207e <MXC_I2C_RevA_MasterTransaction+0xaa>
        if (i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_TX_THD) {
1001204a:	68a3      	ldr	r3, [r4, #8]
1001204c:	0698      	lsls	r0, r3, #26
1001204e:	d5f5      	bpl.n	1001203c <MXC_I2C_RevA_MasterTransaction+0x68>
            written += MXC_I2C_WriteTXFIFO((mxc_i2c_regs_t *)i2c, &req->tx_buf[written],
10012050:	68a9      	ldr	r1, [r5, #8]
10012052:	1b92      	subs	r2, r2, r6
10012054:	4431      	add	r1, r6
10012056:	4620      	mov	r0, r4
10012058:	f7ff fdee 	bl	10011c38 <MXC_I2C_WriteTXFIFO>
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
1001205c:	60a7      	str	r7, [r4, #8]
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
1001205e:	68a3      	ldr	r3, [r4, #8]
10012060:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
            written += MXC_I2C_WriteTXFIFO((mxc_i2c_regs_t *)i2c, &req->tx_buf[written],
10012064:	4406      	add	r6, r0
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012066:	d0ed      	beq.n	10012044 <MXC_I2C_RevA_MasterTransaction+0x70>
            req->tx_len = written;
10012068:	60ee      	str	r6, [r5, #12]
            MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
1001206a:	4620      	mov	r0, r4
1001206c:	f7ff fde0 	bl	10011c30 <MXC_I2C_Stop>
            return E_COMM_ERR;
10012070:	f06f 0008 	mvn.w	r0, #8
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
        return E_COMM_ERR;
    }

    return E_NO_ERROR;
}
10012074:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((req->rx_len == 0) || (req->tx_len != 0)) {
10012078:	68ea      	ldr	r2, [r5, #12]
1001207a:	2a00      	cmp	r2, #0
1001207c:	d1d4      	bne.n	10012028 <MXC_I2C_RevA_MasterTransaction+0x54>
    MXC_I2C_ClearFlags((mxc_i2c_regs_t *)i2c,
1001207e:	2200      	movs	r2, #0
10012080:	2111      	movs	r1, #17
10012082:	4620      	mov	r0, r4
10012084:	f7ff fdde 	bl	10011c44 <MXC_I2C_ClearFlags>
    if (req->rx_len != 0) {
10012088:	696b      	ldr	r3, [r5, #20]
1001208a:	2b00      	cmp	r3, #0
1001208c:	d04a      	beq.n	10012124 <MXC_I2C_RevA_MasterTransaction+0x150>
        if (req->rx_len > MXC_I2C_REVA_MAX_FIFO_TRANSACTION) {
1001208e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
            i2c->rxctrl1 = 0;
10012092:	bf88      	it	hi
10012094:	2300      	movhi	r3, #0
            i2c->rxctrl1 = req->rx_len; // 0 for 256, otherwise number of bytes to read
10012096:	6223      	str	r3, [r4, #32]
        MXC_I2C_Start((mxc_i2c_regs_t *)i2c); // Start or Restart as needed
10012098:	4620      	mov	r0, r4
1001209a:	f7ff fdc7 	bl	10011c2c <MXC_I2C_Start>
        while (i2c->mstctrl & MXC_F_I2C_REVA_MSTCTRL_RESTART) {}
1001209e:	6b26      	ldr	r6, [r4, #48]	@ 0x30
100120a0:	f016 0602 	ands.w	r6, r6, #2
100120a4:	d1fb      	bne.n	1001209e <MXC_I2C_RevA_MasterTransaction+0xca>
        i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
100120a6:	686b      	ldr	r3, [r5, #4]
    while (req->rx_len > read) {
100120a8:	696a      	ldr	r2, [r5, #20]
        i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
100120aa:	005b      	lsls	r3, r3, #1
100120ac:	f043 0301 	orr.w	r3, r3, #1
100120b0:	62e3      	str	r3, [r4, #44]	@ 0x2c
    while (req->rx_len > read) {
100120b2:	2a00      	cmp	r2, #0
100120b4:	d036      	beq.n	10012124 <MXC_I2C_RevA_MasterTransaction+0x150>
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
100120b6:	2710      	movs	r7, #16
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_DONE;
100120b8:	f04f 0801 	mov.w	r8, #1
100120bc:	e01d      	b.n	100120fa <MXC_I2C_RevA_MasterTransaction+0x126>
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
100120be:	68a3      	ldr	r3, [r4, #8]
100120c0:	f413 43fe 	ands.w	r3, r3, #32512	@ 0x7f00
100120c4:	d129      	bne.n	1001211a <MXC_I2C_RevA_MasterTransaction+0x146>
        if ((i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_DONE) && (req->rx_len < read)) {
100120c6:	68a1      	ldr	r1, [r4, #8]
100120c8:	696a      	ldr	r2, [r5, #20]
100120ca:	07c9      	lsls	r1, r1, #31
100120cc:	d513      	bpl.n	100120f6 <MXC_I2C_RevA_MasterTransaction+0x122>
100120ce:	4296      	cmp	r6, r2
            if ((req->rx_len - read) > MXC_I2C_REVA_MAX_FIFO_TRANSACTION) {
100120d0:	eba2 0106 	sub.w	r1, r2, r6
        if ((i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_DONE) && (req->rx_len < read)) {
100120d4:	d90f      	bls.n	100120f6 <MXC_I2C_RevA_MasterTransaction+0x122>
            if ((req->rx_len - read) > MXC_I2C_REVA_MAX_FIFO_TRANSACTION) {
100120d6:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
                i2c->rxctrl1 = 0;
100120da:	bf8c      	ite	hi
100120dc:	6223      	strhi	r3, [r4, #32]
                i2c->rxctrl1 = (req->rx_len - read); // 0 for 256, otherwise number of bytes to read
100120de:	6221      	strls	r1, [r4, #32]
            i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
100120e0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
100120e2:	f043 0302 	orr.w	r3, r3, #2
100120e6:	6323      	str	r3, [r4, #48]	@ 0x30
            i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
100120e8:	686b      	ldr	r3, [r5, #4]
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_DONE;
100120ea:	f8c4 8008 	str.w	r8, [r4, #8]
            i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
100120ee:	005b      	lsls	r3, r3, #1
100120f0:	f043 0301 	orr.w	r3, r3, #1
100120f4:	62e3      	str	r3, [r4, #44]	@ 0x2c
    while (req->rx_len > read) {
100120f6:	4296      	cmp	r6, r2
100120f8:	d214      	bcs.n	10012124 <MXC_I2C_RevA_MasterTransaction+0x150>
        if (i2c->intfl0 & (MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE)) {
100120fa:	68a3      	ldr	r3, [r4, #8]
100120fc:	f013 0f11 	tst.w	r3, #17
10012100:	d0dd      	beq.n	100120be <MXC_I2C_RevA_MasterTransaction+0xea>
                MXC_I2C_ReadRXFIFO((mxc_i2c_regs_t *)i2c, &req->rx_buf[read], req->rx_len - read);
10012102:	6929      	ldr	r1, [r5, #16]
10012104:	1b92      	subs	r2, r2, r6
10012106:	4431      	add	r1, r6
10012108:	4620      	mov	r0, r4
1001210a:	f7ff fd93 	bl	10011c34 <MXC_I2C_ReadRXFIFO>
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
1001210e:	60a7      	str	r7, [r4, #8]
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012110:	68a3      	ldr	r3, [r4, #8]
10012112:	f413 43fe 	ands.w	r3, r3, #32512	@ 0x7f00
            read +=
10012116:	4406      	add	r6, r0
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012118:	d0d5      	beq.n	100120c6 <MXC_I2C_RevA_MasterTransaction+0xf2>
            req->rx_len = read;
1001211a:	616e      	str	r6, [r5, #20]
            MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
1001211c:	4620      	mov	r0, r4
1001211e:	f7ff fd87 	bl	10011c30 <MXC_I2C_Stop>
            return E_COMM_ERR;
10012122:	e7a5      	b.n	10012070 <MXC_I2C_RevA_MasterTransaction+0x9c>
    if (req->restart) {
10012124:	69ab      	ldr	r3, [r5, #24]
10012126:	b173      	cbz	r3, 10012146 <MXC_I2C_RevA_MasterTransaction+0x172>
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
10012128:	6b23      	ldr	r3, [r4, #48]	@ 0x30
1001212a:	f043 0302 	orr.w	r3, r3, #2
1001212e:	6323      	str	r3, [r4, #48]	@ 0x30
    while (!(i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_DONE)) {}
10012130:	68a3      	ldr	r3, [r4, #8]
10012132:	07db      	lsls	r3, r3, #31
10012134:	d5fc      	bpl.n	10012130 <MXC_I2C_RevA_MasterTransaction+0x15c>
    i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_DONE | MXC_F_I2C_REVA_INTFL0_STOP;
10012136:	2341      	movs	r3, #65	@ 0x41
10012138:	60a3      	str	r3, [r4, #8]
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
1001213a:	68a0      	ldr	r0, [r4, #8]
1001213c:	f410 40fe 	ands.w	r0, r0, #32512	@ 0x7f00
10012140:	d196      	bne.n	10012070 <MXC_I2C_RevA_MasterTransaction+0x9c>
}
10012142:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_STOP;
10012146:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10012148:	f043 0304 	orr.w	r3, r3, #4
1001214c:	6323      	str	r3, [r4, #48]	@ 0x30
        while (!(i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_STOP)) {}
1001214e:	68a3      	ldr	r3, [r4, #8]
10012150:	065a      	lsls	r2, r3, #25
10012152:	d5fc      	bpl.n	1001214e <MXC_I2C_RevA_MasterTransaction+0x17a>
    while (!(i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_DONE)) {}
10012154:	68a3      	ldr	r3, [r4, #8]
10012156:	07db      	lsls	r3, r3, #31
10012158:	d5ea      	bpl.n	10012130 <MXC_I2C_RevA_MasterTransaction+0x15c>
1001215a:	e7ec      	b.n	10012136 <MXC_I2C_RevA_MasterTransaction+0x162>
        return E_BAD_PARAM;
1001215c:	f06f 0002 	mvn.w	r0, #2
10012160:	e7ef      	b.n	10012142 <MXC_I2C_RevA_MasterTransaction+0x16e>
        return E_BAD_STATE;
10012162:	f06f 0006 	mvn.w	r0, #6
10012166:	e7ec      	b.n	10012142 <MXC_I2C_RevA_MasterTransaction+0x16e>
        return E_NOT_SUPPORTED;
10012168:	f06f 0010 	mvn.w	r0, #16
1001216c:	e7e9      	b.n	10012142 <MXC_I2C_RevA_MasterTransaction+0x16e>
1001216e:	bf00      	nop
10012170:	4001d000 	.word	0x4001d000

10012174 <MXC_I2C_RevA_SetRXThreshold>:
    return E_NO_ERROR;
}

int MXC_I2C_RevA_SetRXThreshold(mxc_i2c_reva_regs_t *i2c, unsigned int numBytes)
{
    unsigned int rxFIFOlen = (i2c->fifolen & MXC_F_I2C_REVA_FIFOLEN_RX_DEPTH) >>
10012174:	6982      	ldr	r2, [r0, #24]
10012176:	b2d2      	uxtb	r2, r2
                             MXC_F_I2C_REVA_FIFOLEN_RX_DEPTH_POS;

    if (numBytes > rxFIFOlen) {
10012178:	428a      	cmp	r2, r1
{
1001217a:	4603      	mov	r3, r0
    if (numBytes > rxFIFOlen) {
1001217c:	d307      	bcc.n	1001218e <MXC_I2C_RevA_SetRXThreshold+0x1a>
        return E_BAD_PARAM;
    }

    i2c->rxctrl0 = (i2c->rxctrl0 & ~MXC_F_I2C_REVA_RXCTRL0_THD_LVL) |
1001217e:	69c2      	ldr	r2, [r0, #28]
10012180:	f422 6270 	bic.w	r2, r2, #3840	@ 0xf00
10012184:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
                   (numBytes << MXC_F_I2C_REVA_RXCTRL0_THD_LVL_POS);
    return E_NO_ERROR;
10012188:	2000      	movs	r0, #0
    i2c->rxctrl0 = (i2c->rxctrl0 & ~MXC_F_I2C_REVA_RXCTRL0_THD_LVL) |
1001218a:	61d9      	str	r1, [r3, #28]
    return E_NO_ERROR;
1001218c:	4770      	bx	lr
        return E_BAD_PARAM;
1001218e:	f06f 0002 	mvn.w	r0, #2
}
10012192:	4770      	bx	lr

10012194 <MXC_I2C_RevA_SetTXThreshold>:
    return (i2c->rxctrl0 & MXC_F_I2C_REVA_RXCTRL0_THD_LVL) >> MXC_F_I2C_REVA_RXCTRL0_THD_LVL_POS;
}

int MXC_I2C_RevA_SetTXThreshold(mxc_i2c_reva_regs_t *i2c, unsigned int numBytes)
{
    unsigned int txFIFOlen = (i2c->fifolen & MXC_F_I2C_REVA_FIFOLEN_TX_DEPTH) >>
10012194:	6982      	ldr	r2, [r0, #24]
10012196:	f3c2 2207 	ubfx	r2, r2, #8, #8
                             MXC_F_I2C_REVA_FIFOLEN_TX_DEPTH_POS;

    if (numBytes > txFIFOlen) {
1001219a:	428a      	cmp	r2, r1
{
1001219c:	4603      	mov	r3, r0
    if (numBytes > txFIFOlen) {
1001219e:	d307      	bcc.n	100121b0 <MXC_I2C_RevA_SetTXThreshold+0x1c>
        return E_BAD_PARAM;
    }

    i2c->txctrl0 = (i2c->txctrl0 & ~MXC_F_I2C_REVA_TXCTRL0_THD_LVL) |
100121a0:	6a42      	ldr	r2, [r0, #36]	@ 0x24
100121a2:	f422 6270 	bic.w	r2, r2, #3840	@ 0xf00
100121a6:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
                   (numBytes << MXC_F_I2C_REVA_TXCTRL0_THD_LVL_POS);
    return E_NO_ERROR;
100121aa:	2000      	movs	r0, #0
    i2c->txctrl0 = (i2c->txctrl0 & ~MXC_F_I2C_REVA_TXCTRL0_THD_LVL) |
100121ac:	6259      	str	r1, [r3, #36]	@ 0x24
    return E_NO_ERROR;
100121ae:	4770      	bx	lr
        return E_BAD_PARAM;
100121b0:	f06f 0002 	mvn.w	r0, #2
}
100121b4:	4770      	bx	lr
100121b6:	bf00      	nop

100121b8 <MXC_I2C_RevA_MasterAsyncHandler>:
    MXC_I2C_RevA_AsyncCallback(i2c, E_ABORT);
    MXC_I2C_RevA_AsyncStop(i2c);
}

void MXC_I2C_RevA_MasterAsyncHandler(int i2cNum)
{
100121b8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    unsigned int written = AsyncWritten[i2cNum];
100121bc:	f8df a298 	ldr.w	sl, [pc, #664]	@ 10012458 <MXC_I2C_RevA_MasterAsyncHandler+0x2a0>
    unsigned int read = AsyncRead[i2cNum];
100121c0:	f8df 9298 	ldr.w	r9, [pc, #664]	@ 1001245c <MXC_I2C_RevA_MasterAsyncHandler+0x2a4>
    unsigned int written = AsyncWritten[i2cNum];
100121c4:	f85a 6020 	ldr.w	r6, [sl, r0, lsl #2]
    unsigned int read = AsyncRead[i2cNum];
100121c8:	f859 8020 	ldr.w	r8, [r9, r0, lsl #2]
{
100121cc:	4605      	mov	r5, r0
    mxc_i2c_reva_regs_t *i2c = (mxc_i2c_reva_regs_t *)MXC_I2C_GET_BASE(i2cNum);
100121ce:	b320      	cbz	r0, 1001221a <MXC_I2C_RevA_MasterAsyncHandler+0x62>
100121d0:	2801      	cmp	r0, #1
100121d2:	f000 809c 	beq.w	1001230e <MXC_I2C_RevA_MasterAsyncHandler+0x156>
100121d6:	4ca2      	ldr	r4, [pc, #648]	@ (10012460 <MXC_I2C_RevA_MasterAsyncHandler+0x2a8>)
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
100121d8:	f8df b288 	ldr.w	fp, [pc, #648]	@ 10012464 <MXC_I2C_RevA_MasterAsyncHandler+0x2ac>
    mxc_i2c_reva_regs_t *i2c = (mxc_i2c_reva_regs_t *)MXC_I2C_GET_BASE(i2cNum);
100121dc:	2802      	cmp	r0, #2
100121de:	bf0c      	ite	eq
100121e0:	4623      	moveq	r3, r4
100121e2:	2300      	movne	r3, #0
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
100121e4:	f85b 7020 	ldr.w	r7, [fp, r0, lsl #2]

    /* Check for errors */
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
100121e8:	689b      	ldr	r3, [r3, #8]
100121ea:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
100121ee:	f040 80b2 	bne.w	10012356 <MXC_I2C_RevA_MasterAsyncHandler+0x19e>

        return;
    }

    /* Write data to the TX FIFO */
    if (req->tx_len > written) {
100121f2:	68fa      	ldr	r2, [r7, #12]
100121f4:	42b2      	cmp	r2, r6
100121f6:	4611      	mov	r1, r2
100121f8:	d82f      	bhi.n	1001225a <MXC_I2C_RevA_MasterAsyncHandler+0xa2>
            i2c->inten0 |= (MXC_F_I2C_REVA_INTEN0_DONE);
        }
    }

    /* Read data in the RX FIFO */
    if (req->rx_len > read) {
100121fa:	697b      	ldr	r3, [r7, #20]
100121fc:	4543      	cmp	r3, r8
100121fe:	d946      	bls.n	1001228e <MXC_I2C_RevA_MasterAsyncHandler+0xd6>
        if (i2c->intfl0 & (MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE)) {
10012200:	68a1      	ldr	r1, [r4, #8]
10012202:	f011 0f11 	tst.w	r1, #17
10012206:	d137      	bne.n	10012278 <MXC_I2C_RevA_MasterAsyncHandler+0xc0>
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
        }
    }

    /* Done writing, still reading */
    if ((req->tx_len == written) && (req->rx_len - read) &&
10012208:	42b2      	cmp	r2, r6
1001220a:	f000 80eb 	beq.w	100123e4 <MXC_I2C_RevA_MasterAsyncHandler+0x22c>

        /* Clear the async state */
        MXC_I2C_RevA_AsyncStop(i2c);

    } else {
        AsyncWritten[i2cNum] = written;
1001220e:	f84a 6025 	str.w	r6, [sl, r5, lsl #2]
        AsyncRead[i2cNum] = read;
10012212:	f849 8025 	str.w	r8, [r9, r5, lsl #2]
    }
}
10012216:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
1001221a:	4c93      	ldr	r4, [pc, #588]	@ (10012468 <MXC_I2C_RevA_MasterAsyncHandler+0x2b0>)
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
1001221c:	f8df b244 	ldr.w	fp, [pc, #580]	@ 10012464 <MXC_I2C_RevA_MasterAsyncHandler+0x2ac>
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012220:	68a3      	ldr	r3, [r4, #8]
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
10012222:	f8db 7000 	ldr.w	r7, [fp]
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012226:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
1001222a:	d0e2      	beq.n	100121f2 <MXC_I2C_RevA_MasterAsyncHandler+0x3a>
        i2c->intfl0 = i2c->intfl0;
1001222c:	68a3      	ldr	r3, [r4, #8]
1001222e:	60a3      	str	r3, [r4, #8]
        i2c->intfl1 = i2c->intfl1;
10012230:	6923      	ldr	r3, [r4, #16]
10012232:	6123      	str	r3, [r4, #16]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10012234:	4620      	mov	r0, r4
        i2c->inten0 = 0;
10012236:	60e5      	str	r5, [r4, #12]
        i2c->inten1 = 0;
10012238:	6165      	str	r5, [r4, #20]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
1001223a:	f7ff fcf9 	bl	10011c30 <MXC_I2C_Stop>
    mxc_i2c_reva_req_t *req =
1001223e:	f8db 0000 	ldr.w	r0, [fp]
    if (req->callback != NULL) {
10012242:	69c3      	ldr	r3, [r0, #28]
10012244:	b113      	cbz	r3, 1001224c <MXC_I2C_RevA_MasterAsyncHandler+0x94>
        req->callback(req, retVal);
10012246:	f06f 0108 	mvn.w	r1, #8
1001224a:	4798      	blx	r3
    i2c->inten0 = 0;
1001224c:	60e5      	str	r5, [r4, #12]
    i2c->inten1 = 0;
1001224e:	6165      	str	r5, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
10012250:	68a3      	ldr	r3, [r4, #8]
10012252:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
10012254:	6923      	ldr	r3, [r4, #16]
10012256:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012258:	e096      	b.n	10012388 <MXC_I2C_RevA_MasterAsyncHandler+0x1d0>
        if (i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_TX_THD) {
1001225a:	68a3      	ldr	r3, [r4, #8]
1001225c:	0699      	lsls	r1, r3, #26
1001225e:	f100 8098 	bmi.w	10012392 <MXC_I2C_RevA_MasterAsyncHandler+0x1da>
            i2c->inten0 |= MXC_F_I2C_REVA_INTEN0_TX_THD;
10012262:	68e3      	ldr	r3, [r4, #12]
10012264:	f043 0320 	orr.w	r3, r3, #32
10012268:	60e3      	str	r3, [r4, #12]
        if ((req->tx_len == written) && (req->rx_len)) {
1001226a:	697b      	ldr	r3, [r7, #20]
    if (req->rx_len > read) {
1001226c:	4598      	cmp	r8, r3
1001226e:	d2ce      	bcs.n	1001220e <MXC_I2C_RevA_MasterAsyncHandler+0x56>
        if (i2c->intfl0 & (MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE)) {
10012270:	68a1      	ldr	r1, [r4, #8]
10012272:	f011 0f11 	tst.w	r1, #17
10012276:	d0c7      	beq.n	10012208 <MXC_I2C_RevA_MasterAsyncHandler+0x50>
                MXC_I2C_ReadRXFIFO((mxc_i2c_regs_t *)i2c, &req->rx_buf[read], req->rx_len - read);
10012278:	6939      	ldr	r1, [r7, #16]
1001227a:	eba3 0208 	sub.w	r2, r3, r8
1001227e:	4441      	add	r1, r8
10012280:	4620      	mov	r0, r4
10012282:	f7ff fcd7 	bl	10011c34 <MXC_I2C_ReadRXFIFO>
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
10012286:	2310      	movs	r3, #16
    if ((req->tx_len == written) && (req->rx_len - read) &&
10012288:	68f9      	ldr	r1, [r7, #12]
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
1001228a:	60a3      	str	r3, [r4, #8]
            read +=
1001228c:	4480      	add	r8, r0
    if ((req->tx_len == written) && (req->rx_len - read) &&
1001228e:	42b1      	cmp	r1, r6
10012290:	d1bd      	bne.n	1001220e <MXC_I2C_RevA_MasterAsyncHandler+0x56>
10012292:	697b      	ldr	r3, [r7, #20]
10012294:	4543      	cmp	r3, r8
10012296:	f040 80a5 	bne.w	100123e4 <MXC_I2C_RevA_MasterAsyncHandler+0x22c>
        i2c->inten0 = 0;
1001229a:	2300      	movs	r3, #0
1001229c:	60e3      	str	r3, [r4, #12]
        i2c->inten1 = 0;
1001229e:	6163      	str	r3, [r4, #20]
        i2c->intfl0 = i2c->intfl0;
100122a0:	68a3      	ldr	r3, [r4, #8]
100122a2:	60a3      	str	r3, [r4, #8]
        if (req->restart) {
100122a4:	69bb      	ldr	r3, [r7, #24]
        i2c->intfl1 = i2c->intfl1;
100122a6:	6922      	ldr	r2, [r4, #16]
100122a8:	6122      	str	r2, [r4, #16]
        if (req->restart) {
100122aa:	2b00      	cmp	r3, #0
100122ac:	f040 80b3 	bne.w	10012416 <MXC_I2C_RevA_MasterAsyncHandler+0x25e>
            i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_STOP;
100122b0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
100122b2:	f043 0304 	orr.w	r3, r3, #4
100122b6:	6323      	str	r3, [r4, #48]	@ 0x30
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
100122b8:	68a3      	ldr	r3, [r4, #8]
100122ba:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
        (mxc_i2c_reva_req_t *)AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)];
100122be:	4b6a      	ldr	r3, [pc, #424]	@ (10012468 <MXC_I2C_RevA_MasterAsyncHandler+0x2b0>)
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
100122c0:	f000 80bc 	beq.w	1001243c <MXC_I2C_RevA_MasterAsyncHandler+0x284>
        (mxc_i2c_reva_req_t *)AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)];
100122c4:	429c      	cmp	r4, r3
100122c6:	f000 80da 	beq.w	1001247e <MXC_I2C_RevA_MasterAsyncHandler+0x2c6>
100122ca:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100122ce:	429c      	cmp	r4, r3
100122d0:	f000 8105 	beq.w	100124de <MXC_I2C_RevA_MasterAsyncHandler+0x326>
    mxc_i2c_reva_req_t *req =
100122d4:	f8db 0008 	ldr.w	r0, [fp, #8]
    if (req->callback != NULL) {
100122d8:	69c3      	ldr	r3, [r0, #28]
100122da:	2b00      	cmp	r3, #0
100122dc:	f000 80e3 	beq.w	100124a6 <MXC_I2C_RevA_MasterAsyncHandler+0x2ee>
        req->callback(req, retVal);
100122e0:	f06f 0108 	mvn.w	r1, #8
100122e4:	4798      	blx	r3
    i2c->inten0 = 0;
100122e6:	2300      	movs	r3, #0
100122e8:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
100122ea:	6163      	str	r3, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
100122ec:	68a3      	ldr	r3, [r4, #8]
100122ee:	60a3      	str	r3, [r4, #8]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100122f0:	4b5d      	ldr	r3, [pc, #372]	@ (10012468 <MXC_I2C_RevA_MasterAsyncHandler+0x2b0>)
    i2c->intfl1 = i2c->intfl1;
100122f2:	6922      	ldr	r2, [r4, #16]
100122f4:	6122      	str	r2, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100122f6:	429c      	cmp	r4, r3
100122f8:	f000 80cd 	beq.w	10012496 <MXC_I2C_RevA_MasterAsyncHandler+0x2de>
100122fc:	4b5b      	ldr	r3, [pc, #364]	@ (1001246c <MXC_I2C_RevA_MasterAsyncHandler+0x2b4>)
100122fe:	429c      	cmp	r4, r3
10012300:	f000 80e4 	beq.w	100124cc <MXC_I2C_RevA_MasterAsyncHandler+0x314>
10012304:	2202      	movs	r2, #2
10012306:	2300      	movs	r3, #0
10012308:	f84b 3022 	str.w	r3, [fp, r2, lsl #2]
}
1001230c:	e783      	b.n	10012216 <MXC_I2C_RevA_MasterAsyncHandler+0x5e>
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
1001230e:	4c57      	ldr	r4, [pc, #348]	@ (1001246c <MXC_I2C_RevA_MasterAsyncHandler+0x2b4>)
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
10012310:	f8df b150 	ldr.w	fp, [pc, #336]	@ 10012464 <MXC_I2C_RevA_MasterAsyncHandler+0x2ac>
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012314:	68a3      	ldr	r3, [r4, #8]
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
10012316:	f8db 7004 	ldr.w	r7, [fp, #4]
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
1001231a:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
1001231e:	f43f af68 	beq.w	100121f2 <MXC_I2C_RevA_MasterAsyncHandler+0x3a>
        i2c->intfl0 = i2c->intfl0;
10012322:	68a3      	ldr	r3, [r4, #8]
10012324:	60a3      	str	r3, [r4, #8]
        i2c->intfl1 = i2c->intfl1;
10012326:	6923      	ldr	r3, [r4, #16]
10012328:	6123      	str	r3, [r4, #16]
        i2c->inten0 = 0;
1001232a:	2600      	movs	r6, #0
1001232c:	60e6      	str	r6, [r4, #12]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
1001232e:	4620      	mov	r0, r4
        i2c->inten1 = 0;
10012330:	6166      	str	r6, [r4, #20]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10012332:	f7ff fc7d 	bl	10011c30 <MXC_I2C_Stop>
    mxc_i2c_reva_req_t *req =
10012336:	f8db 0004 	ldr.w	r0, [fp, #4]
    if (req->callback != NULL) {
1001233a:	69c3      	ldr	r3, [r0, #28]
1001233c:	2b00      	cmp	r3, #0
1001233e:	f000 80c7 	beq.w	100124d0 <MXC_I2C_RevA_MasterAsyncHandler+0x318>
        req->callback(req, retVal);
10012342:	f06f 0108 	mvn.w	r1, #8
10012346:	4798      	blx	r3
    i2c->inten0 = 0;
10012348:	60e6      	str	r6, [r4, #12]
    i2c->inten1 = 0;
1001234a:	6166      	str	r6, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
1001234c:	68a3      	ldr	r3, [r4, #8]
1001234e:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
10012350:	6923      	ldr	r3, [r4, #16]
10012352:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012354:	e018      	b.n	10012388 <MXC_I2C_RevA_MasterAsyncHandler+0x1d0>
        i2c->intfl0 = i2c->intfl0;
10012356:	68a3      	ldr	r3, [r4, #8]
10012358:	60a3      	str	r3, [r4, #8]
        i2c->intfl1 = i2c->intfl1;
1001235a:	6923      	ldr	r3, [r4, #16]
1001235c:	6123      	str	r3, [r4, #16]
        i2c->inten0 = 0;
1001235e:	2500      	movs	r5, #0
10012360:	60e5      	str	r5, [r4, #12]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10012362:	4620      	mov	r0, r4
        i2c->inten1 = 0;
10012364:	6165      	str	r5, [r4, #20]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10012366:	f7ff fc63 	bl	10011c30 <MXC_I2C_Stop>
    mxc_i2c_reva_req_t *req =
1001236a:	f8db 0008 	ldr.w	r0, [fp, #8]
    if (req->callback != NULL) {
1001236e:	69c3      	ldr	r3, [r0, #28]
10012370:	2b00      	cmp	r3, #0
10012372:	d07d      	beq.n	10012470 <MXC_I2C_RevA_MasterAsyncHandler+0x2b8>
        req->callback(req, retVal);
10012374:	f06f 0108 	mvn.w	r1, #8
10012378:	4798      	blx	r3
    i2c->inten0 = 0;
1001237a:	60e5      	str	r5, [r4, #12]
    i2c->inten1 = 0;
1001237c:	6165      	str	r5, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
1001237e:	68a3      	ldr	r3, [r4, #8]
10012380:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
10012382:	6923      	ldr	r3, [r4, #16]
10012384:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012386:	2502      	movs	r5, #2
10012388:	2300      	movs	r3, #0
1001238a:	f84b 3025 	str.w	r3, [fp, r5, lsl #2]
}
1001238e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
            written += MXC_I2C_WriteTXFIFO((mxc_i2c_regs_t *)i2c, &req->tx_buf[written],
10012392:	68b9      	ldr	r1, [r7, #8]
10012394:	1b92      	subs	r2, r2, r6
10012396:	4431      	add	r1, r6
10012398:	4620      	mov	r0, r4
1001239a:	f7ff fc4d 	bl	10011c38 <MXC_I2C_WriteTXFIFO>
        if (written < req->tx_len) {
1001239e:	68fa      	ldr	r2, [r7, #12]
            written += MXC_I2C_WriteTXFIFO((mxc_i2c_regs_t *)i2c, &req->tx_buf[written],
100123a0:	4406      	add	r6, r0
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
100123a2:	2320      	movs	r3, #32
        if (written < req->tx_len) {
100123a4:	42b2      	cmp	r2, r6
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
100123a6:	60a3      	str	r3, [r4, #8]
        if (written < req->tx_len) {
100123a8:	f63f af5b 	bhi.w	10012262 <MXC_I2C_RevA_MasterAsyncHandler+0xaa>
            i2c->inten0 &= ~(MXC_F_I2C_REVA_INTEN0_TX_THD);
100123ac:	68e3      	ldr	r3, [r4, #12]
100123ae:	f023 0320 	bic.w	r3, r3, #32
100123b2:	60e3      	str	r3, [r4, #12]
        if ((req->tx_len == written) && (req->rx_len)) {
100123b4:	697b      	ldr	r3, [r7, #20]
100123b6:	f47f af59 	bne.w	1001226c <MXC_I2C_RevA_MasterAsyncHandler+0xb4>
100123ba:	2b00      	cmp	r3, #0
100123bc:	f43f af6a 	beq.w	10012294 <MXC_I2C_RevA_MasterAsyncHandler+0xdc>
            i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
100123c0:	6b22      	ldr	r2, [r4, #48]	@ 0x30
100123c2:	f042 0202 	orr.w	r2, r2, #2
100123c6:	6322      	str	r2, [r4, #48]	@ 0x30
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_DONE;
100123c8:	2201      	movs	r2, #1
100123ca:	60a2      	str	r2, [r4, #8]
            i2c->inten0 |= (MXC_F_I2C_REVA_INTEN0_DONE);
100123cc:	68e2      	ldr	r2, [r4, #12]
    if (req->rx_len > read) {
100123ce:	4598      	cmp	r8, r3
            i2c->inten0 |= (MXC_F_I2C_REVA_INTEN0_DONE);
100123d0:	f042 0201 	orr.w	r2, r2, #1
100123d4:	60e2      	str	r2, [r4, #12]
    if (req->rx_len > read) {
100123d6:	f4bf af5d 	bcs.w	10012294 <MXC_I2C_RevA_MasterAsyncHandler+0xdc>
        if (i2c->intfl0 & (MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE)) {
100123da:	68a2      	ldr	r2, [r4, #8]
100123dc:	f012 0f11 	tst.w	r2, #17
100123e0:	f47f af4a 	bne.w	10012278 <MXC_I2C_RevA_MasterAsyncHandler+0xc0>
        (i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_DONE)) {
100123e4:	68a2      	ldr	r2, [r4, #8]
    if ((req->tx_len == written) && (req->rx_len - read) &&
100123e6:	07d2      	lsls	r2, r2, #31
100123e8:	f57f af11 	bpl.w	1001220e <MXC_I2C_RevA_MasterAsyncHandler+0x56>
        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_DONE;
100123ec:	2201      	movs	r2, #1
100123ee:	60a2      	str	r2, [r4, #8]
        if (read == 0) {
100123f0:	f1b8 0f00 	cmp.w	r8, #0
100123f4:	d114      	bne.n	10012420 <MXC_I2C_RevA_MasterAsyncHandler+0x268>
            i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
100123f6:	687a      	ldr	r2, [r7, #4]
100123f8:	0052      	lsls	r2, r2, #1
        if ((req->rx_len - read) > MXC_I2C_REVA_MAX_FIFO_TRANSACTION) {
100123fa:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
            i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
100123fe:	f042 0201 	orr.w	r2, r2, #1
10012402:	62e2      	str	r2, [r4, #44]	@ 0x2c
            i2c->rxctrl1 = 0;
10012404:	bf8c      	ite	hi
10012406:	f8c4 8020 	strhi.w	r8, [r4, #32]
            i2c->rxctrl1 = (req->rx_len - read); // 0 for 256, otherwise number of bytes to read
1001240a:	6223      	strls	r3, [r4, #32]
            i2c->inten0 |= (MXC_F_I2C_REVA_INTEN0_RX_THD | MXC_F_I2C_REVA_INTEN0_DONE);
1001240c:	68e3      	ldr	r3, [r4, #12]
1001240e:	f043 0311 	orr.w	r3, r3, #17
10012412:	60e3      	str	r3, [r4, #12]
10012414:	e6fb      	b.n	1001220e <MXC_I2C_RevA_MasterAsyncHandler+0x56>
            i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
10012416:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10012418:	f043 0302 	orr.w	r3, r3, #2
1001241c:	6323      	str	r3, [r4, #48]	@ 0x30
1001241e:	e74b      	b.n	100122b8 <MXC_I2C_RevA_MasterAsyncHandler+0x100>
        if ((req->rx_len - read) > MXC_I2C_REVA_MAX_FIFO_TRANSACTION) {
10012420:	eba3 0208 	sub.w	r2, r3, r8
10012424:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
            i2c->rxctrl1 = 0;
10012428:	bf88      	it	hi
1001242a:	2200      	movhi	r2, #0
        if (read < req->rx_len) {
1001242c:	4598      	cmp	r8, r3
            i2c->rxctrl1 = (req->rx_len - read); // 0 for 256, otherwise number of bytes to read
1001242e:	6222      	str	r2, [r4, #32]
        if (read < req->rx_len) {
10012430:	d3ec      	bcc.n	1001240c <MXC_I2C_RevA_MasterAsyncHandler+0x254>
            i2c->inten0 &= ~(MXC_F_I2C_REVA_INTEN0_RX_THD | MXC_F_I2C_REVA_INTEN0_DONE);
10012432:	68e3      	ldr	r3, [r4, #12]
10012434:	f023 0311 	bic.w	r3, r3, #17
10012438:	60e3      	str	r3, [r4, #12]
1001243a:	e6e8      	b.n	1001220e <MXC_I2C_RevA_MasterAsyncHandler+0x56>
        (mxc_i2c_reva_req_t *)AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)];
1001243c:	429c      	cmp	r4, r3
1001243e:	d02c      	beq.n	1001249a <MXC_I2C_RevA_MasterAsyncHandler+0x2e2>
10012440:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012444:	429c      	cmp	r4, r3
10012446:	d036      	beq.n	100124b6 <MXC_I2C_RevA_MasterAsyncHandler+0x2fe>
    mxc_i2c_reva_req_t *req =
10012448:	f8db 0008 	ldr.w	r0, [fp, #8]
    if (req->callback != NULL) {
1001244c:	69c3      	ldr	r3, [r0, #28]
1001244e:	b353      	cbz	r3, 100124a6 <MXC_I2C_RevA_MasterAsyncHandler+0x2ee>
        req->callback(req, retVal);
10012450:	2100      	movs	r1, #0
10012452:	4798      	blx	r3
10012454:	e747      	b.n	100122e6 <MXC_I2C_RevA_MasterAsyncHandler+0x12e>
10012456:	bf00      	nop
10012458:	20000fec 	.word	0x20000fec
1001245c:	20000fe0 	.word	0x20000fe0
10012460:	4001f000 	.word	0x4001f000
10012464:	20000ff8 	.word	0x20000ff8
10012468:	4001d000 	.word	0x4001d000
1001246c:	4001e000 	.word	0x4001e000
    i2c->inten0 = 0;
10012470:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
10012472:	6163      	str	r3, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
10012474:	68a3      	ldr	r3, [r4, #8]
10012476:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
10012478:	6923      	ldr	r3, [r4, #16]
1001247a:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
1001247c:	e783      	b.n	10012386 <MXC_I2C_RevA_MasterAsyncHandler+0x1ce>
    mxc_i2c_reva_req_t *req =
1001247e:	f8db 0000 	ldr.w	r0, [fp]
    if (req->callback != NULL) {
10012482:	69c3      	ldr	r3, [r0, #28]
10012484:	2b00      	cmp	r3, #0
10012486:	f47f af2b 	bne.w	100122e0 <MXC_I2C_RevA_MasterAsyncHandler+0x128>
    i2c->inten0 = 0;
1001248a:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
1001248c:	6163      	str	r3, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
1001248e:	68a3      	ldr	r3, [r4, #8]
10012490:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
10012492:	6923      	ldr	r3, [r4, #16]
10012494:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012496:	2200      	movs	r2, #0
10012498:	e735      	b.n	10012306 <MXC_I2C_RevA_MasterAsyncHandler+0x14e>
    mxc_i2c_reva_req_t *req =
1001249a:	f8db 0000 	ldr.w	r0, [fp]
    if (req->callback != NULL) {
1001249e:	69c3      	ldr	r3, [r0, #28]
100124a0:	2b00      	cmp	r3, #0
100124a2:	d1d5      	bne.n	10012450 <MXC_I2C_RevA_MasterAsyncHandler+0x298>
100124a4:	e7f1      	b.n	1001248a <MXC_I2C_RevA_MasterAsyncHandler+0x2d2>
    i2c->inten0 = 0;
100124a6:	4a11      	ldr	r2, [pc, #68]	@ (100124ec <MXC_I2C_RevA_MasterAsyncHandler+0x334>)
100124a8:	60d3      	str	r3, [r2, #12]
    i2c->inten1 = 0;
100124aa:	6153      	str	r3, [r2, #20]
    i2c->intfl0 = i2c->intfl0;
100124ac:	6893      	ldr	r3, [r2, #8]
100124ae:	6093      	str	r3, [r2, #8]
    i2c->intfl1 = i2c->intfl1;
100124b0:	6913      	ldr	r3, [r2, #16]
100124b2:	6113      	str	r3, [r2, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100124b4:	e726      	b.n	10012304 <MXC_I2C_RevA_MasterAsyncHandler+0x14c>
    mxc_i2c_reva_req_t *req =
100124b6:	f8db 0004 	ldr.w	r0, [fp, #4]
    if (req->callback != NULL) {
100124ba:	69c3      	ldr	r3, [r0, #28]
100124bc:	2b00      	cmp	r3, #0
100124be:	d1c7      	bne.n	10012450 <MXC_I2C_RevA_MasterAsyncHandler+0x298>
    i2c->inten0 = 0;
100124c0:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
100124c2:	6163      	str	r3, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
100124c4:	68a3      	ldr	r3, [r4, #8]
100124c6:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
100124c8:	6923      	ldr	r3, [r4, #16]
100124ca:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100124cc:	2201      	movs	r2, #1
100124ce:	e71a      	b.n	10012306 <MXC_I2C_RevA_MasterAsyncHandler+0x14e>
    i2c->inten0 = 0;
100124d0:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
100124d2:	6163      	str	r3, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
100124d4:	68a3      	ldr	r3, [r4, #8]
100124d6:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
100124d8:	6923      	ldr	r3, [r4, #16]
100124da:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100124dc:	e754      	b.n	10012388 <MXC_I2C_RevA_MasterAsyncHandler+0x1d0>
    mxc_i2c_reva_req_t *req =
100124de:	f8db 0004 	ldr.w	r0, [fp, #4]
    if (req->callback != NULL) {
100124e2:	69c3      	ldr	r3, [r0, #28]
100124e4:	2b00      	cmp	r3, #0
100124e6:	f47f aefb 	bne.w	100122e0 <MXC_I2C_RevA_MasterAsyncHandler+0x128>
100124ea:	e7e9      	b.n	100124c0 <MXC_I2C_RevA_MasterAsyncHandler+0x308>
100124ec:	4001f000 	.word	0x4001f000

100124f0 <MXC_I2C_RevA_SlaveAsyncHandler>:

void MXC_I2C_RevA_SlaveAsyncHandler(mxc_i2c_reva_regs_t *i2c, mxc_i2c_reva_slave_handler_t callback,
                                    uint32_t *int_en, int *retVal)
{
100124f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
100124f4:	4615      	mov	r5, r2
100124f6:	460e      	mov	r6, r1
    // I2C_EVT_RX_THRESH
    // I2C_EVT_TX_THRESH
    // I2C_EVT_TRANS_COMP
    // I2C_EVT_UNDERFLOW
    // I2C_EVT_OVERFLOW
    if (!(int_en[0] & (MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH | MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH |
100124f8:	6812      	ldr	r2, [r2, #0]
100124fa:	49b2      	ldr	r1, [pc, #712]	@ (100127c4 <MXC_I2C_RevA_SlaveAsyncHandler+0x2d4>)
    uint32_t tFlags = i2c->intfl0;
100124fc:	f8d0 9008 	ldr.w	r9, [r0, #8]
    *retVal = E_NO_ERROR;
10012500:	2700      	movs	r7, #0
    if (!(int_en[0] & (MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH | MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH |
10012502:	4011      	ands	r1, r2
    *retVal = E_NO_ERROR;
10012504:	601f      	str	r7, [r3, #0]
{
10012506:	4604      	mov	r4, r0
    uint32_t readFlag = i2c->ctrl & MXC_F_I2C_REVA_CTRL_READ;
10012508:	6807      	ldr	r7, [r0, #0]
{
1001250a:	4698      	mov	r8, r3
    if (!(int_en[0] & (MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH | MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH |
1001250c:	2900      	cmp	r1, #0
1001250e:	d15a      	bne.n	100125c6 <MXC_I2C_RevA_SlaveAsyncHandler+0xd6>
                       MXC_F_I2C_REVA_INTFL0_ADDR_MATCH))) {
        // The STOPERR/STARTERR interrupt that's enabled here could fire before we are addressed
        // (fires anytime a stop/start is detected out of sequence).
        if (tFlags & MXC_I2C_REVA_ERROR) {
10012510:	f419 4ffe 	tst.w	r9, #32512	@ 0x7f00
10012514:	f040 80cf 	bne.w	100126b6 <MXC_I2C_RevA_SlaveAsyncHandler+0x1c6>
            int_en[0] = 0;
            int_en[1] = 0;
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
        }

        if (int_en[0] & MXC_F_I2C_REVA_INTFL0_RX_THD || int_en[1] & MXC_F_I2C_REVA_INTFL1_RX_OV) {
10012518:	06d3      	lsls	r3, r2, #27
1001251a:	f140 81a4 	bpl.w	10012866 <MXC_I2C_RevA_SlaveAsyncHandler+0x376>
            if (tFlags & MXC_F_I2C_REVA_INTFL0_RX_THD) {
1001251e:	f019 0f10 	tst.w	r9, #16
10012522:	f000 8148 	beq.w	100127b6 <MXC_I2C_RevA_SlaveAsyncHandler+0x2c6>
                if (callback != NULL) {
10012526:	2e00      	cmp	r6, #0
10012528:	f000 815c 	beq.w	100127e4 <MXC_I2C_RevA_SlaveAsyncHandler+0x2f4>
                    callback(i2c, MXC_I2C_REVA_EVT_RX_THRESH, NULL);
1001252c:	2200      	movs	r2, #0
1001252e:	2102      	movs	r1, #2
10012530:	4620      	mov	r0, r4
10012532:	47b0      	blx	r6
                }

                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
10012534:	2310      	movs	r3, #16
10012536:	60a3      	str	r3, [r4, #8]
            }

            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_RX_OV) {
10012538:	6923      	ldr	r3, [r4, #16]
1001253a:	07da      	lsls	r2, r3, #31
1001253c:	d505      	bpl.n	1001254a <MXC_I2C_RevA_SlaveAsyncHandler+0x5a>
                if (callback != NULL) {
                    callback(i2c, MXC_I2C_REVA_EVT_OVERFLOW, NULL);
1001253e:	2200      	movs	r2, #0
10012540:	2106      	movs	r1, #6
10012542:	4620      	mov	r0, r4
10012544:	47b0      	blx	r6
                }

                i2c->intfl1 = MXC_F_I2C_REVA_INTFL1_RX_OV;
10012546:	2301      	movs	r3, #1
10012548:	6123      	str	r3, [r4, #16]
1001254a:	682a      	ldr	r2, [r5, #0]
            }
        }

        if (int_en[0] & (MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) ||
1001254c:	f248 0320 	movw	r3, #32800	@ 0x8020
10012550:	4213      	tst	r3, r2
10012552:	f000 80df 	beq.w	10012714 <MXC_I2C_RevA_SlaveAsyncHandler+0x224>
            int_en[1] & MXC_F_I2C_REVA_INTFL1_TX_UN) {
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_THD) {
10012556:	f019 0f20 	tst.w	r9, #32
                }

                i2c->intfl1 = MXC_F_I2C_REVA_INTFL1_TX_UN;
            }

            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
1001255a:	f409 4a00 	and.w	sl, r9, #32768	@ 0x8000
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_THD) {
1001255e:	f000 80fc 	beq.w	1001275a <MXC_I2C_RevA_SlaveAsyncHandler+0x26a>
                if (callback != NULL) {
10012562:	2e00      	cmp	r6, #0
10012564:	f000 8145 	beq.w	100127f2 <MXC_I2C_RevA_SlaveAsyncHandler+0x302>
                    callback(i2c, MXC_I2C_REVA_EVT_TX_THRESH, NULL);
10012568:	2103      	movs	r1, #3
1001256a:	2200      	movs	r2, #0
1001256c:	4620      	mov	r0, r4
1001256e:	47b0      	blx	r6
                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
10012570:	2320      	movs	r3, #32
10012572:	60a3      	str	r3, [r4, #8]
            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_TX_UN) {
10012574:	6923      	ldr	r3, [r4, #16]
10012576:	0799      	lsls	r1, r3, #30
10012578:	f100 80f5 	bmi.w	10012766 <MXC_I2C_RevA_SlaveAsyncHandler+0x276>
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
1001257c:	f1ba 0f00 	cmp.w	sl, #0
10012580:	f040 80fa 	bne.w	10012778 <MXC_I2C_RevA_SlaveAsyncHandler+0x288>
                int_en[1] = 0;
                AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
            }
        }

        if (tFlags & MXC_F_I2C_REVA_INTFL0_STOP) {
10012584:	f019 0f40 	tst.w	r9, #64	@ 0x40
10012588:	f000 8168 	beq.w	1001285c <MXC_I2C_RevA_SlaveAsyncHandler+0x36c>
            *retVal = E_NO_ERROR;
1001258c:	f8c8 a000 	str.w	sl, [r8]

            if (callback != NULL) {
                callback(i2c, MXC_I2C_REVA_EVT_TRANS_COMP, retVal);
10012590:	4642      	mov	r2, r8
10012592:	2104      	movs	r1, #4
10012594:	4620      	mov	r0, r4
10012596:	47b0      	blx	r6
            }

            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_STOP;
            int_en[0] = 0;
            int_en[1] = 0;
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012598:	4a8b      	ldr	r2, [pc, #556]	@ (100127c8 <MXC_I2C_RevA_SlaveAsyncHandler+0x2d8>)
            int_en[0] = 0;
1001259a:	2300      	movs	r3, #0
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_STOP;
1001259c:	2140      	movs	r1, #64	@ 0x40
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
1001259e:	4294      	cmp	r4, r2
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_STOP;
100125a0:	60a1      	str	r1, [r4, #8]
            int_en[0] = 0;
100125a2:	602b      	str	r3, [r5, #0]
100125a4:	606b      	str	r3, [r5, #4]
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100125a6:	d00a      	beq.n	100125be <MXC_I2C_RevA_SlaveAsyncHandler+0xce>
100125a8:	4b88      	ldr	r3, [pc, #544]	@ (100127cc <MXC_I2C_RevA_SlaveAsyncHandler+0x2dc>)
100125aa:	429c      	cmp	r4, r3
100125ac:	f000 8131 	beq.w	10012812 <MXC_I2C_RevA_SlaveAsyncHandler+0x322>
100125b0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100125b4:	429c      	cmp	r4, r3
100125b6:	bf0c      	ite	eq
100125b8:	2302      	moveq	r3, #2
100125ba:	f04f 33ff 	movne.w	r3, #4294967295	@ 0xffffffff
100125be:	4a84      	ldr	r2, [pc, #528]	@ (100127d0 <MXC_I2C_RevA_SlaveAsyncHandler+0x2e0>)
100125c0:	2100      	movs	r1, #0
100125c2:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
        }
    }

    if (tFlags & MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH) {
100125c6:	f419 0f80 	tst.w	r9, #4194304	@ 0x400000
100125ca:	d011      	beq.n	100125f0 <MXC_I2C_RevA_SlaveAsyncHandler+0x100>
        if (callback != NULL) {
100125cc:	b11e      	cbz	r6, 100125d6 <MXC_I2C_RevA_SlaveAsyncHandler+0xe6>
            callback(i2c, MXC_I2C_REVA_EVT_MASTER_WR, NULL);
100125ce:	2200      	movs	r2, #0
100125d0:	4611      	mov	r1, r2
100125d2:	4620      	mov	r0, r4
100125d4:	47b0      	blx	r6
        }

        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH;
100125d6:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
100125da:	60a3      	str	r3, [r4, #8]
        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
100125dc:	2308      	movs	r3, #8
100125de:	60a3      	str	r3, [r4, #8]
        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT;
100125e0:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
100125e4:	60a3      	str	r3, [r4, #8]

        int_en[0] = MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE | MXC_I2C_REVA_ERROR;
100125e6:	f647 7311 	movw	r3, #32529	@ 0x7f11
100125ea:	602b      	str	r3, [r5, #0]
100125ec:	2301      	movs	r3, #1
100125ee:	606b      	str	r3, [r5, #4]
        int_en[1] = MXC_F_I2C_REVA_INTFL1_RX_OV;
    }

    if (tFlags & MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH) {
100125f0:	f419 0f00 	tst.w	r9, #8388608	@ 0x800000
100125f4:	d00e      	beq.n	10012614 <MXC_I2C_RevA_SlaveAsyncHandler+0x124>
        if (callback != NULL) {
100125f6:	b11e      	cbz	r6, 10012600 <MXC_I2C_RevA_SlaveAsyncHandler+0x110>
            callback(i2c, MXC_I2C_REVA_EVT_MASTER_RD, NULL);
100125f8:	2200      	movs	r2, #0
100125fa:	2101      	movs	r1, #1
100125fc:	4620      	mov	r0, r4
100125fe:	47b0      	blx	r6
        }

        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH;
10012600:	f44f 0300 	mov.w	r3, #8388608	@ 0x800000
10012604:	60a3      	str	r3, [r4, #8]
        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
10012606:	2308      	movs	r3, #8
10012608:	60a3      	str	r3, [r4, #8]
        int_en[0] = MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT |
1001260a:	f64f 7320 	movw	r3, #65312	@ 0xff20
1001260e:	602b      	str	r3, [r5, #0]
10012610:	2302      	movs	r3, #2
10012612:	606b      	str	r3, [r5, #4]
                    MXC_I2C_REVA_ERROR;
        int_en[1] = MXC_F_I2C_REVA_INTFL1_TX_UN;
    }

    if (tFlags & MXC_F_I2C_REVA_INTFL0_ADDR_MATCH) {
10012614:	f019 0f08 	tst.w	r9, #8
10012618:	d017      	beq.n	1001264a <MXC_I2C_RevA_SlaveAsyncHandler+0x15a>
        if (readFlag & MXC_F_I2C_REVA_CTRL_READ) {
1001261a:	f417 6200 	ands.w	r2, r7, #2048	@ 0x800
1001261e:	f000 808c 	beq.w	1001273a <MXC_I2C_RevA_SlaveAsyncHandler+0x24a>
            if (callback != NULL) {
10012622:	b11e      	cbz	r6, 1001262c <MXC_I2C_RevA_SlaveAsyncHandler+0x13c>
                callback(i2c, MXC_I2C_REVA_EVT_MASTER_RD, NULL);
10012624:	2200      	movs	r2, #0
10012626:	2101      	movs	r1, #1
10012628:	4620      	mov	r0, r4
1001262a:	47b0      	blx	r6
            }

            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH;
1001262c:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
10012630:	2308      	movs	r3, #8
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH;
10012632:	60a2      	str	r2, [r4, #8]
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT;
10012634:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
10012638:	60a3      	str	r3, [r4, #8]

            int_en[0] = MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT |
1001263a:	f64f 7220 	movw	r2, #65312	@ 0xff20
1001263e:	2302      	movs	r3, #2
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT;
10012640:	60a1      	str	r1, [r4, #8]
            int_en[0] = MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT |
10012642:	602a      	str	r2, [r5, #0]
10012644:	606b      	str	r3, [r5, #4]
        MXC_I2C_RevA_ClearRXFIFO(i2c);
        int_en[0] = 0;
        int_en[1] = 0;
        AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
    }
}
10012646:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    } else if (tFlags & MXC_I2C_REVA_ERROR) {
1001264a:	f419 4ffe 	tst.w	r9, #32512	@ 0x7f00
1001264e:	d0fa      	beq.n	10012646 <MXC_I2C_RevA_SlaveAsyncHandler+0x156>
        *retVal = E_COMM_ERR;
10012650:	f06f 0308 	mvn.w	r3, #8
10012654:	f8c8 3000 	str.w	r3, [r8]
        if (callback != NULL) {
10012658:	b11e      	cbz	r6, 10012662 <MXC_I2C_RevA_SlaveAsyncHandler+0x172>
            callback(i2c, MXC_I2C_REVA_EVT_TRANS_COMP, retVal);
1001265a:	4642      	mov	r2, r8
1001265c:	2104      	movs	r1, #4
1001265e:	4620      	mov	r0, r4
10012660:	47b0      	blx	r6
    i2c->intfl1 = flags1;
10012662:	2307      	movs	r3, #7
    i2c->intfl0 = flags0;
10012664:	f06f 427f 	mvn.w	r2, #4278190080	@ 0xff000000
10012668:	60a2      	str	r2, [r4, #8]
    i2c->intfl1 = flags1;
1001266a:	6123      	str	r3, [r4, #16]
    i2c->txctrl0 |= MXC_F_I2C_REVA_TXCTRL0_FLUSH;
1001266c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
1001266e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10012672:	6263      	str	r3, [r4, #36]	@ 0x24
    while (i2c->txctrl0 & MXC_F_I2C_REVA_TXCTRL0_FLUSH) {}
10012674:	6a63      	ldr	r3, [r4, #36]	@ 0x24
10012676:	061b      	lsls	r3, r3, #24
10012678:	d4fc      	bmi.n	10012674 <MXC_I2C_RevA_SlaveAsyncHandler+0x184>
    i2c->rxctrl0 |= MXC_F_I2C_REVA_RXCTRL0_FLUSH;
1001267a:	69e3      	ldr	r3, [r4, #28]
1001267c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10012680:	61e3      	str	r3, [r4, #28]
    while (i2c->rxctrl0 & MXC_F_I2C_REVA_RXCTRL0_FLUSH) {}
10012682:	69e3      	ldr	r3, [r4, #28]
10012684:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
10012688:	d1fb      	bne.n	10012682 <MXC_I2C_RevA_SlaveAsyncHandler+0x192>
        AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
1001268a:	4a4f      	ldr	r2, [pc, #316]	@ (100127c8 <MXC_I2C_RevA_SlaveAsyncHandler+0x2d8>)
        int_en[0] = 0;
1001268c:	602b      	str	r3, [r5, #0]
        AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
1001268e:	4294      	cmp	r4, r2
        int_en[0] = 0;
10012690:	606b      	str	r3, [r5, #4]
        AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012692:	d00a      	beq.n	100126aa <MXC_I2C_RevA_SlaveAsyncHandler+0x1ba>
10012694:	4b4d      	ldr	r3, [pc, #308]	@ (100127cc <MXC_I2C_RevA_SlaveAsyncHandler+0x2dc>)
10012696:	429c      	cmp	r4, r3
10012698:	f000 80bf 	beq.w	1001281a <MXC_I2C_RevA_SlaveAsyncHandler+0x32a>
1001269c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100126a0:	429c      	cmp	r4, r3
100126a2:	bf14      	ite	ne
100126a4:	f04f 33ff 	movne.w	r3, #4294967295	@ 0xffffffff
100126a8:	2302      	moveq	r3, #2
100126aa:	4a49      	ldr	r2, [pc, #292]	@ (100127d0 <MXC_I2C_RevA_SlaveAsyncHandler+0x2e0>)
100126ac:	2100      	movs	r1, #0
100126ae:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
100126b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            *retVal = E_COMM_ERR;
100126b6:	f06f 0308 	mvn.w	r3, #8
100126ba:	f8c8 3000 	str.w	r3, [r8]
            if (callback != NULL) {
100126be:	b116      	cbz	r6, 100126c6 <MXC_I2C_RevA_SlaveAsyncHandler+0x1d6>
                callback(i2c, MXC_I2C_REVA_EVT_TRANS_COMP, retVal);
100126c0:	4642      	mov	r2, r8
100126c2:	2104      	movs	r1, #4
100126c4:	47b0      	blx	r6
            MXC_I2C_ClearFlags((mxc_i2c_regs_t *)i2c, MXC_I2C_REVA_INTFL0_MASK,
100126c6:	2207      	movs	r2, #7
100126c8:	f06f 417f 	mvn.w	r1, #4278190080	@ 0xff000000
100126cc:	4620      	mov	r0, r4
100126ce:	f7ff fab9 	bl	10011c44 <MXC_I2C_ClearFlags>
            MXC_I2C_ClearTXFIFO((mxc_i2c_regs_t *)i2c);
100126d2:	4620      	mov	r0, r4
100126d4:	f7ff fab4 	bl	10011c40 <MXC_I2C_ClearTXFIFO>
            MXC_I2C_ClearRXFIFO((mxc_i2c_regs_t *)i2c);
100126d8:	4620      	mov	r0, r4
100126da:	f7ff faaf 	bl	10011c3c <MXC_I2C_ClearRXFIFO>
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100126de:	4a3a      	ldr	r2, [pc, #232]	@ (100127c8 <MXC_I2C_RevA_SlaveAsyncHandler+0x2d8>)
            int_en[0] = 0;
100126e0:	2300      	movs	r3, #0
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100126e2:	4294      	cmp	r4, r2
            int_en[0] = 0;
100126e4:	602b      	str	r3, [r5, #0]
100126e6:	606b      	str	r3, [r5, #4]
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100126e8:	d00a      	beq.n	10012700 <MXC_I2C_RevA_SlaveAsyncHandler+0x210>
100126ea:	4b38      	ldr	r3, [pc, #224]	@ (100127cc <MXC_I2C_RevA_SlaveAsyncHandler+0x2dc>)
100126ec:	429c      	cmp	r4, r3
100126ee:	f000 8092 	beq.w	10012816 <MXC_I2C_RevA_SlaveAsyncHandler+0x326>
100126f2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100126f6:	429c      	cmp	r4, r3
100126f8:	bf0c      	ite	eq
100126fa:	2302      	moveq	r3, #2
100126fc:	f04f 33ff 	movne.w	r3, #4294967295	@ 0xffffffff
10012700:	4a33      	ldr	r2, [pc, #204]	@ (100127d0 <MXC_I2C_RevA_SlaveAsyncHandler+0x2e0>)
10012702:	2100      	movs	r1, #0
10012704:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
        if (int_en[0] & MXC_F_I2C_REVA_INTFL0_RX_THD || int_en[1] & MXC_F_I2C_REVA_INTFL1_RX_OV) {
10012708:	682a      	ldr	r2, [r5, #0]
        if (int_en[0] & (MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) ||
1001270a:	f248 0320 	movw	r3, #32800	@ 0x8020
1001270e:	4213      	tst	r3, r2
10012710:	f47f af21 	bne.w	10012556 <MXC_I2C_RevA_SlaveAsyncHandler+0x66>
            int_en[1] & MXC_F_I2C_REVA_INTFL1_TX_UN) {
10012714:	686b      	ldr	r3, [r5, #4]
        if (int_en[0] & (MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) ||
10012716:	0798      	lsls	r0, r3, #30
10012718:	f53f af1d 	bmi.w	10012556 <MXC_I2C_RevA_SlaveAsyncHandler+0x66>
        if (tFlags & MXC_F_I2C_REVA_INTFL0_STOP) {
1001271c:	f019 0f40 	tst.w	r9, #64	@ 0x40
10012720:	f43f af51 	beq.w	100125c6 <MXC_I2C_RevA_SlaveAsyncHandler+0xd6>
            *retVal = E_NO_ERROR;
10012724:	2300      	movs	r3, #0
10012726:	f8c8 3000 	str.w	r3, [r8]
            if (callback != NULL) {
1001272a:	2e00      	cmp	r6, #0
1001272c:	f43f af34 	beq.w	10012598 <MXC_I2C_RevA_SlaveAsyncHandler+0xa8>
                callback(i2c, MXC_I2C_REVA_EVT_TRANS_COMP, retVal);
10012730:	4642      	mov	r2, r8
10012732:	2104      	movs	r1, #4
10012734:	4620      	mov	r0, r4
10012736:	47b0      	blx	r6
10012738:	e72e      	b.n	10012598 <MXC_I2C_RevA_SlaveAsyncHandler+0xa8>
            if (callback != NULL) {
1001273a:	b116      	cbz	r6, 10012742 <MXC_I2C_RevA_SlaveAsyncHandler+0x252>
                callback(i2c, MXC_I2C_REVA_EVT_MASTER_WR, NULL);
1001273c:	4611      	mov	r1, r2
1001273e:	4620      	mov	r0, r4
10012740:	47b0      	blx	r6
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
10012742:	2308      	movs	r3, #8
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH;
10012744:	f44f 0100 	mov.w	r1, #8388608	@ 0x800000
10012748:	60a1      	str	r1, [r4, #8]
            int_en[0] = MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE |
1001274a:	f647 7211 	movw	r2, #32529	@ 0x7f11
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
1001274e:	60a3      	str	r3, [r4, #8]
            int_en[0] = MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE |
10012750:	2301      	movs	r3, #1
10012752:	602a      	str	r2, [r5, #0]
10012754:	606b      	str	r3, [r5, #4]
}
10012756:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_TX_UN) {
1001275a:	6923      	ldr	r3, [r4, #16]
1001275c:	f013 0302 	ands.w	r3, r3, #2
10012760:	d038      	beq.n	100127d4 <MXC_I2C_RevA_SlaveAsyncHandler+0x2e4>
                if (callback != NULL) {
10012762:	2e00      	cmp	r6, #0
10012764:	d05b      	beq.n	1001281e <MXC_I2C_RevA_SlaveAsyncHandler+0x32e>
                    callback(i2c, MXC_I2C_REVA_EVT_UNDERFLOW, NULL);
10012766:	2200      	movs	r2, #0
10012768:	2105      	movs	r1, #5
1001276a:	4620      	mov	r0, r4
1001276c:	47b0      	blx	r6
                i2c->intfl1 = MXC_F_I2C_REVA_INTFL1_TX_UN;
1001276e:	2302      	movs	r3, #2
10012770:	6123      	str	r3, [r4, #16]
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
10012772:	f1ba 0f00 	cmp.w	sl, #0
10012776:	d0d1      	beq.n	1001271c <MXC_I2C_RevA_SlaveAsyncHandler+0x22c>
                *retVal = E_NO_ERROR;
10012778:	2300      	movs	r3, #0
1001277a:	f8c8 3000 	str.w	r3, [r8]
                    callback(i2c, MXC_I2C_REVA_EVT_TRANS_COMP, retVal);
1001277e:	4642      	mov	r2, r8
10012780:	2104      	movs	r1, #4
10012782:	4620      	mov	r0, r4
10012784:	47b0      	blx	r6
                AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012786:	4a10      	ldr	r2, [pc, #64]	@ (100127c8 <MXC_I2C_RevA_SlaveAsyncHandler+0x2d8>)
                int_en[0] = 0;
10012788:	2300      	movs	r3, #0
                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT;
1001278a:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
                AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
1001278e:	4294      	cmp	r4, r2
                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT;
10012790:	60a1      	str	r1, [r4, #8]
                int_en[0] = 0;
10012792:	602b      	str	r3, [r5, #0]
10012794:	606b      	str	r3, [r5, #4]
                AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012796:	d009      	beq.n	100127ac <MXC_I2C_RevA_SlaveAsyncHandler+0x2bc>
10012798:	4b0c      	ldr	r3, [pc, #48]	@ (100127cc <MXC_I2C_RevA_SlaveAsyncHandler+0x2dc>)
1001279a:	429c      	cmp	r4, r3
1001279c:	d059      	beq.n	10012852 <MXC_I2C_RevA_SlaveAsyncHandler+0x362>
1001279e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100127a2:	429c      	cmp	r4, r3
100127a4:	bf0c      	ite	eq
100127a6:	2302      	moveq	r3, #2
100127a8:	f04f 33ff 	movne.w	r3, #4294967295	@ 0xffffffff
100127ac:	4a08      	ldr	r2, [pc, #32]	@ (100127d0 <MXC_I2C_RevA_SlaveAsyncHandler+0x2e0>)
100127ae:	2100      	movs	r1, #0
100127b0:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
100127b4:	e7b2      	b.n	1001271c <MXC_I2C_RevA_SlaveAsyncHandler+0x22c>
            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_RX_OV) {
100127b6:	6923      	ldr	r3, [r4, #16]
100127b8:	07db      	lsls	r3, r3, #31
100127ba:	d5a6      	bpl.n	1001270a <MXC_I2C_RevA_SlaveAsyncHandler+0x21a>
                if (callback != NULL) {
100127bc:	2e00      	cmp	r6, #0
100127be:	f47f aebe 	bne.w	1001253e <MXC_I2C_RevA_SlaveAsyncHandler+0x4e>
100127c2:	e6c0      	b.n	10012546 <MXC_I2C_RevA_SlaveAsyncHandler+0x56>
100127c4:	00c00008 	.word	0x00c00008
100127c8:	4001d000 	.word	0x4001d000
100127cc:	4001e000 	.word	0x4001e000
100127d0:	20000ff8 	.word	0x20000ff8
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
100127d4:	f1ba 0f00 	cmp.w	sl, #0
100127d8:	d0a0      	beq.n	1001271c <MXC_I2C_RevA_SlaveAsyncHandler+0x22c>
                *retVal = E_NO_ERROR;
100127da:	f8c8 3000 	str.w	r3, [r8]
                if (callback != NULL) {
100127de:	2e00      	cmp	r6, #0
100127e0:	d0d1      	beq.n	10012786 <MXC_I2C_RevA_SlaveAsyncHandler+0x296>
100127e2:	e7cc      	b.n	1001277e <MXC_I2C_RevA_SlaveAsyncHandler+0x28e>
                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
100127e4:	2310      	movs	r3, #16
100127e6:	60a3      	str	r3, [r4, #8]
            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_RX_OV) {
100127e8:	6923      	ldr	r3, [r4, #16]
100127ea:	07d9      	lsls	r1, r3, #31
100127ec:	f53f aeab 	bmi.w	10012546 <MXC_I2C_RevA_SlaveAsyncHandler+0x56>
100127f0:	e6ab      	b.n	1001254a <MXC_I2C_RevA_SlaveAsyncHandler+0x5a>
                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
100127f2:	2320      	movs	r3, #32
100127f4:	60a3      	str	r3, [r4, #8]
            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_TX_UN) {
100127f6:	6923      	ldr	r3, [r4, #16]
100127f8:	079a      	lsls	r2, r3, #30
100127fa:	d421      	bmi.n	10012840 <MXC_I2C_RevA_SlaveAsyncHandler+0x350>
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
100127fc:	f1ba 0f00 	cmp.w	sl, #0
10012800:	d123      	bne.n	1001284a <MXC_I2C_RevA_SlaveAsyncHandler+0x35a>
        if (tFlags & MXC_F_I2C_REVA_INTFL0_STOP) {
10012802:	f019 0f40 	tst.w	r9, #64	@ 0x40
10012806:	d126      	bne.n	10012856 <MXC_I2C_RevA_SlaveAsyncHandler+0x366>
    if (tFlags & MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH) {
10012808:	f419 0f80 	tst.w	r9, #4194304	@ 0x400000
1001280c:	f47f aee3 	bne.w	100125d6 <MXC_I2C_RevA_SlaveAsyncHandler+0xe6>
10012810:	e6ee      	b.n	100125f0 <MXC_I2C_RevA_SlaveAsyncHandler+0x100>
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012812:	2301      	movs	r3, #1
10012814:	e6d3      	b.n	100125be <MXC_I2C_RevA_SlaveAsyncHandler+0xce>
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012816:	2301      	movs	r3, #1
10012818:	e772      	b.n	10012700 <MXC_I2C_RevA_SlaveAsyncHandler+0x210>
        AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
1001281a:	2301      	movs	r3, #1
1001281c:	e745      	b.n	100126aa <MXC_I2C_RevA_SlaveAsyncHandler+0x1ba>
                i2c->intfl1 = MXC_F_I2C_REVA_INTFL1_TX_UN;
1001281e:	2302      	movs	r3, #2
10012820:	6123      	str	r3, [r4, #16]
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
10012822:	f1ba 0f00 	cmp.w	sl, #0
10012826:	d110      	bne.n	1001284a <MXC_I2C_RevA_SlaveAsyncHandler+0x35a>
        if (tFlags & MXC_F_I2C_REVA_INTFL0_STOP) {
10012828:	f019 0f40 	tst.w	r9, #64	@ 0x40
1001282c:	d113      	bne.n	10012856 <MXC_I2C_RevA_SlaveAsyncHandler+0x366>
    if (tFlags & MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH) {
1001282e:	f419 0f80 	tst.w	r9, #4194304	@ 0x400000
10012832:	f47f aed0 	bne.w	100125d6 <MXC_I2C_RevA_SlaveAsyncHandler+0xe6>
    if (tFlags & MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH) {
10012836:	f419 0f00 	tst.w	r9, #8388608	@ 0x800000
1001283a:	f47f aee1 	bne.w	10012600 <MXC_I2C_RevA_SlaveAsyncHandler+0x110>
1001283e:	e6e9      	b.n	10012614 <MXC_I2C_RevA_SlaveAsyncHandler+0x124>
                i2c->intfl1 = MXC_F_I2C_REVA_INTFL1_TX_UN;
10012840:	2302      	movs	r3, #2
10012842:	6123      	str	r3, [r4, #16]
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
10012844:	f1ba 0f00 	cmp.w	sl, #0
10012848:	d0db      	beq.n	10012802 <MXC_I2C_RevA_SlaveAsyncHandler+0x312>
                *retVal = E_NO_ERROR;
1001284a:	2300      	movs	r3, #0
1001284c:	f8c8 3000 	str.w	r3, [r8]
                if (callback != NULL) {
10012850:	e799      	b.n	10012786 <MXC_I2C_RevA_SlaveAsyncHandler+0x296>
                AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012852:	2301      	movs	r3, #1
10012854:	e7aa      	b.n	100127ac <MXC_I2C_RevA_SlaveAsyncHandler+0x2bc>
            *retVal = E_NO_ERROR;
10012856:	f8c8 6000 	str.w	r6, [r8]
            if (callback != NULL) {
1001285a:	e69d      	b.n	10012598 <MXC_I2C_RevA_SlaveAsyncHandler+0xa8>
    if (tFlags & MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH) {
1001285c:	f419 0f80 	tst.w	r9, #4194304	@ 0x400000
10012860:	f47f aeb5 	bne.w	100125ce <MXC_I2C_RevA_SlaveAsyncHandler+0xde>
10012864:	e6c4      	b.n	100125f0 <MXC_I2C_RevA_SlaveAsyncHandler+0x100>
        if (int_en[0] & MXC_F_I2C_REVA_INTFL0_RX_THD || int_en[1] & MXC_F_I2C_REVA_INTFL1_RX_OV) {
10012866:	686b      	ldr	r3, [r5, #4]
10012868:	07d8      	lsls	r0, r3, #31
1001286a:	f53f ae58 	bmi.w	1001251e <MXC_I2C_RevA_SlaveAsyncHandler+0x2e>
1001286e:	e74c      	b.n	1001270a <MXC_I2C_RevA_SlaveAsyncHandler+0x21a>

10012870 <MXC_I2C_RevA_AsyncHandler>:

void MXC_I2C_RevA_AsyncHandler(mxc_i2c_reva_regs_t *i2c, uint32_t interruptCheck)
{
10012870:	b530      	push	{r4, r5, lr}
    int i2cNum = MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c);
10012872:	4b17      	ldr	r3, [pc, #92]	@ (100128d0 <MXC_I2C_RevA_AsyncHandler+0x60>)
10012874:	4298      	cmp	r0, r3
{
10012876:	b085      	sub	sp, #20
10012878:	4604      	mov	r4, r0
    int i2cNum = MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c);
1001287a:	d024      	beq.n	100128c6 <MXC_I2C_RevA_AsyncHandler+0x56>
1001287c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012880:	4298      	cmp	r0, r3
10012882:	d005      	beq.n	10012890 <MXC_I2C_RevA_AsyncHandler+0x20>
10012884:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012888:	4298      	cmp	r0, r3
1001288a:	d01e      	beq.n	100128ca <MXC_I2C_RevA_AsyncHandler+0x5a>
        MXC_I2C_RevA_SlaveAsyncHandler(i2c, callback, int_en, &slaveRetVal);

        i2c->inten0 = int_en[0];
        i2c->inten1 = int_en[1];
    }
}
1001288c:	b005      	add	sp, #20
1001288e:	bd30      	pop	{r4, r5, pc}
    int i2cNum = MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c);
10012890:	2001      	movs	r0, #1
    if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_MST_MODE) {
10012892:	6823      	ldr	r3, [r4, #0]
10012894:	079b      	lsls	r3, r3, #30
10012896:	d504      	bpl.n	100128a2 <MXC_I2C_RevA_AsyncHandler+0x32>
}
10012898:	b005      	add	sp, #20
1001289a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
        MXC_I2C_RevA_MasterAsyncHandler(i2cNum);
1001289e:	f7ff bc8b 	b.w	100121b8 <MXC_I2C_RevA_MasterAsyncHandler>
        int_en[0] = i2c->inten0;
100128a2:	68e5      	ldr	r5, [r4, #12]
        mxc_i2c_reva_slave_handler_t callback = (mxc_i2c_reva_slave_handler_t)AsyncRequests[i2cNum];
100128a4:	4b0b      	ldr	r3, [pc, #44]	@ (100128d4 <MXC_I2C_RevA_AsyncHandler+0x64>)
        int_en[1] = i2c->inten1;
100128a6:	6962      	ldr	r2, [r4, #20]
        MXC_I2C_RevA_SlaveAsyncHandler(i2c, callback, int_en, &slaveRetVal);
100128a8:	f853 1020 	ldr.w	r1, [r3, r0, lsl #2]
        int_en[1] = i2c->inten1;
100128ac:	e9cd 5202 	strd	r5, r2, [sp, #8]
        MXC_I2C_RevA_SlaveAsyncHandler(i2c, callback, int_en, &slaveRetVal);
100128b0:	ab01      	add	r3, sp, #4
100128b2:	aa02      	add	r2, sp, #8
100128b4:	4620      	mov	r0, r4
100128b6:	f7ff fe1b 	bl	100124f0 <MXC_I2C_RevA_SlaveAsyncHandler>
        i2c->inten1 = int_en[1];
100128ba:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        i2c->inten0 = int_en[0];
100128be:	60e2      	str	r2, [r4, #12]
        i2c->inten1 = int_en[1];
100128c0:	6163      	str	r3, [r4, #20]
}
100128c2:	b005      	add	sp, #20
100128c4:	bd30      	pop	{r4, r5, pc}
    int i2cNum = MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c);
100128c6:	2000      	movs	r0, #0
100128c8:	e7e3      	b.n	10012892 <MXC_I2C_RevA_AsyncHandler+0x22>
100128ca:	2002      	movs	r0, #2
100128cc:	e7e1      	b.n	10012892 <MXC_I2C_RevA_AsyncHandler+0x22>
100128ce:	bf00      	nop
100128d0:	4001d000 	.word	0x4001d000
100128d4:	20000ff8 	.word	0x20000ff8

100128d8 <MXC_ICC_Enable>:
    return MXC_ICC_RevA_ID((mxc_icc_reva_regs_t *)icc, cid);
}

void MXC_ICC_Enable(mxc_icc_regs_t *icc)
{
    MXC_ICC_RevA_Enable((mxc_icc_reva_regs_t *)icc);
100128d8:	f000 b802 	b.w	100128e0 <MXC_ICC_RevA_Enable>

100128dc <MXC_ICC_Disable>:
}

void MXC_ICC_Disable(mxc_icc_regs_t *icc)
{
    MXC_ICC_RevA_Disable((mxc_icc_reva_regs_t *)icc);
100128dc:	f000 b818 	b.w	10012910 <MXC_ICC_RevA_Disable>

100128e0 <MXC_ICC_RevA_Enable>:
}

void MXC_ICC_RevA_Enable(mxc_icc_reva_regs_t *icc)
{
    // Invalidate cache and wait until ready
    icc->ctrl &= ~MXC_F_ICC_REVA_CTRL_EN;
100128e0:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
    icc->invalidate = 1;
100128e4:	2201      	movs	r2, #1
    icc->ctrl &= ~MXC_F_ICC_REVA_CTRL_EN;
100128e6:	f023 0301 	bic.w	r3, r3, #1
100128ea:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
    icc->invalidate = 1;
100128ee:	f8c0 2700 	str.w	r2, [r0, #1792]	@ 0x700
    return (icc->ctrl & MXC_F_ICC_REVA_CTRL_RDY);
100128f2:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100

    while (!(MXC_ICC_Ready(icc))) {}
100128f6:	03da      	lsls	r2, r3, #15
100128f8:	d5fb      	bpl.n	100128f2 <MXC_ICC_RevA_Enable+0x12>

    // Enable Cache
    icc->ctrl |= MXC_F_ICC_REVA_CTRL_EN;
100128fa:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
100128fe:	f043 0301 	orr.w	r3, r3, #1
10012902:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
    return (icc->ctrl & MXC_F_ICC_REVA_CTRL_RDY);
10012906:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
    while (!(MXC_ICC_Ready(icc))) {}
1001290a:	03db      	lsls	r3, r3, #15
1001290c:	d5fb      	bpl.n	10012906 <MXC_ICC_RevA_Enable+0x26>
}
1001290e:	4770      	bx	lr

10012910 <MXC_ICC_RevA_Disable>:

void MXC_ICC_RevA_Disable(mxc_icc_reva_regs_t *icc)
{
    // Disable Cache
    icc->ctrl &= ~MXC_F_ICC_REVA_CTRL_EN;
10012910:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
10012914:	f023 0301 	bic.w	r3, r3, #1
10012918:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
}
1001291c:	4770      	bx	lr
1001291e:	bf00      	nop

10012920 <MXC_UART_Shutdown>:

    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
}

int MXC_UART_Shutdown(mxc_uart_regs_t *uart)
{
10012920:	b508      	push	{r3, lr}
    switch (MXC_UART_GET_IDX(uart)) {
10012922:	4b16      	ldr	r3, [pc, #88]	@ (1001297c <MXC_UART_Shutdown+0x5c>)
10012924:	4298      	cmp	r0, r3
10012926:	d010      	beq.n	1001294a <MXC_UART_Shutdown+0x2a>
10012928:	4b15      	ldr	r3, [pc, #84]	@ (10012980 <MXC_UART_Shutdown+0x60>)
1001292a:	4298      	cmp	r0, r3
1001292c:	d014      	beq.n	10012958 <MXC_UART_Shutdown+0x38>
1001292e:	4b15      	ldr	r3, [pc, #84]	@ (10012984 <MXC_UART_Shutdown+0x64>)
10012930:	4298      	cmp	r0, r3
10012932:	d018      	beq.n	10012966 <MXC_UART_Shutdown+0x46>
10012934:	4b14      	ldr	r3, [pc, #80]	@ (10012988 <MXC_UART_Shutdown+0x68>)
10012936:	4298      	cmp	r0, r3
10012938:	d11c      	bne.n	10012974 <MXC_UART_Shutdown+0x54>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART2);
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART2);
        break;

    case 3:
        MXC_SYS_Reset_Periph(MXC_SYS_RESET_UART3);
1001293a:	2044      	movs	r0, #68	@ 0x44
1001293c:	f7fe fec0 	bl	100116c0 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART3);
10012940:	2044      	movs	r0, #68	@ 0x44
10012942:	f7fe fe01 	bl	10011548 <MXC_SYS_ClockDisable>

    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
10012946:	2000      	movs	r0, #0
}
10012948:	bd08      	pop	{r3, pc}
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART0);
1001294a:	200b      	movs	r0, #11
1001294c:	f7fe feb8 	bl	100116c0 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART0);
10012950:	2009      	movs	r0, #9
10012952:	f7fe fdf9 	bl	10011548 <MXC_SYS_ClockDisable>
        break;
10012956:	e7f6      	b.n	10012946 <MXC_UART_Shutdown+0x26>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART1);
10012958:	200c      	movs	r0, #12
1001295a:	f7fe feb1 	bl	100116c0 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART1);
1001295e:	200a      	movs	r0, #10
10012960:	f7fe fdf2 	bl	10011548 <MXC_SYS_ClockDisable>
        break;
10012964:	e7ef      	b.n	10012946 <MXC_UART_Shutdown+0x26>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART2);
10012966:	201c      	movs	r0, #28
10012968:	f7fe feaa 	bl	100116c0 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART2);
1001296c:	2021      	movs	r0, #33	@ 0x21
1001296e:	f7fe fdeb 	bl	10011548 <MXC_SYS_ClockDisable>
        break;
10012972:	e7e8      	b.n	10012946 <MXC_UART_Shutdown+0x26>
        return E_BAD_PARAM;
10012974:	f06f 0002 	mvn.w	r0, #2
}
10012978:	bd08      	pop	{r3, pc}
1001297a:	bf00      	nop
1001297c:	40042000 	.word	0x40042000
10012980:	40043000 	.word	0x40043000
10012984:	40044000 	.word	0x40044000
10012988:	40081400 	.word	0x40081400

1001298c <MXC_UART_Init>:
{
1001298c:	b570      	push	{r4, r5, r6, lr}
1001298e:	4604      	mov	r4, r0
10012990:	460e      	mov	r6, r1
10012992:	4615      	mov	r5, r2
    retval = MXC_UART_Shutdown(uart);
10012994:	f7ff ffc4 	bl	10012920 <MXC_UART_Shutdown>
    if (retval) {
10012998:	bba8      	cbnz	r0, 10012a06 <MXC_UART_Init+0x7a>
    switch (clock) {
1001299a:	2d02      	cmp	r5, #2
1001299c:	d02d      	beq.n	100129fa <MXC_UART_Init+0x6e>
1001299e:	2d04      	cmp	r5, #4
100129a0:	d018      	beq.n	100129d4 <MXC_UART_Init+0x48>
    switch (MXC_UART_GET_IDX(uart)) {
100129a2:	4b20      	ldr	r3, [pc, #128]	@ (10012a24 <MXC_UART_Init+0x98>)
100129a4:	429c      	cmp	r4, r3
100129a6:	d01b      	beq.n	100129e0 <MXC_UART_Init+0x54>
100129a8:	4b1f      	ldr	r3, [pc, #124]	@ (10012a28 <MXC_UART_Init+0x9c>)
100129aa:	429c      	cmp	r4, r3
100129ac:	d02c      	beq.n	10012a08 <MXC_UART_Init+0x7c>
100129ae:	4b1f      	ldr	r3, [pc, #124]	@ (10012a2c <MXC_UART_Init+0xa0>)
100129b0:	429c      	cmp	r4, r3
100129b2:	d030      	beq.n	10012a16 <MXC_UART_Init+0x8a>
100129b4:	4b1e      	ldr	r3, [pc, #120]	@ (10012a30 <MXC_UART_Init+0xa4>)
100129b6:	429c      	cmp	r4, r3
100129b8:	d123      	bne.n	10012a02 <MXC_UART_Init+0x76>
        MXC_GPIO_Config(&gpio_cfg_uart3);
100129ba:	481e      	ldr	r0, [pc, #120]	@ (10012a34 <MXC_UART_Init+0xa8>)
100129bc:	f7fe ff1a 	bl	100117f4 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART3);
100129c0:	2044      	movs	r0, #68	@ 0x44
100129c2:	f7fe fde1 	bl	10011588 <MXC_SYS_ClockEnable>
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
100129c6:	462a      	mov	r2, r5
100129c8:	4631      	mov	r1, r6
100129ca:	4620      	mov	r0, r4
}
100129cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
100129d0:	f000 b8f8 	b.w	10012bc4 <MXC_UART_RevB_Init>
        MXC_SYS_ClockSourceEnable(MXC_SYS_CLOCK_ERTCO);
100129d4:	2006      	movs	r0, #6
100129d6:	f7fe fdf9 	bl	100115cc <MXC_SYS_ClockSourceEnable>
    switch (MXC_UART_GET_IDX(uart)) {
100129da:	4b12      	ldr	r3, [pc, #72]	@ (10012a24 <MXC_UART_Init+0x98>)
100129dc:	429c      	cmp	r4, r3
100129de:	d1e3      	bne.n	100129a8 <MXC_UART_Init+0x1c>
        MXC_GPIO_Config(&gpio_cfg_uart0);
100129e0:	4815      	ldr	r0, [pc, #84]	@ (10012a38 <MXC_UART_Init+0xac>)
100129e2:	f7fe ff07 	bl	100117f4 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART0);
100129e6:	2009      	movs	r0, #9
100129e8:	f7fe fdce 	bl	10011588 <MXC_SYS_ClockEnable>
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
100129ec:	462a      	mov	r2, r5
100129ee:	4631      	mov	r1, r6
100129f0:	4620      	mov	r0, r4
}
100129f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
100129f6:	f000 b8e5 	b.w	10012bc4 <MXC_UART_RevB_Init>
        MXC_SYS_ClockSourceEnable(MXC_SYS_CLOCK_IBRO);
100129fa:	2005      	movs	r0, #5
100129fc:	f7fe fde6 	bl	100115cc <MXC_SYS_ClockSourceEnable>
        break;
10012a00:	e7cf      	b.n	100129a2 <MXC_UART_Init+0x16>
        return E_BAD_PARAM;
10012a02:	f06f 0002 	mvn.w	r0, #2
}
10012a06:	bd70      	pop	{r4, r5, r6, pc}
        MXC_GPIO_Config(&gpio_cfg_uart1);
10012a08:	480c      	ldr	r0, [pc, #48]	@ (10012a3c <MXC_UART_Init+0xb0>)
10012a0a:	f7fe fef3 	bl	100117f4 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART1);
10012a0e:	200a      	movs	r0, #10
10012a10:	f7fe fdba 	bl	10011588 <MXC_SYS_ClockEnable>
        break;
10012a14:	e7d7      	b.n	100129c6 <MXC_UART_Init+0x3a>
        MXC_GPIO_Config(&gpio_cfg_uart2);
10012a16:	480a      	ldr	r0, [pc, #40]	@ (10012a40 <MXC_UART_Init+0xb4>)
10012a18:	f7fe feec 	bl	100117f4 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART2);
10012a1c:	2021      	movs	r0, #33	@ 0x21
10012a1e:	f7fe fdb3 	bl	10011588 <MXC_SYS_ClockEnable>
        break;
10012a22:	e7d0      	b.n	100129c6 <MXC_UART_Init+0x3a>
10012a24:	40042000 	.word	0x40042000
10012a28:	40043000 	.word	0x40043000
10012a2c:	40044000 	.word	0x40044000
10012a30:	40081400 	.word	0x40081400
10012a34:	10020a2c 	.word	0x10020a2c
10012a38:	10020a50 	.word	0x10020a50
10012a3c:	10020a44 	.word	0x10020a44
10012a40:	10020a38 	.word	0x10020a38

10012a44 <MXC_UART_SetFrequency>:
}

int MXC_UART_SetFrequency(mxc_uart_regs_t *uart, unsigned int baud, mxc_uart_clock_t clock)
{
    int frequency, clkDiv = 0, mod = 0;
    if (MXC_UART_GET_IDX(uart) < 0) {
10012a44:	4b31      	ldr	r3, [pc, #196]	@ (10012b0c <MXC_UART_SetFrequency+0xc8>)
10012a46:	4298      	cmp	r0, r3
{
10012a48:	b510      	push	{r4, lr}
10012a4a:	4604      	mov	r4, r0
    if (MXC_UART_GET_IDX(uart) < 0) {
10012a4c:	d015      	beq.n	10012a7a <MXC_UART_SetFrequency+0x36>
10012a4e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012a52:	4298      	cmp	r0, r3
10012a54:	d011      	beq.n	10012a7a <MXC_UART_SetFrequency+0x36>
10012a56:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012a5a:	4298      	cmp	r0, r3
10012a5c:	d00d      	beq.n	10012a7a <MXC_UART_SetFrequency+0x36>
10012a5e:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10012a62:	4298      	cmp	r0, r3
10012a64:	d106      	bne.n	10012a74 <MXC_UART_SetFrequency+0x30>
    }

    // check if the uart is LPUART
    if (uart == MXC_UART3) {
        // OSR default value
        uart->osr = 5;
10012a66:	2305      	movs	r3, #5

        switch (clock) {
10012a68:	2a02      	cmp	r2, #2
        uart->osr = 5;
10012a6a:	6143      	str	r3, [r0, #20]
        switch (clock) {
10012a6c:	d014      	beq.n	10012a98 <MXC_UART_SetFrequency+0x54>
10012a6e:	2a04      	cmp	r2, #4
10012a70:	d032      	beq.n	10012ad8 <MXC_UART_SetFrequency+0x94>
10012a72:	b18a      	cbz	r2, 10012a98 <MXC_UART_SetFrequency+0x54>
        return E_BAD_PARAM;
10012a74:	f06f 0002 	mvn.w	r0, #2
        uart->ctrl |= MXC_F_UART_CTRL_BCLKEN;
        while (((uart->ctrl & MXC_F_UART_CTRL_BCLKRDY) >> MXC_F_UART_CTRL_BCLKRDY_POS) == 0) {}
    }

    return frequency;
}
10012a78:	bd10      	pop	{r4, pc}
        if (clock == MXC_UART_ERTCO_CLK) {
10012a7a:	2a04      	cmp	r2, #4
10012a7c:	d0fa      	beq.n	10012a74 <MXC_UART_SetFrequency+0x30>
        frequency = MXC_UART_RevB_SetFrequency((mxc_uart_revb_regs_t *)uart, baud, clock);
10012a7e:	4620      	mov	r0, r4
10012a80:	f000 f8d8 	bl	10012c34 <MXC_UART_RevB_SetFrequency>
    if (frequency > 0) {
10012a84:	2800      	cmp	r0, #0
10012a86:	ddf7      	ble.n	10012a78 <MXC_UART_SetFrequency+0x34>
        uart->ctrl |= MXC_F_UART_CTRL_BCLKEN;
10012a88:	6823      	ldr	r3, [r4, #0]
10012a8a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
10012a8e:	6023      	str	r3, [r4, #0]
        while (((uart->ctrl & MXC_F_UART_CTRL_BCLKRDY) >> MXC_F_UART_CTRL_BCLKRDY_POS) == 0) {}
10012a90:	6823      	ldr	r3, [r4, #0]
10012a92:	031b      	lsls	r3, r3, #12
10012a94:	d5fc      	bpl.n	10012a90 <MXC_UART_SetFrequency+0x4c>
}
10012a96:	bd10      	pop	{r4, pc}
            clkDiv = ((IBRO_FREQ) / baud);
10012a98:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
10012a9c:	fbb3 f3f1 	udiv	r3, r3, r1
            mod = ((IBRO_FREQ) % baud);
10012aa0:	fb01 f203 	mul.w	r2, r1, r3
10012aa4:	f5c2 02e1 	rsb	r2, r2, #7372800	@ 0x708000
        if (!clkDiv || mod > (baud / 2)) {
10012aa8:	b113      	cbz	r3, 10012ab0 <MXC_UART_SetFrequency+0x6c>
10012aaa:	ebb2 0f51 	cmp.w	r2, r1, lsr #1
10012aae:	d900      	bls.n	10012ab2 <MXC_UART_SetFrequency+0x6e>
            clkDiv++;
10012ab0:	3301      	adds	r3, #1
        uart->clkdiv = clkDiv;
10012ab2:	4a17      	ldr	r2, [pc, #92]	@ (10012b10 <MXC_UART_SetFrequency+0xcc>)
10012ab4:	6113      	str	r3, [r2, #16]
        return E_BAD_PARAM;
    }

    // check if UARt is LP UART
    if (uart == MXC_UART3) {
        if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) == MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
10012ab6:	6810      	ldr	r0, [r2, #0]
10012ab8:	f400 3040 	and.w	r0, r0, #196608	@ 0x30000
10012abc:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
10012ac0:	d005      	beq.n	10012ace <MXC_UART_SetFrequency+0x8a>
            periphClock = ERTCO_FREQ * 2;
        } else if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) ==
10012ac2:	6813      	ldr	r3, [r2, #0]
10012ac4:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
10012ac8:	d1d4      	bne.n	10012a74 <MXC_UART_SetFrequency+0x30>
10012aca:	f44f 00e1 	mov.w	r0, #7372800	@ 0x708000
                   MXC_S_UART_CTRL_BCLKSRC_PERIPHERAL_CLOCK) {
            periphClock = IBRO_FREQ;
        } else {
            return E_BAD_PARAM;
        }
        return (periphClock / uart->clkdiv);
10012ace:	4b10      	ldr	r3, [pc, #64]	@ (10012b10 <MXC_UART_SetFrequency+0xcc>)
10012ad0:	691b      	ldr	r3, [r3, #16]
10012ad2:	fbb0 f0f3 	udiv	r0, r0, r3
10012ad6:	e7d5      	b.n	10012a84 <MXC_UART_SetFrequency+0x40>
            uart->ctrl |= MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK;
10012ad8:	6803      	ldr	r3, [r0, #0]
10012ada:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
10012ade:	6003      	str	r3, [r0, #0]
            uart->ctrl |= MXC_F_UART_CTRL_FDM;
10012ae0:	6803      	ldr	r3, [r0, #0]
            if (baud > 2400) {
10012ae2:	f5b1 6f16 	cmp.w	r1, #2400	@ 0x960
            uart->ctrl |= MXC_F_UART_CTRL_FDM;
10012ae6:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
10012aea:	6003      	str	r3, [r0, #0]
            if (baud > 2400) {
10012aec:	d90a      	bls.n	10012b04 <MXC_UART_SetFrequency+0xc0>
                uart->osr = 0;
10012aee:	2300      	movs	r3, #0
10012af0:	6143      	str	r3, [r0, #20]
            clkDiv = ((ERTCO_FREQ * 2) / baud);
10012af2:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
10012af6:	fbb3 f3f1 	udiv	r3, r3, r1
            mod = ((ERTCO_FREQ * 2) % baud);
10012afa:	fb01 f203 	mul.w	r2, r1, r3
10012afe:	f5c2 3280 	rsb	r2, r2, #65536	@ 0x10000
10012b02:	e7d1      	b.n	10012aa8 <MXC_UART_SetFrequency+0x64>
                uart->osr = 1;
10012b04:	2301      	movs	r3, #1
10012b06:	6143      	str	r3, [r0, #20]
10012b08:	e7f3      	b.n	10012af2 <MXC_UART_SetFrequency+0xae>
10012b0a:	bf00      	nop
10012b0c:	40042000 	.word	0x40042000
10012b10:	40081400 	.word	0x40081400

10012b14 <MXC_UART_GetFrequency>:
    if (MXC_UART_GET_IDX(uart) < 0) {
10012b14:	4b12      	ldr	r3, [pc, #72]	@ (10012b60 <MXC_UART_GetFrequency+0x4c>)
10012b16:	4298      	cmp	r0, r3
10012b18:	d01c      	beq.n	10012b54 <MXC_UART_GetFrequency+0x40>
10012b1a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012b1e:	4298      	cmp	r0, r3
10012b20:	d018      	beq.n	10012b54 <MXC_UART_GetFrequency+0x40>
10012b22:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012b26:	4298      	cmp	r0, r3
10012b28:	d014      	beq.n	10012b54 <MXC_UART_GetFrequency+0x40>
10012b2a:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10012b2e:	4298      	cmp	r0, r3
10012b30:	d112      	bne.n	10012b58 <MXC_UART_GetFrequency+0x44>
        if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) == MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
10012b32:	6803      	ldr	r3, [r0, #0]
10012b34:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
10012b38:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
10012b3c:	d005      	beq.n	10012b4a <MXC_UART_GetFrequency+0x36>
        } else if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) ==
10012b3e:	6803      	ldr	r3, [r0, #0]
10012b40:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
10012b44:	d108      	bne.n	10012b58 <MXC_UART_GetFrequency+0x44>
10012b46:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
        return (periphClock / uart->clkdiv);
10012b4a:	4a06      	ldr	r2, [pc, #24]	@ (10012b64 <MXC_UART_GetFrequency+0x50>)
10012b4c:	6910      	ldr	r0, [r2, #16]
10012b4e:	fbb3 f0f0 	udiv	r0, r3, r0
10012b52:	4770      	bx	lr
    } else {
        return MXC_UART_RevB_GetFrequency((mxc_uart_revb_regs_t *)uart);
10012b54:	f000 b8ba 	b.w	10012ccc <MXC_UART_RevB_GetFrequency>
        return E_BAD_PARAM;
10012b58:	f06f 0002 	mvn.w	r0, #2
    }
}
10012b5c:	4770      	bx	lr
10012b5e:	bf00      	nop
10012b60:	40042000 	.word	0x40042000
10012b64:	40081400 	.word	0x40081400

10012b68 <MXC_UART_SetDataSize>:

int MXC_UART_SetDataSize(mxc_uart_regs_t *uart, int dataSize)
{
    return MXC_UART_RevB_SetDataSize((mxc_uart_revb_regs_t *)uart, dataSize);
10012b68:	f000 b8f0 	b.w	10012d4c <MXC_UART_RevB_SetDataSize>

10012b6c <MXC_UART_SetStopBits>:
}

int MXC_UART_SetStopBits(mxc_uart_regs_t *uart, mxc_uart_stop_t stopBits)
{
    return MXC_UART_RevB_SetStopBits((mxc_uart_revb_regs_t *)uart, stopBits);
10012b6c:	f000 b90e 	b.w	10012d8c <MXC_UART_RevB_SetStopBits>

10012b70 <MXC_UART_SetParity>:
}

int MXC_UART_SetParity(mxc_uart_regs_t *uart, mxc_uart_parity_t parity)
{
    return MXC_UART_RevB_SetParity((mxc_uart_revb_regs_t *)uart, parity);
10012b70:	f000 b930 	b.w	10012dd4 <MXC_UART_RevB_SetParity>

10012b74 <MXC_UART_ReadCharacterRaw>:
    return MXC_UART_RevB_AbortTransmission((mxc_uart_revb_regs_t *)uart);
}

int MXC_UART_ReadCharacterRaw(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_ReadCharacterRaw((mxc_uart_revb_regs_t *)uart);
10012b74:	f000 b984 	b.w	10012e80 <MXC_UART_RevB_ReadCharacterRaw>

10012b78 <MXC_UART_WriteCharacterRaw>:
}

int MXC_UART_WriteCharacterRaw(mxc_uart_regs_t *uart, uint8_t character)
{
    return MXC_UART_RevB_WriteCharacterRaw((mxc_uart_revb_regs_t *)uart, character);
10012b78:	f000 b99e 	b.w	10012eb8 <MXC_UART_RevB_WriteCharacterRaw>

10012b7c <MXC_UART_ReadCharacter>:
}

int MXC_UART_ReadCharacter(mxc_uart_regs_t *uart)
{
    return MXC_UART_Common_ReadCharacter(uart);
10012b7c:	f000 b808 	b.w	10012b90 <MXC_UART_Common_ReadCharacter>

10012b80 <MXC_UART_WriteCharacter>:
}

int MXC_UART_WriteCharacter(mxc_uart_regs_t *uart, uint8_t character)
{
    return MXC_UART_Common_WriteCharacter(uart, character);
10012b80:	f000 b812 	b.w	10012ba8 <MXC_UART_Common_WriteCharacter>

10012b84 <MXC_UART_GetRXFIFOAvailable>:
    return MXC_UART_RevB_ReadRXFIFODMA((mxc_uart_revb_regs_t *)uart, bytes, len, callback, config);
}

unsigned int MXC_UART_GetRXFIFOAvailable(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_GetRXFIFOAvailable((mxc_uart_revb_regs_t *)uart);
10012b84:	f000 b9b6 	b.w	10012ef4 <MXC_UART_RevB_GetRXFIFOAvailable>

10012b88 <MXC_UART_GetTXFIFOAvailable>:
    return MXC_UART_RevB_WriteTXFIFODMA((mxc_uart_revb_regs_t *)uart, bytes, len, callback, config);
}

unsigned int MXC_UART_GetTXFIFOAvailable(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_GetTXFIFOAvailable((mxc_uart_revb_regs_t *)uart);
10012b88:	f000 b9b8 	b.w	10012efc <MXC_UART_RevB_GetTXFIFOAvailable>

10012b8c <MXC_UART_SetRXThreshold>:
    return MXC_UART_RevB_ClearTXFIFO((mxc_uart_revb_regs_t *)uart);
}

int MXC_UART_SetRXThreshold(mxc_uart_regs_t *uart, unsigned int numBytes)
{
    return MXC_UART_RevB_SetRXThreshold((mxc_uart_revb_regs_t *)uart, numBytes);
10012b8c:	f000 b9bc 	b.w	10012f08 <MXC_UART_RevB_SetRXThreshold>

10012b90 <MXC_UART_Common_ReadCharacter>:

#include "uart_common.h"
#include "uart.h"

int MXC_UART_Common_ReadCharacter(mxc_uart_regs_t *uart)
{
10012b90:	b510      	push	{r4, lr}
10012b92:	4604      	mov	r4, r0
    // Wait until FIFO has a character ready.
    while (MXC_UART_GetRXFIFOAvailable(uart) < 1) {}
10012b94:	4620      	mov	r0, r4
10012b96:	f7ff fff5 	bl	10012b84 <MXC_UART_GetRXFIFOAvailable>
10012b9a:	2800      	cmp	r0, #0
10012b9c:	d0fa      	beq.n	10012b94 <MXC_UART_Common_ReadCharacter+0x4>

    // Read the character using the non-blocking function.
    return MXC_UART_ReadCharacterRaw(uart);
10012b9e:	4620      	mov	r0, r4
}
10012ba0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_UART_ReadCharacterRaw(uart);
10012ba4:	f7ff bfe6 	b.w	10012b74 <MXC_UART_ReadCharacterRaw>

10012ba8 <MXC_UART_Common_WriteCharacter>:

int MXC_UART_Common_WriteCharacter(mxc_uart_regs_t *uart, uint8_t character)
{
10012ba8:	b538      	push	{r3, r4, r5, lr}
10012baa:	4604      	mov	r4, r0
10012bac:	460d      	mov	r5, r1
    // Wait until FIFO has space for the character.
    while (MXC_UART_GetTXFIFOAvailable(uart) < 1) {}
10012bae:	4620      	mov	r0, r4
10012bb0:	f7ff ffea 	bl	10012b88 <MXC_UART_GetTXFIFOAvailable>
10012bb4:	2800      	cmp	r0, #0
10012bb6:	d0fa      	beq.n	10012bae <MXC_UART_Common_WriteCharacter+0x6>

    // Write the character using the non-blocking function.
    return MXC_UART_WriteCharacterRaw(uart, character);
10012bb8:	4629      	mov	r1, r5
10012bba:	4620      	mov	r0, r4
}
10012bbc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    return MXC_UART_WriteCharacterRaw(uart, character);
10012bc0:	f7ff bfda 	b.w	10012b78 <MXC_UART_WriteCharacterRaw>

10012bc4 <MXC_UART_RevB_Init>:
/* ************************************************************************* */
int MXC_UART_RevB_Init(mxc_uart_revb_regs_t *uart, unsigned int baud, mxc_uart_revb_clock_t clock)
{
    int err;

    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10012bc4:	4b1a      	ldr	r3, [pc, #104]	@ (10012c30 <MXC_UART_RevB_Init+0x6c>)
10012bc6:	4298      	cmp	r0, r3
{
10012bc8:	b570      	push	{r4, r5, r6, lr}
10012bca:	4604      	mov	r4, r0
10012bcc:	460d      	mov	r5, r1
10012bce:	4616      	mov	r6, r2
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10012bd0:	d00b      	beq.n	10012bea <MXC_UART_RevB_Init+0x26>
10012bd2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012bd6:	4298      	cmp	r0, r3
10012bd8:	d007      	beq.n	10012bea <MXC_UART_RevB_Init+0x26>
10012bda:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012bde:	4298      	cmp	r0, r3
10012be0:	d003      	beq.n	10012bea <MXC_UART_RevB_Init+0x26>
10012be2:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10012be6:	4298      	cmp	r0, r3
10012be8:	d11f      	bne.n	10012c2a <MXC_UART_RevB_Init+0x66>
        return E_BAD_PARAM;
    }

    // Initialize UART
    if ((err = MXC_UART_SetRXThreshold((mxc_uart_regs_t *)uart, 1)) !=
10012bea:	2101      	movs	r1, #1
10012bec:	4620      	mov	r0, r4
10012bee:	f7ff ffcd 	bl	10012b8c <MXC_UART_SetRXThreshold>
10012bf2:	b100      	cbz	r0, 10012bf6 <MXC_UART_RevB_Init+0x32>
        E_NO_ERROR) {
        return err;
    }

    return E_NO_ERROR;
}
10012bf4:	bd70      	pop	{r4, r5, r6, pc}
    if ((err = MXC_UART_SetDataSize((mxc_uart_regs_t *)uart, 8)) !=
10012bf6:	2108      	movs	r1, #8
10012bf8:	4620      	mov	r0, r4
10012bfa:	f7ff ffb5 	bl	10012b68 <MXC_UART_SetDataSize>
10012bfe:	2800      	cmp	r0, #0
10012c00:	d1f8      	bne.n	10012bf4 <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetParity((mxc_uart_regs_t *)uart, MXC_UART_PARITY_DISABLE)) !=
10012c02:	4601      	mov	r1, r0
10012c04:	4620      	mov	r0, r4
10012c06:	f7ff ffb3 	bl	10012b70 <MXC_UART_SetParity>
10012c0a:	2800      	cmp	r0, #0
10012c0c:	d1f2      	bne.n	10012bf4 <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetStopBits((mxc_uart_regs_t *)uart, MXC_UART_STOP_1)) != E_NO_ERROR) {
10012c0e:	4601      	mov	r1, r0
10012c10:	4620      	mov	r0, r4
10012c12:	f7ff ffab 	bl	10012b6c <MXC_UART_SetStopBits>
10012c16:	2800      	cmp	r0, #0
10012c18:	d1ec      	bne.n	10012bf4 <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetFrequency((mxc_uart_regs_t *)uart, baud, (mxc_uart_clock_t)clock)) <
10012c1a:	4632      	mov	r2, r6
10012c1c:	4629      	mov	r1, r5
10012c1e:	4620      	mov	r0, r4
10012c20:	f7ff ff10 	bl	10012a44 <MXC_UART_SetFrequency>
10012c24:	ea00 70e0 	and.w	r0, r0, r0, asr #31
}
10012c28:	bd70      	pop	{r4, r5, r6, pc}
        return E_BAD_PARAM;
10012c2a:	f06f 0002 	mvn.w	r0, #2
}
10012c2e:	bd70      	pop	{r4, r5, r6, pc}
10012c30:	40042000 	.word	0x40042000

10012c34 <MXC_UART_RevB_SetFrequency>:

int MXC_UART_RevB_SetFrequency(mxc_uart_revb_regs_t *uart, unsigned int baud,
                               mxc_uart_revb_clock_t clock)
{
    unsigned clkDiv = 0, mod = 0;
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10012c34:	4b22      	ldr	r3, [pc, #136]	@ (10012cc0 <MXC_UART_RevB_SetFrequency+0x8c>)
10012c36:	4298      	cmp	r0, r3
10012c38:	d00b      	beq.n	10012c52 <MXC_UART_RevB_SetFrequency+0x1e>
10012c3a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012c3e:	4298      	cmp	r0, r3
10012c40:	d007      	beq.n	10012c52 <MXC_UART_RevB_SetFrequency+0x1e>
10012c42:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012c46:	4298      	cmp	r0, r3
10012c48:	d003      	beq.n	10012c52 <MXC_UART_RevB_SetFrequency+0x1e>
10012c4a:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10012c4e:	4298      	cmp	r0, r3
10012c50:	d132      	bne.n	10012cb8 <MXC_UART_RevB_SetFrequency+0x84>
        return E_BAD_PARAM;
    }

    // OSR default value
    uart->osr = 5;
10012c52:	2305      	movs	r3, #5

    switch (clock) {
10012c54:	2a01      	cmp	r2, #1
{
10012c56:	b410      	push	{r4}
    uart->osr = 5;
10012c58:	6143      	str	r3, [r0, #20]
    switch (clock) {
10012c5a:	d023      	beq.n	10012ca4 <MXC_UART_RevB_SetFrequency+0x70>
10012c5c:	2a02      	cmp	r2, #2
10012c5e:	d014      	beq.n	10012c8a <MXC_UART_RevB_SetFrequency+0x56>
10012c60:	b11a      	cbz	r2, 10012c6a <MXC_UART_RevB_SetFrequency+0x36>
    if (!clkDiv || mod > (baud / 2)) {
        clkDiv++;
    }
    uart->clkdiv = clkDiv;
    return MXC_UART_GetFrequency((mxc_uart_regs_t *)uart);
}
10012c62:	f06f 0002 	mvn.w	r0, #2
10012c66:	bc10      	pop	{r4}
10012c68:	4770      	bx	lr
        clkDiv = (PeripheralClock / baud);
10012c6a:	4b16      	ldr	r3, [pc, #88]	@ (10012cc4 <MXC_UART_RevB_SetFrequency+0x90>)
10012c6c:	681a      	ldr	r2, [r3, #0]
10012c6e:	0852      	lsrs	r2, r2, #1
10012c70:	fbb2 f3f1 	udiv	r3, r2, r1
        mod = (PeripheralClock % baud);
10012c74:	fb01 2213 	mls	r2, r1, r3, r2
    if (!clkDiv || mod > (baud / 2)) {
10012c78:	b113      	cbz	r3, 10012c80 <MXC_UART_RevB_SetFrequency+0x4c>
10012c7a:	ebb2 0f51 	cmp.w	r2, r1, lsr #1
10012c7e:	d900      	bls.n	10012c82 <MXC_UART_RevB_SetFrequency+0x4e>
        clkDiv++;
10012c80:	3301      	adds	r3, #1
}
10012c82:	bc10      	pop	{r4}
    uart->clkdiv = clkDiv;
10012c84:	6103      	str	r3, [r0, #16]
    return MXC_UART_GetFrequency((mxc_uart_regs_t *)uart);
10012c86:	f7ff bf45 	b.w	10012b14 <MXC_UART_GetFrequency>
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
10012c8a:	6804      	ldr	r4, [r0, #0]
        clkDiv = (IBRO_FREQ / baud);
10012c8c:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
10012c90:	f444 3400 	orr.w	r4, r4, #131072	@ 0x20000
        clkDiv = (IBRO_FREQ / baud);
10012c94:	fbb3 f3f1 	udiv	r3, r3, r1
        mod = (IBRO_FREQ % baud);
10012c98:	fb01 f203 	mul.w	r2, r1, r3
10012c9c:	f5c2 02e1 	rsb	r2, r2, #7372800	@ 0x708000
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
10012ca0:	6004      	str	r4, [r0, #0]
        break;
10012ca2:	e7e9      	b.n	10012c78 <MXC_UART_RevB_SetFrequency+0x44>
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK;
10012ca4:	6804      	ldr	r4, [r0, #0]
        clkDiv = UART_EXTCLK_FREQ / baud;
10012ca6:	4a08      	ldr	r2, [pc, #32]	@ (10012cc8 <MXC_UART_RevB_SetFrequency+0x94>)
10012ca8:	fbb2 f3f1 	udiv	r3, r2, r1
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK;
10012cac:	f444 3480 	orr.w	r4, r4, #65536	@ 0x10000
10012cb0:	6004      	str	r4, [r0, #0]
        mod = UART_EXTCLK_FREQ % baud;
10012cb2:	fb01 2213 	mls	r2, r1, r3, r2
        break;
10012cb6:	e7df      	b.n	10012c78 <MXC_UART_RevB_SetFrequency+0x44>
}
10012cb8:	f06f 0002 	mvn.w	r0, #2
10012cbc:	4770      	bx	lr
10012cbe:	bf00      	nop
10012cc0:	40042000 	.word	0x40042000
10012cc4:	20001768 	.word	0x20001768
10012cc8:	047868c0 	.word	0x047868c0

10012ccc <MXC_UART_RevB_GetFrequency>:

int MXC_UART_RevB_GetFrequency(mxc_uart_revb_regs_t *uart)
{
    int periphClock = 0;

    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10012ccc:	4b1c      	ldr	r3, [pc, #112]	@ (10012d40 <MXC_UART_RevB_GetFrequency+0x74>)
10012cce:	4298      	cmp	r0, r3
10012cd0:	d00b      	beq.n	10012cea <MXC_UART_RevB_GetFrequency+0x1e>
10012cd2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012cd6:	4298      	cmp	r0, r3
10012cd8:	d007      	beq.n	10012cea <MXC_UART_RevB_GetFrequency+0x1e>
10012cda:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012cde:	4298      	cmp	r0, r3
10012ce0:	d003      	beq.n	10012cea <MXC_UART_RevB_GetFrequency+0x1e>
10012ce2:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10012ce6:	4298      	cmp	r0, r3
10012ce8:	d122      	bne.n	10012d30 <MXC_UART_RevB_GetFrequency+0x64>
        return E_BAD_PARAM;
    }

    if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) ==
10012cea:	6803      	ldr	r3, [r0, #0]
10012cec:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
10012cf0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
10012cf4:	d017      	beq.n	10012d26 <MXC_UART_RevB_GetFrequency+0x5a>
        MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
        periphClock = UART_EXTCLK_FREQ;
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) ==
10012cf6:	6803      	ldr	r3, [r0, #0]
10012cf8:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
10012cfc:	d00c      	beq.n	10012d18 <MXC_UART_RevB_GetFrequency+0x4c>
               MXC_S_UART_REVB_CTRL_BCLKSRC_PERIPHERAL_CLOCK) {
        periphClock = PeripheralClock;
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) == MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2) {
10012cfe:	6803      	ldr	r3, [r0, #0]
10012d00:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
10012d04:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
10012d08:	bf08      	it	eq
10012d0a:	f44f 03e1 	moveq.w	r3, #7372800	@ 0x708000
10012d0e:	d112      	bne.n	10012d36 <MXC_UART_RevB_GetFrequency+0x6a>
#endif
    } else {
        return E_BAD_PARAM;
    }

    return (periphClock / uart->clkdiv);
10012d10:	6900      	ldr	r0, [r0, #16]
10012d12:	fbb3 f0f0 	udiv	r0, r3, r0
10012d16:	4770      	bx	lr
        periphClock = PeripheralClock;
10012d18:	4b0a      	ldr	r3, [pc, #40]	@ (10012d44 <MXC_UART_RevB_GetFrequency+0x78>)
    return (periphClock / uart->clkdiv);
10012d1a:	6900      	ldr	r0, [r0, #16]
        periphClock = PeripheralClock;
10012d1c:	681b      	ldr	r3, [r3, #0]
10012d1e:	085b      	lsrs	r3, r3, #1
    return (periphClock / uart->clkdiv);
10012d20:	fbb3 f0f0 	udiv	r0, r3, r0
10012d24:	4770      	bx	lr
10012d26:	4b08      	ldr	r3, [pc, #32]	@ (10012d48 <MXC_UART_RevB_GetFrequency+0x7c>)
10012d28:	6900      	ldr	r0, [r0, #16]
10012d2a:	fbb3 f0f0 	udiv	r0, r3, r0
10012d2e:	4770      	bx	lr
        return E_BAD_PARAM;
10012d30:	f06f 0002 	mvn.w	r0, #2
}
10012d34:	4770      	bx	lr
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) == MXC_S_UART_REVB_CTRL_BCLKSRC_CLK3) {
10012d36:	6803      	ldr	r3, [r0, #0]
        return E_BAD_PARAM;
10012d38:	f06f 0002 	mvn.w	r0, #2
        return E_BAD_PARAM;
10012d3c:	4770      	bx	lr
10012d3e:	bf00      	nop
10012d40:	40042000 	.word	0x40042000
10012d44:	20001768 	.word	0x20001768
10012d48:	047868c0 	.word	0x047868c0

10012d4c <MXC_UART_RevB_SetDataSize>:

int MXC_UART_RevB_SetDataSize(mxc_uart_revb_regs_t *uart, int dataSize)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10012d4c:	4a0e      	ldr	r2, [pc, #56]	@ (10012d88 <MXC_UART_RevB_SetDataSize+0x3c>)
10012d4e:	4290      	cmp	r0, r2
{
10012d50:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10012d52:	d00b      	beq.n	10012d6c <MXC_UART_RevB_SetDataSize+0x20>
10012d54:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
10012d58:	4290      	cmp	r0, r2
10012d5a:	d007      	beq.n	10012d6c <MXC_UART_RevB_SetDataSize+0x20>
10012d5c:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
10012d60:	4290      	cmp	r0, r2
10012d62:	d003      	beq.n	10012d6c <MXC_UART_RevB_SetDataSize+0x20>
10012d64:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
10012d68:	4290      	cmp	r0, r2
10012d6a:	d10a      	bne.n	10012d82 <MXC_UART_RevB_SetDataSize+0x36>
        return E_BAD_PARAM;
    }

    if (dataSize < 5 || dataSize > 8) {
10012d6c:	3905      	subs	r1, #5
10012d6e:	2903      	cmp	r1, #3
10012d70:	d807      	bhi.n	10012d82 <MXC_UART_RevB_SetDataSize+0x36>
        return E_BAD_PARAM;
    }

    dataSize = (dataSize - 5) << MXC_F_UART_REVB_CTRL_CHAR_SIZE_POS;

    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_CHAR_SIZE, dataSize);
10012d72:	681a      	ldr	r2, [r3, #0]
10012d74:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
10012d78:	ea42 2281 	orr.w	r2, r2, r1, lsl #10

    return E_NO_ERROR;
10012d7c:	2000      	movs	r0, #0
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_CHAR_SIZE, dataSize);
10012d7e:	601a      	str	r2, [r3, #0]
    return E_NO_ERROR;
10012d80:	4770      	bx	lr
        return E_BAD_PARAM;
10012d82:	f06f 0002 	mvn.w	r0, #2
}
10012d86:	4770      	bx	lr
10012d88:	40042000 	.word	0x40042000

10012d8c <MXC_UART_RevB_SetStopBits>:

int MXC_UART_RevB_SetStopBits(mxc_uart_revb_regs_t *uart, mxc_uart_stop_t stopBits)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10012d8c:	4b10      	ldr	r3, [pc, #64]	@ (10012dd0 <MXC_UART_RevB_SetStopBits+0x44>)
10012d8e:	4298      	cmp	r0, r3
10012d90:	d00b      	beq.n	10012daa <MXC_UART_RevB_SetStopBits+0x1e>
10012d92:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012d96:	4298      	cmp	r0, r3
10012d98:	d007      	beq.n	10012daa <MXC_UART_RevB_SetStopBits+0x1e>
10012d9a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012d9e:	4298      	cmp	r0, r3
10012da0:	d003      	beq.n	10012daa <MXC_UART_RevB_SetStopBits+0x1e>
10012da2:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10012da6:	4298      	cmp	r0, r3
10012da8:	d108      	bne.n	10012dbc <MXC_UART_RevB_SetStopBits+0x30>
        return E_BAD_PARAM;
    }

    switch (stopBits) {
10012daa:	b151      	cbz	r1, 10012dc2 <MXC_UART_RevB_SetStopBits+0x36>
10012dac:	2901      	cmp	r1, #1
10012dae:	d105      	bne.n	10012dbc <MXC_UART_RevB_SetStopBits+0x30>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
                     0 << MXC_F_UART_REVB_CTRL_STOPBITS_POS);
        break;

    case MXC_UART_STOP_2:
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
10012db0:	6803      	ldr	r3, [r0, #0]
10012db2:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
10012db6:	6003      	str	r3, [r0, #0]
    default:
        return E_BAD_PARAM;
        break;
    }

    return E_NO_ERROR;
10012db8:	2000      	movs	r0, #0
10012dba:	4770      	bx	lr
10012dbc:	f06f 0002 	mvn.w	r0, #2
}
10012dc0:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
10012dc2:	6803      	ldr	r3, [r0, #0]
10012dc4:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
10012dc8:	6003      	str	r3, [r0, #0]
    return E_NO_ERROR;
10012dca:	2000      	movs	r0, #0
10012dcc:	4770      	bx	lr
10012dce:	bf00      	nop
10012dd0:	40042000 	.word	0x40042000

10012dd4 <MXC_UART_RevB_SetParity>:

int MXC_UART_RevB_SetParity(mxc_uart_revb_regs_t *uart, mxc_uart_parity_t parity)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10012dd4:	4b29      	ldr	r3, [pc, #164]	@ (10012e7c <MXC_UART_RevB_SetParity+0xa8>)
10012dd6:	4298      	cmp	r0, r3
10012dd8:	d00b      	beq.n	10012df2 <MXC_UART_RevB_SetParity+0x1e>
10012dda:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012dde:	4298      	cmp	r0, r3
10012de0:	d007      	beq.n	10012df2 <MXC_UART_RevB_SetParity+0x1e>
10012de2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012de6:	4298      	cmp	r0, r3
10012de8:	d003      	beq.n	10012df2 <MXC_UART_RevB_SetParity+0x1e>
10012dea:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10012dee:	4298      	cmp	r0, r3
10012df0:	d141      	bne.n	10012e76 <MXC_UART_RevB_SetParity+0xa2>
        return E_BAD_PARAM;
    }

    switch (parity) {
10012df2:	2904      	cmp	r1, #4
10012df4:	d83f      	bhi.n	10012e76 <MXC_UART_RevB_SetParity+0xa2>
10012df6:	e8df f001 	tbb	[pc, r1]
10012dfa:	1711      	.short	0x1711
10012dfc:	3124      	.short	0x3124
10012dfe:	03          	.byte	0x03
10012dff:	00          	.byte	0x00
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
        break;

    case MXC_UART_PARITY_ODD_1:
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
10012e00:	6803      	ldr	r3, [r0, #0]
10012e02:	f043 0310 	orr.w	r3, r3, #16
10012e06:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
10012e08:	6803      	ldr	r3, [r0, #0]
10012e0a:	f043 0320 	orr.w	r3, r3, #32
10012e0e:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 1 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
10012e10:	6803      	ldr	r3, [r0, #0]
10012e12:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10012e16:	6003      	str	r3, [r0, #0]
    default:
        return E_BAD_PARAM;
        break;
    }

    return E_NO_ERROR;
10012e18:	2000      	movs	r0, #0
10012e1a:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 0 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
10012e1c:	6803      	ldr	r3, [r0, #0]
10012e1e:	f023 0310 	bic.w	r3, r3, #16
10012e22:	6003      	str	r3, [r0, #0]
    return E_NO_ERROR;
10012e24:	2000      	movs	r0, #0
10012e26:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
10012e28:	6803      	ldr	r3, [r0, #0]
10012e2a:	f043 0310 	orr.w	r3, r3, #16
10012e2e:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 0 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
10012e30:	6803      	ldr	r3, [r0, #0]
10012e32:	f023 0320 	bic.w	r3, r3, #32
10012e36:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
10012e38:	6803      	ldr	r3, [r0, #0]
10012e3a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
10012e3e:	6003      	str	r3, [r0, #0]
        break;
10012e40:	e7ea      	b.n	10012e18 <MXC_UART_RevB_SetParity+0x44>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
10012e42:	6803      	ldr	r3, [r0, #0]
10012e44:	f043 0310 	orr.w	r3, r3, #16
10012e48:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 0 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
10012e4a:	6803      	ldr	r3, [r0, #0]
10012e4c:	f023 0320 	bic.w	r3, r3, #32
10012e50:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 1 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
10012e52:	6803      	ldr	r3, [r0, #0]
10012e54:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10012e58:	6003      	str	r3, [r0, #0]
        break;
10012e5a:	e7dd      	b.n	10012e18 <MXC_UART_RevB_SetParity+0x44>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
10012e5c:	6803      	ldr	r3, [r0, #0]
10012e5e:	f043 0310 	orr.w	r3, r3, #16
10012e62:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
10012e64:	6803      	ldr	r3, [r0, #0]
10012e66:	f043 0320 	orr.w	r3, r3, #32
10012e6a:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
10012e6c:	6803      	ldr	r3, [r0, #0]
10012e6e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
10012e72:	6003      	str	r3, [r0, #0]
        break;
10012e74:	e7d0      	b.n	10012e18 <MXC_UART_RevB_SetParity+0x44>
    switch (parity) {
10012e76:	f06f 0002 	mvn.w	r0, #2
}
10012e7a:	4770      	bx	lr
10012e7c:	40042000 	.word	0x40042000

10012e80 <MXC_UART_RevB_ReadCharacterRaw>:
    return E_NO_ERROR;
}

int MXC_UART_RevB_ReadCharacterRaw(mxc_uart_revb_regs_t *uart)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10012e80:	4b0c      	ldr	r3, [pc, #48]	@ (10012eb4 <MXC_UART_RevB_ReadCharacterRaw+0x34>)
10012e82:	4298      	cmp	r0, r3
10012e84:	d00b      	beq.n	10012e9e <MXC_UART_RevB_ReadCharacterRaw+0x1e>
10012e86:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012e8a:	4298      	cmp	r0, r3
10012e8c:	d007      	beq.n	10012e9e <MXC_UART_RevB_ReadCharacterRaw+0x1e>
10012e8e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012e92:	4298      	cmp	r0, r3
10012e94:	d003      	beq.n	10012e9e <MXC_UART_RevB_ReadCharacterRaw+0x1e>
10012e96:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10012e9a:	4298      	cmp	r0, r3
10012e9c:	d104      	bne.n	10012ea8 <MXC_UART_RevB_ReadCharacterRaw+0x28>
        return E_BAD_PARAM;
    }

    if (uart->status & MXC_F_UART_REVB_STATUS_RX_EM) {
10012e9e:	6843      	ldr	r3, [r0, #4]
10012ea0:	06db      	lsls	r3, r3, #27
10012ea2:	d404      	bmi.n	10012eae <MXC_UART_RevB_ReadCharacterRaw+0x2e>
        return E_UNDERFLOW;
    }

    return uart->fifo;
10012ea4:	6a00      	ldr	r0, [r0, #32]
10012ea6:	4770      	bx	lr
        return E_BAD_PARAM;
10012ea8:	f06f 0002 	mvn.w	r0, #2
10012eac:	4770      	bx	lr
        return E_UNDERFLOW;
10012eae:	f06f 000c 	mvn.w	r0, #12
}
10012eb2:	4770      	bx	lr
10012eb4:	40042000 	.word	0x40042000

10012eb8 <MXC_UART_RevB_WriteCharacterRaw>:

int MXC_UART_RevB_WriteCharacterRaw(mxc_uart_revb_regs_t *uart, uint8_t character)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10012eb8:	4a0d      	ldr	r2, [pc, #52]	@ (10012ef0 <MXC_UART_RevB_WriteCharacterRaw+0x38>)
10012eba:	4290      	cmp	r0, r2
{
10012ebc:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10012ebe:	d00b      	beq.n	10012ed8 <MXC_UART_RevB_WriteCharacterRaw+0x20>
10012ec0:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
10012ec4:	4290      	cmp	r0, r2
10012ec6:	d007      	beq.n	10012ed8 <MXC_UART_RevB_WriteCharacterRaw+0x20>
10012ec8:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
10012ecc:	4290      	cmp	r0, r2
10012ece:	d003      	beq.n	10012ed8 <MXC_UART_RevB_WriteCharacterRaw+0x20>
10012ed0:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
10012ed4:	4290      	cmp	r0, r2
10012ed6:	d105      	bne.n	10012ee4 <MXC_UART_RevB_WriteCharacterRaw+0x2c>
        return E_BAD_PARAM;
    }

    // Require the TX FIFO to be empty, so that we write out the expected character
    // Return error if the FIFO is full
    if (uart->status & MXC_F_UART_REVB_STATUS_TX_FULL) {
10012ed8:	6858      	ldr	r0, [r3, #4]
10012eda:	f010 0080 	ands.w	r0, r0, #128	@ 0x80
10012ede:	d104      	bne.n	10012eea <MXC_UART_RevB_WriteCharacterRaw+0x32>
        return E_OVERFLOW;
    }

    uart->fifo = character;
10012ee0:	6219      	str	r1, [r3, #32]

    return E_NO_ERROR;
10012ee2:	4770      	bx	lr
        return E_BAD_PARAM;
10012ee4:	f06f 0002 	mvn.w	r0, #2
10012ee8:	4770      	bx	lr
        return E_OVERFLOW;
10012eea:	f06f 000b 	mvn.w	r0, #11
}
10012eee:	4770      	bx	lr
10012ef0:	40042000 	.word	0x40042000

10012ef4 <MXC_UART_RevB_GetRXFIFOAvailable>:
    return read;
}

unsigned int MXC_UART_RevB_GetRXFIFOAvailable(mxc_uart_revb_regs_t *uart)
{
    return (uart->status & MXC_F_UART_REVB_STATUS_RX_LVL) >> MXC_F_UART_REVB_STATUS_RX_LVL_POS;
10012ef4:	6840      	ldr	r0, [r0, #4]
}
10012ef6:	f3c0 2003 	ubfx	r0, r0, #8, #4
10012efa:	4770      	bx	lr

10012efc <MXC_UART_RevB_GetTXFIFOAvailable>:
    return written;
}

unsigned int MXC_UART_RevB_GetTXFIFOAvailable(mxc_uart_revb_regs_t *uart)
{
    int txCnt = (uart->status & MXC_F_UART_REVB_STATUS_TX_LVL) >> MXC_F_UART_REVB_STATUS_TX_LVL_POS;
10012efc:	6840      	ldr	r0, [r0, #4]
10012efe:	f3c0 3003 	ubfx	r0, r0, #12, #4
    return MXC_UART_FIFO_DEPTH - txCnt;
}
10012f02:	f1c0 0008 	rsb	r0, r0, #8
10012f06:	4770      	bx	lr

10012f08 <MXC_UART_RevB_SetRXThreshold>:
    return E_NO_ERROR;
}

int MXC_UART_RevB_SetRXThreshold(mxc_uart_revb_regs_t *uart, unsigned int numBytes)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10012f08:	4a0e      	ldr	r2, [pc, #56]	@ (10012f44 <MXC_UART_RevB_SetRXThreshold+0x3c>)
10012f0a:	4290      	cmp	r0, r2
{
10012f0c:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10012f0e:	d00b      	beq.n	10012f28 <MXC_UART_RevB_SetRXThreshold+0x20>
10012f10:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
10012f14:	4290      	cmp	r0, r2
10012f16:	d007      	beq.n	10012f28 <MXC_UART_RevB_SetRXThreshold+0x20>
10012f18:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
10012f1c:	4290      	cmp	r0, r2
10012f1e:	d003      	beq.n	10012f28 <MXC_UART_RevB_SetRXThreshold+0x20>
10012f20:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
10012f24:	4290      	cmp	r0, r2
10012f26:	d109      	bne.n	10012f3c <MXC_UART_RevB_SetRXThreshold+0x34>
        return E_BAD_PARAM;
    }

    if (numBytes < 1 || numBytes > MXC_UART_FIFO_DEPTH) {
10012f28:	1e4a      	subs	r2, r1, #1
10012f2a:	2a07      	cmp	r2, #7
10012f2c:	d806      	bhi.n	10012f3c <MXC_UART_RevB_SetRXThreshold+0x34>
        return E_BAD_PARAM;
    }

    numBytes <<= MXC_F_UART_REVB_CTRL_RX_THD_VAL_POS;
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_RX_THD_VAL, numBytes);
10012f2e:	681a      	ldr	r2, [r3, #0]
10012f30:	f022 020f 	bic.w	r2, r2, #15
10012f34:	4311      	orrs	r1, r2

    return E_NO_ERROR;
10012f36:	2000      	movs	r0, #0
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_RX_THD_VAL, numBytes);
10012f38:	6019      	str	r1, [r3, #0]
    return E_NO_ERROR;
10012f3a:	4770      	bx	lr
        return E_BAD_PARAM;
10012f3c:	f06f 0002 	mvn.w	r0, #2
}
10012f40:	4770      	bx	lr
10012f42:	bf00      	nop
10012f44:	40042000 	.word	0x40042000

10012f48 <MXC_GPIO_Common_Init>:
static void *cbparam[MXC_CFG_GPIO_INSTANCES][MXC_CFG_GPIO_PINS_PORT];
static uint8_t initialized = 0;

/* **** Functions **** */
int MXC_GPIO_Common_Init(uint32_t portmask)
{
10012f48:	b510      	push	{r4, lr}
    if (!initialized) {
10012f4a:	4c06      	ldr	r4, [pc, #24]	@ (10012f64 <MXC_GPIO_Common_Init+0x1c>)
10012f4c:	7821      	ldrb	r1, [r4, #0]
10012f4e:	b931      	cbnz	r1, 10012f5e <MXC_GPIO_Common_Init+0x16>
        int i, j;

        for (i = 0; i < MXC_CFG_GPIO_INSTANCES; i++) {
            // Initialize call back arrays
            for (j = 0; j < MXC_CFG_GPIO_PINS_PORT; j++) {
                callback[i][j] = NULL;
10012f50:	4805      	ldr	r0, [pc, #20]	@ (10012f68 <MXC_GPIO_Common_Init+0x20>)
10012f52:	f44f 7200 	mov.w	r2, #512	@ 0x200
10012f56:	f002 f803 	bl	10014f60 <memset>
            }
        }

        initialized = 1;
10012f5a:	2301      	movs	r3, #1
10012f5c:	7023      	strb	r3, [r4, #0]
    }

    return E_NO_ERROR;
}
10012f5e:	2000      	movs	r0, #0
10012f60:	bd10      	pop	{r4, pc}
10012f62:	bf00      	nop
10012f64:	20001050 	.word	0x20001050
10012f68:	20001254 	.word	0x20001254

10012f6c <MXC_GPIO_Common_Handler>:
    uint32_t stat;
    unsigned int pin;

    MXC_ASSERT(port < MXC_CFG_GPIO_INSTANCES);

    mxc_gpio_regs_t *gpio = MXC_GPIO_GET_GPIO(port);
10012f6c:	2803      	cmp	r0, #3
{
10012f6e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10012f70:	bf9a      	itte	ls
10012f72:	4b10      	ldrls	r3, [pc, #64]	@ (10012fb4 <MXC_GPIO_Common_Handler+0x48>)
10012f74:	f853 5020 	ldrls.w	r5, [r3, r0, lsl #2]
10012f78:	2500      	movhi	r5, #0
10012f7a:	4607      	mov	r7, r0

    stat = MXC_GPIO_GetFlags(gpio);
10012f7c:	4628      	mov	r0, r5
10012f7e:	f7fe fd7b 	bl	10011a78 <MXC_GPIO_GetFlags>
10012f82:	4604      	mov	r4, r0
    MXC_GPIO_ClearFlags(gpio, stat);
10012f84:	4601      	mov	r1, r0
10012f86:	4628      	mov	r0, r5
10012f88:	f7fe fd6a 	bl	10011a60 <MXC_GPIO_ClearFlags>

    pin = 0;

    while (stat) {
10012f8c:	b18c      	cbz	r4, 10012fb2 <MXC_GPIO_Common_Handler+0x46>
10012f8e:	4e0a      	ldr	r6, [pc, #40]	@ (10012fb8 <MXC_GPIO_Common_Handler+0x4c>)
10012f90:	4d0a      	ldr	r5, [pc, #40]	@ (10012fbc <MXC_GPIO_Common_Handler+0x50>)
10012f92:	eb06 16c7 	add.w	r6, r6, r7, lsl #7
10012f96:	eb05 15c7 	add.w	r5, r5, r7, lsl #7
        if (stat & 1) {
10012f9a:	07e3      	lsls	r3, r4, #31
10012f9c:	d503      	bpl.n	10012fa6 <MXC_GPIO_Common_Handler+0x3a>
            if (callback[port][pin]) {
10012f9e:	682b      	ldr	r3, [r5, #0]
10012fa0:	b10b      	cbz	r3, 10012fa6 <MXC_GPIO_Common_Handler+0x3a>
                callback[port][pin](cbparam[port][pin]);
10012fa2:	6830      	ldr	r0, [r6, #0]
10012fa4:	4798      	blx	r3
    while (stat) {
10012fa6:	0864      	lsrs	r4, r4, #1
10012fa8:	f106 0604 	add.w	r6, r6, #4
10012fac:	f105 0504 	add.w	r5, r5, #4
10012fb0:	d1f3      	bne.n	10012f9a <MXC_GPIO_Common_Handler+0x2e>
        }

        pin++;
        stat >>= 1;
    }
}
10012fb2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10012fb4:	10020a8c 	.word	0x10020a8c
10012fb8:	20001054 	.word	0x20001054
10012fbc:	20001254 	.word	0x20001254

10012fc0 <sscanf>:
10012fc0:	b40e      	push	{r1, r2, r3}
10012fc2:	b530      	push	{r4, r5, lr}
10012fc4:	b09c      	sub	sp, #112	@ 0x70
10012fc6:	ac1f      	add	r4, sp, #124	@ 0x7c
10012fc8:	f44f 7201 	mov.w	r2, #516	@ 0x204
10012fcc:	f854 5b04 	ldr.w	r5, [r4], #4
10012fd0:	f8ad 2014 	strh.w	r2, [sp, #20]
10012fd4:	9002      	str	r0, [sp, #8]
10012fd6:	9006      	str	r0, [sp, #24]
10012fd8:	f002 fdb2 	bl	10015b40 <strlen>
10012fdc:	9003      	str	r0, [sp, #12]
10012fde:	9007      	str	r0, [sp, #28]
10012fe0:	480a      	ldr	r0, [pc, #40]	@ (1001300c <sscanf+0x4c>)
10012fe2:	490b      	ldr	r1, [pc, #44]	@ (10013010 <sscanf+0x50>)
10012fe4:	910a      	str	r1, [sp, #40]	@ 0x28
10012fe6:	2300      	movs	r3, #0
10012fe8:	f64f 7cff 	movw	ip, #65535	@ 0xffff
10012fec:	930e      	str	r3, [sp, #56]	@ 0x38
10012fee:	9313      	str	r3, [sp, #76]	@ 0x4c
10012ff0:	462a      	mov	r2, r5
10012ff2:	4623      	mov	r3, r4
10012ff4:	a902      	add	r1, sp, #8
10012ff6:	6800      	ldr	r0, [r0, #0]
10012ff8:	f8ad c016 	strh.w	ip, [sp, #22]
10012ffc:	9401      	str	r4, [sp, #4]
10012ffe:	f000 f86f 	bl	100130e0 <__ssvfscanf_r>
10013002:	b01c      	add	sp, #112	@ 0x70
10013004:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
10013008:	b003      	add	sp, #12
1001300a:	4770      	bx	lr
1001300c:	20000590 	.word	0x20000590
10013010:	10013039 	.word	0x10013039

10013014 <__sread>:
10013014:	b510      	push	{r4, lr}
10013016:	460c      	mov	r4, r1
10013018:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
1001301c:	f005 f890 	bl	10018140 <_read_r>
10013020:	2800      	cmp	r0, #0
10013022:	db03      	blt.n	1001302c <__sread+0x18>
10013024:	6d23      	ldr	r3, [r4, #80]	@ 0x50
10013026:	4403      	add	r3, r0
10013028:	6523      	str	r3, [r4, #80]	@ 0x50
1001302a:	bd10      	pop	{r4, pc}
1001302c:	89a3      	ldrh	r3, [r4, #12]
1001302e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
10013032:	81a3      	strh	r3, [r4, #12]
10013034:	bd10      	pop	{r4, pc}
10013036:	bf00      	nop

10013038 <__seofread>:
10013038:	2000      	movs	r0, #0
1001303a:	4770      	bx	lr

1001303c <__swrite>:
1001303c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
10013040:	460c      	mov	r4, r1
10013042:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
10013046:	461f      	mov	r7, r3
10013048:	05cb      	lsls	r3, r1, #23
1001304a:	4605      	mov	r5, r0
1001304c:	4616      	mov	r6, r2
1001304e:	d40b      	bmi.n	10013068 <__swrite+0x2c>
10013050:	f421 5180 	bic.w	r1, r1, #4096	@ 0x1000
10013054:	81a1      	strh	r1, [r4, #12]
10013056:	463b      	mov	r3, r7
10013058:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
1001305c:	4632      	mov	r2, r6
1001305e:	4628      	mov	r0, r5
10013060:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
10013064:	f000 b820 	b.w	100130a8 <_write_r>
10013068:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
1001306c:	2302      	movs	r3, #2
1001306e:	2200      	movs	r2, #0
10013070:	f005 f850 	bl	10018114 <_lseek_r>
10013074:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
10013078:	e7ea      	b.n	10013050 <__swrite+0x14>
1001307a:	bf00      	nop

1001307c <__sseek>:
1001307c:	b510      	push	{r4, lr}
1001307e:	460c      	mov	r4, r1
10013080:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
10013084:	f005 f846 	bl	10018114 <_lseek_r>
10013088:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001308c:	1c42      	adds	r2, r0, #1
1001308e:	bf0e      	itee	eq
10013090:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
10013094:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
10013098:	6520      	strne	r0, [r4, #80]	@ 0x50
1001309a:	81a3      	strh	r3, [r4, #12]
1001309c:	bd10      	pop	{r4, pc}
1001309e:	bf00      	nop

100130a0 <__sclose>:
100130a0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
100130a4:	f002 ba02 	b.w	100154ac <_close_r>

100130a8 <_write_r>:
100130a8:	b538      	push	{r3, r4, r5, lr}
100130aa:	460c      	mov	r4, r1
100130ac:	4d08      	ldr	r5, [pc, #32]	@ (100130d0 <_write_r+0x28>)
100130ae:	4684      	mov	ip, r0
100130b0:	4611      	mov	r1, r2
100130b2:	4620      	mov	r0, r4
100130b4:	461a      	mov	r2, r3
100130b6:	2300      	movs	r3, #0
100130b8:	602b      	str	r3, [r5, #0]
100130ba:	4664      	mov	r4, ip
100130bc:	f7fd ff9c 	bl	10010ff8 <_write>
100130c0:	1c43      	adds	r3, r0, #1
100130c2:	d000      	beq.n	100130c6 <_write_r+0x1e>
100130c4:	bd38      	pop	{r3, r4, r5, pc}
100130c6:	682b      	ldr	r3, [r5, #0]
100130c8:	2b00      	cmp	r3, #0
100130ca:	d0fb      	beq.n	100130c4 <_write_r+0x1c>
100130cc:	6023      	str	r3, [r4, #0]
100130ce:	bd38      	pop	{r3, r4, r5, pc}
100130d0:	20001498 	.word	0x20001498

100130d4 <__errno>:
100130d4:	4b01      	ldr	r3, [pc, #4]	@ (100130dc <__errno+0x8>)
100130d6:	6818      	ldr	r0, [r3, #0]
100130d8:	4770      	bx	lr
100130da:	bf00      	nop
100130dc:	20000590 	.word	0x20000590

100130e0 <__ssvfscanf_r>:
100130e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100130e4:	f5ad 7d37 	sub.w	sp, sp, #732	@ 0x2dc
100130e8:	468a      	mov	sl, r1
100130ea:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
100130ee:	af02      	add	r7, sp, #8
100130f0:	048c      	lsls	r4, r1, #18
100130f2:	64f8      	str	r0, [r7, #76]	@ 0x4c
100130f4:	4615      	mov	r5, r2
100130f6:	637b      	str	r3, [r7, #52]	@ 0x34
100130f8:	d409      	bmi.n	1001310e <__ssvfscanf_r+0x2e>
100130fa:	f8da 3064 	ldr.w	r3, [sl, #100]	@ 0x64
100130fe:	f441 5100 	orr.w	r1, r1, #8192	@ 0x2000
10013102:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
10013106:	f8aa 100c 	strh.w	r1, [sl, #12]
1001310a:	f8ca 3064 	str.w	r3, [sl, #100]	@ 0x64
1001310e:	2300      	movs	r3, #0
10013110:	461c      	mov	r4, r3
10013112:	2208      	movs	r2, #8
10013114:	4619      	mov	r1, r3
10013116:	f107 0058 	add.w	r0, r7, #88	@ 0x58
1001311a:	62bb      	str	r3, [r7, #40]	@ 0x28
1001311c:	46a1      	mov	r9, r4
1001311e:	f001 ff1f 	bl	10014f60 <memset>
10013122:	46a8      	mov	r8, r5
10013124:	63fc      	str	r4, [r7, #60]	@ 0x3c
10013126:	627c      	str	r4, [r7, #36]	@ 0x24
10013128:	63bc      	str	r4, [r7, #56]	@ 0x38
1001312a:	643c      	str	r4, [r7, #64]	@ 0x40
1001312c:	4b83      	ldr	r3, [pc, #524]	@ (1001333c <__ssvfscanf_r+0x25c>)
1001312e:	f8d3 40e4 	ldr.w	r4, [r3, #228]	@ 0xe4
10013132:	f001 ffab 	bl	1001508c <__locale_mb_cur_max>
10013136:	f107 0258 	add.w	r2, r7, #88	@ 0x58
1001313a:	9200      	str	r2, [sp, #0]
1001313c:	4603      	mov	r3, r0
1001313e:	4642      	mov	r2, r8
10013140:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10013142:	f107 0154 	add.w	r1, r7, #84	@ 0x54
10013146:	47a0      	blx	r4
10013148:	2800      	cmp	r0, #0
1001314a:	db4c      	blt.n	100131e6 <__ssvfscanf_r+0x106>
1001314c:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
1001314e:	4480      	add	r8, r0
10013150:	4606      	mov	r6, r0
10013152:	2b00      	cmp	r3, #0
10013154:	f000 85a8 	beq.w	10013ca8 <__ssvfscanf_r+0xbc8>
10013158:	2801      	cmp	r0, #1
1001315a:	d053      	beq.n	10013204 <__ssvfscanf_r+0x124>
1001315c:	2b25      	cmp	r3, #37	@ 0x25
1001315e:	d05a      	beq.n	10013216 <__ssvfscanf_r+0x136>
10013160:	2800      	cmp	r0, #0
10013162:	d0e3      	beq.n	1001312c <__ssvfscanf_r+0x4c>
10013164:	f8da 3004 	ldr.w	r3, [sl, #4]
10013168:	461a      	mov	r2, r3
1001316a:	eba8 0606 	sub.w	r6, r8, r6
1001316e:	3801      	subs	r0, #1
10013170:	2a00      	cmp	r2, #0
10013172:	eb06 0400 	add.w	r4, r6, r0
10013176:	f106 35ff 	add.w	r5, r6, #4294967295	@ 0xffffffff
1001317a:	dd17      	ble.n	100131ac <__ssvfscanf_r+0xcc>
1001317c:	f8da 3000 	ldr.w	r3, [sl]
10013180:	786a      	ldrb	r2, [r5, #1]
10013182:	7818      	ldrb	r0, [r3, #0]
10013184:	4290      	cmp	r0, r2
10013186:	f103 0301 	add.w	r3, r3, #1
1001318a:	f105 0101 	add.w	r1, r5, #1
1001318e:	f040 858b 	bne.w	10013ca8 <__ssvfscanf_r+0xbc8>
10013192:	f8da 2004 	ldr.w	r2, [sl, #4]
10013196:	f8ca 3000 	str.w	r3, [sl]
1001319a:	3a01      	subs	r2, #1
1001319c:	428c      	cmp	r4, r1
1001319e:	f8ca 2004 	str.w	r2, [sl, #4]
100131a2:	f000 809b 	beq.w	100132dc <__ssvfscanf_r+0x1fc>
100131a6:	2a00      	cmp	r2, #0
100131a8:	460d      	mov	r5, r1
100131aa:	dce7      	bgt.n	1001317c <__ssvfscanf_r+0x9c>
100131ac:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
100131ae:	4651      	mov	r1, sl
100131b0:	f005 fb42 	bl	10018838 <__ssrefill_r>
100131b4:	2800      	cmp	r0, #0
100131b6:	d0e1      	beq.n	1001317c <__ssvfscanf_r+0x9c>
100131b8:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
100131ba:	2b00      	cmp	r3, #0
100131bc:	f001 81e3 	beq.w	10014586 <__ssvfscanf_r+0x14a6>
100131c0:	f8ba 300c 	ldrh.w	r3, [sl, #12]
100131c4:	f013 0f40 	tst.w	r3, #64	@ 0x40
100131c8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
100131ca:	f041 81dd 	bne.w	10014588 <__ssvfscanf_r+0x14a8>
100131ce:	b123      	cbz	r3, 100131da <__ssvfscanf_r+0xfa>
100131d0:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
100131d2:	6818      	ldr	r0, [r3, #0]
100131d4:	b108      	cbz	r0, 100131da <__ssvfscanf_r+0xfa>
100131d6:	f001 fbcd 	bl	10014974 <free>
100131da:	6c38      	ldr	r0, [r7, #64]	@ 0x40
100131dc:	f507 7735 	add.w	r7, r7, #724	@ 0x2d4
100131e0:	46bd      	mov	sp, r7
100131e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100131e6:	f64f 73fd 	movw	r3, #65533	@ 0xfffd
100131ea:	2208      	movs	r2, #8
100131ec:	2100      	movs	r1, #0
100131ee:	f107 0058 	add.w	r0, r7, #88	@ 0x58
100131f2:	657b      	str	r3, [r7, #84]	@ 0x54
100131f4:	f001 feb4 	bl	10014f60 <memset>
100131f8:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
100131fa:	f108 0801 	add.w	r8, r8, #1
100131fe:	2b00      	cmp	r3, #0
10013200:	f000 8552 	beq.w	10013ca8 <__ssvfscanf_r+0xbc8>
10013204:	4a4e      	ldr	r2, [pc, #312]	@ (10013340 <__ssvfscanf_r+0x260>)
10013206:	5cd2      	ldrb	r2, [r2, r3]
10013208:	0710      	lsls	r0, r2, #28
1001320a:	f100 855b 	bmi.w	10013cc4 <__ssvfscanf_r+0xbe4>
1001320e:	2601      	movs	r6, #1
10013210:	2b25      	cmp	r3, #37	@ 0x25
10013212:	4630      	mov	r0, r6
10013214:	d1a6      	bne.n	10013164 <__ssvfscanf_r+0x84>
10013216:	2400      	movs	r4, #0
10013218:	f898 2000 	ldrb.w	r2, [r8]
1001321c:	4625      	mov	r5, r4
1001321e:	f1a2 0325 	sub.w	r3, r2, #37	@ 0x25
10013222:	f108 0101 	add.w	r1, r8, #1
10013226:	2b55      	cmp	r3, #85	@ 0x55
10013228:	f200 8649 	bhi.w	10013ebe <__ssvfscanf_r+0xdde>
1001322c:	e8df f013 	tbh	[pc, r3, lsl #1]
10013230:	0647073d 	.word	0x0647073d
10013234:	06470647 	.word	0x06470647
10013238:	07340647 	.word	0x07340647
1001323c:	06470647 	.word	0x06470647
10013240:	06470647 	.word	0x06470647
10013244:	064d0647 	.word	0x064d0647
10013248:	064d064d 	.word	0x064d064d
1001324c:	064d064d 	.word	0x064d064d
10013250:	064d064d 	.word	0x064d064d
10013254:	064d064d 	.word	0x064d064d
10013258:	0647064d 	.word	0x0647064d
1001325c:	06470647 	.word	0x06470647
10013260:	06470647 	.word	0x06470647
10013264:	06470647 	.word	0x06470647
10013268:	06470658 	.word	0x06470658
1001326c:	04f4006b 	.word	0x04f4006b
10013270:	06580658 	.word	0x06580658
10013274:	06470658 	.word	0x06470658
10013278:	06470647 	.word	0x06470647
1001327c:	00620647 	.word	0x00620647
10013280:	06470647 	.word	0x06470647
10013284:	064704ff 	.word	0x064704ff
10013288:	06470647 	.word	0x06470647
1001328c:	064704b5 	.word	0x064704b5
10013290:	06470647 	.word	0x06470647
10013294:	06980647 	.word	0x06980647
10013298:	06470647 	.word	0x06470647
1001329c:	064706d9 	.word	0x064706d9
100132a0:	06470647 	.word	0x06470647
100132a4:	06470647 	.word	0x06470647
100132a8:	06470658 	.word	0x06470658
100132ac:	04f6006d 	.word	0x04f6006d
100132b0:	06580658 	.word	0x06580658
100132b4:	06ed0658 	.word	0x06ed0658
100132b8:	006206e4 	.word	0x006206e4
100132bc:	071e0647 	.word	0x071e0647
100132c0:	06fd070f 	.word	0x06fd070f
100132c4:	06fa0501 	.word	0x06fa0501
100132c8:	06470647 	.word	0x06470647
100132cc:	005b04b7 	.word	0x005b04b7
100132d0:	0647072b 	.word	0x0647072b
100132d4:	06980647 	.word	0x06980647
100132d8:	005b0647 	.word	0x005b0647
100132dc:	3502      	adds	r5, #2
100132de:	444d      	add	r5, r9
100132e0:	eba5 0906 	sub.w	r9, r5, r6
100132e4:	e722      	b.n	1001312c <__ssvfscanf_r+0x4c>
100132e6:	0723      	lsls	r3, r4, #28
100132e8:	f040 84de 	bne.w	10013ca8 <__ssvfscanf_r+0xbc8>
100132ec:	f898 2001 	ldrb.w	r2, [r8, #1]
100132f0:	4688      	mov	r8, r1
100132f2:	e794      	b.n	1001321e <__ssvfscanf_r+0x13e>
100132f4:	0722      	lsls	r2, r4, #28
100132f6:	f040 84d7 	bne.w	10013ca8 <__ssvfscanf_r+0xbc8>
100132fa:	f898 2001 	ldrb.w	r2, [r8, #1]
100132fe:	f044 0402 	orr.w	r4, r4, #2
10013302:	4688      	mov	r8, r1
10013304:	e78b      	b.n	1001321e <__ssvfscanf_r+0x13e>
10013306:	f044 0401 	orr.w	r4, r4, #1
1001330a:	f044 0440 	orr.w	r4, r4, #64	@ 0x40
1001330e:	4688      	mov	r8, r1
10013310:	f04f 0b00 	mov.w	fp, #0
10013314:	f8da 3004 	ldr.w	r3, [sl, #4]
10013318:	2b00      	cmp	r3, #0
1001331a:	f340 8448 	ble.w	10013bae <__ssvfscanf_r+0xace>
1001331e:	0660      	lsls	r0, r4, #25
10013320:	f140 844f 	bpl.w	10013bc2 <__ssvfscanf_r+0xae2>
10013324:	f10b 33ff 	add.w	r3, fp, #4294967295	@ 0xffffffff
10013328:	2b03      	cmp	r3, #3
1001332a:	f200 8793 	bhi.w	10014254 <__ssvfscanf_r+0x1174>
1001332e:	e8df f013 	tbh	[pc, r3, lsl #1]
10013332:	02b1      	.short	0x02b1
10013334:	014801f4 	.word	0x014801f4
10013338:	0009      	.short	0x0009
1001333a:	bf00      	nop
1001333c:	20000424 	.word	0x20000424
10013340:	10020b0d 	.word	0x10020b0d
10013344:	f444 63f0 	orr.w	r3, r4, #1920	@ 0x780
10013348:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001334a:	64bb      	str	r3, [r7, #72]	@ 0x48
1001334c:	f001 fea4 	bl	10015098 <_localeconv_r>
10013350:	6803      	ldr	r3, [r0, #0]
10013352:	61fb      	str	r3, [r7, #28]
10013354:	1e6b      	subs	r3, r5, #1
10013356:	f5b3 7fae 	cmp.w	r3, #348	@ 0x15c
1001335a:	f04f 0400 	mov.w	r4, #0
1001335e:	bf88      	it	hi
10013360:	f46f 70ae 	mvnhi.w	r0, #348	@ 0x15c
10013364:	e9c7 4404 	strd	r4, r4, [r7, #16]
10013368:	bf88      	it	hi
1001336a:	eb05 0c00 	addhi.w	ip, r5, r0
1001336e:	f507 73b8 	add.w	r3, r7, #368	@ 0x170
10013372:	bf94      	ite	ls
10013374:	f04f 0c00 	movls.w	ip, #0
10013378:	f240 155d 	movwhi	r5, #349	@ 0x15d
1001337c:	62fb      	str	r3, [r7, #44]	@ 0x2c
1001337e:	647c      	str	r4, [r7, #68]	@ 0x44
10013380:	633c      	str	r4, [r7, #48]	@ 0x30
10013382:	61bc      	str	r4, [r7, #24]
10013384:	469b      	mov	fp, r3
10013386:	f8c7 c00c 	str.w	ip, [r7, #12]
1001338a:	f8c7 8020 	str.w	r8, [r7, #32]
1001338e:	f8da 1000 	ldr.w	r1, [sl]
10013392:	780a      	ldrb	r2, [r1, #0]
10013394:	f1a2 032b 	sub.w	r3, r2, #43	@ 0x2b
10013398:	2b4e      	cmp	r3, #78	@ 0x4e
1001339a:	d850      	bhi.n	1001343e <__ssvfscanf_r+0x35e>
1001339c:	e8df f013 	tbh	[pc, r3, lsl #1]
100133a0:	004f03b7 	.word	0x004f03b7
100133a4:	004f03b7 	.word	0x004f03b7
100133a8:	0099004f 	.word	0x0099004f
100133ac:	009d009d 	.word	0x009d009d
100133b0:	009d009d 	.word	0x009d009d
100133b4:	009d009d 	.word	0x009d009d
100133b8:	009d009d 	.word	0x009d009d
100133bc:	004f009d 	.word	0x004f009d
100133c0:	004f004f 	.word	0x004f004f
100133c4:	004f004f 	.word	0x004f004f
100133c8:	004f004f 	.word	0x004f004f
100133cc:	033b03ac 	.word	0x033b03ac
100133d0:	033b033b 	.word	0x033b033b
100133d4:	03d003d9 	.word	0x03d003d9
100133d8:	004f004f 	.word	0x004f004f
100133dc:	004f03bf 	.word	0x004f03bf
100133e0:	004f004f 	.word	0x004f004f
100133e4:	0393004f 	.word	0x0393004f
100133e8:	0372004f 	.word	0x0372004f
100133ec:	004f004f 	.word	0x004f004f
100133f0:	036d004f 	.word	0x036d004f
100133f4:	004f004f 	.word	0x004f004f
100133f8:	0356004f 	.word	0x0356004f
100133fc:	004f03a7 	.word	0x004f03a7
10013400:	004f004f 	.word	0x004f004f
10013404:	004f004f 	.word	0x004f004f
10013408:	004f004f 	.word	0x004f004f
1001340c:	033b03ac 	.word	0x033b03ac
10013410:	033b033b 	.word	0x033b033b
10013414:	03d003d9 	.word	0x03d003d9
10013418:	004f004f 	.word	0x004f004f
1001341c:	004f03bf 	.word	0x004f03bf
10013420:	004f004f 	.word	0x004f004f
10013424:	0393004f 	.word	0x0393004f
10013428:	0372004f 	.word	0x0372004f
1001342c:	004f004f 	.word	0x004f004f
10013430:	036d004f 	.word	0x036d004f
10013434:	004f004f 	.word	0x004f004f
10013438:	0356004f 	.word	0x0356004f
1001343c:	03a7      	.short	0x03a7
1001343e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10013440:	059e      	lsls	r6, r3, #22
10013442:	d568      	bpl.n	10013516 <__ssvfscanf_r+0x436>
10013444:	f8d7 801c 	ldr.w	r8, [r7, #28]
10013448:	f898 3000 	ldrb.w	r3, [r8]
1001344c:	4293      	cmp	r3, r2
1001344e:	d162      	bne.n	10013516 <__ssvfscanf_r+0x436>
10013450:	e9c7 5401 	strd	r5, r4, [r7, #4]
10013454:	2600      	movs	r6, #0
10013456:	4655      	mov	r5, sl
10013458:	e006      	b.n	10013468 <__ssvfscanf_r+0x388>
1001345a:	6029      	str	r1, [r5, #0]
1001345c:	f891 e000 	ldrb.w	lr, [r1]
10013460:	f898 0000 	ldrb.w	r0, [r8]
10013464:	4586      	cmp	lr, r0
10013466:	d11b      	bne.n	100134a0 <__ssvfscanf_r+0x3c0>
10013468:	f818 0f01 	ldrb.w	r0, [r8, #1]!
1001346c:	46b2      	mov	sl, r6
1001346e:	464c      	mov	r4, r9
10013470:	3101      	adds	r1, #1
10013472:	3601      	adds	r6, #1
10013474:	f109 0901 	add.w	r9, r9, #1
10013478:	2800      	cmp	r0, #0
1001347a:	f000 8693 	beq.w	100141a4 <__ssvfscanf_r+0x10c4>
1001347e:	6868      	ldr	r0, [r5, #4]
10013480:	3801      	subs	r0, #1
10013482:	2800      	cmp	r0, #0
10013484:	6068      	str	r0, [r5, #4]
10013486:	dce8      	bgt.n	1001345a <__ssvfscanf_r+0x37a>
10013488:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001348a:	4629      	mov	r1, r5
1001348c:	f005 f9d4 	bl	10018838 <__ssrefill_r>
10013490:	b930      	cbnz	r0, 100134a0 <__ssvfscanf_r+0x3c0>
10013492:	6829      	ldr	r1, [r5, #0]
10013494:	f898 0000 	ldrb.w	r0, [r8]
10013498:	f891 e000 	ldrb.w	lr, [r1]
1001349c:	4586      	cmp	lr, r0
1001349e:	d0e3      	beq.n	10013468 <__ssvfscanf_r+0x388>
100134a0:	4652      	mov	r2, sl
100134a2:	46aa      	mov	sl, r5
100134a4:	e9d7 5807 	ldrd	r5, r8, [r7, #28]
100134a8:	4623      	mov	r3, r4
100134aa:	442e      	add	r6, r5
100134ac:	68bc      	ldr	r4, [r7, #8]
100134ae:	623c      	str	r4, [r7, #32]
100134b0:	4634      	mov	r4, r6
100134b2:	6cfe      	ldr	r6, [r7, #76]	@ 0x4c
100134b4:	61fa      	str	r2, [r7, #28]
100134b6:	4699      	mov	r9, r3
100134b8:	f814 1d01 	ldrb.w	r1, [r4, #-1]!
100134bc:	4652      	mov	r2, sl
100134be:	4630      	mov	r0, r6
100134c0:	f005 f97e 	bl	100187c0 <_sungetc_r>
100134c4:	42ac      	cmp	r4, r5
100134c6:	d1f7      	bne.n	100134b8 <__ssvfscanf_r+0x3d8>
100134c8:	69fa      	ldr	r2, [r7, #28]
100134ca:	6a3c      	ldr	r4, [r7, #32]
100134cc:	eba9 0902 	sub.w	r9, r9, r2
100134d0:	e023      	b.n	1001351a <__ssvfscanf_r+0x43a>
100134d2:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
100134d4:	05d9      	lsls	r1, r3, #23
100134d6:	f100 854e 	bmi.w	10013f76 <__ssvfscanf_r+0xe96>
100134da:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
100134dc:	191b      	adds	r3, r3, r4
100134de:	d11a      	bne.n	10013516 <__ssvfscanf_r+0x436>
100134e0:	461c      	mov	r4, r3
100134e2:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
100134e4:	f423 73c0 	bic.w	r3, r3, #384	@ 0x180
100134e8:	e9c7 4311 	strd	r4, r3, [r7, #68]	@ 0x44
100134ec:	f80b 2b01 	strb.w	r2, [fp], #1
100134f0:	3d01      	subs	r5, #1
100134f2:	f8da 3004 	ldr.w	r3, [sl, #4]
100134f6:	3b01      	subs	r3, #1
100134f8:	2b00      	cmp	r3, #0
100134fa:	f109 0901 	add.w	r9, r9, #1
100134fe:	f8ca 3004 	str.w	r3, [sl, #4]
10013502:	f340 83d4 	ble.w	10013cae <__ssvfscanf_r+0xbce>
10013506:	f8da 3000 	ldr.w	r3, [sl]
1001350a:	3301      	adds	r3, #1
1001350c:	f8ca 3000 	str.w	r3, [sl]
10013510:	2d00      	cmp	r5, #0
10013512:	f47f af3c 	bne.w	1001338e <__ssvfscanf_r+0x2ae>
10013516:	f8d7 8020 	ldr.w	r8, [r7, #32]
1001351a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1001351c:	2b00      	cmp	r3, #0
1001351e:	f040 8337 	bne.w	10013b90 <__ssvfscanf_r+0xab0>
10013522:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10013524:	3b01      	subs	r3, #1
10013526:	2b01      	cmp	r3, #1
10013528:	f240 83b1 	bls.w	10013c8e <__ssvfscanf_r+0xbae>
1001352c:	1e63      	subs	r3, r4, #1
1001352e:	2b06      	cmp	r3, #6
10013530:	f240 864f 	bls.w	100141d2 <__ssvfscanf_r+0x10f2>
10013534:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10013536:	05d8      	lsls	r0, r3, #23
10013538:	d51c      	bpl.n	10013574 <__ssvfscanf_r+0x494>
1001353a:	0559      	lsls	r1, r3, #21
1001353c:	f101 8127 	bmi.w	1001478e <__ssvfscanf_r+0x16ae>
10013540:	f81b 1c01 	ldrb.w	r1, [fp, #-1]
10013544:	2965      	cmp	r1, #101	@ 0x65
10013546:	f10b 33ff 	add.w	r3, fp, #4294967295	@ 0xffffffff
1001354a:	f109 34ff 	add.w	r4, r9, #4294967295	@ 0xffffffff
1001354e:	d00b      	beq.n	10013568 <__ssvfscanf_r+0x488>
10013550:	2945      	cmp	r1, #69	@ 0x45
10013552:	d009      	beq.n	10013568 <__ssvfscanf_r+0x488>
10013554:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10013556:	4652      	mov	r2, sl
10013558:	f005 f932 	bl	100187c0 <_sungetc_r>
1001355c:	f81b 1c02 	ldrb.w	r1, [fp, #-2]
10013560:	f1a9 0402 	sub.w	r4, r9, #2
10013564:	f1ab 0302 	sub.w	r3, fp, #2
10013568:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001356a:	4652      	mov	r2, sl
1001356c:	46a1      	mov	r9, r4
1001356e:	469b      	mov	fp, r3
10013570:	f005 f926 	bl	100187c0 <_sungetc_r>
10013574:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10013576:	f013 0210 	ands.w	r2, r3, #16
1001357a:	f47f add7 	bne.w	1001312c <__ssvfscanf_r+0x4c>
1001357e:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
10013582:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
10013586:	f88b 2000 	strb.w	r2, [fp]
1001358a:	f000 850f 	beq.w	10013fac <__ssvfscanf_r+0xecc>
1001358e:	697b      	ldr	r3, [r7, #20]
10013590:	2b00      	cmp	r3, #0
10013592:	f041 8023 	bne.w	100145dc <__ssvfscanf_r+0x14fc>
10013596:	2200      	movs	r2, #0
10013598:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
1001359a:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001359c:	f003 fd12 	bl	10016fc4 <_strtod_r>
100135a0:	6cba      	ldr	r2, [r7, #72]	@ 0x48
100135a2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
100135a4:	07d2      	lsls	r2, r2, #31
100135a6:	4605      	mov	r5, r0
100135a8:	460e      	mov	r6, r1
100135aa:	f103 0404 	add.w	r4, r3, #4
100135ae:	f140 8629 	bpl.w	10014204 <__ssvfscanf_r+0x1124>
100135b2:	681b      	ldr	r3, [r3, #0]
100135b4:	e9c3 5600 	strd	r5, r6, [r3]
100135b8:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
100135ba:	637c      	str	r4, [r7, #52]	@ 0x34
100135bc:	3301      	adds	r3, #1
100135be:	643b      	str	r3, [r7, #64]	@ 0x40
100135c0:	e5b4      	b.n	1001312c <__ssvfscanf_r+0x4c>
100135c2:	1e6b      	subs	r3, r5, #1
100135c4:	f5b3 7fae 	cmp.w	r3, #348	@ 0x15c
100135c8:	bf88      	it	hi
100135ca:	f46f 72ae 	mvnhi.w	r2, #348	@ 0x15c
100135ce:	f507 73b8 	add.w	r3, r7, #368	@ 0x170
100135d2:	bf8c      	ite	hi
100135d4:	18a9      	addhi	r1, r5, r2
100135d6:	2100      	movls	r1, #0
100135d8:	62fb      	str	r3, [r7, #44]	@ 0x2c
100135da:	461e      	mov	r6, r3
100135dc:	6bba      	ldr	r2, [r7, #56]	@ 0x38
100135de:	6479      	str	r1, [r7, #68]	@ 0x44
100135e0:	4653      	mov	r3, sl
100135e2:	f444 6458 	orr.w	r4, r4, #3456	@ 0xd80
100135e6:	46ca      	mov	sl, r9
100135e8:	bf88      	it	hi
100135ea:	f240 155d 	movwhi	r5, #349	@ 0x15d
100135ee:	f04f 0b00 	mov.w	fp, #0
100135f2:	4699      	mov	r9, r3
100135f4:	f8d9 0000 	ldr.w	r0, [r9]
100135f8:	f890 c000 	ldrb.w	ip, [r0]
100135fc:	f1ac 032b 	sub.w	r3, ip, #43	@ 0x2b
10013600:	2b4d      	cmp	r3, #77	@ 0x4d
10013602:	d862      	bhi.n	100136ca <__ssvfscanf_r+0x5ea>
10013604:	e8df f013 	tbh	[pc, r3, lsl #1]
10013608:	006102b5 	.word	0x006102b5
1001360c:	006102b5 	.word	0x006102b5
10013610:	031e0061 	.word	0x031e0061
10013614:	02150215 	.word	0x02150215
10013618:	02150215 	.word	0x02150215
1001361c:	02150215 	.word	0x02150215
10013620:	02bb0215 	.word	0x02bb0215
10013624:	006102bb 	.word	0x006102bb
10013628:	00610061 	.word	0x00610061
1001362c:	00610061 	.word	0x00610061
10013630:	00610061 	.word	0x00610061
10013634:	004e004e 	.word	0x004e004e
10013638:	004e004e 	.word	0x004e004e
1001363c:	004e004e 	.word	0x004e004e
10013640:	00610061 	.word	0x00610061
10013644:	00610061 	.word	0x00610061
10013648:	00610061 	.word	0x00610061
1001364c:	00610061 	.word	0x00610061
10013650:	00610061 	.word	0x00610061
10013654:	00610061 	.word	0x00610061
10013658:	00610061 	.word	0x00610061
1001365c:	00610061 	.word	0x00610061
10013660:	02a90061 	.word	0x02a90061
10013664:	00610061 	.word	0x00610061
10013668:	00610061 	.word	0x00610061
1001366c:	00610061 	.word	0x00610061
10013670:	00610061 	.word	0x00610061
10013674:	004e004e 	.word	0x004e004e
10013678:	004e004e 	.word	0x004e004e
1001367c:	004e004e 	.word	0x004e004e
10013680:	00610061 	.word	0x00610061
10013684:	00610061 	.word	0x00610061
10013688:	00610061 	.word	0x00610061
1001368c:	00610061 	.word	0x00610061
10013690:	00610061 	.word	0x00610061
10013694:	00610061 	.word	0x00610061
10013698:	00610061 	.word	0x00610061
1001369c:	00610061 	.word	0x00610061
100136a0:	02a90061 	.word	0x02a90061
100136a4:	2a0a      	cmp	r2, #10
100136a6:	dd10      	ble.n	100136ca <__ssvfscanf_r+0x5ea>
100136a8:	f424 6438 	bic.w	r4, r4, #2944	@ 0xb80
100136ac:	f806 cb01 	strb.w	ip, [r6], #1
100136b0:	f8d9 3004 	ldr.w	r3, [r9, #4]
100136b4:	3b01      	subs	r3, #1
100136b6:	2b00      	cmp	r3, #0
100136b8:	f8c9 3004 	str.w	r3, [r9, #4]
100136bc:	f340 82dd 	ble.w	10013c7a <__ssvfscanf_r+0xb9a>
100136c0:	3001      	adds	r0, #1
100136c2:	f8c9 0000 	str.w	r0, [r9]
100136c6:	3d01      	subs	r5, #1
100136c8:	d194      	bne.n	100135f4 <__ssvfscanf_r+0x514>
100136ca:	464b      	mov	r3, r9
100136cc:	05e0      	lsls	r0, r4, #23
100136ce:	46d1      	mov	r9, sl
100136d0:	63ba      	str	r2, [r7, #56]	@ 0x38
100136d2:	469a      	mov	sl, r3
100136d4:	d507      	bpl.n	100136e6 <__ssvfscanf_r+0x606>
100136d6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
100136d8:	429e      	cmp	r6, r3
100136da:	f200 8479 	bhi.w	10013fd0 <__ssvfscanf_r+0xef0>
100136de:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
100136e0:	429e      	cmp	r6, r3
100136e2:	f000 82e1 	beq.w	10013ca8 <__ssvfscanf_r+0xbc8>
100136e6:	f014 0210 	ands.w	r2, r4, #16
100136ea:	d111      	bne.n	10013710 <__ssvfscanf_r+0x630>
100136ec:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
100136ee:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
100136f0:	6abd      	ldr	r5, [r7, #40]	@ 0x28
100136f2:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
100136f4:	7032      	strb	r2, [r6, #0]
100136f6:	47a8      	blx	r5
100136f8:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
100136fa:	06a1      	lsls	r1, r4, #26
100136fc:	f103 0504 	add.w	r5, r3, #4
10013700:	f140 844c 	bpl.w	10013f9c <__ssvfscanf_r+0xebc>
10013704:	681b      	ldr	r3, [r3, #0]
10013706:	6018      	str	r0, [r3, #0]
10013708:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
1001370a:	637d      	str	r5, [r7, #52]	@ 0x34
1001370c:	3301      	adds	r3, #1
1001370e:	643b      	str	r3, [r7, #64]	@ 0x40
10013710:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
10013712:	1af6      	subs	r6, r6, r3
10013714:	445e      	add	r6, fp
10013716:	44b1      	add	r9, r6
10013718:	e508      	b.n	1001312c <__ssvfscanf_r+0x4c>
1001371a:	2d00      	cmp	r5, #0
1001371c:	bf08      	it	eq
1001371e:	f04f 35ff 	moveq.w	r5, #4294967295	@ 0xffffffff
10013722:	07e0      	lsls	r0, r4, #31
10013724:	f004 0310 	and.w	r3, r4, #16
10013728:	f140 82eb 	bpl.w	10013d02 <__ssvfscanf_r+0xc22>
1001372c:	2b00      	cmp	r3, #0
1001372e:	f040 84bf 	bne.w	100140b0 <__ssvfscanf_r+0xfd0>
10013732:	6b7e      	ldr	r6, [r7, #52]	@ 0x34
10013734:	0621      	lsls	r1, r4, #24
10013736:	f856 2b04 	ldr.w	r2, [r6], #4
1001373a:	64ba      	str	r2, [r7, #72]	@ 0x48
1001373c:	f140 875d 	bpl.w	100145fa <__ssvfscanf_r+0x151a>
10013740:	647b      	str	r3, [r7, #68]	@ 0x44
10013742:	2a00      	cmp	r2, #0
10013744:	f000 82b0 	beq.w	10013ca8 <__ssvfscanf_r+0xbc8>
10013748:	2080      	movs	r0, #128	@ 0x80
1001374a:	f001 f90b 	bl	10014964 <malloc>
1001374e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10013750:	4602      	mov	r2, r0
10013752:	2800      	cmp	r0, #0
10013754:	f000 8717 	beq.w	10014586 <__ssvfscanf_r+0x14a6>
10013758:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
1001375a:	6008      	str	r0, [r1, #0]
1001375c:	6bf8      	ldr	r0, [r7, #60]	@ 0x3c
1001375e:	88c4      	ldrh	r4, [r0, #6]
10013760:	8881      	ldrh	r1, [r0, #4]
10013762:	428c      	cmp	r4, r1
10013764:	f080 8607 	bcs.w	10014376 <__ssvfscanf_r+0x1296>
10013768:	6800      	ldr	r0, [r0, #0]
1001376a:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
1001376c:	f840 1024 	str.w	r1, [r0, r4, lsl #2]
10013770:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
10013772:	637e      	str	r6, [r7, #52]	@ 0x34
10013774:	3401      	adds	r4, #1
10013776:	80cc      	strh	r4, [r1, #6]
10013778:	4696      	mov	lr, r2
1001377a:	f04f 0c20 	mov.w	ip, #32
1001377e:	f8da 1000 	ldr.w	r1, [sl]
10013782:	4eaf      	ldr	r6, [pc, #700]	@ (10013a40 <__ssvfscanf_r+0x960>)
10013784:	7809      	ldrb	r1, [r1, #0]
10013786:	f816 b001 	ldrb.w	fp, [r6, r1]
1001378a:	f01b 0b08 	ands.w	fp, fp, #8
1001378e:	d170      	bne.n	10013872 <__ssvfscanf_r+0x792>
10013790:	f8c7 801c 	str.w	r8, [r7, #28]
10013794:	623e      	str	r6, [r7, #32]
10013796:	f8c7 e030 	str.w	lr, [r7, #48]	@ 0x30
1001379a:	462e      	mov	r6, r5
1001379c:	f8c7 c044 	str.w	ip, [r7, #68]	@ 0x44
100137a0:	4698      	mov	r8, r3
100137a2:	4615      	mov	r5, r2
100137a4:	f001 fc72 	bl	1001508c <__locale_mb_cur_max>
100137a8:	4558      	cmp	r0, fp
100137aa:	f43f ad05 	beq.w	100131b8 <__ssvfscanf_r+0xd8>
100137ae:	e9da 3200 	ldrd	r3, r2, [sl]
100137b2:	f507 71b8 	add.w	r1, r7, #368	@ 0x170
100137b6:	4608      	mov	r0, r1
100137b8:	62f9      	str	r1, [r7, #44]	@ 0x2c
100137ba:	f813 1b01 	ldrb.w	r1, [r3], #1
100137be:	f800 100b 	strb.w	r1, [r0, fp]
100137c2:	3a01      	subs	r2, #1
100137c4:	e9ca 3200 	strd	r3, r2, [sl]
100137c8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
100137ca:	2b03      	cmp	r3, #3
100137cc:	f10b 0b01 	add.w	fp, fp, #1
100137d0:	f107 0468 	add.w	r4, r7, #104	@ 0x68
100137d4:	d102      	bne.n	100137dc <__ssvfscanf_r+0x6fc>
100137d6:	6823      	ldr	r3, [r4, #0]
100137d8:	2b04      	cmp	r3, #4
100137da:	d004      	beq.n	100137e6 <__ssvfscanf_r+0x706>
100137dc:	2208      	movs	r2, #8
100137de:	2100      	movs	r1, #0
100137e0:	4620      	mov	r0, r4
100137e2:	f001 fbbd 	bl	10014f60 <memset>
100137e6:	9400      	str	r4, [sp, #0]
100137e8:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
100137ea:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
100137ec:	465b      	mov	r3, fp
100137ee:	4629      	mov	r1, r5
100137f0:	f001 fb8c 	bl	10014f0c <_mbrtowc_r>
100137f4:	1c42      	adds	r2, r0, #1
100137f6:	6278      	str	r0, [r7, #36]	@ 0x24
100137f8:	f43f acde 	beq.w	100131b8 <__ssvfscanf_r+0xd8>
100137fc:	2800      	cmp	r0, #0
100137fe:	f000 860c 	beq.w	1001441a <__ssvfscanf_r+0x133a>
10013802:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
10013804:	3302      	adds	r3, #2
10013806:	d01e      	beq.n	10013846 <__ssvfscanf_r+0x766>
10013808:	6828      	ldr	r0, [r5, #0]
1001380a:	f004 fcaf 	bl	1001816c <iswspace>
1001380e:	2800      	cmp	r0, #0
10013810:	f040 877a 	bne.w	10014708 <__ssvfscanf_r+0x1628>
10013814:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
10013816:	2b03      	cmp	r3, #3
10013818:	44d9      	add	r9, fp
1001381a:	d102      	bne.n	10013822 <__ssvfscanf_r+0x742>
1001381c:	6823      	ldr	r3, [r4, #0]
1001381e:	2b04      	cmp	r3, #4
10013820:	d000      	beq.n	10013824 <__ssvfscanf_r+0x744>
10013822:	3e01      	subs	r6, #1
10013824:	f1b8 0f00 	cmp.w	r8, #0
10013828:	f040 86e3 	bne.w	100145f2 <__ssvfscanf_r+0x1512>
1001382c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001382e:	3504      	adds	r5, #4
10013830:	2b00      	cmp	r3, #0
10013832:	f000 86de 	beq.w	100145f2 <__ssvfscanf_r+0x1512>
10013836:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
10013838:	1aec      	subs	r4, r5, r3
1001383a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001383c:	ebb3 0fa4 	cmp.w	r3, r4, asr #2
10013840:	f240 8794 	bls.w	1001476c <__ssvfscanf_r+0x168c>
10013844:	46c3      	mov	fp, r8
10013846:	f8da 3004 	ldr.w	r3, [sl, #4]
1001384a:	2b00      	cmp	r3, #0
1001384c:	f340 8728 	ble.w	100146a0 <__ssvfscanf_r+0x15c0>
10013850:	f8da 3000 	ldr.w	r3, [sl]
10013854:	6a3a      	ldr	r2, [r7, #32]
10013856:	781b      	ldrb	r3, [r3, #0]
10013858:	5cd3      	ldrb	r3, [r2, r3]
1001385a:	0718      	lsls	r0, r3, #28
1001385c:	d401      	bmi.n	10013862 <__ssvfscanf_r+0x782>
1001385e:	2e00      	cmp	r6, #0
10013860:	d1a0      	bne.n	100137a4 <__ssvfscanf_r+0x6c4>
10013862:	4643      	mov	r3, r8
10013864:	f8d7 e030 	ldr.w	lr, [r7, #48]	@ 0x30
10013868:	f8d7 c044 	ldr.w	ip, [r7, #68]	@ 0x44
1001386c:	f8d7 801c 	ldr.w	r8, [r7, #28]
10013870:	462a      	mov	r2, r5
10013872:	2b00      	cmp	r3, #0
10013874:	f47f ac5a 	bne.w	1001312c <__ssvfscanf_r+0x4c>
10013878:	6013      	str	r3, [r2, #0]
1001387a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001387c:	b133      	cbz	r3, 1001388c <__ssvfscanf_r+0x7ac>
1001387e:	eba2 020e 	sub.w	r2, r2, lr
10013882:	1093      	asrs	r3, r2, #2
10013884:	3301      	adds	r3, #1
10013886:	459c      	cmp	ip, r3
10013888:	f200 8611 	bhi.w	100144ae <__ssvfscanf_r+0x13ce>
1001388c:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
1001388e:	3301      	adds	r3, #1
10013890:	643b      	str	r3, [r7, #64]	@ 0x40
10013892:	e44b      	b.n	1001312c <__ssvfscanf_r+0x4c>
10013894:	2d00      	cmp	r5, #0
10013896:	bf08      	it	eq
10013898:	f04f 35ff 	moveq.w	r5, #4294967295	@ 0xffffffff
1001389c:	07e6      	lsls	r6, r4, #31
1001389e:	f004 0210 	and.w	r2, r4, #16
100138a2:	f140 829d 	bpl.w	10013de0 <__ssvfscanf_r+0xd00>
100138a6:	2a00      	cmp	r2, #0
100138a8:	f040 843e 	bne.w	10014128 <__ssvfscanf_r+0x1048>
100138ac:	6b79      	ldr	r1, [r7, #52]	@ 0x34
100138ae:	0624      	lsls	r4, r4, #24
100138b0:	f851 3b04 	ldr.w	r3, [r1], #4
100138b4:	637b      	str	r3, [r7, #52]	@ 0x34
100138b6:	6239      	str	r1, [r7, #32]
100138b8:	f140 86aa 	bpl.w	10014610 <__ssvfscanf_r+0x1530>
100138bc:	64ba      	str	r2, [r7, #72]	@ 0x48
100138be:	2b00      	cmp	r3, #0
100138c0:	f000 81f2 	beq.w	10013ca8 <__ssvfscanf_r+0xbc8>
100138c4:	2080      	movs	r0, #128	@ 0x80
100138c6:	f001 f84d 	bl	10014964 <malloc>
100138ca:	6cba      	ldr	r2, [r7, #72]	@ 0x48
100138cc:	4683      	mov	fp, r0
100138ce:	2800      	cmp	r0, #0
100138d0:	f000 8659 	beq.w	10014586 <__ssvfscanf_r+0x14a6>
100138d4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
100138d6:	6018      	str	r0, [r3, #0]
100138d8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
100138da:	88dc      	ldrh	r4, [r3, #6]
100138dc:	8899      	ldrh	r1, [r3, #4]
100138de:	428c      	cmp	r4, r1
100138e0:	f080 8535 	bcs.w	1001434e <__ssvfscanf_r+0x126e>
100138e4:	6818      	ldr	r0, [r3, #0]
100138e6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
100138e8:	f840 3024 	str.w	r3, [r0, r4, lsl #2]
100138ec:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
100138ee:	f8c7 b030 	str.w	fp, [r7, #48]	@ 0x30
100138f2:	3401      	adds	r4, #1
100138f4:	80dc      	strh	r4, [r3, #6]
100138f6:	2320      	movs	r3, #32
100138f8:	62fb      	str	r3, [r7, #44]	@ 0x2c
100138fa:	6a7c      	ldr	r4, [r7, #36]	@ 0x24
100138fc:	f8c7 801c 	str.w	r8, [r7, #28]
10013900:	2600      	movs	r6, #0
10013902:	647a      	str	r2, [r7, #68]	@ 0x44
10013904:	46a8      	mov	r8, r5
10013906:	f001 fbc1 	bl	1001508c <__locale_mb_cur_max>
1001390a:	42b0      	cmp	r0, r6
1001390c:	f43f ac54 	beq.w	100131b8 <__ssvfscanf_r+0xd8>
10013910:	e9da 3200 	ldrd	r3, r2, [sl]
10013914:	f507 70b8 	add.w	r0, r7, #368	@ 0x170
10013918:	f813 1b01 	ldrb.w	r1, [r3], #1
1001391c:	5581      	strb	r1, [r0, r6]
1001391e:	3a01      	subs	r2, #1
10013920:	2c03      	cmp	r4, #3
10013922:	e9ca 3200 	strd	r3, r2, [sl]
10013926:	f106 0601 	add.w	r6, r6, #1
1001392a:	f107 0560 	add.w	r5, r7, #96	@ 0x60
1001392e:	d102      	bne.n	10013936 <__ssvfscanf_r+0x856>
10013930:	682b      	ldr	r3, [r5, #0]
10013932:	2b04      	cmp	r3, #4
10013934:	d004      	beq.n	10013940 <__ssvfscanf_r+0x860>
10013936:	2208      	movs	r2, #8
10013938:	2100      	movs	r1, #0
1001393a:	4628      	mov	r0, r5
1001393c:	f001 fb10 	bl	10014f60 <memset>
10013940:	9500      	str	r5, [sp, #0]
10013942:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10013944:	4633      	mov	r3, r6
10013946:	f507 72b8 	add.w	r2, r7, #368	@ 0x170
1001394a:	4659      	mov	r1, fp
1001394c:	f001 fade 	bl	10014f0c <_mbrtowc_r>
10013950:	4604      	mov	r4, r0
10013952:	1c60      	adds	r0, r4, #1
10013954:	f43f ac30 	beq.w	100131b8 <__ssvfscanf_r+0xd8>
10013958:	2c00      	cmp	r4, #0
1001395a:	f040 83f2 	bne.w	10014142 <__ssvfscanf_r+0x1062>
1001395e:	f8cb 4000 	str.w	r4, [fp]
10013962:	4623      	mov	r3, r4
10013964:	2208      	movs	r2, #8
10013966:	2100      	movs	r1, #0
10013968:	f107 0068 	add.w	r0, r7, #104	@ 0x68
1001396c:	64bb      	str	r3, [r7, #72]	@ 0x48
1001396e:	f001 faf7 	bl	10014f60 <memset>
10013972:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10013974:	461a      	mov	r2, r3
10013976:	4b33      	ldr	r3, [pc, #204]	@ (10013a44 <__ssvfscanf_r+0x964>)
10013978:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
1001397c:	64bb      	str	r3, [r7, #72]	@ 0x48
1001397e:	e9d7 c012 	ldrd	ip, r0, [r7, #72]	@ 0x48
10013982:	f107 0368 	add.w	r3, r7, #104	@ 0x68
10013986:	f107 0150 	add.w	r1, r7, #80	@ 0x50
1001398a:	47e0      	blx	ip
1001398c:	2801      	cmp	r0, #1
1001398e:	bf0c      	ite	eq
10013990:	f897 3050 	ldrbeq.w	r3, [r7, #80]	@ 0x50
10013994:	2300      	movne	r3, #0
10013996:	f107 0270 	add.w	r2, r7, #112	@ 0x70
1001399a:	5cd3      	ldrb	r3, [r2, r3]
1001399c:	2b00      	cmp	r3, #0
1001399e:	f000 863e 	beq.w	1001461e <__ssvfscanf_r+0x153e>
100139a2:	2c03      	cmp	r4, #3
100139a4:	44b1      	add	r9, r6
100139a6:	f000 83d5 	beq.w	10014154 <__ssvfscanf_r+0x1074>
100139aa:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
100139ae:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
100139b0:	2b00      	cmp	r3, #0
100139b2:	f040 83c4 	bne.w	1001413e <__ssvfscanf_r+0x105e>
100139b6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
100139b8:	f10b 0b04 	add.w	fp, fp, #4
100139bc:	2b00      	cmp	r3, #0
100139be:	f000 83be 	beq.w	1001413e <__ssvfscanf_r+0x105e>
100139c2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
100139c4:	ebab 0503 	sub.w	r5, fp, r3
100139c8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
100139ca:	ebb3 0fa5 	cmp.w	r3, r5, asr #2
100139ce:	f240 83d8 	bls.w	10014182 <__ssvfscanf_r+0x10a2>
100139d2:	6c7e      	ldr	r6, [r7, #68]	@ 0x44
100139d4:	f8da 3004 	ldr.w	r3, [sl, #4]
100139d8:	2b00      	cmp	r3, #0
100139da:	f340 82a3 	ble.w	10013f24 <__ssvfscanf_r+0xe44>
100139de:	f1b8 0f00 	cmp.w	r8, #0
100139e2:	d190      	bne.n	10013906 <__ssvfscanf_r+0x826>
100139e4:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
100139e6:	f8d7 801c 	ldr.w	r8, [r7, #28]
100139ea:	627c      	str	r4, [r7, #36]	@ 0x24
100139ec:	b97a      	cbnz	r2, 10013a0e <__ssvfscanf_r+0x92e>
100139ee:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
100139f0:	f8cb 2000 	str.w	r2, [fp]
100139f4:	b143      	cbz	r3, 10013a08 <__ssvfscanf_r+0x928>
100139f6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
100139f8:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
100139fa:	ebab 0303 	sub.w	r3, fp, r3
100139fe:	109a      	asrs	r2, r3, #2
10013a00:	3201      	adds	r2, #1
10013a02:	4291      	cmp	r1, r2
10013a04:	f200 86a7 	bhi.w	10014756 <__ssvfscanf_r+0x1676>
10013a08:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10013a0a:	3301      	adds	r3, #1
10013a0c:	643b      	str	r3, [r7, #64]	@ 0x40
10013a0e:	6a3b      	ldr	r3, [r7, #32]
10013a10:	637b      	str	r3, [r7, #52]	@ 0x34
10013a12:	f7ff bb8b 	b.w	1001312c <__ssvfscanf_r+0x4c>
10013a16:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
10013a18:	050e      	lsls	r6, r1, #20
10013a1a:	f57f ad7c 	bpl.w	10013516 <__ssvfscanf_r+0x436>
10013a1e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10013a20:	191b      	adds	r3, r3, r4
10013a22:	f47f ad78 	bne.w	10013516 <__ssvfscanf_r+0x436>
10013a26:	461c      	mov	r4, r3
10013a28:	f421 73c0 	bic.w	r3, r1, #384	@ 0x180
10013a2c:	e9c7 4311 	strd	r4, r3, [r7, #68]	@ 0x44
10013a30:	e55c      	b.n	100134ec <__ssvfscanf_r+0x40c>
10013a32:	4b05      	ldr	r3, [pc, #20]	@ (10013a48 <__ssvfscanf_r+0x968>)
10013a34:	f424 6438 	bic.w	r4, r4, #2944	@ 0xb80
10013a38:	f933 2012 	ldrsh.w	r2, [r3, r2, lsl #1]
10013a3c:	e636      	b.n	100136ac <__ssvfscanf_r+0x5cc>
10013a3e:	bf00      	nop
10013a40:	10020b0d 	.word	0x10020b0d
10013a44:	20000424 	.word	0x20000424
10013a48:	10020aa4 	.word	0x10020aa4
10013a4c:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
10013a4e:	f401 6318 	and.w	r3, r1, #2432	@ 0x980
10013a52:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
10013a56:	f47f ad5e 	bne.w	10013516 <__ssvfscanf_r+0x436>
10013a5a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
10013a5c:	2b01      	cmp	r3, #1
10013a5e:	f47f ad5a 	bne.w	10013516 <__ssvfscanf_r+0x436>
10013a62:	f421 7380 	bic.w	r3, r1, #256	@ 0x100
10013a66:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
10013a6a:	64bb      	str	r3, [r7, #72]	@ 0x48
10013a6c:	2330      	movs	r3, #48	@ 0x30
10013a6e:	f80b 3b01 	strb.w	r3, [fp], #1
10013a72:	2300      	movs	r3, #0
10013a74:	3d01      	subs	r5, #1
10013a76:	633b      	str	r3, [r7, #48]	@ 0x30
10013a78:	e538      	b.n	100134ec <__ssvfscanf_r+0x40c>
10013a7a:	2c06      	cmp	r4, #6
10013a7c:	f47f ad4b 	bne.w	10013516 <__ssvfscanf_r+0x436>
10013a80:	2407      	movs	r4, #7
10013a82:	e533      	b.n	100134ec <__ssvfscanf_r+0x40c>
10013a84:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10013a86:	051e      	lsls	r6, r3, #20
10013a88:	f57f ad45 	bpl.w	10013516 <__ssvfscanf_r+0x436>
10013a8c:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
10013a8e:	f401 63a0 	and.w	r3, r1, #1280	@ 0x500
10013a92:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
10013a96:	d005      	beq.n	10013aa4 <__ssvfscanf_r+0x9c4>
10013a98:	0549      	lsls	r1, r1, #21
10013a9a:	f57f ad3c 	bpl.w	10013516 <__ssvfscanf_r+0x436>
10013a9e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
10013aa0:	2b00      	cmp	r3, #0
10013aa2:	d048      	beq.n	10013b36 <__ssvfscanf_r+0xa56>
10013aa4:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10013aa6:	059b      	lsls	r3, r3, #22
10013aa8:	d404      	bmi.n	10013ab4 <__ssvfscanf_r+0x9d4>
10013aaa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
10013aac:	69b9      	ldr	r1, [r7, #24]
10013aae:	1a5b      	subs	r3, r3, r1
10013ab0:	e9c7 b304 	strd	fp, r3, [r7, #16]
10013ab4:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10013ab6:	f423 6378 	bic.w	r3, r3, #3968	@ 0xf80
10013aba:	f443 73c0 	orr.w	r3, r3, #384	@ 0x180
10013abe:	64bb      	str	r3, [r7, #72]	@ 0x48
10013ac0:	2300      	movs	r3, #0
10013ac2:	633b      	str	r3, [r7, #48]	@ 0x30
10013ac4:	e512      	b.n	100134ec <__ssvfscanf_r+0x40c>
10013ac6:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10013ac8:	2b00      	cmp	r3, #0
10013aca:	f040 821d 	bne.w	10013f08 <__ssvfscanf_r+0xe28>
10013ace:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
10013ad0:	b933      	cbnz	r3, 10013ae0 <__ssvfscanf_r+0xa00>
10013ad2:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10013ad4:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
10013ad8:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
10013adc:	f000 8606 	beq.w	100146ec <__ssvfscanf_r+0x160c>
10013ae0:	2c01      	cmp	r4, #1
10013ae2:	f000 820d 	beq.w	10013f00 <__ssvfscanf_r+0xe20>
10013ae6:	2c04      	cmp	r4, #4
10013ae8:	f000 820a 	beq.w	10013f00 <__ssvfscanf_r+0xe20>
10013aec:	e513      	b.n	10013516 <__ssvfscanf_r+0x436>
10013aee:	2c07      	cmp	r4, #7
10013af0:	f47f ad11 	bne.w	10013516 <__ssvfscanf_r+0x436>
10013af4:	2408      	movs	r4, #8
10013af6:	e4f9      	b.n	100134ec <__ssvfscanf_r+0x40c>
10013af8:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10013afa:	0519      	lsls	r1, r3, #20
10013afc:	f100 820c 	bmi.w	10013f18 <__ssvfscanf_r+0xe38>
10013b00:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10013b02:	2b01      	cmp	r3, #1
10013b04:	f47f ad07 	bne.w	10013516 <__ssvfscanf_r+0x436>
10013b08:	2302      	movs	r3, #2
10013b0a:	647b      	str	r3, [r7, #68]	@ 0x44
10013b0c:	e4ee      	b.n	100134ec <__ssvfscanf_r+0x40c>
10013b0e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10013b10:	0618      	lsls	r0, r3, #24
10013b12:	f57f ad00 	bpl.w	10013516 <__ssvfscanf_r+0x436>
10013b16:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
10013b1a:	64bb      	str	r3, [r7, #72]	@ 0x48
10013b1c:	e4e6      	b.n	100134ec <__ssvfscanf_r+0x40c>
10013b1e:	2c00      	cmp	r4, #0
10013b20:	f040 81e9 	bne.w	10013ef6 <__ssvfscanf_r+0xe16>
10013b24:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
10013b26:	bb8b      	cbnz	r3, 10013b8c <__ssvfscanf_r+0xaac>
10013b28:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10013b2a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
10013b2e:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
10013b32:	f000 85cd 	beq.w	100146d0 <__ssvfscanf_r+0x15f0>
10013b36:	2300      	movs	r3, #0
10013b38:	f8d7 8020 	ldr.w	r8, [r7, #32]
10013b3c:	633b      	str	r3, [r7, #48]	@ 0x30
10013b3e:	e4f0      	b.n	10013522 <__ssvfscanf_r+0x442>
10013b40:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10013b42:	051b      	lsls	r3, r3, #20
10013b44:	f100 81d1 	bmi.w	10013eea <__ssvfscanf_r+0xe0a>
10013b48:	2c02      	cmp	r4, #2
10013b4a:	f47f ace4 	bne.w	10013516 <__ssvfscanf_r+0x436>
10013b4e:	2403      	movs	r4, #3
10013b50:	e4cc      	b.n	100134ec <__ssvfscanf_r+0x40c>
10013b52:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
10013b54:	0508      	lsls	r0, r1, #20
10013b56:	d599      	bpl.n	10013a8c <__ssvfscanf_r+0x9ac>
10013b58:	e761      	b.n	10013a1e <__ssvfscanf_r+0x93e>
10013b5a:	f404 63c0 	and.w	r3, r4, #1536	@ 0x600
10013b5e:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
10013b62:	f47f adb2 	bne.w	100136ca <__ssvfscanf_r+0x5ea>
10013b66:	f424 7400 	bic.w	r4, r4, #512	@ 0x200
10013b6a:	f444 64a0 	orr.w	r4, r4, #1280	@ 0x500
10013b6e:	2210      	movs	r2, #16
10013b70:	e59c      	b.n	100136ac <__ssvfscanf_r+0x5cc>
10013b72:	0623      	lsls	r3, r4, #24
10013b74:	f57f ada9 	bpl.w	100136ca <__ssvfscanf_r+0x5ea>
10013b78:	f024 0480 	bic.w	r4, r4, #128	@ 0x80
10013b7c:	e596      	b.n	100136ac <__ssvfscanf_r+0x5cc>
10013b7e:	4b94      	ldr	r3, [pc, #592]	@ (10013dd0 <__ssvfscanf_r+0xcf0>)
10013b80:	f933 2012 	ldrsh.w	r2, [r3, r2, lsl #1]
10013b84:	2a08      	cmp	r2, #8
10013b86:	f73f ad8f 	bgt.w	100136a8 <__ssvfscanf_r+0x5c8>
10013b8a:	e59e      	b.n	100136ca <__ssvfscanf_r+0x5ea>
10013b8c:	f8d7 8020 	ldr.w	r8, [r7, #32]
10013b90:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10013b92:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
10013b96:	64bb      	str	r3, [r7, #72]	@ 0x48
10013b98:	e4c3      	b.n	10013522 <__ssvfscanf_r+0x442>
10013b9a:	f044 0401 	orr.w	r4, r4, #1
10013b9e:	f8da 3004 	ldr.w	r3, [sl, #4]
10013ba2:	2b00      	cmp	r3, #0
10013ba4:	4688      	mov	r8, r1
10013ba6:	f04f 0b02 	mov.w	fp, #2
10013baa:	f73f abb8 	bgt.w	1001331e <__ssvfscanf_r+0x23e>
10013bae:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10013bb0:	4651      	mov	r1, sl
10013bb2:	f004 fe41 	bl	10018838 <__ssrefill_r>
10013bb6:	2800      	cmp	r0, #0
10013bb8:	f47f aafe 	bne.w	100131b8 <__ssvfscanf_r+0xd8>
10013bbc:	0660      	lsls	r0, r4, #25
10013bbe:	f53f abb1 	bmi.w	10013324 <__ssvfscanf_r+0x244>
10013bc2:	f8da 2000 	ldr.w	r2, [sl]
10013bc6:	4e83      	ldr	r6, [pc, #524]	@ (10013dd4 <__ssvfscanf_r+0xcf4>)
10013bc8:	7813      	ldrb	r3, [r2, #0]
10013bca:	5cf3      	ldrb	r3, [r6, r3]
10013bcc:	0719      	lsls	r1, r3, #28
10013bce:	f57f aba9 	bpl.w	10013324 <__ssvfscanf_r+0x244>
10013bd2:	4633      	mov	r3, r6
10013bd4:	4656      	mov	r6, sl
10013bd6:	469a      	mov	sl, r3
10013bd8:	e005      	b.n	10013be6 <__ssvfscanf_r+0xb06>
10013bda:	6032      	str	r2, [r6, #0]
10013bdc:	7813      	ldrb	r3, [r2, #0]
10013bde:	f81a 3003 	ldrb.w	r3, [sl, r3]
10013be2:	071b      	lsls	r3, r3, #28
10013be4:	d515      	bpl.n	10013c12 <__ssvfscanf_r+0xb32>
10013be6:	6873      	ldr	r3, [r6, #4]
10013be8:	3b01      	subs	r3, #1
10013bea:	2b00      	cmp	r3, #0
10013bec:	f109 0901 	add.w	r9, r9, #1
10013bf0:	6073      	str	r3, [r6, #4]
10013bf2:	f102 0201 	add.w	r2, r2, #1
10013bf6:	dcf0      	bgt.n	10013bda <__ssvfscanf_r+0xafa>
10013bf8:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10013bfa:	4631      	mov	r1, r6
10013bfc:	f004 fe1c 	bl	10018838 <__ssrefill_r>
10013c00:	2800      	cmp	r0, #0
10013c02:	f040 82e3 	bne.w	100141cc <__ssvfscanf_r+0x10ec>
10013c06:	6832      	ldr	r2, [r6, #0]
10013c08:	7813      	ldrb	r3, [r2, #0]
10013c0a:	f81a 3003 	ldrb.w	r3, [sl, r3]
10013c0e:	071b      	lsls	r3, r3, #28
10013c10:	d4e9      	bmi.n	10013be6 <__ssvfscanf_r+0xb06>
10013c12:	46b2      	mov	sl, r6
10013c14:	f7ff bb86 	b.w	10013324 <__ssvfscanf_r+0x244>
10013c18:	f044 0401 	orr.w	r4, r4, #1
10013c1c:	4b6e      	ldr	r3, [pc, #440]	@ (10013dd8 <__ssvfscanf_r+0xcf8>)
10013c1e:	62bb      	str	r3, [r7, #40]	@ 0x28
10013c20:	230a      	movs	r3, #10
10013c22:	4688      	mov	r8, r1
10013c24:	63bb      	str	r3, [r7, #56]	@ 0x38
10013c26:	f04f 0b03 	mov.w	fp, #3
10013c2a:	f7ff bb73 	b.w	10013314 <__ssvfscanf_r+0x234>
10013c2e:	f044 0401 	orr.w	r4, r4, #1
10013c32:	4b6a      	ldr	r3, [pc, #424]	@ (10013ddc <__ssvfscanf_r+0xcfc>)
10013c34:	62bb      	str	r3, [r7, #40]	@ 0x28
10013c36:	2308      	movs	r3, #8
10013c38:	4688      	mov	r8, r1
10013c3a:	63bb      	str	r3, [r7, #56]	@ 0x38
10013c3c:	f04f 0b03 	mov.w	fp, #3
10013c40:	f7ff bb68 	b.w	10013314 <__ssvfscanf_r+0x234>
10013c44:	0523      	lsls	r3, r4, #20
10013c46:	f57f ad31 	bpl.w	100136ac <__ssvfscanf_r+0x5cc>
10013c4a:	b912      	cbnz	r2, 10013c52 <__ssvfscanf_r+0xb72>
10013c4c:	f444 7400 	orr.w	r4, r4, #512	@ 0x200
10013c50:	2208      	movs	r2, #8
10013c52:	0561      	lsls	r1, r4, #21
10013c54:	f100 819e 	bmi.w	10013f94 <__ssvfscanf_r+0xeb4>
10013c58:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10013c5a:	f424 7460 	bic.w	r4, r4, #896	@ 0x380
10013c5e:	b113      	cbz	r3, 10013c66 <__ssvfscanf_r+0xb86>
10013c60:	3b01      	subs	r3, #1
10013c62:	647b      	str	r3, [r7, #68]	@ 0x44
10013c64:	3501      	adds	r5, #1
10013c66:	f8d9 3004 	ldr.w	r3, [r9, #4]
10013c6a:	3b01      	subs	r3, #1
10013c6c:	2b00      	cmp	r3, #0
10013c6e:	f10b 0b01 	add.w	fp, fp, #1
10013c72:	f8c9 3004 	str.w	r3, [r9, #4]
10013c76:	f73f ad23 	bgt.w	100136c0 <__ssvfscanf_r+0x5e0>
10013c7a:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10013c7c:	64ba      	str	r2, [r7, #72]	@ 0x48
10013c7e:	4649      	mov	r1, r9
10013c80:	f004 fdda 	bl	10018838 <__ssrefill_r>
10013c84:	6cba      	ldr	r2, [r7, #72]	@ 0x48
10013c86:	2800      	cmp	r0, #0
10013c88:	f43f ad1d 	beq.w	100136c6 <__ssvfscanf_r+0x5e6>
10013c8c:	e51d      	b.n	100136ca <__ssvfscanf_r+0x5ea>
10013c8e:	6afd      	ldr	r5, [r7, #44]	@ 0x2c
10013c90:	45ab      	cmp	fp, r5
10013c92:	f240 8114 	bls.w	10013ebe <__ssvfscanf_r+0xdde>
10013c96:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
10013c98:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
10013c9c:	4652      	mov	r2, sl
10013c9e:	4620      	mov	r0, r4
10013ca0:	f004 fd8e 	bl	100187c0 <_sungetc_r>
10013ca4:	45ab      	cmp	fp, r5
10013ca6:	d1f7      	bne.n	10013c98 <__ssvfscanf_r+0xbb8>
10013ca8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10013caa:	f7ff ba90 	b.w	100131ce <__ssvfscanf_r+0xee>
10013cae:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10013cb0:	4651      	mov	r1, sl
10013cb2:	f004 fdc1 	bl	10018838 <__ssrefill_r>
10013cb6:	2800      	cmp	r0, #0
10013cb8:	f47f ac2d 	bne.w	10013516 <__ssvfscanf_r+0x436>
10013cbc:	2d00      	cmp	r5, #0
10013cbe:	f47f ab66 	bne.w	1001338e <__ssvfscanf_r+0x2ae>
10013cc2:	e428      	b.n	10013516 <__ssvfscanf_r+0x436>
10013cc4:	f8da 2004 	ldr.w	r2, [sl, #4]
10013cc8:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
10013cca:	e010      	b.n	10013cee <__ssvfscanf_r+0xc0e>
10013ccc:	f8da 3000 	ldr.w	r3, [sl]
10013cd0:	4940      	ldr	r1, [pc, #256]	@ (10013dd4 <__ssvfscanf_r+0xcf4>)
10013cd2:	781a      	ldrb	r2, [r3, #0]
10013cd4:	5c8a      	ldrb	r2, [r1, r2]
10013cd6:	0711      	lsls	r1, r2, #28
10013cd8:	f103 0301 	add.w	r3, r3, #1
10013cdc:	f57f aa26 	bpl.w	1001312c <__ssvfscanf_r+0x4c>
10013ce0:	f8da 2004 	ldr.w	r2, [sl, #4]
10013ce4:	3a01      	subs	r2, #1
10013ce6:	e9ca 3200 	strd	r3, r2, [sl]
10013cea:	f109 0901 	add.w	r9, r9, #1
10013cee:	2a00      	cmp	r2, #0
10013cf0:	dcec      	bgt.n	10013ccc <__ssvfscanf_r+0xbec>
10013cf2:	4651      	mov	r1, sl
10013cf4:	4620      	mov	r0, r4
10013cf6:	f004 fd9f 	bl	10018838 <__ssrefill_r>
10013cfa:	2800      	cmp	r0, #0
10013cfc:	d0e6      	beq.n	10013ccc <__ssvfscanf_r+0xbec>
10013cfe:	f7ff ba15 	b.w	1001312c <__ssvfscanf_r+0x4c>
10013d02:	2b00      	cmp	r3, #0
10013d04:	f040 8395 	bne.w	10014432 <__ssvfscanf_r+0x1352>
10013d08:	f8d7 b034 	ldr.w	fp, [r7, #52]	@ 0x34
10013d0c:	f014 0280 	ands.w	r2, r4, #128	@ 0x80
10013d10:	f85b 6b04 	ldr.w	r6, [fp], #4
10013d14:	64be      	str	r6, [r7, #72]	@ 0x48
10013d16:	f000 8446 	beq.w	100145a6 <__ssvfscanf_r+0x14c6>
10013d1a:	2e00      	cmp	r6, #0
10013d1c:	d0c4      	beq.n	10013ca8 <__ssvfscanf_r+0xbc8>
10013d1e:	2020      	movs	r0, #32
10013d20:	f000 fe20 	bl	10014964 <malloc>
10013d24:	4604      	mov	r4, r0
10013d26:	2800      	cmp	r0, #0
10013d28:	f000 842d 	beq.w	10014586 <__ssvfscanf_r+0x14a6>
10013d2c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10013d2e:	6030      	str	r0, [r6, #0]
10013d30:	889a      	ldrh	r2, [r3, #4]
10013d32:	88de      	ldrh	r6, [r3, #6]
10013d34:	4296      	cmp	r6, r2
10013d36:	f080 8273 	bcs.w	10014220 <__ssvfscanf_r+0x1140>
10013d3a:	6818      	ldr	r0, [r3, #0]
10013d3c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10013d3e:	f840 3026 	str.w	r3, [r0, r6, lsl #2]
10013d42:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10013d44:	3601      	adds	r6, #1
10013d46:	80de      	strh	r6, [r3, #6]
10013d48:	2320      	movs	r3, #32
10013d4a:	647b      	str	r3, [r7, #68]	@ 0x44
10013d4c:	f8da 0000 	ldr.w	r0, [sl]
10013d50:	4e20      	ldr	r6, [pc, #128]	@ (10013dd4 <__ssvfscanf_r+0xcf4>)
10013d52:	7802      	ldrb	r2, [r0, #0]
10013d54:	5cb2      	ldrb	r2, [r6, r2]
10013d56:	0713      	lsls	r3, r2, #28
10013d58:	f100 82e4 	bmi.w	10014324 <__ssvfscanf_r+0x1244>
10013d5c:	4643      	mov	r3, r8
10013d5e:	4622      	mov	r2, r4
10013d60:	46b0      	mov	r8, r6
10013d62:	4626      	mov	r6, r4
10013d64:	f8da 1004 	ldr.w	r1, [sl, #4]
10013d68:	3901      	subs	r1, #1
10013d6a:	f8ca 1004 	str.w	r1, [sl, #4]
10013d6e:	1c41      	adds	r1, r0, #1
10013d70:	f8ca 1000 	str.w	r1, [sl]
10013d74:	4634      	mov	r4, r6
10013d76:	7801      	ldrb	r1, [r0, #0]
10013d78:	f804 1b01 	strb.w	r1, [r4], #1
10013d7c:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
10013d7e:	b121      	cbz	r1, 10013d8a <__ssvfscanf_r+0xcaa>
10013d80:	6c79      	ldr	r1, [r7, #68]	@ 0x44
10013d82:	1aa6      	subs	r6, r4, r2
10013d84:	428e      	cmp	r6, r1
10013d86:	f080 8419 	bcs.w	100145bc <__ssvfscanf_r+0x14dc>
10013d8a:	3d01      	subs	r5, #1
10013d8c:	d00c      	beq.n	10013da8 <__ssvfscanf_r+0xcc8>
10013d8e:	f8da 1004 	ldr.w	r1, [sl, #4]
10013d92:	2900      	cmp	r1, #0
10013d94:	4626      	mov	r6, r4
10013d96:	f340 8462 	ble.w	1001465e <__ssvfscanf_r+0x157e>
10013d9a:	f8da 0000 	ldr.w	r0, [sl]
10013d9e:	7801      	ldrb	r1, [r0, #0]
10013da0:	f818 1001 	ldrb.w	r1, [r8, r1]
10013da4:	0709      	lsls	r1, r1, #28
10013da6:	d5dd      	bpl.n	10013d64 <__ssvfscanf_r+0xc84>
10013da8:	1aa2      	subs	r2, r4, r2
10013daa:	4698      	mov	r8, r3
10013dac:	4491      	add	r9, r2
10013dae:	1c51      	adds	r1, r2, #1
10013db0:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10013db2:	2200      	movs	r2, #0
10013db4:	7022      	strb	r2, [r4, #0]
10013db6:	b11b      	cbz	r3, 10013dc0 <__ssvfscanf_r+0xce0>
10013db8:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10013dba:	428b      	cmp	r3, r1
10013dbc:	f200 8445 	bhi.w	1001464a <__ssvfscanf_r+0x156a>
10013dc0:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10013dc2:	f8c7 b034 	str.w	fp, [r7, #52]	@ 0x34
10013dc6:	3301      	adds	r3, #1
10013dc8:	643b      	str	r3, [r7, #64]	@ 0x40
10013dca:	f7ff b9af 	b.w	1001312c <__ssvfscanf_r+0x4c>
10013dce:	bf00      	nop
10013dd0:	10020aa4 	.word	0x10020aa4
10013dd4:	10020b0d 	.word	0x10020b0d
10013dd8:	100173bd 	.word	0x100173bd
10013ddc:	10017b0d 	.word	0x10017b0d
10013de0:	2a00      	cmp	r2, #0
10013de2:	f040 816e 	bne.w	100140c2 <__ssvfscanf_r+0xfe2>
10013de6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
10013de8:	f014 0480 	ands.w	r4, r4, #128	@ 0x80
10013dec:	f853 bb04 	ldr.w	fp, [r3], #4
10013df0:	64bb      	str	r3, [r7, #72]	@ 0x48
10013df2:	f000 8409 	beq.w	10014608 <__ssvfscanf_r+0x1528>
10013df6:	f1bb 0f00 	cmp.w	fp, #0
10013dfa:	f43f af55 	beq.w	10013ca8 <__ssvfscanf_r+0xbc8>
10013dfe:	2020      	movs	r0, #32
10013e00:	f000 fdb0 	bl	10014964 <malloc>
10013e04:	4606      	mov	r6, r0
10013e06:	2800      	cmp	r0, #0
10013e08:	f000 83bd 	beq.w	10014586 <__ssvfscanf_r+0x14a6>
10013e0c:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
10013e0e:	f8cb 0000 	str.w	r0, [fp]
10013e12:	88d4      	ldrh	r4, [r2, #6]
10013e14:	8893      	ldrh	r3, [r2, #4]
10013e16:	429c      	cmp	r4, r3
10013e18:	f080 8286 	bcs.w	10014328 <__ssvfscanf_r+0x1248>
10013e1c:	6810      	ldr	r0, [r2, #0]
10013e1e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10013e20:	f840 b024 	str.w	fp, [r0, r4, lsl #2]
10013e24:	3401      	adds	r4, #1
10013e26:	80dc      	strh	r4, [r3, #6]
10013e28:	2320      	movs	r3, #32
10013e2a:	f8da 1000 	ldr.w	r1, [sl]
10013e2e:	f107 0270 	add.w	r2, r7, #112	@ 0x70
10013e32:	7808      	ldrb	r0, [r1, #0]
10013e34:	5c10      	ldrb	r0, [r2, r0]
10013e36:	2800      	cmp	r0, #0
10013e38:	f43f af36 	beq.w	10013ca8 <__ssvfscanf_r+0xbc8>
10013e3c:	f8c7 9044 	str.w	r9, [r7, #68]	@ 0x44
10013e40:	f8c7 8034 	str.w	r8, [r7, #52]	@ 0x34
10013e44:	46d9      	mov	r9, fp
10013e46:	4634      	mov	r4, r6
10013e48:	4698      	mov	r8, r3
10013e4a:	4693      	mov	fp, r2
10013e4c:	f8da 0004 	ldr.w	r0, [sl, #4]
10013e50:	1c4b      	adds	r3, r1, #1
10013e52:	3801      	subs	r0, #1
10013e54:	e9ca 3000 	strd	r3, r0, [sl]
10013e58:	4630      	mov	r0, r6
10013e5a:	7809      	ldrb	r1, [r1, #0]
10013e5c:	f800 1b01 	strb.w	r1, [r0], #1
10013e60:	f1b9 0f00 	cmp.w	r9, #0
10013e64:	d002      	beq.n	10013e6c <__ssvfscanf_r+0xd8c>
10013e66:	1b06      	subs	r6, r0, r4
10013e68:	4546      	cmp	r6, r8
10013e6a:	d26b      	bcs.n	10013f44 <__ssvfscanf_r+0xe64>
10013e6c:	4606      	mov	r6, r0
10013e6e:	3d01      	subs	r5, #1
10013e70:	d00b      	beq.n	10013e8a <__ssvfscanf_r+0xdaa>
10013e72:	f8da 1004 	ldr.w	r1, [sl, #4]
10013e76:	2900      	cmp	r1, #0
10013e78:	f340 8171 	ble.w	1001415e <__ssvfscanf_r+0x107e>
10013e7c:	f8da 1000 	ldr.w	r1, [sl]
10013e80:	7808      	ldrb	r0, [r1, #0]
10013e82:	f81b 0000 	ldrb.w	r0, [fp, r0]
10013e86:	2800      	cmp	r0, #0
10013e88:	d1e0      	bne.n	10013e4c <__ssvfscanf_r+0xd6c>
10013e8a:	1b34      	subs	r4, r6, r4
10013e8c:	46cb      	mov	fp, r9
10013e8e:	4643      	mov	r3, r8
10013e90:	f8d7 9044 	ldr.w	r9, [r7, #68]	@ 0x44
10013e94:	f8d7 8034 	ldr.w	r8, [r7, #52]	@ 0x34
10013e98:	f43f af06 	beq.w	10013ca8 <__ssvfscanf_r+0xbc8>
10013e9c:	2200      	movs	r2, #0
10013e9e:	7032      	strb	r2, [r6, #0]
10013ea0:	f1bb 0f00 	cmp.w	fp, #0
10013ea4:	d003      	beq.n	10013eae <__ssvfscanf_r+0xdce>
10013ea6:	1c61      	adds	r1, r4, #1
10013ea8:	428b      	cmp	r3, r1
10013eaa:	f200 83e5 	bhi.w	10014678 <__ssvfscanf_r+0x1598>
10013eae:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10013eb0:	3301      	adds	r3, #1
10013eb2:	643b      	str	r3, [r7, #64]	@ 0x40
10013eb4:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10013eb6:	637b      	str	r3, [r7, #52]	@ 0x34
10013eb8:	44a1      	add	r9, r4
10013eba:	f7ff b937 	b.w	1001312c <__ssvfscanf_r+0x4c>
10013ebe:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10013ec0:	2b00      	cmp	r3, #0
10013ec2:	f47f a986 	bne.w	100131d2 <__ssvfscanf_r+0xf2>
10013ec6:	f7ff b988 	b.w	100131da <__ssvfscanf_r+0xfa>
10013eca:	f014 0f8f 	tst.w	r4, #143	@ 0x8f
10013ece:	f47f aeeb 	bne.w	10013ca8 <__ssvfscanf_r+0xbc8>
10013ed2:	eb05 0585 	add.w	r5, r5, r5, lsl #2
10013ed6:	eb02 0545 	add.w	r5, r2, r5, lsl #1
10013eda:	3d30      	subs	r5, #48	@ 0x30
10013edc:	f7ff ba06 	b.w	100132ec <__ssvfscanf_r+0x20c>
10013ee0:	4688      	mov	r8, r1
10013ee2:	f04f 0b04 	mov.w	fp, #4
10013ee6:	f7ff ba15 	b.w	10013314 <__ssvfscanf_r+0x234>
10013eea:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10013eec:	191b      	adds	r3, r3, r4
10013eee:	f47f ae2b 	bne.w	10013b48 <__ssvfscanf_r+0xa68>
10013ef2:	f7ff baf5 	b.w	100134e0 <__ssvfscanf_r+0x400>
10013ef6:	2c03      	cmp	r4, #3
10013ef8:	d002      	beq.n	10013f00 <__ssvfscanf_r+0xe20>
10013efa:	2c05      	cmp	r4, #5
10013efc:	f47f ab0b 	bne.w	10013516 <__ssvfscanf_r+0x436>
10013f00:	3401      	adds	r4, #1
10013f02:	b2e4      	uxtb	r4, r4
10013f04:	f7ff baf2 	b.w	100134ec <__ssvfscanf_r+0x40c>
10013f08:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10013f0a:	2b02      	cmp	r3, #2
10013f0c:	f47f ade8 	bne.w	10013ae0 <__ssvfscanf_r+0xa00>
10013f10:	2303      	movs	r3, #3
10013f12:	647b      	str	r3, [r7, #68]	@ 0x44
10013f14:	f7ff baea 	b.w	100134ec <__ssvfscanf_r+0x40c>
10013f18:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10013f1a:	191b      	adds	r3, r3, r4
10013f1c:	f47f adf0 	bne.w	10013b00 <__ssvfscanf_r+0xa20>
10013f20:	f7ff bade 	b.w	100134e0 <__ssvfscanf_r+0x400>
10013f24:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10013f26:	4651      	mov	r1, sl
10013f28:	f004 fc86 	bl	10018838 <__ssrefill_r>
10013f2c:	2800      	cmp	r0, #0
10013f2e:	f43f ad56 	beq.w	100139de <__ssvfscanf_r+0x8fe>
10013f32:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
10013f34:	f8d7 801c 	ldr.w	r8, [r7, #28]
10013f38:	627c      	str	r4, [r7, #36]	@ 0x24
10013f3a:	2e00      	cmp	r6, #0
10013f3c:	f43f ad56 	beq.w	100139ec <__ssvfscanf_r+0x90c>
10013f40:	f7ff b93a 	b.w	100131b8 <__ssvfscanf_r+0xd8>
10013f44:	ea4f 0848 	mov.w	r8, r8, lsl #1
10013f48:	4620      	mov	r0, r4
10013f4a:	4641      	mov	r1, r8
10013f4c:	f001 faa2 	bl	10015494 <realloc>
10013f50:	4604      	mov	r4, r0
10013f52:	2800      	cmp	r0, #0
10013f54:	f000 8317 	beq.w	10014586 <__ssvfscanf_r+0x14a6>
10013f58:	4406      	add	r6, r0
10013f5a:	f8c9 0000 	str.w	r0, [r9]
10013f5e:	e786      	b.n	10013e6e <__ssvfscanf_r+0xd8e>
10013f60:	f444 7400 	orr.w	r4, r4, #512	@ 0x200
10013f64:	4bb8      	ldr	r3, [pc, #736]	@ (10014248 <__ssvfscanf_r+0x1168>)
10013f66:	62bb      	str	r3, [r7, #40]	@ 0x28
10013f68:	2310      	movs	r3, #16
10013f6a:	4688      	mov	r8, r1
10013f6c:	63bb      	str	r3, [r7, #56]	@ 0x38
10013f6e:	f04f 0b03 	mov.w	fp, #3
10013f72:	f7ff b9cf 	b.w	10013314 <__ssvfscanf_r+0x234>
10013f76:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
10013f7a:	64bb      	str	r3, [r7, #72]	@ 0x48
10013f7c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
10013f7e:	3301      	adds	r3, #1
10013f80:	633b      	str	r3, [r7, #48]	@ 0x30
10013f82:	68fb      	ldr	r3, [r7, #12]
10013f84:	2b00      	cmp	r3, #0
10013f86:	f43f aab3 	beq.w	100134f0 <__ssvfscanf_r+0x410>
10013f8a:	68fb      	ldr	r3, [r7, #12]
10013f8c:	3b01      	subs	r3, #1
10013f8e:	60fb      	str	r3, [r7, #12]
10013f90:	f7ff baaf 	b.w	100134f2 <__ssvfscanf_r+0x412>
10013f94:	f424 64b0 	bic.w	r4, r4, #1408	@ 0x580
10013f98:	f7ff bb88 	b.w	100136ac <__ssvfscanf_r+0x5cc>
10013f9c:	0722      	lsls	r2, r4, #28
10013f9e:	f140 8213 	bpl.w	100143c8 <__ssvfscanf_r+0x12e8>
10013fa2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
10013fa4:	681b      	ldr	r3, [r3, #0]
10013fa6:	7018      	strb	r0, [r3, #0]
10013fa8:	f7ff bbae 	b.w	10013708 <__ssvfscanf_r+0x628>
10013fac:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
10013fae:	69bb      	ldr	r3, [r7, #24]
10013fb0:	429a      	cmp	r2, r3
10013fb2:	f43f aaf0 	beq.w	10013596 <__ssvfscanf_r+0x4b6>
10013fb6:	1a9a      	subs	r2, r3, r2
10013fb8:	f207 23c3 	addw	r3, r7, #707	@ 0x2c3
10013fbc:	459b      	cmp	fp, r3
10013fbe:	bf28      	it	cs
10013fc0:	f207 2bc2 	addwcs	fp, r7, #706	@ 0x2c2
10013fc4:	49a1      	ldr	r1, [pc, #644]	@ (1001424c <__ssvfscanf_r+0x116c>)
10013fc6:	4658      	mov	r0, fp
10013fc8:	f004 f8e8 	bl	1001819c <sprintf>
10013fcc:	f7ff bae3 	b.w	10013596 <__ssvfscanf_r+0x4b6>
10013fd0:	f816 1c01 	ldrb.w	r1, [r6, #-1]
10013fd4:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10013fd6:	4652      	mov	r2, sl
10013fd8:	3e01      	subs	r6, #1
10013fda:	f004 fbf1 	bl	100187c0 <_sungetc_r>
10013fde:	f7ff bb7e 	b.w	100136de <__ssvfscanf_r+0x5fe>
10013fe2:	f107 0070 	add.w	r0, r7, #112	@ 0x70
10013fe6:	f001 fe17 	bl	10015c18 <__sccl>
10013fea:	f044 0440 	orr.w	r4, r4, #64	@ 0x40
10013fee:	4680      	mov	r8, r0
10013ff0:	f04f 0b01 	mov.w	fp, #1
10013ff4:	f7ff b98e 	b.w	10013314 <__ssvfscanf_r+0x234>
10013ff8:	4b95      	ldr	r3, [pc, #596]	@ (10014250 <__ssvfscanf_r+0x1170>)
10013ffa:	62bb      	str	r3, [r7, #40]	@ 0x28
10013ffc:	2300      	movs	r3, #0
10013ffe:	4688      	mov	r8, r1
10014000:	63bb      	str	r3, [r7, #56]	@ 0x38
10014002:	f04f 0b03 	mov.w	fp, #3
10014006:	f7ff b985 	b.w	10013314 <__ssvfscanf_r+0x234>
1001400a:	0723      	lsls	r3, r4, #28
1001400c:	f47f ae4c 	bne.w	10013ca8 <__ssvfscanf_r+0xbc8>
10014010:	f898 2001 	ldrb.w	r2, [r8, #1]
10014014:	2a68      	cmp	r2, #104	@ 0x68
10014016:	f000 81cf 	beq.w	100143b8 <__ssvfscanf_r+0x12d8>
1001401a:	f044 0404 	orr.w	r4, r4, #4
1001401e:	4688      	mov	r8, r1
10014020:	f7ff b8fd 	b.w	1001321e <__ssvfscanf_r+0x13e>
10014024:	f444 7408 	orr.w	r4, r4, #544	@ 0x220
10014028:	e79c      	b.n	10013f64 <__ssvfscanf_r+0xe84>
1001402a:	06e5      	lsls	r5, r4, #27
1001402c:	f100 80f5 	bmi.w	1001421a <__ssvfscanf_r+0x113a>
10014030:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
10014032:	0720      	lsls	r0, r4, #28
10014034:	f853 2b04 	ldr.w	r2, [r3], #4
10014038:	f100 81f8 	bmi.w	1001442c <__ssvfscanf_r+0x134c>
1001403c:	0766      	lsls	r6, r4, #29
1001403e:	f140 8325 	bpl.w	1001468c <__ssvfscanf_r+0x15ac>
10014042:	f8a2 9000 	strh.w	r9, [r2]
10014046:	637b      	str	r3, [r7, #52]	@ 0x34
10014048:	4688      	mov	r8, r1
1001404a:	f7ff b86f 	b.w	1001312c <__ssvfscanf_r+0x4c>
1001404e:	f014 038f 	ands.w	r3, r4, #143	@ 0x8f
10014052:	f47f ae29 	bne.w	10013ca8 <__ssvfscanf_r+0xbc8>
10014056:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
10014058:	2a00      	cmp	r2, #0
1001405a:	f000 82a9 	beq.w	100145b0 <__ssvfscanf_r+0x14d0>
1001405e:	f898 2001 	ldrb.w	r2, [r8, #1]
10014062:	f044 0480 	orr.w	r4, r4, #128	@ 0x80
10014066:	4688      	mov	r8, r1
10014068:	f7ff b8d9 	b.w	1001321e <__ssvfscanf_r+0x13e>
1001406c:	0722      	lsls	r2, r4, #28
1001406e:	f47f ae1b 	bne.w	10013ca8 <__ssvfscanf_r+0xbc8>
10014072:	f898 2001 	ldrb.w	r2, [r8, #1]
10014076:	2a6c      	cmp	r2, #108	@ 0x6c
10014078:	f000 8196 	beq.w	100143a8 <__ssvfscanf_r+0x12c8>
1001407c:	f044 0401 	orr.w	r4, r4, #1
10014080:	4688      	mov	r8, r1
10014082:	f7ff b8cc 	b.w	1001321e <__ssvfscanf_r+0x13e>
10014086:	4b70      	ldr	r3, [pc, #448]	@ (10014248 <__ssvfscanf_r+0x1168>)
10014088:	62bb      	str	r3, [r7, #40]	@ 0x28
1001408a:	230a      	movs	r3, #10
1001408c:	4688      	mov	r8, r1
1001408e:	63bb      	str	r3, [r7, #56]	@ 0x38
10014090:	f04f 0b03 	mov.w	fp, #3
10014094:	f7ff b93e 	b.w	10013314 <__ssvfscanf_r+0x234>
10014098:	4325      	orrs	r5, r4
1001409a:	f47f ae05 	bne.w	10013ca8 <__ssvfscanf_r+0xbc8>
1001409e:	f898 2001 	ldrb.w	r2, [r8, #1]
100140a2:	2410      	movs	r4, #16
100140a4:	4688      	mov	r8, r1
100140a6:	f7ff b8ba 	b.w	1001321e <__ssvfscanf_r+0x13e>
100140aa:	4688      	mov	r8, r1
100140ac:	f7ff b858 	b.w	10013160 <__ssvfscanf_r+0x80>
100140b0:	f04f 0c00 	mov.w	ip, #0
100140b4:	46e6      	mov	lr, ip
100140b6:	f8c7 c048 	str.w	ip, [r7, #72]	@ 0x48
100140ba:	f107 0254 	add.w	r2, r7, #84	@ 0x54
100140be:	f7ff bb5e 	b.w	1001377e <__ssvfscanf_r+0x69e>
100140c2:	f8da 3000 	ldr.w	r3, [sl]
100140c6:	f107 0270 	add.w	r2, r7, #112	@ 0x70
100140ca:	7819      	ldrb	r1, [r3, #0]
100140cc:	5c51      	ldrb	r1, [r2, r1]
100140ce:	2900      	cmp	r1, #0
100140d0:	f43f aef5 	beq.w	10013ebe <__ssvfscanf_r+0xdde>
100140d4:	3301      	adds	r3, #1
100140d6:	f8ca 3000 	str.w	r3, [sl]
100140da:	f8da 3004 	ldr.w	r3, [sl, #4]
100140de:	2d01      	cmp	r5, #1
100140e0:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
100140e4:	f8ca 3004 	str.w	r3, [sl, #4]
100140e8:	d01b      	beq.n	10014122 <__ssvfscanf_r+0x1042>
100140ea:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
100140ec:	4616      	mov	r6, r2
100140ee:	e010      	b.n	10014112 <__ssvfscanf_r+0x1032>
100140f0:	f8da 3000 	ldr.w	r3, [sl]
100140f4:	781a      	ldrb	r2, [r3, #0]
100140f6:	5cb2      	ldrb	r2, [r6, r2]
100140f8:	3301      	adds	r3, #1
100140fa:	b192      	cbz	r2, 10014122 <__ssvfscanf_r+0x1042>
100140fc:	f8ca 3000 	str.w	r3, [sl]
10014100:	f8da 3004 	ldr.w	r3, [sl, #4]
10014104:	f10b 0b01 	add.w	fp, fp, #1
10014108:	3b01      	subs	r3, #1
1001410a:	455d      	cmp	r5, fp
1001410c:	f8ca 3004 	str.w	r3, [sl, #4]
10014110:	d007      	beq.n	10014122 <__ssvfscanf_r+0x1042>
10014112:	2b00      	cmp	r3, #0
10014114:	dcec      	bgt.n	100140f0 <__ssvfscanf_r+0x1010>
10014116:	4651      	mov	r1, sl
10014118:	4620      	mov	r0, r4
1001411a:	f004 fb8d 	bl	10018838 <__ssrefill_r>
1001411e:	2800      	cmp	r0, #0
10014120:	d0e6      	beq.n	100140f0 <__ssvfscanf_r+0x1010>
10014122:	44d9      	add	r9, fp
10014124:	f7ff b802 	b.w	1001312c <__ssvfscanf_r+0x4c>
10014128:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001412a:	623b      	str	r3, [r7, #32]
1001412c:	2300      	movs	r3, #0
1001412e:	e9c7 330b 	strd	r3, r3, [r7, #44]	@ 0x2c
10014132:	637b      	str	r3, [r7, #52]	@ 0x34
10014134:	f107 0354 	add.w	r3, r7, #84	@ 0x54
10014138:	469b      	mov	fp, r3
1001413a:	f7ff bbde 	b.w	100138fa <__ssvfscanf_r+0x81a>
1001413e:	2600      	movs	r6, #0
10014140:	e448      	b.n	100139d4 <__ssvfscanf_r+0x8f4>
10014142:	1ca1      	adds	r1, r4, #2
10014144:	f43f ac46 	beq.w	100139d4 <__ssvfscanf_r+0x8f4>
10014148:	f8db 3000 	ldr.w	r3, [fp]
1001414c:	1c5a      	adds	r2, r3, #1
1001414e:	f47f ac09 	bne.w	10013964 <__ssvfscanf_r+0x884>
10014152:	e420      	b.n	10013996 <__ssvfscanf_r+0x8b6>
10014154:	682b      	ldr	r3, [r5, #0]
10014156:	2b04      	cmp	r3, #4
10014158:	f47f ac27 	bne.w	100139aa <__ssvfscanf_r+0x8ca>
1001415c:	e427      	b.n	100139ae <__ssvfscanf_r+0x8ce>
1001415e:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10014160:	4651      	mov	r1, sl
10014162:	f004 fb69 	bl	10018838 <__ssrefill_r>
10014166:	2800      	cmp	r0, #0
10014168:	f43f ae88 	beq.w	10013e7c <__ssvfscanf_r+0xd9c>
1001416c:	42a6      	cmp	r6, r4
1001416e:	46cb      	mov	fp, r9
10014170:	4643      	mov	r3, r8
10014172:	f8d7 9044 	ldr.w	r9, [r7, #68]	@ 0x44
10014176:	f8d7 8034 	ldr.w	r8, [r7, #52]	@ 0x34
1001417a:	f43f a81d 	beq.w	100131b8 <__ssvfscanf_r+0xd8>
1001417e:	1b34      	subs	r4, r6, r4
10014180:	e68c      	b.n	10013e9c <__ssvfscanf_r+0xdbc>
10014182:	6b38      	ldr	r0, [r7, #48]	@ 0x30
10014184:	00d9      	lsls	r1, r3, #3
10014186:	461e      	mov	r6, r3
10014188:	f001 f984 	bl	10015494 <realloc>
1001418c:	6338      	str	r0, [r7, #48]	@ 0x30
1001418e:	2800      	cmp	r0, #0
10014190:	f000 81f9 	beq.w	10014586 <__ssvfscanf_r+0x14a6>
10014194:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
10014196:	0073      	lsls	r3, r6, #1
10014198:	eb00 0b05 	add.w	fp, r0, r5
1001419c:	6c7e      	ldr	r6, [r7, #68]	@ 0x44
1001419e:	6010      	str	r0, [r2, #0]
100141a0:	62fb      	str	r3, [r7, #44]	@ 0x2c
100141a2:	e417      	b.n	100139d4 <__ssvfscanf_r+0x8f4>
100141a4:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
100141a6:	f421 7120 	bic.w	r1, r1, #640	@ 0x280
100141aa:	4623      	mov	r3, r4
100141ac:	4658      	mov	r0, fp
100141ae:	64b9      	str	r1, [r7, #72]	@ 0x48
100141b0:	4632      	mov	r2, r6
100141b2:	69f9      	ldr	r1, [r7, #28]
100141b4:	68bc      	ldr	r4, [r7, #8]
100141b6:	4699      	mov	r9, r3
100141b8:	46aa      	mov	sl, r5
100141ba:	687d      	ldr	r5, [r7, #4]
100141bc:	f004 f80e 	bl	100181dc <stpncpy>
100141c0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
100141c2:	61bb      	str	r3, [r7, #24]
100141c4:	3d01      	subs	r5, #1
100141c6:	4683      	mov	fp, r0
100141c8:	f7ff b993 	b.w	100134f2 <__ssvfscanf_r+0x412>
100141cc:	46b2      	mov	sl, r6
100141ce:	f7fe bff3 	b.w	100131b8 <__ssvfscanf_r+0xd8>
100141d2:	2c02      	cmp	r4, #2
100141d4:	f240 82ea 	bls.w	100147ac <__ssvfscanf_r+0x16cc>
100141d8:	2c03      	cmp	r4, #3
100141da:	f43f a9ab 	beq.w	10013534 <__ssvfscanf_r+0x454>
100141de:	3c04      	subs	r4, #4
100141e0:	b2e5      	uxtb	r5, r4
100141e2:	43ec      	mvns	r4, r5
100141e4:	6cfe      	ldr	r6, [r7, #76]	@ 0x4c
100141e6:	445c      	add	r4, fp
100141e8:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
100141ec:	4652      	mov	r2, sl
100141ee:	4630      	mov	r0, r6
100141f0:	f004 fae6 	bl	100187c0 <_sungetc_r>
100141f4:	455c      	cmp	r4, fp
100141f6:	d1f7      	bne.n	100141e8 <__ssvfscanf_r+0x1108>
100141f8:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
100141fc:	eba9 0905 	sub.w	r9, r9, r5
10014200:	f7ff b998 	b.w	10013534 <__ssvfscanf_r+0x454>
10014204:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
10014206:	f8d3 b000 	ldr.w	fp, [r3]
1001420a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001420c:	079a      	lsls	r2, r3, #30
1001420e:	f140 80f5 	bpl.w	100143fc <__ssvfscanf_r+0x131c>
10014212:	e9cb 5600 	strd	r5, r6, [fp]
10014216:	f7ff b9cf 	b.w	100135b8 <__ssvfscanf_r+0x4d8>
1001421a:	4688      	mov	r8, r1
1001421c:	f7fe bf86 	b.w	1001312c <__ssvfscanf_r+0x4c>
10014220:	f64f 71f6 	movw	r1, #65526	@ 0xfff6
10014224:	428a      	cmp	r2, r1
10014226:	d864      	bhi.n	100142f2 <__ssvfscanf_r+0x1212>
10014228:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001422a:	3208      	adds	r2, #8
1001422c:	b292      	uxth	r2, r2
1001422e:	6818      	ldr	r0, [r3, #0]
10014230:	647a      	str	r2, [r7, #68]	@ 0x44
10014232:	0091      	lsls	r1, r2, #2
10014234:	f001 f92e 	bl	10015494 <realloc>
10014238:	2800      	cmp	r0, #0
1001423a:	d05a      	beq.n	100142f2 <__ssvfscanf_r+0x1212>
1001423c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001423e:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
10014240:	809a      	strh	r2, [r3, #4]
10014242:	6018      	str	r0, [r3, #0]
10014244:	e57a      	b.n	10013d3c <__ssvfscanf_r+0xc5c>
10014246:	bf00      	nop
10014248:	10017b0d 	.word	0x10017b0d
1001424c:	10020a9c 	.word	0x10020a9c
10014250:	100173bd 	.word	0x100173bd
10014254:	f004 0310 	and.w	r3, r4, #16
10014258:	2d01      	cmp	r5, #1
1001425a:	bf38      	it	cc
1001425c:	2501      	movcc	r5, #1
1001425e:	461a      	mov	r2, r3
10014260:	64bb      	str	r3, [r7, #72]	@ 0x48
10014262:	f014 0301 	ands.w	r3, r4, #1
10014266:	f040 812d 	bne.w	100144c4 <__ssvfscanf_r+0x13e4>
1001426a:	6cba      	ldr	r2, [r7, #72]	@ 0x48
1001426c:	2a00      	cmp	r2, #0
1001426e:	f040 82b5 	bne.w	100147dc <__ssvfscanf_r+0x16fc>
10014272:	f8d7 b034 	ldr.w	fp, [r7, #52]	@ 0x34
10014276:	0623      	lsls	r3, r4, #24
10014278:	f85b 6b04 	ldr.w	r6, [fp], #4
1001427c:	f140 82c5 	bpl.w	1001480a <__ssvfscanf_r+0x172a>
10014280:	2e00      	cmp	r6, #0
10014282:	f43f ad11 	beq.w	10013ca8 <__ssvfscanf_r+0xbc8>
10014286:	4628      	mov	r0, r5
10014288:	f000 fb6c 	bl	10014964 <malloc>
1001428c:	4604      	mov	r4, r0
1001428e:	2800      	cmp	r0, #0
10014290:	f000 8179 	beq.w	10014586 <__ssvfscanf_r+0x14a6>
10014294:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
10014296:	6030      	str	r0, [r6, #0]
10014298:	88cb      	ldrh	r3, [r1, #6]
1001429a:	888a      	ldrh	r2, [r1, #4]
1001429c:	4293      	cmp	r3, r2
1001429e:	f0c0 8300 	bcc.w	100148a2 <__ssvfscanf_r+0x17c2>
100142a2:	f64f 71f6 	movw	r1, #65526	@ 0xfff6
100142a6:	428a      	cmp	r2, r1
100142a8:	647b      	str	r3, [r7, #68]	@ 0x44
100142aa:	d822      	bhi.n	100142f2 <__ssvfscanf_r+0x1212>
100142ac:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
100142ae:	3208      	adds	r2, #8
100142b0:	b292      	uxth	r2, r2
100142b2:	6818      	ldr	r0, [r3, #0]
100142b4:	64ba      	str	r2, [r7, #72]	@ 0x48
100142b6:	0091      	lsls	r1, r2, #2
100142b8:	f001 f8ec 	bl	10015494 <realloc>
100142bc:	b1c8      	cbz	r0, 100142f2 <__ssvfscanf_r+0x1212>
100142be:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
100142c0:	6cba      	ldr	r2, [r7, #72]	@ 0x48
100142c2:	809a      	strh	r2, [r3, #4]
100142c4:	6018      	str	r0, [r3, #0]
100142c6:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
100142c8:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
100142ca:	f840 6023 	str.w	r6, [r0, r3, lsl #2]
100142ce:	3301      	adds	r3, #1
100142d0:	80d3      	strh	r3, [r2, #6]
100142d2:	f8cd a000 	str.w	sl, [sp]
100142d6:	4621      	mov	r1, r4
100142d8:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
100142da:	462b      	mov	r3, r5
100142dc:	2201      	movs	r2, #1
100142de:	f004 fac7 	bl	10018870 <_sfread_r>
100142e2:	4604      	mov	r4, r0
100142e4:	2800      	cmp	r0, #0
100142e6:	f040 82de 	bne.w	100148a6 <__ssvfscanf_r+0x17c6>
100142ea:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
100142ec:	2b00      	cmp	r3, #0
100142ee:	f040 82e4 	bne.w	100148ba <__ssvfscanf_r+0x17da>
100142f2:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
100142f4:	88de      	ldrh	r6, [r3, #6]
100142f6:	6818      	ldr	r0, [r3, #0]
100142f8:	b17e      	cbz	r6, 1001431a <__ssvfscanf_r+0x123a>
100142fa:	2400      	movs	r4, #0
100142fc:	1f05      	subs	r5, r0, #4
100142fe:	46a0      	mov	r8, r4
10014300:	4681      	mov	r9, r0
10014302:	f855 3f04 	ldr.w	r3, [r5, #4]!
10014306:	6818      	ldr	r0, [r3, #0]
10014308:	f000 fb34 	bl	10014974 <free>
1001430c:	3401      	adds	r4, #1
1001430e:	682b      	ldr	r3, [r5, #0]
10014310:	42a6      	cmp	r6, r4
10014312:	f8c3 8000 	str.w	r8, [r3]
10014316:	d1f4      	bne.n	10014302 <__ssvfscanf_r+0x1222>
10014318:	4648      	mov	r0, r9
1001431a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001431e:	643b      	str	r3, [r7, #64]	@ 0x40
10014320:	f7fe bf58 	b.w	100131d4 <__ssvfscanf_r+0xf4>
10014324:	2101      	movs	r1, #1
10014326:	e543      	b.n	10013db0 <__ssvfscanf_r+0xcd0>
10014328:	f64f 72f6 	movw	r2, #65526	@ 0xfff6
1001432c:	4293      	cmp	r3, r2
1001432e:	d8e0      	bhi.n	100142f2 <__ssvfscanf_r+0x1212>
10014330:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
10014332:	3308      	adds	r3, #8
10014334:	b29b      	uxth	r3, r3
10014336:	6810      	ldr	r0, [r2, #0]
10014338:	647b      	str	r3, [r7, #68]	@ 0x44
1001433a:	0099      	lsls	r1, r3, #2
1001433c:	f001 f8aa 	bl	10015494 <realloc>
10014340:	2800      	cmp	r0, #0
10014342:	d0d6      	beq.n	100142f2 <__ssvfscanf_r+0x1212>
10014344:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
10014346:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10014348:	8093      	strh	r3, [r2, #4]
1001434a:	6010      	str	r0, [r2, #0]
1001434c:	e567      	b.n	10013e1e <__ssvfscanf_r+0xd3e>
1001434e:	f64f 70f6 	movw	r0, #65526	@ 0xfff6
10014352:	4281      	cmp	r1, r0
10014354:	64ba      	str	r2, [r7, #72]	@ 0x48
10014356:	d8cc      	bhi.n	100142f2 <__ssvfscanf_r+0x1212>
10014358:	3108      	adds	r1, #8
1001435a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001435c:	b28e      	uxth	r6, r1
1001435e:	6818      	ldr	r0, [r3, #0]
10014360:	00b1      	lsls	r1, r6, #2
10014362:	f001 f897 	bl	10015494 <realloc>
10014366:	2800      	cmp	r0, #0
10014368:	d0c3      	beq.n	100142f2 <__ssvfscanf_r+0x1212>
1001436a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001436c:	6cba      	ldr	r2, [r7, #72]	@ 0x48
1001436e:	809e      	strh	r6, [r3, #4]
10014370:	6018      	str	r0, [r3, #0]
10014372:	f7ff bab8 	b.w	100138e6 <__ssvfscanf_r+0x806>
10014376:	f64f 70f6 	movw	r0, #65526	@ 0xfff6
1001437a:	4281      	cmp	r1, r0
1001437c:	637b      	str	r3, [r7, #52]	@ 0x34
1001437e:	647a      	str	r2, [r7, #68]	@ 0x44
10014380:	d8b7      	bhi.n	100142f2 <__ssvfscanf_r+0x1212>
10014382:	3108      	adds	r1, #8
10014384:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10014386:	fa1f fb81 	uxth.w	fp, r1
1001438a:	6818      	ldr	r0, [r3, #0]
1001438c:	ea4f 018b 	mov.w	r1, fp, lsl #2
10014390:	f001 f880 	bl	10015494 <realloc>
10014394:	2800      	cmp	r0, #0
10014396:	d0ac      	beq.n	100142f2 <__ssvfscanf_r+0x1212>
10014398:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001439a:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
1001439c:	f8a3 b004 	strh.w	fp, [r3, #4]
100143a0:	6018      	str	r0, [r3, #0]
100143a2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
100143a4:	f7ff b9e1 	b.w	1001376a <__ssvfscanf_r+0x68a>
100143a8:	f898 2002 	ldrb.w	r2, [r8, #2]
100143ac:	f044 0402 	orr.w	r4, r4, #2
100143b0:	f108 0802 	add.w	r8, r8, #2
100143b4:	f7fe bf33 	b.w	1001321e <__ssvfscanf_r+0x13e>
100143b8:	f898 2002 	ldrb.w	r2, [r8, #2]
100143bc:	f044 0408 	orr.w	r4, r4, #8
100143c0:	f108 0802 	add.w	r8, r8, #2
100143c4:	f7fe bf2b 	b.w	1001321e <__ssvfscanf_r+0x13e>
100143c8:	0763      	lsls	r3, r4, #29
100143ca:	d46b      	bmi.n	100144a4 <__ssvfscanf_r+0x13c4>
100143cc:	f014 0201 	ands.w	r2, r4, #1
100143d0:	f040 817b 	bne.w	100146ca <__ssvfscanf_r+0x15ea>
100143d4:	07a4      	lsls	r4, r4, #30
100143d6:	f140 8178 	bpl.w	100146ca <__ssvfscanf_r+0x15ea>
100143da:	4bc1      	ldr	r3, [pc, #772]	@ (100146e0 <__ssvfscanf_r+0x1600>)
100143dc:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
100143de:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
100143e0:	4299      	cmp	r1, r3
100143e2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
100143e4:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
100143e6:	f000 81f0 	beq.w	100147ca <__ssvfscanf_r+0x16ea>
100143ea:	f003 fd91 	bl	10017f10 <_strtoll_r>
100143ee:	460b      	mov	r3, r1
100143f0:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
100143f2:	6811      	ldr	r1, [r2, #0]
100143f4:	e9c1 0300 	strd	r0, r3, [r1]
100143f8:	f7ff b986 	b.w	10013708 <__ssvfscanf_r+0x628>
100143fc:	4602      	mov	r2, r0
100143fe:	460b      	mov	r3, r1
10014400:	f00b fe52 	bl	100200a8 <__aeabi_dcmpun>
10014404:	2800      	cmp	r0, #0
10014406:	f040 80c7 	bne.w	10014598 <__ssvfscanf_r+0x14b8>
1001440a:	4628      	mov	r0, r5
1001440c:	4631      	mov	r1, r6
1001440e:	f00b fea9 	bl	10020164 <__aeabi_d2f>
10014412:	f8cb 0000 	str.w	r0, [fp]
10014416:	f7ff b8cf 	b.w	100135b8 <__ssvfscanf_r+0x4d8>
1001441a:	6028      	str	r0, [r5, #0]
1001441c:	f003 fea6 	bl	1001816c <iswspace>
10014420:	2800      	cmp	r0, #0
10014422:	f040 8171 	bne.w	10014708 <__ssvfscanf_r+0x1628>
10014426:	44d9      	add	r9, fp
10014428:	f7ff b9fb 	b.w	10013822 <__ssvfscanf_r+0x742>
1001442c:	f882 9000 	strb.w	r9, [r2]
10014430:	e609      	b.n	10014046 <__ssvfscanf_r+0xf66>
10014432:	f8da 3000 	ldr.w	r3, [sl]
10014436:	4eab      	ldr	r6, [pc, #684]	@ (100146e4 <__ssvfscanf_r+0x1604>)
10014438:	781a      	ldrb	r2, [r3, #0]
1001443a:	5cb2      	ldrb	r2, [r6, r2]
1001443c:	0711      	lsls	r1, r2, #28
1001443e:	f53e ae75 	bmi.w	1001312c <__ssvfscanf_r+0x4c>
10014442:	3301      	adds	r3, #1
10014444:	f8ca 3000 	str.w	r3, [sl]
10014448:	f8da 3004 	ldr.w	r3, [sl, #4]
1001444c:	2d01      	cmp	r5, #1
1001444e:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
10014452:	f8ca 3004 	str.w	r3, [sl, #4]
10014456:	bf08      	it	eq
10014458:	f109 0901 	addeq.w	r9, r9, #1
1001445c:	f43e ae66 	beq.w	1001312c <__ssvfscanf_r+0x4c>
10014460:	f8d7 b04c 	ldr.w	fp, [r7, #76]	@ 0x4c
10014464:	2401      	movs	r4, #1
10014466:	e012      	b.n	1001448e <__ssvfscanf_r+0x13ae>
10014468:	f8da 3000 	ldr.w	r3, [sl]
1001446c:	781a      	ldrb	r2, [r3, #0]
1001446e:	5cb2      	ldrb	r2, [r6, r2]
10014470:	0712      	lsls	r2, r2, #28
10014472:	f103 0301 	add.w	r3, r3, #1
10014476:	d412      	bmi.n	1001449e <__ssvfscanf_r+0x13be>
10014478:	f8ca 3000 	str.w	r3, [sl]
1001447c:	f8da 3004 	ldr.w	r3, [sl, #4]
10014480:	3401      	adds	r4, #1
10014482:	3b01      	subs	r3, #1
10014484:	42a5      	cmp	r5, r4
10014486:	f8ca 3004 	str.w	r3, [sl, #4]
1001448a:	f000 813a 	beq.w	10014702 <__ssvfscanf_r+0x1622>
1001448e:	2b00      	cmp	r3, #0
10014490:	dcea      	bgt.n	10014468 <__ssvfscanf_r+0x1388>
10014492:	4651      	mov	r1, sl
10014494:	4658      	mov	r0, fp
10014496:	f004 f9cf 	bl	10018838 <__ssrefill_r>
1001449a:	2800      	cmp	r0, #0
1001449c:	d0e4      	beq.n	10014468 <__ssvfscanf_r+0x1388>
1001449e:	44a1      	add	r9, r4
100144a0:	f7fe be44 	b.w	1001312c <__ssvfscanf_r+0x4c>
100144a4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
100144a6:	681b      	ldr	r3, [r3, #0]
100144a8:	8018      	strh	r0, [r3, #0]
100144aa:	f7ff b92d 	b.w	10013708 <__ssvfscanf_r+0x628>
100144ae:	6cbc      	ldr	r4, [r7, #72]	@ 0x48
100144b0:	1d11      	adds	r1, r2, #4
100144b2:	6820      	ldr	r0, [r4, #0]
100144b4:	f000 ffee 	bl	10015494 <realloc>
100144b8:	2800      	cmp	r0, #0
100144ba:	f43f a9e7 	beq.w	1001388c <__ssvfscanf_r+0x7ac>
100144be:	6020      	str	r0, [r4, #0]
100144c0:	f7ff b9e4 	b.w	1001388c <__ssvfscanf_r+0x7ac>
100144c4:	2a00      	cmp	r2, #0
100144c6:	f040 8184 	bne.w	100147d2 <__ssvfscanf_r+0x16f2>
100144ca:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
100144cc:	461a      	mov	r2, r3
100144ce:	0624      	lsls	r4, r4, #24
100144d0:	f852 3b04 	ldr.w	r3, [r2], #4
100144d4:	637a      	str	r2, [r7, #52]	@ 0x34
100144d6:	f100 81ac 	bmi.w	10014832 <__ssvfscanf_r+0x1752>
100144da:	469b      	mov	fp, r3
100144dc:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
100144de:	461a      	mov	r2, r3
100144e0:	469c      	mov	ip, r3
100144e2:	f8c7 8030 	str.w	r8, [r7, #48]	@ 0x30
100144e6:	2600      	movs	r6, #0
100144e8:	4664      	mov	r4, ip
100144ea:	647b      	str	r3, [r7, #68]	@ 0x44
100144ec:	4690      	mov	r8, r2
100144ee:	f000 fdcd 	bl	1001508c <__locale_mb_cur_max>
100144f2:	42b0      	cmp	r0, r6
100144f4:	f43e ae60 	beq.w	100131b8 <__ssvfscanf_r+0xd8>
100144f8:	e9da 3200 	ldrd	r3, r2, [sl]
100144fc:	f813 1b01 	ldrb.w	r1, [r3], #1
10014500:	3a01      	subs	r2, #1
10014502:	e9ca 3200 	strd	r3, r2, [sl]
10014506:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
10014508:	f507 70b8 	add.w	r0, r7, #368	@ 0x170
1001450c:	2a03      	cmp	r2, #3
1001450e:	5581      	strb	r1, [r0, r6]
10014510:	f106 0301 	add.w	r3, r6, #1
10014514:	f107 0668 	add.w	r6, r7, #104	@ 0x68
10014518:	d102      	bne.n	10014520 <__ssvfscanf_r+0x1440>
1001451a:	6832      	ldr	r2, [r6, #0]
1001451c:	2a04      	cmp	r2, #4
1001451e:	d006      	beq.n	1001452e <__ssvfscanf_r+0x144e>
10014520:	2208      	movs	r2, #8
10014522:	2100      	movs	r1, #0
10014524:	4630      	mov	r0, r6
10014526:	62fb      	str	r3, [r7, #44]	@ 0x2c
10014528:	f000 fd1a 	bl	10014f60 <memset>
1001452c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
1001452e:	9600      	str	r6, [sp, #0]
10014530:	f507 72b8 	add.w	r2, r7, #368	@ 0x170
10014534:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10014536:	62fb      	str	r3, [r7, #44]	@ 0x2c
10014538:	4659      	mov	r1, fp
1001453a:	f000 fce7 	bl	10014f0c <_mbrtowc_r>
1001453e:	4602      	mov	r2, r0
10014540:	6278      	str	r0, [r7, #36]	@ 0x24
10014542:	1c50      	adds	r0, r2, #1
10014544:	f43e ae38 	beq.w	100131b8 <__ssvfscanf_r+0xd8>
10014548:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
1001454a:	2a00      	cmp	r2, #0
1001454c:	f040 81bd 	bne.w	100148ca <__ssvfscanf_r+0x17ea>
10014550:	4499      	add	r9, r3
10014552:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10014554:	3d01      	subs	r5, #1
10014556:	2b00      	cmp	r3, #0
10014558:	f040 81c5 	bne.w	100148e6 <__ssvfscanf_r+0x1806>
1001455c:	f8cb 3000 	str.w	r3, [fp]
10014560:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10014562:	2b00      	cmp	r3, #0
10014564:	f000 81f1 	beq.w	1001494a <__ssvfscanf_r+0x186a>
10014568:	ebab 0604 	sub.w	r6, fp, r4
1001456c:	ebb8 0fa6 	cmp.w	r8, r6, asr #2
10014570:	f200 81eb 	bhi.w	1001494a <__ssvfscanf_r+0x186a>
10014574:	4620      	mov	r0, r4
10014576:	ea4f 01c8 	mov.w	r1, r8, lsl #3
1001457a:	f000 ff8b 	bl	10015494 <realloc>
1001457e:	4604      	mov	r4, r0
10014580:	2800      	cmp	r0, #0
10014582:	f040 81dc 	bne.w	1001493e <__ssvfscanf_r+0x185e>
10014586:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10014588:	2b00      	cmp	r3, #0
1001458a:	f47f aeb2 	bne.w	100142f2 <__ssvfscanf_r+0x1212>
1001458e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10014592:	643b      	str	r3, [r7, #64]	@ 0x40
10014594:	f7fe be21 	b.w	100131da <__ssvfscanf_r+0xfa>
10014598:	4853      	ldr	r0, [pc, #332]	@ (100146e8 <__ssvfscanf_r+0x1608>)
1001459a:	f001 fb89 	bl	10015cb0 <nanf>
1001459e:	f8cb 0000 	str.w	r0, [fp]
100145a2:	f7ff b809 	b.w	100135b8 <__ssvfscanf_r+0x4d8>
100145a6:	6cbc      	ldr	r4, [r7, #72]	@ 0x48
100145a8:	e9c7 2211 	strd	r2, r2, [r7, #68]	@ 0x44
100145ac:	f7ff bbce 	b.w	10013d4c <__ssvfscanf_r+0xc6c>
100145b0:	b082      	sub	sp, #8
100145b2:	e9cd 3302 	strd	r3, r3, [sp, #8]
100145b6:	ab02      	add	r3, sp, #8
100145b8:	63fb      	str	r3, [r7, #60]	@ 0x3c
100145ba:	e550      	b.n	1001405e <__ssvfscanf_r+0xf7e>
100145bc:	637b      	str	r3, [r7, #52]	@ 0x34
100145be:	004b      	lsls	r3, r1, #1
100145c0:	4610      	mov	r0, r2
100145c2:	4619      	mov	r1, r3
100145c4:	647b      	str	r3, [r7, #68]	@ 0x44
100145c6:	f000 ff65 	bl	10015494 <realloc>
100145ca:	4602      	mov	r2, r0
100145cc:	2800      	cmp	r0, #0
100145ce:	d0da      	beq.n	10014586 <__ssvfscanf_r+0x14a6>
100145d0:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
100145d2:	1984      	adds	r4, r0, r6
100145d4:	6018      	str	r0, [r3, #0]
100145d6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
100145d8:	f7ff bbd7 	b.w	10013d8a <__ssvfscanf_r+0xcaa>
100145dc:	6938      	ldr	r0, [r7, #16]
100145de:	4601      	mov	r1, r0
100145e0:	230a      	movs	r3, #10
100145e2:	3101      	adds	r1, #1
100145e4:	4683      	mov	fp, r0
100145e6:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
100145e8:	f002 fee8 	bl	100173bc <_strtol_r>
100145ec:	697b      	ldr	r3, [r7, #20]
100145ee:	1ac2      	subs	r2, r0, r3
100145f0:	e4e2      	b.n	10013fb8 <__ssvfscanf_r+0xed8>
100145f2:	f04f 0b00 	mov.w	fp, #0
100145f6:	f7ff b926 	b.w	10013846 <__ssvfscanf_r+0x766>
100145fa:	6cba      	ldr	r2, [r7, #72]	@ 0x48
100145fc:	637e      	str	r6, [r7, #52]	@ 0x34
100145fe:	469c      	mov	ip, r3
10014600:	469e      	mov	lr, r3
10014602:	64bb      	str	r3, [r7, #72]	@ 0x48
10014604:	f7ff b8bb 	b.w	1001377e <__ssvfscanf_r+0x69e>
10014608:	465e      	mov	r6, fp
1001460a:	4623      	mov	r3, r4
1001460c:	46a3      	mov	fp, r4
1001460e:	e40c      	b.n	10013e2a <__ssvfscanf_r+0xd4a>
10014610:	f8d7 b034 	ldr.w	fp, [r7, #52]	@ 0x34
10014614:	637a      	str	r2, [r7, #52]	@ 0x34
10014616:	e9c7 220b 	strd	r2, r2, [r7, #44]	@ 0x2c
1001461a:	f7ff b96e 	b.w	100138fa <__ssvfscanf_r+0x81a>
1001461e:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
10014620:	f8d7 801c 	ldr.w	r8, [r7, #28]
10014624:	627c      	str	r4, [r7, #36]	@ 0x24
10014626:	2e00      	cmp	r6, #0
10014628:	f43f a9e0 	beq.w	100139ec <__ssvfscanf_r+0x90c>
1001462c:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
1001462e:	4615      	mov	r5, r2
10014630:	3e01      	subs	r6, #1
10014632:	f507 73b8 	add.w	r3, r7, #368	@ 0x170
10014636:	4652      	mov	r2, sl
10014638:	5d99      	ldrb	r1, [r3, r6]
1001463a:	4620      	mov	r0, r4
1001463c:	f004 f8c0 	bl	100187c0 <_sungetc_r>
10014640:	2e00      	cmp	r6, #0
10014642:	d1f5      	bne.n	10014630 <__ssvfscanf_r+0x1550>
10014644:	462a      	mov	r2, r5
10014646:	f7ff b9d1 	b.w	100139ec <__ssvfscanf_r+0x90c>
1001464a:	6cbc      	ldr	r4, [r7, #72]	@ 0x48
1001464c:	6820      	ldr	r0, [r4, #0]
1001464e:	f000 ff21 	bl	10015494 <realloc>
10014652:	2800      	cmp	r0, #0
10014654:	f43f abb4 	beq.w	10013dc0 <__ssvfscanf_r+0xce0>
10014658:	6020      	str	r0, [r4, #0]
1001465a:	f7ff bbb1 	b.w	10013dc0 <__ssvfscanf_r+0xce0>
1001465e:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10014660:	4651      	mov	r1, sl
10014662:	e9c7 320c 	strd	r3, r2, [r7, #48]	@ 0x30
10014666:	f004 f8e7 	bl	10018838 <__ssrefill_r>
1001466a:	e9d7 320c 	ldrd	r3, r2, [r7, #48]	@ 0x30
1001466e:	2800      	cmp	r0, #0
10014670:	f43f ab93 	beq.w	10013d9a <__ssvfscanf_r+0xcba>
10014674:	f7ff bb98 	b.w	10013da8 <__ssvfscanf_r+0xcc8>
10014678:	f8db 0000 	ldr.w	r0, [fp]
1001467c:	f000 ff0a 	bl	10015494 <realloc>
10014680:	2800      	cmp	r0, #0
10014682:	f43f ac14 	beq.w	10013eae <__ssvfscanf_r+0xdce>
10014686:	f8cb 0000 	str.w	r0, [fp]
1001468a:	e410      	b.n	10013eae <__ssvfscanf_r+0xdce>
1001468c:	07e5      	lsls	r5, r4, #31
1001468e:	d435      	bmi.n	100146fc <__ssvfscanf_r+0x161c>
10014690:	07a4      	lsls	r4, r4, #30
10014692:	d533      	bpl.n	100146fc <__ssvfscanf_r+0x161c>
10014694:	ea4f 70e9 	mov.w	r0, r9, asr #31
10014698:	f8c2 9000 	str.w	r9, [r2]
1001469c:	6050      	str	r0, [r2, #4]
1001469e:	e4d2      	b.n	10014046 <__ssvfscanf_r+0xf66>
100146a0:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
100146a2:	4651      	mov	r1, sl
100146a4:	f004 f8c8 	bl	10018838 <__ssrefill_r>
100146a8:	2800      	cmp	r0, #0
100146aa:	f43f a8d1 	beq.w	10013850 <__ssvfscanf_r+0x770>
100146ae:	4643      	mov	r3, r8
100146b0:	f8d7 e030 	ldr.w	lr, [r7, #48]	@ 0x30
100146b4:	f8d7 c044 	ldr.w	ip, [r7, #68]	@ 0x44
100146b8:	f8d7 801c 	ldr.w	r8, [r7, #28]
100146bc:	462a      	mov	r2, r5
100146be:	f1bb 0f00 	cmp.w	fp, #0
100146c2:	f47e ad79 	bne.w	100131b8 <__ssvfscanf_r+0xd8>
100146c6:	f7ff b8d4 	b.w	10013872 <__ssvfscanf_r+0x792>
100146ca:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
100146cc:	f7ff b81a 	b.w	10013704 <__ssvfscanf_r+0x624>
100146d0:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
100146d2:	f423 63f0 	bic.w	r3, r3, #1920	@ 0x780
100146d6:	64bb      	str	r3, [r7, #72]	@ 0x48
100146d8:	2401      	movs	r4, #1
100146da:	f7fe bf07 	b.w	100134ec <__ssvfscanf_r+0x40c>
100146de:	bf00      	nop
100146e0:	10017b0d 	.word	0x10017b0d
100146e4:	10020b0d 	.word	0x10020b0d
100146e8:	100207e8 	.word	0x100207e8
100146ec:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
100146ee:	f423 63f0 	bic.w	r3, r3, #1920	@ 0x780
100146f2:	64bb      	str	r3, [r7, #72]	@ 0x48
100146f4:	2301      	movs	r3, #1
100146f6:	647b      	str	r3, [r7, #68]	@ 0x44
100146f8:	f7fe bef8 	b.w	100134ec <__ssvfscanf_r+0x40c>
100146fc:	f8c2 9000 	str.w	r9, [r2]
10014700:	e4a1      	b.n	10014046 <__ssvfscanf_r+0xf66>
10014702:	44a9      	add	r9, r5
10014704:	f7fe bd12 	b.w	1001312c <__ssvfscanf_r+0x4c>
10014708:	4643      	mov	r3, r8
1001470a:	f8d7 e030 	ldr.w	lr, [r7, #48]	@ 0x30
1001470e:	f8d7 c044 	ldr.w	ip, [r7, #68]	@ 0x44
10014712:	f8d7 801c 	ldr.w	r8, [r7, #28]
10014716:	462a      	mov	r2, r5
10014718:	f1bb 0f00 	cmp.w	fp, #0
1001471c:	f43f a8a9 	beq.w	10013872 <__ssvfscanf_r+0x792>
10014720:	633d      	str	r5, [r7, #48]	@ 0x30
10014722:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
10014724:	6afd      	ldr	r5, [r7, #44]	@ 0x2c
10014726:	f8c7 9044 	str.w	r9, [r7, #68]	@ 0x44
1001472a:	465e      	mov	r6, fp
1001472c:	46f1      	mov	r9, lr
1001472e:	46c3      	mov	fp, r8
10014730:	623b      	str	r3, [r7, #32]
10014732:	46e0      	mov	r8, ip
10014734:	3e01      	subs	r6, #1
10014736:	4652      	mov	r2, sl
10014738:	5da9      	ldrb	r1, [r5, r6]
1001473a:	4620      	mov	r0, r4
1001473c:	f004 f840 	bl	100187c0 <_sungetc_r>
10014740:	2e00      	cmp	r6, #0
10014742:	d1f7      	bne.n	10014734 <__ssvfscanf_r+0x1654>
10014744:	46ce      	mov	lr, r9
10014746:	46c4      	mov	ip, r8
10014748:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
1001474a:	f8d7 9044 	ldr.w	r9, [r7, #68]	@ 0x44
1001474e:	6a3b      	ldr	r3, [r7, #32]
10014750:	46d8      	mov	r8, fp
10014752:	f7ff b88e 	b.w	10013872 <__ssvfscanf_r+0x792>
10014756:	6b7c      	ldr	r4, [r7, #52]	@ 0x34
10014758:	1d19      	adds	r1, r3, #4
1001475a:	6820      	ldr	r0, [r4, #0]
1001475c:	f000 fe9a 	bl	10015494 <realloc>
10014760:	2800      	cmp	r0, #0
10014762:	f43f a951 	beq.w	10013a08 <__ssvfscanf_r+0x928>
10014766:	6020      	str	r0, [r4, #0]
10014768:	f7ff b94e 	b.w	10013a08 <__ssvfscanf_r+0x928>
1001476c:	6b38      	ldr	r0, [r7, #48]	@ 0x30
1001476e:	00d9      	lsls	r1, r3, #3
10014770:	f000 fe90 	bl	10015494 <realloc>
10014774:	6338      	str	r0, [r7, #48]	@ 0x30
10014776:	2800      	cmp	r0, #0
10014778:	f43f af05 	beq.w	10014586 <__ssvfscanf_r+0x14a6>
1001477c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001477e:	6cba      	ldr	r2, [r7, #72]	@ 0x48
10014780:	005b      	lsls	r3, r3, #1
10014782:	1905      	adds	r5, r0, r4
10014784:	6010      	str	r0, [r2, #0]
10014786:	647b      	str	r3, [r7, #68]	@ 0x44
10014788:	46c3      	mov	fp, r8
1001478a:	f7ff b85c 	b.w	10013846 <__ssvfscanf_r+0x766>
1001478e:	6afd      	ldr	r5, [r7, #44]	@ 0x2c
10014790:	45ab      	cmp	fp, r5
10014792:	f67f ab94 	bls.w	10013ebe <__ssvfscanf_r+0xdde>
10014796:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
10014798:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
1001479c:	4652      	mov	r2, sl
1001479e:	4620      	mov	r0, r4
100147a0:	f004 f80e 	bl	100187c0 <_sungetc_r>
100147a4:	45ab      	cmp	fp, r5
100147a6:	d1f7      	bne.n	10014798 <__ssvfscanf_r+0x16b8>
100147a8:	f7ff ba7e 	b.w	10013ca8 <__ssvfscanf_r+0xbc8>
100147ac:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
100147ae:	459b      	cmp	fp, r3
100147b0:	f67f ab85 	bls.w	10013ebe <__ssvfscanf_r+0xdde>
100147b4:	6afc      	ldr	r4, [r7, #44]	@ 0x2c
100147b6:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
100147ba:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
100147bc:	4652      	mov	r2, sl
100147be:	f003 ffff 	bl	100187c0 <_sungetc_r>
100147c2:	45a3      	cmp	fp, r4
100147c4:	d1f7      	bne.n	100147b6 <__ssvfscanf_r+0x16d6>
100147c6:	f7ff ba6f 	b.w	10013ca8 <__ssvfscanf_r+0xbc8>
100147ca:	f003 fca1 	bl	10018110 <_strtoull_r>
100147ce:	460b      	mov	r3, r1
100147d0:	e60e      	b.n	100143f0 <__ssvfscanf_r+0x1310>
100147d2:	2200      	movs	r2, #0
100147d4:	4694      	mov	ip, r2
100147d6:	4613      	mov	r3, r2
100147d8:	4693      	mov	fp, r2
100147da:	e682      	b.n	100144e2 <__ssvfscanf_r+0x1402>
100147dc:	461c      	mov	r4, r3
100147de:	e9da 2300 	ldrd	r2, r3, [sl]
100147e2:	429d      	cmp	r5, r3
100147e4:	eb02 0103 	add.w	r1, r2, r3
100147e8:	dd51      	ble.n	1001488e <__ssvfscanf_r+0x17ae>
100147ea:	f8ca 1000 	str.w	r1, [sl]
100147ee:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
100147f0:	4651      	mov	r1, sl
100147f2:	441c      	add	r4, r3
100147f4:	1aed      	subs	r5, r5, r3
100147f6:	f004 f81f 	bl	10018838 <__ssrefill_r>
100147fa:	2800      	cmp	r0, #0
100147fc:	d0ef      	beq.n	100147de <__ssvfscanf_r+0x16fe>
100147fe:	2c00      	cmp	r4, #0
10014800:	f43e acda 	beq.w	100131b8 <__ssvfscanf_r+0xd8>
10014804:	44a1      	add	r9, r4
10014806:	f7fe bc91 	b.w	1001312c <__ssvfscanf_r+0x4c>
1001480a:	f8cd a000 	str.w	sl, [sp]
1001480e:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10014810:	462b      	mov	r3, r5
10014812:	4631      	mov	r1, r6
10014814:	2201      	movs	r2, #1
10014816:	f004 f82b 	bl	10018870 <_sfread_r>
1001481a:	4604      	mov	r4, r0
1001481c:	2800      	cmp	r0, #0
1001481e:	f43e accb 	beq.w	100131b8 <__ssvfscanf_r+0xd8>
10014822:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10014824:	f8c7 b034 	str.w	fp, [r7, #52]	@ 0x34
10014828:	3301      	adds	r3, #1
1001482a:	44a1      	add	r9, r4
1001482c:	643b      	str	r3, [r7, #64]	@ 0x40
1001482e:	f7fe bc7d 	b.w	1001312c <__ssvfscanf_r+0x4c>
10014832:	647b      	str	r3, [r7, #68]	@ 0x44
10014834:	2b00      	cmp	r3, #0
10014836:	f43f aa37 	beq.w	10013ca8 <__ssvfscanf_r+0xbc8>
1001483a:	2080      	movs	r0, #128	@ 0x80
1001483c:	f000 f892 	bl	10014964 <malloc>
10014840:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10014842:	4683      	mov	fp, r0
10014844:	2800      	cmp	r0, #0
10014846:	f43f ae9e 	beq.w	10014586 <__ssvfscanf_r+0x14a6>
1001484a:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
1001484c:	6018      	str	r0, [r3, #0]
1001484e:	88ce      	ldrh	r6, [r1, #6]
10014850:	888a      	ldrh	r2, [r1, #4]
10014852:	4296      	cmp	r6, r2
10014854:	d337      	bcc.n	100148c6 <__ssvfscanf_r+0x17e6>
10014856:	f64f 71f6 	movw	r1, #65526	@ 0xfff6
1001485a:	428a      	cmp	r2, r1
1001485c:	647b      	str	r3, [r7, #68]	@ 0x44
1001485e:	f63f ad48 	bhi.w	100142f2 <__ssvfscanf_r+0x1212>
10014862:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10014864:	3208      	adds	r2, #8
10014866:	b294      	uxth	r4, r2
10014868:	6818      	ldr	r0, [r3, #0]
1001486a:	00a1      	lsls	r1, r4, #2
1001486c:	f000 fe12 	bl	10015494 <realloc>
10014870:	2800      	cmp	r0, #0
10014872:	f43f ad3e 	beq.w	100142f2 <__ssvfscanf_r+0x1212>
10014876:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10014878:	809c      	strh	r4, [r3, #4]
1001487a:	6018      	str	r0, [r3, #0]
1001487c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001487e:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
10014880:	f840 3026 	str.w	r3, [r0, r6, lsl #2]
10014884:	3601      	adds	r6, #1
10014886:	80d6      	strh	r6, [r2, #6]
10014888:	46dc      	mov	ip, fp
1001488a:	2220      	movs	r2, #32
1001488c:	e629      	b.n	100144e2 <__ssvfscanf_r+0x1402>
1001488e:	1b5b      	subs	r3, r3, r5
10014890:	442a      	add	r2, r5
10014892:	442c      	add	r4, r5
10014894:	f8ca 3004 	str.w	r3, [sl, #4]
10014898:	f8ca 2000 	str.w	r2, [sl]
1001489c:	44a1      	add	r9, r4
1001489e:	f7fe bc45 	b.w	1001312c <__ssvfscanf_r+0x4c>
100148a2:	6808      	ldr	r0, [r1, #0]
100148a4:	e510      	b.n	100142c8 <__ssvfscanf_r+0x11e8>
100148a6:	4285      	cmp	r5, r0
100148a8:	d9bb      	bls.n	10014822 <__ssvfscanf_r+0x1742>
100148aa:	6830      	ldr	r0, [r6, #0]
100148ac:	4621      	mov	r1, r4
100148ae:	f000 fdf1 	bl	10015494 <realloc>
100148b2:	2800      	cmp	r0, #0
100148b4:	d0b5      	beq.n	10014822 <__ssvfscanf_r+0x1742>
100148b6:	6030      	str	r0, [r6, #0]
100148b8:	e7b3      	b.n	10014822 <__ssvfscanf_r+0x1742>
100148ba:	f8ba 300c 	ldrh.w	r3, [sl, #12]
100148be:	065b      	lsls	r3, r3, #25
100148c0:	f57e ac86 	bpl.w	100131d0 <__ssvfscanf_r+0xf0>
100148c4:	e515      	b.n	100142f2 <__ssvfscanf_r+0x1212>
100148c6:	6808      	ldr	r0, [r1, #0]
100148c8:	e7d9      	b.n	1001487e <__ssvfscanf_r+0x179e>
100148ca:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
100148cc:	1c91      	adds	r1, r2, #2
100148ce:	d034      	beq.n	1001493a <__ssvfscanf_r+0x185a>
100148d0:	2a03      	cmp	r2, #3
100148d2:	4499      	add	r9, r3
100148d4:	d102      	bne.n	100148dc <__ssvfscanf_r+0x17fc>
100148d6:	6833      	ldr	r3, [r6, #0]
100148d8:	2b04      	cmp	r3, #4
100148da:	d000      	beq.n	100148de <__ssvfscanf_r+0x17fe>
100148dc:	3d01      	subs	r5, #1
100148de:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
100148e0:	2b00      	cmp	r3, #0
100148e2:	f43f ae3d 	beq.w	10014560 <__ssvfscanf_r+0x1480>
100148e6:	2600      	movs	r6, #0
100148e8:	f8da 3004 	ldr.w	r3, [sl, #4]
100148ec:	2b00      	cmp	r3, #0
100148ee:	dd13      	ble.n	10014918 <__ssvfscanf_r+0x1838>
100148f0:	2d00      	cmp	r5, #0
100148f2:	f47f adfc 	bne.w	100144ee <__ssvfscanf_r+0x140e>
100148f6:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
100148f8:	4642      	mov	r2, r8
100148fa:	46a4      	mov	ip, r4
100148fc:	f8d7 8030 	ldr.w	r8, [r7, #48]	@ 0x30
10014900:	b123      	cbz	r3, 1001490c <__ssvfscanf_r+0x182c>
10014902:	ebab 010c 	sub.w	r1, fp, ip
10014906:	ebb2 0fa1 	cmp.w	r2, r1, asr #2
1001490a:	d821      	bhi.n	10014950 <__ssvfscanf_r+0x1870>
1001490c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001490e:	2b00      	cmp	r3, #0
10014910:	f47e ac0c 	bne.w	1001312c <__ssvfscanf_r+0x4c>
10014914:	f7fe bfba 	b.w	1001388c <__ssvfscanf_r+0x7ac>
10014918:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001491a:	4651      	mov	r1, sl
1001491c:	f003 ff8c 	bl	10018838 <__ssrefill_r>
10014920:	2800      	cmp	r0, #0
10014922:	d0e5      	beq.n	100148f0 <__ssvfscanf_r+0x1810>
10014924:	4642      	mov	r2, r8
10014926:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10014928:	f8d7 8030 	ldr.w	r8, [r7, #48]	@ 0x30
1001492c:	46a4      	mov	ip, r4
1001492e:	2e00      	cmp	r6, #0
10014930:	f47e ac42 	bne.w	100131b8 <__ssvfscanf_r+0xd8>
10014934:	2b00      	cmp	r3, #0
10014936:	d1e4      	bne.n	10014902 <__ssvfscanf_r+0x1822>
10014938:	e7e8      	b.n	1001490c <__ssvfscanf_r+0x182c>
1001493a:	461e      	mov	r6, r3
1001493c:	e7d4      	b.n	100148e8 <__ssvfscanf_r+0x1808>
1001493e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10014940:	eb00 0b06 	add.w	fp, r0, r6
10014944:	6018      	str	r0, [r3, #0]
10014946:	ea4f 0848 	mov.w	r8, r8, lsl #1
1001494a:	f10b 0b04 	add.w	fp, fp, #4
1001494e:	e7ca      	b.n	100148e6 <__ssvfscanf_r+0x1806>
10014950:	6818      	ldr	r0, [r3, #0]
10014952:	647b      	str	r3, [r7, #68]	@ 0x44
10014954:	f000 fd9e 	bl	10015494 <realloc>
10014958:	2800      	cmp	r0, #0
1001495a:	d0d7      	beq.n	1001490c <__ssvfscanf_r+0x182c>
1001495c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001495e:	6018      	str	r0, [r3, #0]
10014960:	e7d4      	b.n	1001490c <__ssvfscanf_r+0x182c>
10014962:	bf00      	nop

10014964 <malloc>:
10014964:	4b02      	ldr	r3, [pc, #8]	@ (10014970 <malloc+0xc>)
10014966:	4601      	mov	r1, r0
10014968:	6818      	ldr	r0, [r3, #0]
1001496a:	f000 b80b 	b.w	10014984 <_malloc_r>
1001496e:	bf00      	nop
10014970:	20000590 	.word	0x20000590

10014974 <free>:
10014974:	4b02      	ldr	r3, [pc, #8]	@ (10014980 <free+0xc>)
10014976:	4601      	mov	r1, r0
10014978:	6818      	ldr	r0, [r3, #0]
1001497a:	f002 bb85 	b.w	10017088 <_free_r>
1001497e:	bf00      	nop
10014980:	20000590 	.word	0x20000590

10014984 <_malloc_r>:
10014984:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10014988:	f101 050b 	add.w	r5, r1, #11
1001498c:	2d16      	cmp	r5, #22
1001498e:	b085      	sub	sp, #20
10014990:	4606      	mov	r6, r0
10014992:	d824      	bhi.n	100149de <_malloc_r+0x5a>
10014994:	2910      	cmp	r1, #16
10014996:	f200 80b1 	bhi.w	10014afc <_malloc_r+0x178>
1001499a:	f000 fd69 	bl	10015470 <__malloc_lock>
1001499e:	2510      	movs	r5, #16
100149a0:	2318      	movs	r3, #24
100149a2:	f04f 0c02 	mov.w	ip, #2
100149a6:	4fba      	ldr	r7, [pc, #744]	@ (10014c90 <_malloc_r+0x30c>)
100149a8:	443b      	add	r3, r7
100149aa:	f1a3 0208 	sub.w	r2, r3, #8
100149ae:	685c      	ldr	r4, [r3, #4]
100149b0:	4294      	cmp	r4, r2
100149b2:	f000 8122 	beq.w	10014bfa <_malloc_r+0x276>
100149b6:	6863      	ldr	r3, [r4, #4]
100149b8:	68e2      	ldr	r2, [r4, #12]
100149ba:	68a1      	ldr	r1, [r4, #8]
100149bc:	f023 0303 	bic.w	r3, r3, #3
100149c0:	60ca      	str	r2, [r1, #12]
100149c2:	4423      	add	r3, r4
100149c4:	4630      	mov	r0, r6
100149c6:	6091      	str	r1, [r2, #8]
100149c8:	685a      	ldr	r2, [r3, #4]
100149ca:	f042 0201 	orr.w	r2, r2, #1
100149ce:	605a      	str	r2, [r3, #4]
100149d0:	3408      	adds	r4, #8
100149d2:	f000 fd53 	bl	1001547c <__malloc_unlock>
100149d6:	4620      	mov	r0, r4
100149d8:	b005      	add	sp, #20
100149da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100149de:	f035 0507 	bics.w	r5, r5, #7
100149e2:	f100 808b 	bmi.w	10014afc <_malloc_r+0x178>
100149e6:	42a9      	cmp	r1, r5
100149e8:	f200 8088 	bhi.w	10014afc <_malloc_r+0x178>
100149ec:	f000 fd40 	bl	10015470 <__malloc_lock>
100149f0:	f5b5 7ffc 	cmp.w	r5, #504	@ 0x1f8
100149f4:	f0c0 8173 	bcc.w	10014cde <_malloc_r+0x35a>
100149f8:	0a6b      	lsrs	r3, r5, #9
100149fa:	f000 8083 	beq.w	10014b04 <_malloc_r+0x180>
100149fe:	2b04      	cmp	r3, #4
10014a00:	f200 8122 	bhi.w	10014c48 <_malloc_r+0x2c4>
10014a04:	09ab      	lsrs	r3, r5, #6
10014a06:	f103 0c39 	add.w	ip, r3, #57	@ 0x39
10014a0a:	f103 0e38 	add.w	lr, r3, #56	@ 0x38
10014a0e:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10014a12:	4f9f      	ldr	r7, [pc, #636]	@ (10014c90 <_malloc_r+0x30c>)
10014a14:	443b      	add	r3, r7
10014a16:	f1a3 0008 	sub.w	r0, r3, #8
10014a1a:	685c      	ldr	r4, [r3, #4]
10014a1c:	42a0      	cmp	r0, r4
10014a1e:	d107      	bne.n	10014a30 <_malloc_r+0xac>
10014a20:	e00d      	b.n	10014a3e <_malloc_r+0xba>
10014a22:	2a00      	cmp	r2, #0
10014a24:	68e1      	ldr	r1, [r4, #12]
10014a26:	f280 80e2 	bge.w	10014bee <_malloc_r+0x26a>
10014a2a:	4288      	cmp	r0, r1
10014a2c:	d007      	beq.n	10014a3e <_malloc_r+0xba>
10014a2e:	460c      	mov	r4, r1
10014a30:	6863      	ldr	r3, [r4, #4]
10014a32:	f023 0303 	bic.w	r3, r3, #3
10014a36:	1b5a      	subs	r2, r3, r5
10014a38:	2a0f      	cmp	r2, #15
10014a3a:	ddf2      	ble.n	10014a22 <_malloc_r+0x9e>
10014a3c:	46f4      	mov	ip, lr
10014a3e:	f8df 8254 	ldr.w	r8, [pc, #596]	@ 10014c94 <_malloc_r+0x310>
10014a42:	693c      	ldr	r4, [r7, #16]
10014a44:	4544      	cmp	r4, r8
10014a46:	f000 80bf 	beq.w	10014bc8 <_malloc_r+0x244>
10014a4a:	6863      	ldr	r3, [r4, #4]
10014a4c:	f023 0903 	bic.w	r9, r3, #3
10014a50:	eba9 0305 	sub.w	r3, r9, r5
10014a54:	2b0f      	cmp	r3, #15
10014a56:	f300 8147 	bgt.w	10014ce8 <_malloc_r+0x364>
10014a5a:	2b00      	cmp	r3, #0
10014a5c:	e9c7 8804 	strd	r8, r8, [r7, #16]
10014a60:	f280 8131 	bge.w	10014cc6 <_malloc_r+0x342>
10014a64:	f5b9 7f00 	cmp.w	r9, #512	@ 0x200
10014a68:	f8d7 e004 	ldr.w	lr, [r7, #4]
10014a6c:	f080 80cc 	bcs.w	10014c08 <_malloc_r+0x284>
10014a70:	ea4f 01d9 	mov.w	r1, r9, lsr #3
10014a74:	3101      	adds	r1, #1
10014a76:	ea4f 1959 	mov.w	r9, r9, lsr #5
10014a7a:	2301      	movs	r3, #1
10014a7c:	fa03 f309 	lsl.w	r3, r3, r9
10014a80:	f857 2031 	ldr.w	r2, [r7, r1, lsl #3]
10014a84:	60a2      	str	r2, [r4, #8]
10014a86:	ea4e 0e03 	orr.w	lr, lr, r3
10014a8a:	eb07 03c1 	add.w	r3, r7, r1, lsl #3
10014a8e:	3b08      	subs	r3, #8
10014a90:	60e3      	str	r3, [r4, #12]
10014a92:	f8c7 e004 	str.w	lr, [r7, #4]
10014a96:	f847 4031 	str.w	r4, [r7, r1, lsl #3]
10014a9a:	60d4      	str	r4, [r2, #12]
10014a9c:	ea4f 03ac 	mov.w	r3, ip, asr #2
10014aa0:	2001      	movs	r0, #1
10014aa2:	4098      	lsls	r0, r3
10014aa4:	4570      	cmp	r0, lr
10014aa6:	d834      	bhi.n	10014b12 <_malloc_r+0x18e>
10014aa8:	ea10 0f0e 	tst.w	r0, lr
10014aac:	d107      	bne.n	10014abe <_malloc_r+0x13a>
10014aae:	f02c 0c03 	bic.w	ip, ip, #3
10014ab2:	0040      	lsls	r0, r0, #1
10014ab4:	ea10 0f0e 	tst.w	r0, lr
10014ab8:	f10c 0c04 	add.w	ip, ip, #4
10014abc:	d0f9      	beq.n	10014ab2 <_malloc_r+0x12e>
10014abe:	eb07 0acc 	add.w	sl, r7, ip, lsl #3
10014ac2:	4652      	mov	r2, sl
10014ac4:	46e1      	mov	r9, ip
10014ac6:	68d1      	ldr	r1, [r2, #12]
10014ac8:	e00e      	b.n	10014ae8 <_malloc_r+0x164>
10014aca:	684b      	ldr	r3, [r1, #4]
10014acc:	f023 0303 	bic.w	r3, r3, #3
10014ad0:	eba3 0e05 	sub.w	lr, r3, r5
10014ad4:	f1be 0f0f 	cmp.w	lr, #15
10014ad8:	460c      	mov	r4, r1
10014ada:	68c9      	ldr	r1, [r1, #12]
10014adc:	f300 80c1 	bgt.w	10014c62 <_malloc_r+0x2de>
10014ae0:	f1be 0f00 	cmp.w	lr, #0
10014ae4:	f280 80e2 	bge.w	10014cac <_malloc_r+0x328>
10014ae8:	428a      	cmp	r2, r1
10014aea:	d1ee      	bne.n	10014aca <_malloc_r+0x146>
10014aec:	f109 0901 	add.w	r9, r9, #1
10014af0:	f019 0f03 	tst.w	r9, #3
10014af4:	f102 0208 	add.w	r2, r2, #8
10014af8:	d1e5      	bne.n	10014ac6 <_malloc_r+0x142>
10014afa:	e121      	b.n	10014d40 <_malloc_r+0x3bc>
10014afc:	230c      	movs	r3, #12
10014afe:	6033      	str	r3, [r6, #0]
10014b00:	2400      	movs	r4, #0
10014b02:	e768      	b.n	100149d6 <_malloc_r+0x52>
10014b04:	f44f 7300 	mov.w	r3, #512	@ 0x200
10014b08:	f04f 0c40 	mov.w	ip, #64	@ 0x40
10014b0c:	f04f 0e3f 	mov.w	lr, #63	@ 0x3f
10014b10:	e77f      	b.n	10014a12 <_malloc_r+0x8e>
10014b12:	68bc      	ldr	r4, [r7, #8]
10014b14:	6863      	ldr	r3, [r4, #4]
10014b16:	f023 0903 	bic.w	r9, r3, #3
10014b1a:	45a9      	cmp	r9, r5
10014b1c:	d303      	bcc.n	10014b26 <_malloc_r+0x1a2>
10014b1e:	eba9 0305 	sub.w	r3, r9, r5
10014b22:	2b0f      	cmp	r3, #15
10014b24:	dc53      	bgt.n	10014bce <_malloc_r+0x24a>
10014b26:	4b5c      	ldr	r3, [pc, #368]	@ (10014c98 <_malloc_r+0x314>)
10014b28:	f8df b170 	ldr.w	fp, [pc, #368]	@ 10014c9c <_malloc_r+0x318>
10014b2c:	681b      	ldr	r3, [r3, #0]
10014b2e:	2008      	movs	r0, #8
10014b30:	f103 0810 	add.w	r8, r3, #16
10014b34:	f000 fab4 	bl	100150a0 <sysconf>
10014b38:	f8db 3000 	ldr.w	r3, [fp]
10014b3c:	9001      	str	r0, [sp, #4]
10014b3e:	3301      	adds	r3, #1
10014b40:	44a8      	add	r8, r5
10014b42:	eb04 0209 	add.w	r2, r4, r9
10014b46:	d005      	beq.n	10014b54 <_malloc_r+0x1d0>
10014b48:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
10014b4c:	4480      	add	r8, r0
10014b4e:	4243      	negs	r3, r0
10014b50:	ea03 0808 	and.w	r8, r3, r8
10014b54:	4641      	mov	r1, r8
10014b56:	4630      	mov	r0, r6
10014b58:	9202      	str	r2, [sp, #8]
10014b5a:	f003 fbbb 	bl	100182d4 <_sbrk_r>
10014b5e:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
10014b62:	9a02      	ldr	r2, [sp, #8]
10014b64:	4682      	mov	sl, r0
10014b66:	f000 80dc 	beq.w	10014d22 <_malloc_r+0x39e>
10014b6a:	4282      	cmp	r2, r0
10014b6c:	f200 80d7 	bhi.w	10014d1e <_malloc_r+0x39a>
10014b70:	4b4b      	ldr	r3, [pc, #300]	@ (10014ca0 <_malloc_r+0x31c>)
10014b72:	9901      	ldr	r1, [sp, #4]
10014b74:	6818      	ldr	r0, [r3, #0]
10014b76:	4440      	add	r0, r8
10014b78:	f101 31ff 	add.w	r1, r1, #4294967295	@ 0xffffffff
10014b7c:	6018      	str	r0, [r3, #0]
10014b7e:	4684      	mov	ip, r0
10014b80:	f040 80fc 	bne.w	10014d7c <_malloc_r+0x3f8>
10014b84:	ea1a 0f01 	tst.w	sl, r1
10014b88:	f040 80f8 	bne.w	10014d7c <_malloc_r+0x3f8>
10014b8c:	f8d7 a008 	ldr.w	sl, [r7, #8]
10014b90:	44c8      	add	r8, r9
10014b92:	f048 0201 	orr.w	r2, r8, #1
10014b96:	f8ca 2004 	str.w	r2, [sl, #4]
10014b9a:	4b42      	ldr	r3, [pc, #264]	@ (10014ca4 <_malloc_r+0x320>)
10014b9c:	6819      	ldr	r1, [r3, #0]
10014b9e:	4281      	cmp	r1, r0
10014ba0:	bf38      	it	cc
10014ba2:	6018      	strcc	r0, [r3, #0]
10014ba4:	4b40      	ldr	r3, [pc, #256]	@ (10014ca8 <_malloc_r+0x324>)
10014ba6:	6819      	ldr	r1, [r3, #0]
10014ba8:	4281      	cmp	r1, r0
10014baa:	bf38      	it	cc
10014bac:	6018      	strcc	r0, [r3, #0]
10014bae:	4654      	mov	r4, sl
10014bb0:	f022 0803 	bic.w	r8, r2, #3
10014bb4:	45a8      	cmp	r8, r5
10014bb6:	eba8 0305 	sub.w	r3, r8, r5
10014bba:	d301      	bcc.n	10014bc0 <_malloc_r+0x23c>
10014bbc:	2b0f      	cmp	r3, #15
10014bbe:	dc06      	bgt.n	10014bce <_malloc_r+0x24a>
10014bc0:	4630      	mov	r0, r6
10014bc2:	f000 fc5b 	bl	1001547c <__malloc_unlock>
10014bc6:	e79b      	b.n	10014b00 <_malloc_r+0x17c>
10014bc8:	f8d7 e004 	ldr.w	lr, [r7, #4]
10014bcc:	e766      	b.n	10014a9c <_malloc_r+0x118>
10014bce:	1962      	adds	r2, r4, r5
10014bd0:	f043 0301 	orr.w	r3, r3, #1
10014bd4:	f045 0501 	orr.w	r5, r5, #1
10014bd8:	6065      	str	r5, [r4, #4]
10014bda:	4630      	mov	r0, r6
10014bdc:	60ba      	str	r2, [r7, #8]
10014bde:	6053      	str	r3, [r2, #4]
10014be0:	f000 fc4c 	bl	1001547c <__malloc_unlock>
10014be4:	3408      	adds	r4, #8
10014be6:	4620      	mov	r0, r4
10014be8:	b005      	add	sp, #20
10014bea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10014bee:	68a2      	ldr	r2, [r4, #8]
10014bf0:	4423      	add	r3, r4
10014bf2:	60d1      	str	r1, [r2, #12]
10014bf4:	4630      	mov	r0, r6
10014bf6:	608a      	str	r2, [r1, #8]
10014bf8:	e6e6      	b.n	100149c8 <_malloc_r+0x44>
10014bfa:	68dc      	ldr	r4, [r3, #12]
10014bfc:	42a3      	cmp	r3, r4
10014bfe:	f47f aeda 	bne.w	100149b6 <_malloc_r+0x32>
10014c02:	f10c 0c02 	add.w	ip, ip, #2
10014c06:	e71a      	b.n	10014a3e <_malloc_r+0xba>
10014c08:	f5b9 6f20 	cmp.w	r9, #2560	@ 0xa00
10014c0c:	ea4f 2259 	mov.w	r2, r9, lsr #9
10014c10:	d37e      	bcc.n	10014d10 <_malloc_r+0x38c>
10014c12:	2a14      	cmp	r2, #20
10014c14:	f200 8115 	bhi.w	10014e42 <_malloc_r+0x4be>
10014c18:	f102 035c 	add.w	r3, r2, #92	@ 0x5c
10014c1c:	00db      	lsls	r3, r3, #3
10014c1e:	325b      	adds	r2, #91	@ 0x5b
10014c20:	18f9      	adds	r1, r7, r3
10014c22:	58fb      	ldr	r3, [r7, r3]
10014c24:	3908      	subs	r1, #8
10014c26:	4299      	cmp	r1, r3
10014c28:	d103      	bne.n	10014c32 <_malloc_r+0x2ae>
10014c2a:	e0f0      	b.n	10014e0e <_malloc_r+0x48a>
10014c2c:	689b      	ldr	r3, [r3, #8]
10014c2e:	4299      	cmp	r1, r3
10014c30:	d004      	beq.n	10014c3c <_malloc_r+0x2b8>
10014c32:	685a      	ldr	r2, [r3, #4]
10014c34:	f022 0203 	bic.w	r2, r2, #3
10014c38:	454a      	cmp	r2, r9
10014c3a:	d8f7      	bhi.n	10014c2c <_malloc_r+0x2a8>
10014c3c:	68d9      	ldr	r1, [r3, #12]
10014c3e:	e9c4 3102 	strd	r3, r1, [r4, #8]
10014c42:	608c      	str	r4, [r1, #8]
10014c44:	60dc      	str	r4, [r3, #12]
10014c46:	e729      	b.n	10014a9c <_malloc_r+0x118>
10014c48:	2b14      	cmp	r3, #20
10014c4a:	d96d      	bls.n	10014d28 <_malloc_r+0x3a4>
10014c4c:	2b54      	cmp	r3, #84	@ 0x54
10014c4e:	f200 8101 	bhi.w	10014e54 <_malloc_r+0x4d0>
10014c52:	0b2b      	lsrs	r3, r5, #12
10014c54:	f103 0c6f 	add.w	ip, r3, #111	@ 0x6f
10014c58:	f103 0e6e 	add.w	lr, r3, #110	@ 0x6e
10014c5c:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10014c60:	e6d7      	b.n	10014a12 <_malloc_r+0x8e>
10014c62:	4630      	mov	r0, r6
10014c64:	68a6      	ldr	r6, [r4, #8]
10014c66:	1962      	adds	r2, r4, r5
10014c68:	f045 0501 	orr.w	r5, r5, #1
10014c6c:	6065      	str	r5, [r4, #4]
10014c6e:	60f1      	str	r1, [r6, #12]
10014c70:	608e      	str	r6, [r1, #8]
10014c72:	f04e 0101 	orr.w	r1, lr, #1
10014c76:	e9c7 2204 	strd	r2, r2, [r7, #16]
10014c7a:	f8c2 8008 	str.w	r8, [r2, #8]
10014c7e:	f8c2 800c 	str.w	r8, [r2, #12]
10014c82:	6051      	str	r1, [r2, #4]
10014c84:	f844 e003 	str.w	lr, [r4, r3]
10014c88:	f000 fbf8 	bl	1001547c <__malloc_unlock>
10014c8c:	3408      	adds	r4, #8
10014c8e:	e6a2      	b.n	100149d6 <_malloc_r+0x52>
10014c90:	20000018 	.word	0x20000018
10014c94:	20000020 	.word	0x20000020
10014c98:	20001484 	.word	0x20001484
10014c9c:	20000010 	.word	0x20000010
10014ca0:	20001454 	.word	0x20001454
10014ca4:	20001480 	.word	0x20001480
10014ca8:	2000147c 	.word	0x2000147c
10014cac:	4423      	add	r3, r4
10014cae:	4630      	mov	r0, r6
10014cb0:	685a      	ldr	r2, [r3, #4]
10014cb2:	f042 0201 	orr.w	r2, r2, #1
10014cb6:	605a      	str	r2, [r3, #4]
10014cb8:	f854 3f08 	ldr.w	r3, [r4, #8]!
10014cbc:	60d9      	str	r1, [r3, #12]
10014cbe:	608b      	str	r3, [r1, #8]
10014cc0:	f000 fbdc 	bl	1001547c <__malloc_unlock>
10014cc4:	e687      	b.n	100149d6 <_malloc_r+0x52>
10014cc6:	44a1      	add	r9, r4
10014cc8:	4630      	mov	r0, r6
10014cca:	f8d9 3004 	ldr.w	r3, [r9, #4]
10014cce:	f043 0301 	orr.w	r3, r3, #1
10014cd2:	f8c9 3004 	str.w	r3, [r9, #4]
10014cd6:	3408      	adds	r4, #8
10014cd8:	f000 fbd0 	bl	1001547c <__malloc_unlock>
10014cdc:	e67b      	b.n	100149d6 <_malloc_r+0x52>
10014cde:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
10014ce2:	f105 0308 	add.w	r3, r5, #8
10014ce6:	e65e      	b.n	100149a6 <_malloc_r+0x22>
10014ce8:	1962      	adds	r2, r4, r5
10014cea:	f043 0101 	orr.w	r1, r3, #1
10014cee:	f045 0501 	orr.w	r5, r5, #1
10014cf2:	6065      	str	r5, [r4, #4]
10014cf4:	4630      	mov	r0, r6
10014cf6:	e9c7 2204 	strd	r2, r2, [r7, #16]
10014cfa:	f8c2 8008 	str.w	r8, [r2, #8]
10014cfe:	f8c2 800c 	str.w	r8, [r2, #12]
10014d02:	6051      	str	r1, [r2, #4]
10014d04:	f844 3009 	str.w	r3, [r4, r9]
10014d08:	f000 fbb8 	bl	1001547c <__malloc_unlock>
10014d0c:	3408      	adds	r4, #8
10014d0e:	e662      	b.n	100149d6 <_malloc_r+0x52>
10014d10:	ea4f 1299 	mov.w	r2, r9, lsr #6
10014d14:	f102 0339 	add.w	r3, r2, #57	@ 0x39
10014d18:	00db      	lsls	r3, r3, #3
10014d1a:	3238      	adds	r2, #56	@ 0x38
10014d1c:	e780      	b.n	10014c20 <_malloc_r+0x29c>
10014d1e:	42bc      	cmp	r4, r7
10014d20:	d024      	beq.n	10014d6c <_malloc_r+0x3e8>
10014d22:	68bc      	ldr	r4, [r7, #8]
10014d24:	6862      	ldr	r2, [r4, #4]
10014d26:	e743      	b.n	10014bb0 <_malloc_r+0x22c>
10014d28:	f103 0c5c 	add.w	ip, r3, #92	@ 0x5c
10014d2c:	f103 0e5b 	add.w	lr, r3, #91	@ 0x5b
10014d30:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10014d34:	e66d      	b.n	10014a12 <_malloc_r+0x8e>
10014d36:	f85a 3908 	ldr.w	r3, [sl], #-8
10014d3a:	4553      	cmp	r3, sl
10014d3c:	f040 80d8 	bne.w	10014ef0 <_malloc_r+0x56c>
10014d40:	f01c 0f03 	tst.w	ip, #3
10014d44:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
10014d48:	d1f5      	bne.n	10014d36 <_malloc_r+0x3b2>
10014d4a:	687b      	ldr	r3, [r7, #4]
10014d4c:	ea23 0300 	bic.w	r3, r3, r0
10014d50:	607b      	str	r3, [r7, #4]
10014d52:	0040      	lsls	r0, r0, #1
10014d54:	4298      	cmp	r0, r3
10014d56:	f63f aedc 	bhi.w	10014b12 <_malloc_r+0x18e>
10014d5a:	b918      	cbnz	r0, 10014d64 <_malloc_r+0x3e0>
10014d5c:	e6d9      	b.n	10014b12 <_malloc_r+0x18e>
10014d5e:	0040      	lsls	r0, r0, #1
10014d60:	f109 0904 	add.w	r9, r9, #4
10014d64:	4218      	tst	r0, r3
10014d66:	d0fa      	beq.n	10014d5e <_malloc_r+0x3da>
10014d68:	46cc      	mov	ip, r9
10014d6a:	e6a8      	b.n	10014abe <_malloc_r+0x13a>
10014d6c:	4b61      	ldr	r3, [pc, #388]	@ (10014ef4 <_malloc_r+0x570>)
10014d6e:	9901      	ldr	r1, [sp, #4]
10014d70:	6818      	ldr	r0, [r3, #0]
10014d72:	eb08 0c00 	add.w	ip, r8, r0
10014d76:	3901      	subs	r1, #1
10014d78:	f8c3 c000 	str.w	ip, [r3]
10014d7c:	f8db 0000 	ldr.w	r0, [fp]
10014d80:	3001      	adds	r0, #1
10014d82:	bf1b      	ittet	ne
10014d84:	ebaa 0202 	subne.w	r2, sl, r2
10014d88:	4462      	addne	r2, ip
10014d8a:	f8cb a000 	streq.w	sl, [fp]
10014d8e:	601a      	strne	r2, [r3, #0]
10014d90:	f01a 0207 	ands.w	r2, sl, #7
10014d94:	e9cd 2302 	strd	r2, r3, [sp, #8]
10014d98:	d042      	beq.n	10014e20 <_malloc_r+0x49c>
10014d9a:	f1c2 0208 	rsb	r2, r2, #8
10014d9e:	9b01      	ldr	r3, [sp, #4]
10014da0:	4492      	add	sl, r2
10014da2:	44d0      	add	r8, sl
10014da4:	4413      	add	r3, r2
10014da6:	ea08 0001 	and.w	r0, r8, r1
10014daa:	1a1a      	subs	r2, r3, r0
10014dac:	ea02 0b01 	and.w	fp, r2, r1
10014db0:	4659      	mov	r1, fp
10014db2:	4630      	mov	r0, r6
10014db4:	f003 fa8e 	bl	100182d4 <_sbrk_r>
10014db8:	1c42      	adds	r2, r0, #1
10014dba:	9b03      	ldr	r3, [sp, #12]
10014dbc:	d07a      	beq.n	10014eb4 <_malloc_r+0x530>
10014dbe:	eba0 000a 	sub.w	r0, r0, sl
10014dc2:	eb00 080b 	add.w	r8, r0, fp
10014dc6:	6818      	ldr	r0, [r3, #0]
10014dc8:	f8c7 a008 	str.w	sl, [r7, #8]
10014dcc:	f048 0201 	orr.w	r2, r8, #1
10014dd0:	4458      	add	r0, fp
10014dd2:	42bc      	cmp	r4, r7
10014dd4:	f8ca 2004 	str.w	r2, [sl, #4]
10014dd8:	6018      	str	r0, [r3, #0]
10014dda:	f43f aede 	beq.w	10014b9a <_malloc_r+0x216>
10014dde:	f1b9 0f0f 	cmp.w	r9, #15
10014de2:	d942      	bls.n	10014e6a <_malloc_r+0x4e6>
10014de4:	6861      	ldr	r1, [r4, #4]
10014de6:	f1a9 020c 	sub.w	r2, r9, #12
10014dea:	f022 0207 	bic.w	r2, r2, #7
10014dee:	f001 0101 	and.w	r1, r1, #1
10014df2:	4311      	orrs	r1, r2
10014df4:	6061      	str	r1, [r4, #4]
10014df6:	18a1      	adds	r1, r4, r2
10014df8:	f04f 0c05 	mov.w	ip, #5
10014dfc:	2a0f      	cmp	r2, #15
10014dfe:	f8c1 c004 	str.w	ip, [r1, #4]
10014e02:	f8c1 c008 	str.w	ip, [r1, #8]
10014e06:	d84a      	bhi.n	10014e9e <_malloc_r+0x51a>
10014e08:	f8da 2004 	ldr.w	r2, [sl, #4]
10014e0c:	e6c5      	b.n	10014b9a <_malloc_r+0x216>
10014e0e:	1092      	asrs	r2, r2, #2
10014e10:	2001      	movs	r0, #1
10014e12:	fa00 f202 	lsl.w	r2, r0, r2
10014e16:	ea4e 0e02 	orr.w	lr, lr, r2
10014e1a:	f8c7 e004 	str.w	lr, [r7, #4]
10014e1e:	e70e      	b.n	10014c3e <_malloc_r+0x2ba>
10014e20:	9b01      	ldr	r3, [sp, #4]
10014e22:	eb0a 0208 	add.w	r2, sl, r8
10014e26:	400a      	ands	r2, r1
10014e28:	1a9a      	subs	r2, r3, r2
10014e2a:	ea02 0b01 	and.w	fp, r2, r1
10014e2e:	4659      	mov	r1, fp
10014e30:	4630      	mov	r0, r6
10014e32:	f003 fa4f 	bl	100182d4 <_sbrk_r>
10014e36:	1c43      	adds	r3, r0, #1
10014e38:	9b03      	ldr	r3, [sp, #12]
10014e3a:	d1c0      	bne.n	10014dbe <_malloc_r+0x43a>
10014e3c:	f8dd b008 	ldr.w	fp, [sp, #8]
10014e40:	e7c1      	b.n	10014dc6 <_malloc_r+0x442>
10014e42:	2a54      	cmp	r2, #84	@ 0x54
10014e44:	d815      	bhi.n	10014e72 <_malloc_r+0x4ee>
10014e46:	ea4f 3219 	mov.w	r2, r9, lsr #12
10014e4a:	f102 036f 	add.w	r3, r2, #111	@ 0x6f
10014e4e:	00db      	lsls	r3, r3, #3
10014e50:	326e      	adds	r2, #110	@ 0x6e
10014e52:	e6e5      	b.n	10014c20 <_malloc_r+0x29c>
10014e54:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
10014e58:	d815      	bhi.n	10014e86 <_malloc_r+0x502>
10014e5a:	0beb      	lsrs	r3, r5, #15
10014e5c:	f103 0c78 	add.w	ip, r3, #120	@ 0x78
10014e60:	f103 0e77 	add.w	lr, r3, #119	@ 0x77
10014e64:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10014e68:	e5d3      	b.n	10014a12 <_malloc_r+0x8e>
10014e6a:	2301      	movs	r3, #1
10014e6c:	f8ca 3004 	str.w	r3, [sl, #4]
10014e70:	e6a6      	b.n	10014bc0 <_malloc_r+0x23c>
10014e72:	f5b2 7faa 	cmp.w	r2, #340	@ 0x154
10014e76:	d825      	bhi.n	10014ec4 <_malloc_r+0x540>
10014e78:	ea4f 32d9 	mov.w	r2, r9, lsr #15
10014e7c:	f102 0378 	add.w	r3, r2, #120	@ 0x78
10014e80:	00db      	lsls	r3, r3, #3
10014e82:	3277      	adds	r2, #119	@ 0x77
10014e84:	e6cc      	b.n	10014c20 <_malloc_r+0x29c>
10014e86:	f240 5254 	movw	r2, #1364	@ 0x554
10014e8a:	4293      	cmp	r3, r2
10014e8c:	d825      	bhi.n	10014eda <_malloc_r+0x556>
10014e8e:	0cab      	lsrs	r3, r5, #18
10014e90:	f103 0c7d 	add.w	ip, r3, #125	@ 0x7d
10014e94:	f103 0e7c 	add.w	lr, r3, #124	@ 0x7c
10014e98:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10014e9c:	e5b9      	b.n	10014a12 <_malloc_r+0x8e>
10014e9e:	4630      	mov	r0, r6
10014ea0:	f104 0108 	add.w	r1, r4, #8
10014ea4:	9301      	str	r3, [sp, #4]
10014ea6:	f002 f8ef 	bl	10017088 <_free_r>
10014eaa:	9b01      	ldr	r3, [sp, #4]
10014eac:	f8d7 a008 	ldr.w	sl, [r7, #8]
10014eb0:	6818      	ldr	r0, [r3, #0]
10014eb2:	e7a9      	b.n	10014e08 <_malloc_r+0x484>
10014eb4:	9a02      	ldr	r2, [sp, #8]
10014eb6:	3a08      	subs	r2, #8
10014eb8:	4490      	add	r8, r2
10014eba:	eba8 080a 	sub.w	r8, r8, sl
10014ebe:	f04f 0b00 	mov.w	fp, #0
10014ec2:	e780      	b.n	10014dc6 <_malloc_r+0x442>
10014ec4:	f240 5354 	movw	r3, #1364	@ 0x554
10014ec8:	429a      	cmp	r2, r3
10014eca:	d80d      	bhi.n	10014ee8 <_malloc_r+0x564>
10014ecc:	ea4f 4299 	mov.w	r2, r9, lsr #18
10014ed0:	f102 037d 	add.w	r3, r2, #125	@ 0x7d
10014ed4:	00db      	lsls	r3, r3, #3
10014ed6:	327c      	adds	r2, #124	@ 0x7c
10014ed8:	e6a2      	b.n	10014c20 <_malloc_r+0x29c>
10014eda:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
10014ede:	f04f 0c7f 	mov.w	ip, #127	@ 0x7f
10014ee2:	f04f 0e7e 	mov.w	lr, #126	@ 0x7e
10014ee6:	e594      	b.n	10014a12 <_malloc_r+0x8e>
10014ee8:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
10014eec:	227e      	movs	r2, #126	@ 0x7e
10014eee:	e697      	b.n	10014c20 <_malloc_r+0x29c>
10014ef0:	687b      	ldr	r3, [r7, #4]
10014ef2:	e72e      	b.n	10014d52 <_malloc_r+0x3ce>
10014ef4:	20001454 	.word	0x20001454

10014ef8 <register_fini>:
10014ef8:	4b02      	ldr	r3, [pc, #8]	@ (10014f04 <register_fini+0xc>)
10014efa:	b113      	cbz	r3, 10014f02 <register_fini+0xa>
10014efc:	4802      	ldr	r0, [pc, #8]	@ (10014f08 <register_fini+0x10>)
10014efe:	f000 bac3 	b.w	10015488 <atexit>
10014f02:	4770      	bx	lr
10014f04:	00000000 	.word	0x00000000
10014f08:	10015055 	.word	0x10015055

10014f0c <_mbrtowc_r>:
10014f0c:	b570      	push	{r4, r5, r6, lr}
10014f0e:	b082      	sub	sp, #8
10014f10:	4604      	mov	r4, r0
10014f12:	9d06      	ldr	r5, [sp, #24]
10014f14:	b155      	cbz	r5, 10014f2c <_mbrtowc_r+0x20>
10014f16:	4810      	ldr	r0, [pc, #64]	@ (10014f58 <_mbrtowc_r+0x4c>)
10014f18:	f8d0 60e4 	ldr.w	r6, [r0, #228]	@ 0xe4
10014f1c:	9500      	str	r5, [sp, #0]
10014f1e:	b16a      	cbz	r2, 10014f3c <_mbrtowc_r+0x30>
10014f20:	4620      	mov	r0, r4
10014f22:	47b0      	blx	r6
10014f24:	1c43      	adds	r3, r0, #1
10014f26:	d010      	beq.n	10014f4a <_mbrtowc_r+0x3e>
10014f28:	b002      	add	sp, #8
10014f2a:	bd70      	pop	{r4, r5, r6, pc}
10014f2c:	f100 05f4 	add.w	r5, r0, #244	@ 0xf4
10014f30:	4809      	ldr	r0, [pc, #36]	@ (10014f58 <_mbrtowc_r+0x4c>)
10014f32:	f8d0 60e4 	ldr.w	r6, [r0, #228]	@ 0xe4
10014f36:	9500      	str	r5, [sp, #0]
10014f38:	2a00      	cmp	r2, #0
10014f3a:	d1f1      	bne.n	10014f20 <_mbrtowc_r+0x14>
10014f3c:	2301      	movs	r3, #1
10014f3e:	4611      	mov	r1, r2
10014f40:	4620      	mov	r0, r4
10014f42:	4a06      	ldr	r2, [pc, #24]	@ (10014f5c <_mbrtowc_r+0x50>)
10014f44:	47b0      	blx	r6
10014f46:	1c43      	adds	r3, r0, #1
10014f48:	d1ee      	bne.n	10014f28 <_mbrtowc_r+0x1c>
10014f4a:	2200      	movs	r2, #0
10014f4c:	238a      	movs	r3, #138	@ 0x8a
10014f4e:	602a      	str	r2, [r5, #0]
10014f50:	6023      	str	r3, [r4, #0]
10014f52:	b002      	add	sp, #8
10014f54:	bd70      	pop	{r4, r5, r6, pc}
10014f56:	bf00      	nop
10014f58:	20000424 	.word	0x20000424
10014f5c:	100207e8 	.word	0x100207e8

10014f60 <memset>:
10014f60:	0783      	lsls	r3, r0, #30
10014f62:	b530      	push	{r4, r5, lr}
10014f64:	d047      	beq.n	10014ff6 <memset+0x96>
10014f66:	1e54      	subs	r4, r2, #1
10014f68:	2a00      	cmp	r2, #0
10014f6a:	d03e      	beq.n	10014fea <memset+0x8a>
10014f6c:	b2ca      	uxtb	r2, r1
10014f6e:	4603      	mov	r3, r0
10014f70:	e001      	b.n	10014f76 <memset+0x16>
10014f72:	3c01      	subs	r4, #1
10014f74:	d339      	bcc.n	10014fea <memset+0x8a>
10014f76:	f803 2b01 	strb.w	r2, [r3], #1
10014f7a:	079d      	lsls	r5, r3, #30
10014f7c:	d1f9      	bne.n	10014f72 <memset+0x12>
10014f7e:	2c03      	cmp	r4, #3
10014f80:	d92c      	bls.n	10014fdc <memset+0x7c>
10014f82:	b2cd      	uxtb	r5, r1
10014f84:	eb05 2505 	add.w	r5, r5, r5, lsl #8
10014f88:	2c0f      	cmp	r4, #15
10014f8a:	eb05 4505 	add.w	r5, r5, r5, lsl #16
10014f8e:	d935      	bls.n	10014ffc <memset+0x9c>
10014f90:	f1a4 0210 	sub.w	r2, r4, #16
10014f94:	f022 0c0f 	bic.w	ip, r2, #15
10014f98:	f103 0e10 	add.w	lr, r3, #16
10014f9c:	44e6      	add	lr, ip
10014f9e:	ea4f 1c12 	mov.w	ip, r2, lsr #4
10014fa2:	461a      	mov	r2, r3
10014fa4:	6015      	str	r5, [r2, #0]
10014fa6:	6055      	str	r5, [r2, #4]
10014fa8:	6095      	str	r5, [r2, #8]
10014faa:	60d5      	str	r5, [r2, #12]
10014fac:	3210      	adds	r2, #16
10014fae:	4572      	cmp	r2, lr
10014fb0:	d1f8      	bne.n	10014fa4 <memset+0x44>
10014fb2:	f10c 0201 	add.w	r2, ip, #1
10014fb6:	f014 0f0c 	tst.w	r4, #12
10014fba:	eb03 1202 	add.w	r2, r3, r2, lsl #4
10014fbe:	f004 0c0f 	and.w	ip, r4, #15
10014fc2:	d013      	beq.n	10014fec <memset+0x8c>
10014fc4:	f1ac 0304 	sub.w	r3, ip, #4
10014fc8:	f023 0303 	bic.w	r3, r3, #3
10014fcc:	3304      	adds	r3, #4
10014fce:	4413      	add	r3, r2
10014fd0:	f842 5b04 	str.w	r5, [r2], #4
10014fd4:	429a      	cmp	r2, r3
10014fd6:	d1fb      	bne.n	10014fd0 <memset+0x70>
10014fd8:	f00c 0403 	and.w	r4, ip, #3
10014fdc:	b12c      	cbz	r4, 10014fea <memset+0x8a>
10014fde:	b2c9      	uxtb	r1, r1
10014fe0:	441c      	add	r4, r3
10014fe2:	f803 1b01 	strb.w	r1, [r3], #1
10014fe6:	429c      	cmp	r4, r3
10014fe8:	d1fb      	bne.n	10014fe2 <memset+0x82>
10014fea:	bd30      	pop	{r4, r5, pc}
10014fec:	4664      	mov	r4, ip
10014fee:	4613      	mov	r3, r2
10014ff0:	2c00      	cmp	r4, #0
10014ff2:	d1f4      	bne.n	10014fde <memset+0x7e>
10014ff4:	e7f9      	b.n	10014fea <memset+0x8a>
10014ff6:	4603      	mov	r3, r0
10014ff8:	4614      	mov	r4, r2
10014ffa:	e7c0      	b.n	10014f7e <memset+0x1e>
10014ffc:	461a      	mov	r2, r3
10014ffe:	46a4      	mov	ip, r4
10015000:	e7e0      	b.n	10014fc4 <memset+0x64>
10015002:	bf00      	nop

10015004 <__libc_init_array>:
10015004:	b570      	push	{r4, r5, r6, lr}
10015006:	4b0f      	ldr	r3, [pc, #60]	@ (10015044 <__libc_init_array+0x40>)
10015008:	4d0f      	ldr	r5, [pc, #60]	@ (10015048 <__libc_init_array+0x44>)
1001500a:	42ab      	cmp	r3, r5
1001500c:	eba3 0605 	sub.w	r6, r3, r5
10015010:	d007      	beq.n	10015022 <__libc_init_array+0x1e>
10015012:	10b6      	asrs	r6, r6, #2
10015014:	2400      	movs	r4, #0
10015016:	f855 3b04 	ldr.w	r3, [r5], #4
1001501a:	3401      	adds	r4, #1
1001501c:	4798      	blx	r3
1001501e:	42a6      	cmp	r6, r4
10015020:	d8f9      	bhi.n	10015016 <__libc_init_array+0x12>
10015022:	f012 fd97 	bl	10027b54 <_init>
10015026:	4d09      	ldr	r5, [pc, #36]	@ (1001504c <__libc_init_array+0x48>)
10015028:	4b09      	ldr	r3, [pc, #36]	@ (10015050 <__libc_init_array+0x4c>)
1001502a:	1b5e      	subs	r6, r3, r5
1001502c:	42ab      	cmp	r3, r5
1001502e:	ea4f 06a6 	mov.w	r6, r6, asr #2
10015032:	d006      	beq.n	10015042 <__libc_init_array+0x3e>
10015034:	2400      	movs	r4, #0
10015036:	f855 3b04 	ldr.w	r3, [r5], #4
1001503a:	3401      	adds	r4, #1
1001503c:	4798      	blx	r3
1001503e:	42a6      	cmp	r6, r4
10015040:	d8f9      	bhi.n	10015036 <__libc_init_array+0x32>
10015042:	bd70      	pop	{r4, r5, r6, pc}
10015044:	20000bc0 	.word	0x20000bc0
10015048:	20000bc0 	.word	0x20000bc0
1001504c:	20000bc0 	.word	0x20000bc0
10015050:	20000bc8 	.word	0x20000bc8

10015054 <__libc_fini_array>:
10015054:	b538      	push	{r3, r4, r5, lr}
10015056:	4d07      	ldr	r5, [pc, #28]	@ (10015074 <__libc_fini_array+0x20>)
10015058:	4c07      	ldr	r4, [pc, #28]	@ (10015078 <__libc_fini_array+0x24>)
1001505a:	1b2c      	subs	r4, r5, r4
1001505c:	10a4      	asrs	r4, r4, #2
1001505e:	d005      	beq.n	1001506c <__libc_fini_array+0x18>
10015060:	3c01      	subs	r4, #1
10015062:	f855 3d04 	ldr.w	r3, [r5, #-4]!
10015066:	4798      	blx	r3
10015068:	2c00      	cmp	r4, #0
1001506a:	d1f9      	bne.n	10015060 <__libc_fini_array+0xc>
1001506c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
10015070:	f012 bd76 	b.w	10027b60 <_fini>
10015074:	20000bcc 	.word	0x20000bcc
10015078:	20000bc8 	.word	0x20000bc8

1001507c <__retarget_lock_init_recursive>:
1001507c:	4770      	bx	lr
1001507e:	bf00      	nop

10015080 <__retarget_lock_close_recursive>:
10015080:	4770      	bx	lr
10015082:	bf00      	nop

10015084 <__retarget_lock_acquire_recursive>:
10015084:	4770      	bx	lr
10015086:	bf00      	nop

10015088 <__retarget_lock_release_recursive>:
10015088:	4770      	bx	lr
1001508a:	bf00      	nop

1001508c <__locale_mb_cur_max>:
1001508c:	4b01      	ldr	r3, [pc, #4]	@ (10015094 <__locale_mb_cur_max+0x8>)
1001508e:	f893 0128 	ldrb.w	r0, [r3, #296]	@ 0x128
10015092:	4770      	bx	lr
10015094:	20000424 	.word	0x20000424

10015098 <_localeconv_r>:
10015098:	4800      	ldr	r0, [pc, #0]	@ (1001509c <_localeconv_r+0x4>)
1001509a:	4770      	bx	lr
1001509c:	20000514 	.word	0x20000514

100150a0 <sysconf>:
100150a0:	2808      	cmp	r0, #8
100150a2:	d102      	bne.n	100150aa <sysconf+0xa>
100150a4:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
100150a8:	4770      	bx	lr
100150aa:	b508      	push	{r3, lr}
100150ac:	f7fe f812 	bl	100130d4 <__errno>
100150b0:	2316      	movs	r3, #22
100150b2:	6003      	str	r3, [r0, #0]
100150b4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100150b8:	bd08      	pop	{r3, pc}
100150ba:	bf00      	nop
100150bc:	0000      	movs	r0, r0
	...

100150c0 <strcmp>:
100150c0:	7802      	ldrb	r2, [r0, #0]
100150c2:	780b      	ldrb	r3, [r1, #0]
100150c4:	2a01      	cmp	r2, #1
100150c6:	bf28      	it	cs
100150c8:	429a      	cmpcs	r2, r3
100150ca:	f040 80d8 	bne.w	1001527e <strcmp+0x1be>
100150ce:	e96d 4504 	strd	r4, r5, [sp, #-16]!
100150d2:	ea40 0401 	orr.w	r4, r0, r1
100150d6:	e9cd 6702 	strd	r6, r7, [sp, #8]
100150da:	f06f 0c00 	mvn.w	ip, #0
100150de:	ea4f 7244 	mov.w	r2, r4, lsl #29
100150e2:	b31a      	cbz	r2, 1001512c <strcmp+0x6c>
100150e4:	ea80 0401 	eor.w	r4, r0, r1
100150e8:	f014 0f07 	tst.w	r4, #7
100150ec:	d16b      	bne.n	100151c6 <strcmp+0x106>
100150ee:	f000 0407 	and.w	r4, r0, #7
100150f2:	f020 0007 	bic.w	r0, r0, #7
100150f6:	f004 0503 	and.w	r5, r4, #3
100150fa:	f021 0107 	bic.w	r1, r1, #7
100150fe:	ea4f 05c5 	mov.w	r5, r5, lsl #3
10015102:	e8f0 2304 	ldrd	r2, r3, [r0], #16
10015106:	f014 0f04 	tst.w	r4, #4
1001510a:	e8f1 6704 	ldrd	r6, r7, [r1], #16
1001510e:	fa0c f405 	lsl.w	r4, ip, r5
10015112:	ea62 0204 	orn	r2, r2, r4
10015116:	ea66 0604 	orn	r6, r6, r4
1001511a:	d00b      	beq.n	10015134 <strcmp+0x74>
1001511c:	ea63 0304 	orn	r3, r3, r4
10015120:	4662      	mov	r2, ip
10015122:	ea67 0704 	orn	r7, r7, r4
10015126:	4666      	mov	r6, ip
10015128:	e004      	b.n	10015134 <strcmp+0x74>
1001512a:	bf00      	nop
1001512c:	e8f0 2304 	ldrd	r2, r3, [r0], #16
10015130:	e8f1 6704 	ldrd	r6, r7, [r1], #16
10015134:	fa82 f54c 	uadd8	r5, r2, ip
10015138:	ea82 0406 	eor.w	r4, r2, r6
1001513c:	faa4 f48c 	sel	r4, r4, ip
10015140:	bb6c      	cbnz	r4, 1001519e <strcmp+0xde>
10015142:	fa83 f54c 	uadd8	r5, r3, ip
10015146:	ea83 0507 	eor.w	r5, r3, r7
1001514a:	faa5 f58c 	sel	r5, r5, ip
1001514e:	b995      	cbnz	r5, 10015176 <strcmp+0xb6>
10015150:	e950 2302 	ldrd	r2, r3, [r0, #-8]
10015154:	e951 6702 	ldrd	r6, r7, [r1, #-8]
10015158:	fa82 f54c 	uadd8	r5, r2, ip
1001515c:	ea82 0406 	eor.w	r4, r2, r6
10015160:	faa4 f48c 	sel	r4, r4, ip
10015164:	fa83 f54c 	uadd8	r5, r3, ip
10015168:	ea83 0507 	eor.w	r5, r3, r7
1001516c:	faa5 f58c 	sel	r5, r5, ip
10015170:	4325      	orrs	r5, r4
10015172:	d0db      	beq.n	1001512c <strcmp+0x6c>
10015174:	b99c      	cbnz	r4, 1001519e <strcmp+0xde>
10015176:	ba2d      	rev	r5, r5
10015178:	fab5 f485 	clz	r4, r5
1001517c:	f024 0407 	bic.w	r4, r4, #7
10015180:	fa27 f104 	lsr.w	r1, r7, r4
10015184:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
10015188:	fa23 f304 	lsr.w	r3, r3, r4
1001518c:	f003 00ff 	and.w	r0, r3, #255	@ 0xff
10015190:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
10015194:	e8fd 4504 	ldrd	r4, r5, [sp], #16
10015198:	eba0 0001 	sub.w	r0, r0, r1
1001519c:	4770      	bx	lr
1001519e:	ba24      	rev	r4, r4
100151a0:	fab4 f484 	clz	r4, r4
100151a4:	f024 0407 	bic.w	r4, r4, #7
100151a8:	fa26 f104 	lsr.w	r1, r6, r4
100151ac:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
100151b0:	fa22 f204 	lsr.w	r2, r2, r4
100151b4:	f002 00ff 	and.w	r0, r2, #255	@ 0xff
100151b8:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
100151bc:	e8fd 4504 	ldrd	r4, r5, [sp], #16
100151c0:	eba0 0001 	sub.w	r0, r0, r1
100151c4:	4770      	bx	lr
100151c6:	f014 0f03 	tst.w	r4, #3
100151ca:	d13c      	bne.n	10015246 <strcmp+0x186>
100151cc:	f010 0403 	ands.w	r4, r0, #3
100151d0:	d128      	bne.n	10015224 <strcmp+0x164>
100151d2:	f850 2b08 	ldr.w	r2, [r0], #8
100151d6:	f851 3b08 	ldr.w	r3, [r1], #8
100151da:	fa82 f54c 	uadd8	r5, r2, ip
100151de:	ea82 0503 	eor.w	r5, r2, r3
100151e2:	faa5 f58c 	sel	r5, r5, ip
100151e6:	b95d      	cbnz	r5, 10015200 <strcmp+0x140>
100151e8:	f850 2c04 	ldr.w	r2, [r0, #-4]
100151ec:	f851 3c04 	ldr.w	r3, [r1, #-4]
100151f0:	fa82 f54c 	uadd8	r5, r2, ip
100151f4:	ea82 0503 	eor.w	r5, r2, r3
100151f8:	faa5 f58c 	sel	r5, r5, ip
100151fc:	2d00      	cmp	r5, #0
100151fe:	d0e8      	beq.n	100151d2 <strcmp+0x112>
10015200:	ba2d      	rev	r5, r5
10015202:	fab5 f485 	clz	r4, r5
10015206:	f024 0407 	bic.w	r4, r4, #7
1001520a:	fa23 f104 	lsr.w	r1, r3, r4
1001520e:	fa22 f204 	lsr.w	r2, r2, r4
10015212:	f002 00ff 	and.w	r0, r2, #255	@ 0xff
10015216:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
1001521a:	e8fd 4504 	ldrd	r4, r5, [sp], #16
1001521e:	eba0 0001 	sub.w	r0, r0, r1
10015222:	4770      	bx	lr
10015224:	ea4f 04c4 	mov.w	r4, r4, lsl #3
10015228:	f020 0003 	bic.w	r0, r0, #3
1001522c:	f850 2b08 	ldr.w	r2, [r0], #8
10015230:	f021 0103 	bic.w	r1, r1, #3
10015234:	f851 3b08 	ldr.w	r3, [r1], #8
10015238:	fa0c f404 	lsl.w	r4, ip, r4
1001523c:	ea62 0204 	orn	r2, r2, r4
10015240:	ea63 0304 	orn	r3, r3, r4
10015244:	e7c9      	b.n	100151da <strcmp+0x11a>
10015246:	f010 0403 	ands.w	r4, r0, #3
1001524a:	d01d      	beq.n	10015288 <strcmp+0x1c8>
1001524c:	eba1 0104 	sub.w	r1, r1, r4
10015250:	f020 0003 	bic.w	r0, r0, #3
10015254:	07e4      	lsls	r4, r4, #31
10015256:	f850 2b04 	ldr.w	r2, [r0], #4
1001525a:	d006      	beq.n	1001526a <strcmp+0x1aa>
1001525c:	d212      	bcs.n	10015284 <strcmp+0x1c4>
1001525e:	788b      	ldrb	r3, [r1, #2]
10015260:	fa5f f4a2 	uxtb.w	r4, r2, ror #16
10015264:	1ae4      	subs	r4, r4, r3
10015266:	d106      	bne.n	10015276 <strcmp+0x1b6>
10015268:	b12b      	cbz	r3, 10015276 <strcmp+0x1b6>
1001526a:	78cb      	ldrb	r3, [r1, #3]
1001526c:	fa5f f4b2 	uxtb.w	r4, r2, ror #24
10015270:	1ae4      	subs	r4, r4, r3
10015272:	d100      	bne.n	10015276 <strcmp+0x1b6>
10015274:	b933      	cbnz	r3, 10015284 <strcmp+0x1c4>
10015276:	4620      	mov	r0, r4
10015278:	f85d 4b10 	ldr.w	r4, [sp], #16
1001527c:	4770      	bx	lr
1001527e:	eba2 0003 	sub.w	r0, r2, r3
10015282:	4770      	bx	lr
10015284:	f101 0104 	add.w	r1, r1, #4
10015288:	f850 2b04 	ldr.w	r2, [r0], #4
1001528c:	07cc      	lsls	r4, r1, #31
1001528e:	f021 0103 	bic.w	r1, r1, #3
10015292:	f851 3b04 	ldr.w	r3, [r1], #4
10015296:	d848      	bhi.n	1001532a <strcmp+0x26a>
10015298:	d224      	bcs.n	100152e4 <strcmp+0x224>
1001529a:	f022 447f 	bic.w	r4, r2, #4278190080	@ 0xff000000
1001529e:	fa82 f54c 	uadd8	r5, r2, ip
100152a2:	ea94 2513 	eors.w	r5, r4, r3, lsr #8
100152a6:	faa5 f58c 	sel	r5, r5, ip
100152aa:	d10a      	bne.n	100152c2 <strcmp+0x202>
100152ac:	b965      	cbnz	r5, 100152c8 <strcmp+0x208>
100152ae:	f851 3b04 	ldr.w	r3, [r1], #4
100152b2:	ea84 0402 	eor.w	r4, r4, r2
100152b6:	ebb4 6f03 	cmp.w	r4, r3, lsl #24
100152ba:	d10e      	bne.n	100152da <strcmp+0x21a>
100152bc:	f850 2b04 	ldr.w	r2, [r0], #4
100152c0:	e7eb      	b.n	1001529a <strcmp+0x1da>
100152c2:	ea4f 2313 	mov.w	r3, r3, lsr #8
100152c6:	e055      	b.n	10015374 <strcmp+0x2b4>
100152c8:	f035 457f 	bics.w	r5, r5, #4278190080	@ 0xff000000
100152cc:	d14d      	bne.n	1001536a <strcmp+0x2aa>
100152ce:	7808      	ldrb	r0, [r1, #0]
100152d0:	e8fd 4504 	ldrd	r4, r5, [sp], #16
100152d4:	f1c0 0000 	rsb	r0, r0, #0
100152d8:	4770      	bx	lr
100152da:	ea4f 6212 	mov.w	r2, r2, lsr #24
100152de:	f003 03ff 	and.w	r3, r3, #255	@ 0xff
100152e2:	e047      	b.n	10015374 <strcmp+0x2b4>
100152e4:	ea02 441c 	and.w	r4, r2, ip, lsr #16
100152e8:	fa82 f54c 	uadd8	r5, r2, ip
100152ec:	ea94 4513 	eors.w	r5, r4, r3, lsr #16
100152f0:	faa5 f58c 	sel	r5, r5, ip
100152f4:	d10a      	bne.n	1001530c <strcmp+0x24c>
100152f6:	b965      	cbnz	r5, 10015312 <strcmp+0x252>
100152f8:	f851 3b04 	ldr.w	r3, [r1], #4
100152fc:	ea84 0402 	eor.w	r4, r4, r2
10015300:	ebb4 4f03 	cmp.w	r4, r3, lsl #16
10015304:	d10c      	bne.n	10015320 <strcmp+0x260>
10015306:	f850 2b04 	ldr.w	r2, [r0], #4
1001530a:	e7eb      	b.n	100152e4 <strcmp+0x224>
1001530c:	ea4f 4313 	mov.w	r3, r3, lsr #16
10015310:	e030      	b.n	10015374 <strcmp+0x2b4>
10015312:	ea15 451c 	ands.w	r5, r5, ip, lsr #16
10015316:	d128      	bne.n	1001536a <strcmp+0x2aa>
10015318:	880b      	ldrh	r3, [r1, #0]
1001531a:	ea4f 4212 	mov.w	r2, r2, lsr #16
1001531e:	e029      	b.n	10015374 <strcmp+0x2b4>
10015320:	ea4f 4212 	mov.w	r2, r2, lsr #16
10015324:	ea03 431c 	and.w	r3, r3, ip, lsr #16
10015328:	e024      	b.n	10015374 <strcmp+0x2b4>
1001532a:	f002 04ff 	and.w	r4, r2, #255	@ 0xff
1001532e:	fa82 f54c 	uadd8	r5, r2, ip
10015332:	ea94 6513 	eors.w	r5, r4, r3, lsr #24
10015336:	faa5 f58c 	sel	r5, r5, ip
1001533a:	d10a      	bne.n	10015352 <strcmp+0x292>
1001533c:	b965      	cbnz	r5, 10015358 <strcmp+0x298>
1001533e:	f851 3b04 	ldr.w	r3, [r1], #4
10015342:	ea84 0402 	eor.w	r4, r4, r2
10015346:	ebb4 2f03 	cmp.w	r4, r3, lsl #8
1001534a:	d109      	bne.n	10015360 <strcmp+0x2a0>
1001534c:	f850 2b04 	ldr.w	r2, [r0], #4
10015350:	e7eb      	b.n	1001532a <strcmp+0x26a>
10015352:	ea4f 6313 	mov.w	r3, r3, lsr #24
10015356:	e00d      	b.n	10015374 <strcmp+0x2b4>
10015358:	f015 0fff 	tst.w	r5, #255	@ 0xff
1001535c:	d105      	bne.n	1001536a <strcmp+0x2aa>
1001535e:	680b      	ldr	r3, [r1, #0]
10015360:	ea4f 2212 	mov.w	r2, r2, lsr #8
10015364:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
10015368:	e004      	b.n	10015374 <strcmp+0x2b4>
1001536a:	f04f 0000 	mov.w	r0, #0
1001536e:	e8fd 4504 	ldrd	r4, r5, [sp], #16
10015372:	4770      	bx	lr
10015374:	ba12      	rev	r2, r2
10015376:	ba1b      	rev	r3, r3
10015378:	fa82 f44c 	uadd8	r4, r2, ip
1001537c:	ea82 0403 	eor.w	r4, r2, r3
10015380:	faa4 f58c 	sel	r5, r4, ip
10015384:	fab5 f485 	clz	r4, r5
10015388:	fa02 f204 	lsl.w	r2, r2, r4
1001538c:	fa03 f304 	lsl.w	r3, r3, r4
10015390:	ea4f 6012 	mov.w	r0, r2, lsr #24
10015394:	e8fd 4504 	ldrd	r4, r5, [sp], #16
10015398:	eba0 6013 	sub.w	r0, r0, r3, lsr #24
1001539c:	4770      	bx	lr
1001539e:	bf00      	nop

100153a0 <printf>:
100153a0:	b40f      	push	{r0, r1, r2, r3}
100153a2:	b500      	push	{lr}
100153a4:	4907      	ldr	r1, [pc, #28]	@ (100153c4 <printf+0x24>)
100153a6:	b083      	sub	sp, #12
100153a8:	ab04      	add	r3, sp, #16
100153aa:	6808      	ldr	r0, [r1, #0]
100153ac:	f853 2b04 	ldr.w	r2, [r3], #4
100153b0:	6881      	ldr	r1, [r0, #8]
100153b2:	9301      	str	r3, [sp, #4]
100153b4:	f005 f88a 	bl	1001a4cc <_vfprintf_r>
100153b8:	b003      	add	sp, #12
100153ba:	f85d eb04 	ldr.w	lr, [sp], #4
100153be:	b004      	add	sp, #16
100153c0:	4770      	bx	lr
100153c2:	bf00      	nop
100153c4:	20000590 	.word	0x20000590

100153c8 <_puts_r>:
100153c8:	b570      	push	{r4, r5, r6, lr}
100153ca:	4605      	mov	r5, r0
100153cc:	b088      	sub	sp, #32
100153ce:	4608      	mov	r0, r1
100153d0:	460c      	mov	r4, r1
100153d2:	f000 fbb5 	bl	10015b40 <strlen>
100153d6:	4e21      	ldr	r6, [pc, #132]	@ (1001545c <_puts_r+0x94>)
100153d8:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
100153da:	9005      	str	r0, [sp, #20]
100153dc:	2101      	movs	r1, #1
100153de:	1843      	adds	r3, r0, r1
100153e0:	e9cd 6106 	strd	r6, r1, [sp, #24]
100153e4:	a804      	add	r0, sp, #16
100153e6:	2102      	movs	r1, #2
100153e8:	9404      	str	r4, [sp, #16]
100153ea:	9303      	str	r3, [sp, #12]
100153ec:	68ac      	ldr	r4, [r5, #8]
100153ee:	9001      	str	r0, [sp, #4]
100153f0:	9102      	str	r1, [sp, #8]
100153f2:	2a00      	cmp	r2, #0
100153f4:	d02e      	beq.n	10015454 <_puts_r+0x8c>
100153f6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
100153f8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100153fc:	07d6      	lsls	r6, r2, #31
100153fe:	d401      	bmi.n	10015404 <_puts_r+0x3c>
10015400:	0598      	lsls	r0, r3, #22
10015402:	d521      	bpl.n	10015448 <_puts_r+0x80>
10015404:	0499      	lsls	r1, r3, #18
10015406:	d406      	bmi.n	10015416 <_puts_r+0x4e>
10015408:	6e62      	ldr	r2, [r4, #100]	@ 0x64
1001540a:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
1001540e:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
10015412:	81a3      	strh	r3, [r4, #12]
10015414:	6662      	str	r2, [r4, #100]	@ 0x64
10015416:	4628      	mov	r0, r5
10015418:	aa01      	add	r2, sp, #4
1001541a:	4621      	mov	r1, r4
1001541c:	f002 ff6c 	bl	100182f8 <__sfvwrite_r>
10015420:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10015422:	2800      	cmp	r0, #0
10015424:	bf0c      	ite	eq
10015426:	250a      	moveq	r5, #10
10015428:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
1001542c:	07da      	lsls	r2, r3, #31
1001542e:	d402      	bmi.n	10015436 <_puts_r+0x6e>
10015430:	89a3      	ldrh	r3, [r4, #12]
10015432:	059b      	lsls	r3, r3, #22
10015434:	d502      	bpl.n	1001543c <_puts_r+0x74>
10015436:	4628      	mov	r0, r5
10015438:	b008      	add	sp, #32
1001543a:	bd70      	pop	{r4, r5, r6, pc}
1001543c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001543e:	f7ff fe23 	bl	10015088 <__retarget_lock_release_recursive>
10015442:	4628      	mov	r0, r5
10015444:	b008      	add	sp, #32
10015446:	bd70      	pop	{r4, r5, r6, pc}
10015448:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001544a:	f7ff fe1b 	bl	10015084 <__retarget_lock_acquire_recursive>
1001544e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10015452:	e7d7      	b.n	10015404 <_puts_r+0x3c>
10015454:	4628      	mov	r0, r5
10015456:	f000 fa53 	bl	10015900 <__sinit>
1001545a:	e7cc      	b.n	100153f6 <_puts_r+0x2e>
1001545c:	1002060c 	.word	0x1002060c

10015460 <puts>:
10015460:	4b02      	ldr	r3, [pc, #8]	@ (1001546c <puts+0xc>)
10015462:	4601      	mov	r1, r0
10015464:	6818      	ldr	r0, [r3, #0]
10015466:	f7ff bfaf 	b.w	100153c8 <_puts_r>
1001546a:	bf00      	nop
1001546c:	20000590 	.word	0x20000590

10015470 <__malloc_lock>:
10015470:	4801      	ldr	r0, [pc, #4]	@ (10015478 <__malloc_lock+0x8>)
10015472:	f7ff be07 	b.w	10015084 <__retarget_lock_acquire_recursive>
10015476:	bf00      	nop
10015478:	2000148c 	.word	0x2000148c

1001547c <__malloc_unlock>:
1001547c:	4801      	ldr	r0, [pc, #4]	@ (10015484 <__malloc_unlock+0x8>)
1001547e:	f7ff be03 	b.w	10015088 <__retarget_lock_release_recursive>
10015482:	bf00      	nop
10015484:	2000148c 	.word	0x2000148c

10015488 <atexit>:
10015488:	2300      	movs	r3, #0
1001548a:	4601      	mov	r1, r0
1001548c:	461a      	mov	r2, r3
1001548e:	4618      	mov	r0, r3
10015490:	f007 bedc 	b.w	1001d24c <__register_exitproc>

10015494 <realloc>:
10015494:	b410      	push	{r4}
10015496:	4c04      	ldr	r4, [pc, #16]	@ (100154a8 <realloc+0x14>)
10015498:	4603      	mov	r3, r0
1001549a:	460a      	mov	r2, r1
1001549c:	6820      	ldr	r0, [r4, #0]
1001549e:	bc10      	pop	{r4}
100154a0:	4619      	mov	r1, r3
100154a2:	f000 bc09 	b.w	10015cb8 <_realloc_r>
100154a6:	bf00      	nop
100154a8:	20000590 	.word	0x20000590

100154ac <_close_r>:
100154ac:	b538      	push	{r3, r4, r5, lr}
100154ae:	4d07      	ldr	r5, [pc, #28]	@ (100154cc <_close_r+0x20>)
100154b0:	2200      	movs	r2, #0
100154b2:	4604      	mov	r4, r0
100154b4:	4608      	mov	r0, r1
100154b6:	602a      	str	r2, [r5, #0]
100154b8:	f7fb fd66 	bl	10010f88 <_close>
100154bc:	1c43      	adds	r3, r0, #1
100154be:	d000      	beq.n	100154c2 <_close_r+0x16>
100154c0:	bd38      	pop	{r3, r4, r5, pc}
100154c2:	682b      	ldr	r3, [r5, #0]
100154c4:	2b00      	cmp	r3, #0
100154c6:	d0fb      	beq.n	100154c0 <_close_r+0x14>
100154c8:	6023      	str	r3, [r4, #0]
100154ca:	bd38      	pop	{r3, r4, r5, pc}
100154cc:	20001498 	.word	0x20001498

100154d0 <__sflush_r>:
100154d0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
100154d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100154d6:	4607      	mov	r7, r0
100154d8:	0710      	lsls	r0, r2, #28
100154da:	460c      	mov	r4, r1
100154dc:	d446      	bmi.n	1001556c <__sflush_r+0x9c>
100154de:	6849      	ldr	r1, [r1, #4]
100154e0:	f442 6300 	orr.w	r3, r2, #2048	@ 0x800
100154e4:	2900      	cmp	r1, #0
100154e6:	81a3      	strh	r3, [r4, #12]
100154e8:	dd5c      	ble.n	100155a4 <__sflush_r+0xd4>
100154ea:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
100154ec:	2d00      	cmp	r5, #0
100154ee:	d03b      	beq.n	10015568 <__sflush_r+0x98>
100154f0:	2100      	movs	r1, #0
100154f2:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
100154f6:	683e      	ldr	r6, [r7, #0]
100154f8:	6039      	str	r1, [r7, #0]
100154fa:	69e1      	ldr	r1, [r4, #28]
100154fc:	d15e      	bne.n	100155bc <__sflush_r+0xec>
100154fe:	2301      	movs	r3, #1
10015500:	4638      	mov	r0, r7
10015502:	47a8      	blx	r5
10015504:	1c41      	adds	r1, r0, #1
10015506:	4602      	mov	r2, r0
10015508:	d068      	beq.n	100155dc <__sflush_r+0x10c>
1001550a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001550e:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
10015510:	69e1      	ldr	r1, [r4, #28]
10015512:	075b      	lsls	r3, r3, #29
10015514:	d505      	bpl.n	10015522 <__sflush_r+0x52>
10015516:	6863      	ldr	r3, [r4, #4]
10015518:	1ad2      	subs	r2, r2, r3
1001551a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
1001551c:	b10b      	cbz	r3, 10015522 <__sflush_r+0x52>
1001551e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
10015520:	1ad2      	subs	r2, r2, r3
10015522:	2300      	movs	r3, #0
10015524:	4638      	mov	r0, r7
10015526:	47a8      	blx	r5
10015528:	1c45      	adds	r5, r0, #1
1001552a:	d149      	bne.n	100155c0 <__sflush_r+0xf0>
1001552c:	6839      	ldr	r1, [r7, #0]
1001552e:	291d      	cmp	r1, #29
10015530:	d83c      	bhi.n	100155ac <__sflush_r+0xdc>
10015532:	4a30      	ldr	r2, [pc, #192]	@ (100155f4 <__sflush_r+0x124>)
10015534:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10015538:	410a      	asrs	r2, r1
1001553a:	f012 0201 	ands.w	r2, r2, #1
1001553e:	d137      	bne.n	100155b0 <__sflush_r+0xe0>
10015540:	6062      	str	r2, [r4, #4]
10015542:	6922      	ldr	r2, [r4, #16]
10015544:	6022      	str	r2, [r4, #0]
10015546:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
1001554a:	81a2      	strh	r2, [r4, #12]
1001554c:	04da      	lsls	r2, r3, #19
1001554e:	d44e      	bmi.n	100155ee <__sflush_r+0x11e>
10015550:	6b21      	ldr	r1, [r4, #48]	@ 0x30
10015552:	603e      	str	r6, [r7, #0]
10015554:	b141      	cbz	r1, 10015568 <__sflush_r+0x98>
10015556:	f104 0340 	add.w	r3, r4, #64	@ 0x40
1001555a:	4299      	cmp	r1, r3
1001555c:	d002      	beq.n	10015564 <__sflush_r+0x94>
1001555e:	4638      	mov	r0, r7
10015560:	f001 fd92 	bl	10017088 <_free_r>
10015564:	2300      	movs	r3, #0
10015566:	6323      	str	r3, [r4, #48]	@ 0x30
10015568:	2000      	movs	r0, #0
1001556a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1001556c:	690e      	ldr	r6, [r1, #16]
1001556e:	2e00      	cmp	r6, #0
10015570:	d0fa      	beq.n	10015568 <__sflush_r+0x98>
10015572:	680d      	ldr	r5, [r1, #0]
10015574:	600e      	str	r6, [r1, #0]
10015576:	0791      	lsls	r1, r2, #30
10015578:	bf0c      	ite	eq
1001557a:	6963      	ldreq	r3, [r4, #20]
1001557c:	2300      	movne	r3, #0
1001557e:	1bad      	subs	r5, r5, r6
10015580:	60a3      	str	r3, [r4, #8]
10015582:	e00c      	b.n	1001559e <__sflush_r+0xce>
10015584:	f8d4 c024 	ldr.w	ip, [r4, #36]	@ 0x24
10015588:	69e1      	ldr	r1, [r4, #28]
1001558a:	462b      	mov	r3, r5
1001558c:	4632      	mov	r2, r6
1001558e:	4638      	mov	r0, r7
10015590:	47e0      	blx	ip
10015592:	f1b0 0c00 	subs.w	ip, r0, #0
10015596:	eba5 050c 	sub.w	r5, r5, ip
1001559a:	4466      	add	r6, ip
1001559c:	dd06      	ble.n	100155ac <__sflush_r+0xdc>
1001559e:	2d00      	cmp	r5, #0
100155a0:	dcf0      	bgt.n	10015584 <__sflush_r+0xb4>
100155a2:	e7e1      	b.n	10015568 <__sflush_r+0x98>
100155a4:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
100155a6:	2900      	cmp	r1, #0
100155a8:	dc9f      	bgt.n	100154ea <__sflush_r+0x1a>
100155aa:	e7dd      	b.n	10015568 <__sflush_r+0x98>
100155ac:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100155b0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100155b4:	81a3      	strh	r3, [r4, #12]
100155b6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100155ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100155bc:	6d22      	ldr	r2, [r4, #80]	@ 0x50
100155be:	e7a8      	b.n	10015512 <__sflush_r+0x42>
100155c0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100155c4:	6922      	ldr	r2, [r4, #16]
100155c6:	6022      	str	r2, [r4, #0]
100155c8:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
100155cc:	81a2      	strh	r2, [r4, #12]
100155ce:	04db      	lsls	r3, r3, #19
100155d0:	f04f 0200 	mov.w	r2, #0
100155d4:	6062      	str	r2, [r4, #4]
100155d6:	d5bb      	bpl.n	10015550 <__sflush_r+0x80>
100155d8:	6520      	str	r0, [r4, #80]	@ 0x50
100155da:	e7b9      	b.n	10015550 <__sflush_r+0x80>
100155dc:	683b      	ldr	r3, [r7, #0]
100155de:	2b00      	cmp	r3, #0
100155e0:	d093      	beq.n	1001550a <__sflush_r+0x3a>
100155e2:	2b1d      	cmp	r3, #29
100155e4:	d001      	beq.n	100155ea <__sflush_r+0x11a>
100155e6:	2b16      	cmp	r3, #22
100155e8:	d1e0      	bne.n	100155ac <__sflush_r+0xdc>
100155ea:	603e      	str	r6, [r7, #0]
100155ec:	e7bc      	b.n	10015568 <__sflush_r+0x98>
100155ee:	2900      	cmp	r1, #0
100155f0:	d1ae      	bne.n	10015550 <__sflush_r+0x80>
100155f2:	e7f1      	b.n	100155d8 <__sflush_r+0x108>
100155f4:	dfbffffe 	.word	0xdfbffffe

100155f8 <_fflush_r>:
100155f8:	b538      	push	{r3, r4, r5, lr}
100155fa:	460c      	mov	r4, r1
100155fc:	4605      	mov	r5, r0
100155fe:	b108      	cbz	r0, 10015604 <_fflush_r+0xc>
10015600:	6b43      	ldr	r3, [r0, #52]	@ 0x34
10015602:	b303      	cbz	r3, 10015646 <_fflush_r+0x4e>
10015604:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
10015608:	b188      	cbz	r0, 1001562e <_fflush_r+0x36>
1001560a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1001560c:	07db      	lsls	r3, r3, #31
1001560e:	d401      	bmi.n	10015614 <_fflush_r+0x1c>
10015610:	0581      	lsls	r1, r0, #22
10015612:	d50f      	bpl.n	10015634 <_fflush_r+0x3c>
10015614:	4628      	mov	r0, r5
10015616:	4621      	mov	r1, r4
10015618:	f7ff ff5a 	bl	100154d0 <__sflush_r>
1001561c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1001561e:	07da      	lsls	r2, r3, #31
10015620:	4605      	mov	r5, r0
10015622:	d402      	bmi.n	1001562a <_fflush_r+0x32>
10015624:	89a3      	ldrh	r3, [r4, #12]
10015626:	059b      	lsls	r3, r3, #22
10015628:	d508      	bpl.n	1001563c <_fflush_r+0x44>
1001562a:	4628      	mov	r0, r5
1001562c:	bd38      	pop	{r3, r4, r5, pc}
1001562e:	4605      	mov	r5, r0
10015630:	4628      	mov	r0, r5
10015632:	bd38      	pop	{r3, r4, r5, pc}
10015634:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10015636:	f7ff fd25 	bl	10015084 <__retarget_lock_acquire_recursive>
1001563a:	e7eb      	b.n	10015614 <_fflush_r+0x1c>
1001563c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001563e:	f7ff fd23 	bl	10015088 <__retarget_lock_release_recursive>
10015642:	4628      	mov	r0, r5
10015644:	bd38      	pop	{r3, r4, r5, pc}
10015646:	f000 f95b 	bl	10015900 <__sinit>
1001564a:	e7db      	b.n	10015604 <_fflush_r+0xc>

1001564c <fflush>:
1001564c:	b350      	cbz	r0, 100156a4 <fflush+0x58>
1001564e:	b538      	push	{r3, r4, r5, lr}
10015650:	4b17      	ldr	r3, [pc, #92]	@ (100156b0 <fflush+0x64>)
10015652:	681d      	ldr	r5, [r3, #0]
10015654:	4604      	mov	r4, r0
10015656:	b10d      	cbz	r5, 1001565c <fflush+0x10>
10015658:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
1001565a:	b1bb      	cbz	r3, 1001568c <fflush+0x40>
1001565c:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
10015660:	b188      	cbz	r0, 10015686 <fflush+0x3a>
10015662:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10015664:	07db      	lsls	r3, r3, #31
10015666:	d401      	bmi.n	1001566c <fflush+0x20>
10015668:	0581      	lsls	r1, r0, #22
1001566a:	d513      	bpl.n	10015694 <fflush+0x48>
1001566c:	4628      	mov	r0, r5
1001566e:	4621      	mov	r1, r4
10015670:	f7ff ff2e 	bl	100154d0 <__sflush_r>
10015674:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10015676:	07da      	lsls	r2, r3, #31
10015678:	4605      	mov	r5, r0
1001567a:	d402      	bmi.n	10015682 <fflush+0x36>
1001567c:	89a3      	ldrh	r3, [r4, #12]
1001567e:	059b      	lsls	r3, r3, #22
10015680:	d50c      	bpl.n	1001569c <fflush+0x50>
10015682:	4628      	mov	r0, r5
10015684:	bd38      	pop	{r3, r4, r5, pc}
10015686:	4605      	mov	r5, r0
10015688:	4628      	mov	r0, r5
1001568a:	bd38      	pop	{r3, r4, r5, pc}
1001568c:	4628      	mov	r0, r5
1001568e:	f000 f937 	bl	10015900 <__sinit>
10015692:	e7e3      	b.n	1001565c <fflush+0x10>
10015694:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10015696:	f7ff fcf5 	bl	10015084 <__retarget_lock_acquire_recursive>
1001569a:	e7e7      	b.n	1001566c <fflush+0x20>
1001569c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001569e:	f7ff fcf3 	bl	10015088 <__retarget_lock_release_recursive>
100156a2:	e7ee      	b.n	10015682 <fflush+0x36>
100156a4:	4a03      	ldr	r2, [pc, #12]	@ (100156b4 <fflush+0x68>)
100156a6:	4904      	ldr	r1, [pc, #16]	@ (100156b8 <fflush+0x6c>)
100156a8:	4804      	ldr	r0, [pc, #16]	@ (100156bc <fflush+0x70>)
100156aa:	f002 bfa1 	b.w	100185f0 <_fwalk_sglue>
100156ae:	bf00      	nop
100156b0:	20000590 	.word	0x20000590
100156b4:	200006b8 	.word	0x200006b8
100156b8:	100155f9 	.word	0x100155f9
100156bc:	20000598 	.word	0x20000598

100156c0 <_fgets_r>:
100156c0:	2a01      	cmp	r2, #1
100156c2:	dd6b      	ble.n	1001579c <_fgets_r+0xdc>
100156c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
100156c8:	4616      	mov	r6, r2
100156ca:	4680      	mov	r8, r0
100156cc:	4689      	mov	r9, r1
100156ce:	461c      	mov	r4, r3
100156d0:	b110      	cbz	r0, 100156d8 <_fgets_r+0x18>
100156d2:	6b43      	ldr	r3, [r0, #52]	@ 0x34
100156d4:	2b00      	cmp	r3, #0
100156d6:	d057      	beq.n	10015788 <_fgets_r+0xc8>
100156d8:	6e63      	ldr	r3, [r4, #100]	@ 0x64
100156da:	07db      	lsls	r3, r3, #31
100156dc:	d53a      	bpl.n	10015754 <_fgets_r+0x94>
100156de:	3e01      	subs	r6, #1
100156e0:	464f      	mov	r7, r9
100156e2:	e00b      	b.n	100156fc <_fgets_r+0x3c>
100156e4:	e9d4 3c00 	ldrd	r3, ip, [r4]
100156e8:	ebac 0c05 	sub.w	ip, ip, r5
100156ec:	442b      	add	r3, r5
100156ee:	e9c4 3c00 	strd	r3, ip, [r4]
100156f2:	f000 f985 	bl	10015a00 <memcpy>
100156f6:	1b76      	subs	r6, r6, r5
100156f8:	442f      	add	r7, r5
100156fa:	d032      	beq.n	10015762 <_fgets_r+0xa2>
100156fc:	6863      	ldr	r3, [r4, #4]
100156fe:	4621      	mov	r1, r4
10015700:	4640      	mov	r0, r8
10015702:	b923      	cbnz	r3, 1001570e <_fgets_r+0x4e>
10015704:	f007 fffa 	bl	1001d6fc <__srefill_r>
10015708:	2800      	cmp	r0, #0
1001570a:	d136      	bne.n	1001577a <_fgets_r+0xba>
1001570c:	6863      	ldr	r3, [r4, #4]
1001570e:	f8d4 a000 	ldr.w	sl, [r4]
10015712:	42b3      	cmp	r3, r6
10015714:	bf28      	it	cs
10015716:	4633      	movcs	r3, r6
10015718:	461a      	mov	r2, r3
1001571a:	210a      	movs	r1, #10
1001571c:	4650      	mov	r0, sl
1001571e:	461d      	mov	r5, r3
10015720:	f000 f91e 	bl	10015960 <memchr>
10015724:	4603      	mov	r3, r0
10015726:	462a      	mov	r2, r5
10015728:	4638      	mov	r0, r7
1001572a:	4651      	mov	r1, sl
1001572c:	2b00      	cmp	r3, #0
1001572e:	d0d9      	beq.n	100156e4 <_fgets_r+0x24>
10015730:	3301      	adds	r3, #1
10015732:	eba3 050a 	sub.w	r5, r3, sl
10015736:	6023      	str	r3, [r4, #0]
10015738:	6863      	ldr	r3, [r4, #4]
1001573a:	1b5b      	subs	r3, r3, r5
1001573c:	6063      	str	r3, [r4, #4]
1001573e:	462a      	mov	r2, r5
10015740:	f000 f95e 	bl	10015a00 <memcpy>
10015744:	2300      	movs	r3, #0
10015746:	557b      	strb	r3, [r7, r5]
10015748:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1001574a:	07d9      	lsls	r1, r3, #31
1001574c:	d50e      	bpl.n	1001576c <_fgets_r+0xac>
1001574e:	4648      	mov	r0, r9
10015750:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
10015754:	89a3      	ldrh	r3, [r4, #12]
10015756:	059f      	lsls	r7, r3, #22
10015758:	d4c1      	bmi.n	100156de <_fgets_r+0x1e>
1001575a:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001575c:	f7ff fc92 	bl	10015084 <__retarget_lock_acquire_recursive>
10015760:	e7bd      	b.n	100156de <_fgets_r+0x1e>
10015762:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10015764:	2200      	movs	r2, #0
10015766:	703a      	strb	r2, [r7, #0]
10015768:	07da      	lsls	r2, r3, #31
1001576a:	d4f0      	bmi.n	1001574e <_fgets_r+0x8e>
1001576c:	89a3      	ldrh	r3, [r4, #12]
1001576e:	059b      	lsls	r3, r3, #22
10015770:	d4ed      	bmi.n	1001574e <_fgets_r+0x8e>
10015772:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10015774:	f7ff fc88 	bl	10015088 <__retarget_lock_release_recursive>
10015778:	e7e9      	b.n	1001574e <_fgets_r+0x8e>
1001577a:	454f      	cmp	r7, r9
1001577c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1001577e:	d1f1      	bne.n	10015764 <_fgets_r+0xa4>
10015780:	07dd      	lsls	r5, r3, #31
10015782:	d504      	bpl.n	1001578e <_fgets_r+0xce>
10015784:	2000      	movs	r0, #0
10015786:	e7e3      	b.n	10015750 <_fgets_r+0x90>
10015788:	f000 f8ba 	bl	10015900 <__sinit>
1001578c:	e7a4      	b.n	100156d8 <_fgets_r+0x18>
1001578e:	89a3      	ldrh	r3, [r4, #12]
10015790:	0598      	lsls	r0, r3, #22
10015792:	d4f7      	bmi.n	10015784 <_fgets_r+0xc4>
10015794:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10015796:	f7ff fc77 	bl	10015088 <__retarget_lock_release_recursive>
1001579a:	e7f3      	b.n	10015784 <_fgets_r+0xc4>
1001579c:	2000      	movs	r0, #0
1001579e:	4770      	bx	lr

100157a0 <fgets>:
100157a0:	b410      	push	{r4}
100157a2:	4c04      	ldr	r4, [pc, #16]	@ (100157b4 <fgets+0x14>)
100157a4:	4684      	mov	ip, r0
100157a6:	4613      	mov	r3, r2
100157a8:	6820      	ldr	r0, [r4, #0]
100157aa:	bc10      	pop	{r4}
100157ac:	460a      	mov	r2, r1
100157ae:	4661      	mov	r1, ip
100157b0:	f7ff bf86 	b.w	100156c0 <_fgets_r>
100157b4:	20000590 	.word	0x20000590

100157b8 <stdio_exit_handler>:
100157b8:	4a02      	ldr	r2, [pc, #8]	@ (100157c4 <stdio_exit_handler+0xc>)
100157ba:	4903      	ldr	r1, [pc, #12]	@ (100157c8 <stdio_exit_handler+0x10>)
100157bc:	4803      	ldr	r0, [pc, #12]	@ (100157cc <stdio_exit_handler+0x14>)
100157be:	f002 bf17 	b.w	100185f0 <_fwalk_sglue>
100157c2:	bf00      	nop
100157c4:	200006b8 	.word	0x200006b8
100157c8:	1001d485 	.word	0x1001d485
100157cc:	20000598 	.word	0x20000598

100157d0 <cleanup_stdio>:
100157d0:	4b0c      	ldr	r3, [pc, #48]	@ (10015804 <cleanup_stdio+0x34>)
100157d2:	6841      	ldr	r1, [r0, #4]
100157d4:	4299      	cmp	r1, r3
100157d6:	b510      	push	{r4, lr}
100157d8:	4604      	mov	r4, r0
100157da:	d001      	beq.n	100157e0 <cleanup_stdio+0x10>
100157dc:	f007 fe52 	bl	1001d484 <_fclose_r>
100157e0:	68a1      	ldr	r1, [r4, #8]
100157e2:	4b09      	ldr	r3, [pc, #36]	@ (10015808 <cleanup_stdio+0x38>)
100157e4:	4299      	cmp	r1, r3
100157e6:	d002      	beq.n	100157ee <cleanup_stdio+0x1e>
100157e8:	4620      	mov	r0, r4
100157ea:	f007 fe4b 	bl	1001d484 <_fclose_r>
100157ee:	68e1      	ldr	r1, [r4, #12]
100157f0:	4b06      	ldr	r3, [pc, #24]	@ (1001580c <cleanup_stdio+0x3c>)
100157f2:	4299      	cmp	r1, r3
100157f4:	d004      	beq.n	10015800 <cleanup_stdio+0x30>
100157f6:	4620      	mov	r0, r4
100157f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
100157fc:	f007 be42 	b.w	1001d484 <_fclose_r>
10015800:	bd10      	pop	{r4, pc}
10015802:	bf00      	nop
10015804:	2000149c 	.word	0x2000149c
10015808:	20001504 	.word	0x20001504
1001580c:	2000156c 	.word	0x2000156c

10015810 <global_stdio_init.part.0>:
10015810:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10015814:	4c31      	ldr	r4, [pc, #196]	@ (100158dc <global_stdio_init.part.0+0xcc>)
10015816:	4b32      	ldr	r3, [pc, #200]	@ (100158e0 <global_stdio_init.part.0+0xd0>)
10015818:	4832      	ldr	r0, [pc, #200]	@ (100158e4 <global_stdio_init.part.0+0xd4>)
1001581a:	f8df 90cc 	ldr.w	r9, [pc, #204]	@ 100158e8 <global_stdio_init.part.0+0xd8>
1001581e:	f8df 80cc 	ldr.w	r8, [pc, #204]	@ 100158ec <global_stdio_init.part.0+0xdc>
10015822:	4f33      	ldr	r7, [pc, #204]	@ (100158f0 <global_stdio_init.part.0+0xe0>)
10015824:	6018      	str	r0, [r3, #0]
10015826:	2500      	movs	r5, #0
10015828:	4629      	mov	r1, r5
1001582a:	2304      	movs	r3, #4
1001582c:	2208      	movs	r2, #8
1001582e:	f104 005c 	add.w	r0, r4, #92	@ 0x5c
10015832:	4e30      	ldr	r6, [pc, #192]	@ (100158f4 <global_stdio_init.part.0+0xe4>)
10015834:	60e3      	str	r3, [r4, #12]
10015836:	e9c4 5500 	strd	r5, r5, [r4]
1001583a:	e9c4 5504 	strd	r5, r5, [r4, #16]
1001583e:	60a5      	str	r5, [r4, #8]
10015840:	6665      	str	r5, [r4, #100]	@ 0x64
10015842:	61a5      	str	r5, [r4, #24]
10015844:	f7ff fb8c 	bl	10014f60 <memset>
10015848:	f104 0058 	add.w	r0, r4, #88	@ 0x58
1001584c:	e9c4 4907 	strd	r4, r9, [r4, #28]
10015850:	e9c4 8709 	strd	r8, r7, [r4, #36]	@ 0x24
10015854:	62e6      	str	r6, [r4, #44]	@ 0x2c
10015856:	f7ff fc11 	bl	1001507c <__retarget_lock_init_recursive>
1001585a:	4629      	mov	r1, r5
1001585c:	4b26      	ldr	r3, [pc, #152]	@ (100158f8 <global_stdio_init.part.0+0xe8>)
1001585e:	6763      	str	r3, [r4, #116]	@ 0x74
10015860:	2208      	movs	r2, #8
10015862:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
10015866:	e9c4 551a 	strd	r5, r5, [r4, #104]	@ 0x68
1001586a:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
1001586e:	6725      	str	r5, [r4, #112]	@ 0x70
10015870:	f8c4 50cc 	str.w	r5, [r4, #204]	@ 0xcc
10015874:	f8c4 5080 	str.w	r5, [r4, #128]	@ 0x80
10015878:	f7ff fb72 	bl	10014f60 <memset>
1001587c:	f104 0368 	add.w	r3, r4, #104	@ 0x68
10015880:	f104 00c0 	add.w	r0, r4, #192	@ 0xc0
10015884:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
10015888:	e9c4 9822 	strd	r9, r8, [r4, #136]	@ 0x88
1001588c:	e9c4 7624 	strd	r7, r6, [r4, #144]	@ 0x90
10015890:	f7ff fbf4 	bl	1001507c <__retarget_lock_init_recursive>
10015894:	4b19      	ldr	r3, [pc, #100]	@ (100158fc <global_stdio_init.part.0+0xec>)
10015896:	f8c4 30dc 	str.w	r3, [r4, #220]	@ 0xdc
1001589a:	4629      	mov	r1, r5
1001589c:	f504 7096 	add.w	r0, r4, #300	@ 0x12c
100158a0:	2208      	movs	r2, #8
100158a2:	e9c4 5534 	strd	r5, r5, [r4, #208]	@ 0xd0
100158a6:	e9c4 5538 	strd	r5, r5, [r4, #224]	@ 0xe0
100158aa:	f8c4 50d8 	str.w	r5, [r4, #216]	@ 0xd8
100158ae:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
100158b2:	f8c4 50e8 	str.w	r5, [r4, #232]	@ 0xe8
100158b6:	f7ff fb53 	bl	10014f60 <memset>
100158ba:	f104 03d0 	add.w	r3, r4, #208	@ 0xd0
100158be:	e9c4 873d 	strd	r8, r7, [r4, #244]	@ 0xf4
100158c2:	f8c4 90f0 	str.w	r9, [r4, #240]	@ 0xf0
100158c6:	f504 7094 	add.w	r0, r4, #296	@ 0x128
100158ca:	f8c4 60fc 	str.w	r6, [r4, #252]	@ 0xfc
100158ce:	f8c4 30ec 	str.w	r3, [r4, #236]	@ 0xec
100158d2:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
100158d6:	f7ff bbd1 	b.w	1001507c <__retarget_lock_init_recursive>
100158da:	bf00      	nop
100158dc:	2000149c 	.word	0x2000149c
100158e0:	200015d4 	.word	0x200015d4
100158e4:	100157b9 	.word	0x100157b9
100158e8:	10013015 	.word	0x10013015
100158ec:	1001303d 	.word	0x1001303d
100158f0:	1001307d 	.word	0x1001307d
100158f4:	100130a1 	.word	0x100130a1
100158f8:	00010009 	.word	0x00010009
100158fc:	00020012 	.word	0x00020012

10015900 <__sinit>:
10015900:	b510      	push	{r4, lr}
10015902:	4604      	mov	r4, r0
10015904:	480a      	ldr	r0, [pc, #40]	@ (10015930 <__sinit+0x30>)
10015906:	f7ff fbbd 	bl	10015084 <__retarget_lock_acquire_recursive>
1001590a:	6b63      	ldr	r3, [r4, #52]	@ 0x34
1001590c:	b923      	cbnz	r3, 10015918 <__sinit+0x18>
1001590e:	4b09      	ldr	r3, [pc, #36]	@ (10015934 <__sinit+0x34>)
10015910:	4a09      	ldr	r2, [pc, #36]	@ (10015938 <__sinit+0x38>)
10015912:	681b      	ldr	r3, [r3, #0]
10015914:	6362      	str	r2, [r4, #52]	@ 0x34
10015916:	b123      	cbz	r3, 10015922 <__sinit+0x22>
10015918:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1001591c:	4804      	ldr	r0, [pc, #16]	@ (10015930 <__sinit+0x30>)
1001591e:	f7ff bbb3 	b.w	10015088 <__retarget_lock_release_recursive>
10015922:	f7ff ff75 	bl	10015810 <global_stdio_init.part.0>
10015926:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1001592a:	4801      	ldr	r0, [pc, #4]	@ (10015930 <__sinit+0x30>)
1001592c:	f7ff bbac 	b.w	10015088 <__retarget_lock_release_recursive>
10015930:	20001494 	.word	0x20001494
10015934:	200015d4 	.word	0x200015d4
10015938:	100157d1 	.word	0x100157d1

1001593c <__sfp_lock_acquire>:
1001593c:	4801      	ldr	r0, [pc, #4]	@ (10015944 <__sfp_lock_acquire+0x8>)
1001593e:	f7ff bba1 	b.w	10015084 <__retarget_lock_acquire_recursive>
10015942:	bf00      	nop
10015944:	20001494 	.word	0x20001494

10015948 <__sfp_lock_release>:
10015948:	4801      	ldr	r0, [pc, #4]	@ (10015950 <__sfp_lock_release+0x8>)
1001594a:	f7ff bb9d 	b.w	10015088 <__retarget_lock_release_recursive>
1001594e:	bf00      	nop
10015950:	20001494 	.word	0x20001494
	...

10015960 <memchr>:
10015960:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
10015964:	2a10      	cmp	r2, #16
10015966:	db2b      	blt.n	100159c0 <memchr+0x60>
10015968:	f010 0f07 	tst.w	r0, #7
1001596c:	d008      	beq.n	10015980 <memchr+0x20>
1001596e:	f810 3b01 	ldrb.w	r3, [r0], #1
10015972:	3a01      	subs	r2, #1
10015974:	428b      	cmp	r3, r1
10015976:	d02d      	beq.n	100159d4 <memchr+0x74>
10015978:	f010 0f07 	tst.w	r0, #7
1001597c:	b342      	cbz	r2, 100159d0 <memchr+0x70>
1001597e:	d1f6      	bne.n	1001596e <memchr+0xe>
10015980:	b4f0      	push	{r4, r5, r6, r7}
10015982:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
10015986:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
1001598a:	f022 0407 	bic.w	r4, r2, #7
1001598e:	f07f 0700 	mvns.w	r7, #0
10015992:	2300      	movs	r3, #0
10015994:	e8f0 5602 	ldrd	r5, r6, [r0], #8
10015998:	3c08      	subs	r4, #8
1001599a:	ea85 0501 	eor.w	r5, r5, r1
1001599e:	ea86 0601 	eor.w	r6, r6, r1
100159a2:	fa85 f547 	uadd8	r5, r5, r7
100159a6:	faa3 f587 	sel	r5, r3, r7
100159aa:	fa86 f647 	uadd8	r6, r6, r7
100159ae:	faa5 f687 	sel	r6, r5, r7
100159b2:	b98e      	cbnz	r6, 100159d8 <memchr+0x78>
100159b4:	d1ee      	bne.n	10015994 <memchr+0x34>
100159b6:	bcf0      	pop	{r4, r5, r6, r7}
100159b8:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
100159bc:	f002 0207 	and.w	r2, r2, #7
100159c0:	b132      	cbz	r2, 100159d0 <memchr+0x70>
100159c2:	f810 3b01 	ldrb.w	r3, [r0], #1
100159c6:	3a01      	subs	r2, #1
100159c8:	ea83 0301 	eor.w	r3, r3, r1
100159cc:	b113      	cbz	r3, 100159d4 <memchr+0x74>
100159ce:	d1f8      	bne.n	100159c2 <memchr+0x62>
100159d0:	2000      	movs	r0, #0
100159d2:	4770      	bx	lr
100159d4:	3801      	subs	r0, #1
100159d6:	4770      	bx	lr
100159d8:	2d00      	cmp	r5, #0
100159da:	bf06      	itte	eq
100159dc:	4635      	moveq	r5, r6
100159de:	3803      	subeq	r0, #3
100159e0:	3807      	subne	r0, #7
100159e2:	f015 0f01 	tst.w	r5, #1
100159e6:	d107      	bne.n	100159f8 <memchr+0x98>
100159e8:	3001      	adds	r0, #1
100159ea:	f415 7f80 	tst.w	r5, #256	@ 0x100
100159ee:	bf02      	ittt	eq
100159f0:	3001      	addeq	r0, #1
100159f2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
100159f6:	3001      	addeq	r0, #1
100159f8:	bcf0      	pop	{r4, r5, r6, r7}
100159fa:	3801      	subs	r0, #1
100159fc:	4770      	bx	lr
100159fe:	bf00      	nop

10015a00 <memcpy>:
10015a00:	4684      	mov	ip, r0
10015a02:	ea41 0300 	orr.w	r3, r1, r0
10015a06:	f013 0303 	ands.w	r3, r3, #3
10015a0a:	d16d      	bne.n	10015ae8 <memcpy+0xe8>
10015a0c:	3a40      	subs	r2, #64	@ 0x40
10015a0e:	d341      	bcc.n	10015a94 <memcpy+0x94>
10015a10:	f851 3b04 	ldr.w	r3, [r1], #4
10015a14:	f840 3b04 	str.w	r3, [r0], #4
10015a18:	f851 3b04 	ldr.w	r3, [r1], #4
10015a1c:	f840 3b04 	str.w	r3, [r0], #4
10015a20:	f851 3b04 	ldr.w	r3, [r1], #4
10015a24:	f840 3b04 	str.w	r3, [r0], #4
10015a28:	f851 3b04 	ldr.w	r3, [r1], #4
10015a2c:	f840 3b04 	str.w	r3, [r0], #4
10015a30:	f851 3b04 	ldr.w	r3, [r1], #4
10015a34:	f840 3b04 	str.w	r3, [r0], #4
10015a38:	f851 3b04 	ldr.w	r3, [r1], #4
10015a3c:	f840 3b04 	str.w	r3, [r0], #4
10015a40:	f851 3b04 	ldr.w	r3, [r1], #4
10015a44:	f840 3b04 	str.w	r3, [r0], #4
10015a48:	f851 3b04 	ldr.w	r3, [r1], #4
10015a4c:	f840 3b04 	str.w	r3, [r0], #4
10015a50:	f851 3b04 	ldr.w	r3, [r1], #4
10015a54:	f840 3b04 	str.w	r3, [r0], #4
10015a58:	f851 3b04 	ldr.w	r3, [r1], #4
10015a5c:	f840 3b04 	str.w	r3, [r0], #4
10015a60:	f851 3b04 	ldr.w	r3, [r1], #4
10015a64:	f840 3b04 	str.w	r3, [r0], #4
10015a68:	f851 3b04 	ldr.w	r3, [r1], #4
10015a6c:	f840 3b04 	str.w	r3, [r0], #4
10015a70:	f851 3b04 	ldr.w	r3, [r1], #4
10015a74:	f840 3b04 	str.w	r3, [r0], #4
10015a78:	f851 3b04 	ldr.w	r3, [r1], #4
10015a7c:	f840 3b04 	str.w	r3, [r0], #4
10015a80:	f851 3b04 	ldr.w	r3, [r1], #4
10015a84:	f840 3b04 	str.w	r3, [r0], #4
10015a88:	f851 3b04 	ldr.w	r3, [r1], #4
10015a8c:	f840 3b04 	str.w	r3, [r0], #4
10015a90:	3a40      	subs	r2, #64	@ 0x40
10015a92:	d2bd      	bcs.n	10015a10 <memcpy+0x10>
10015a94:	3230      	adds	r2, #48	@ 0x30
10015a96:	d311      	bcc.n	10015abc <memcpy+0xbc>
10015a98:	f851 3b04 	ldr.w	r3, [r1], #4
10015a9c:	f840 3b04 	str.w	r3, [r0], #4
10015aa0:	f851 3b04 	ldr.w	r3, [r1], #4
10015aa4:	f840 3b04 	str.w	r3, [r0], #4
10015aa8:	f851 3b04 	ldr.w	r3, [r1], #4
10015aac:	f840 3b04 	str.w	r3, [r0], #4
10015ab0:	f851 3b04 	ldr.w	r3, [r1], #4
10015ab4:	f840 3b04 	str.w	r3, [r0], #4
10015ab8:	3a10      	subs	r2, #16
10015aba:	d2ed      	bcs.n	10015a98 <memcpy+0x98>
10015abc:	320c      	adds	r2, #12
10015abe:	d305      	bcc.n	10015acc <memcpy+0xcc>
10015ac0:	f851 3b04 	ldr.w	r3, [r1], #4
10015ac4:	f840 3b04 	str.w	r3, [r0], #4
10015ac8:	3a04      	subs	r2, #4
10015aca:	d2f9      	bcs.n	10015ac0 <memcpy+0xc0>
10015acc:	3204      	adds	r2, #4
10015ace:	d008      	beq.n	10015ae2 <memcpy+0xe2>
10015ad0:	07d2      	lsls	r2, r2, #31
10015ad2:	bf1c      	itt	ne
10015ad4:	f811 3b01 	ldrbne.w	r3, [r1], #1
10015ad8:	f800 3b01 	strbne.w	r3, [r0], #1
10015adc:	d301      	bcc.n	10015ae2 <memcpy+0xe2>
10015ade:	880b      	ldrh	r3, [r1, #0]
10015ae0:	8003      	strh	r3, [r0, #0]
10015ae2:	4660      	mov	r0, ip
10015ae4:	4770      	bx	lr
10015ae6:	bf00      	nop
10015ae8:	2a08      	cmp	r2, #8
10015aea:	d313      	bcc.n	10015b14 <memcpy+0x114>
10015aec:	078b      	lsls	r3, r1, #30
10015aee:	d08d      	beq.n	10015a0c <memcpy+0xc>
10015af0:	f010 0303 	ands.w	r3, r0, #3
10015af4:	d08a      	beq.n	10015a0c <memcpy+0xc>
10015af6:	f1c3 0304 	rsb	r3, r3, #4
10015afa:	1ad2      	subs	r2, r2, r3
10015afc:	07db      	lsls	r3, r3, #31
10015afe:	bf1c      	itt	ne
10015b00:	f811 3b01 	ldrbne.w	r3, [r1], #1
10015b04:	f800 3b01 	strbne.w	r3, [r0], #1
10015b08:	d380      	bcc.n	10015a0c <memcpy+0xc>
10015b0a:	f831 3b02 	ldrh.w	r3, [r1], #2
10015b0e:	f820 3b02 	strh.w	r3, [r0], #2
10015b12:	e77b      	b.n	10015a0c <memcpy+0xc>
10015b14:	3a04      	subs	r2, #4
10015b16:	d3d9      	bcc.n	10015acc <memcpy+0xcc>
10015b18:	3a01      	subs	r2, #1
10015b1a:	f811 3b01 	ldrb.w	r3, [r1], #1
10015b1e:	f800 3b01 	strb.w	r3, [r0], #1
10015b22:	d2f9      	bcs.n	10015b18 <memcpy+0x118>
10015b24:	780b      	ldrb	r3, [r1, #0]
10015b26:	7003      	strb	r3, [r0, #0]
10015b28:	784b      	ldrb	r3, [r1, #1]
10015b2a:	7043      	strb	r3, [r0, #1]
10015b2c:	788b      	ldrb	r3, [r1, #2]
10015b2e:	7083      	strb	r3, [r0, #2]
10015b30:	4660      	mov	r0, ip
10015b32:	4770      	bx	lr
	...

10015b40 <strlen>:
10015b40:	b430      	push	{r4, r5}
10015b42:	f890 f000 	pld	[r0]
10015b46:	f020 0107 	bic.w	r1, r0, #7
10015b4a:	f06f 0c00 	mvn.w	ip, #0
10015b4e:	f010 0407 	ands.w	r4, r0, #7
10015b52:	f891 f020 	pld	[r1, #32]
10015b56:	f040 8048 	bne.w	10015bea <strlen+0xaa>
10015b5a:	f04f 0400 	mov.w	r4, #0
10015b5e:	f06f 0007 	mvn.w	r0, #7
10015b62:	e9d1 2300 	ldrd	r2, r3, [r1]
10015b66:	f891 f040 	pld	[r1, #64]	@ 0x40
10015b6a:	f100 0008 	add.w	r0, r0, #8
10015b6e:	fa82 f24c 	uadd8	r2, r2, ip
10015b72:	faa4 f28c 	sel	r2, r4, ip
10015b76:	fa83 f34c 	uadd8	r3, r3, ip
10015b7a:	faa2 f38c 	sel	r3, r2, ip
10015b7e:	bb4b      	cbnz	r3, 10015bd4 <strlen+0x94>
10015b80:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
10015b84:	fa82 f24c 	uadd8	r2, r2, ip
10015b88:	f100 0008 	add.w	r0, r0, #8
10015b8c:	faa4 f28c 	sel	r2, r4, ip
10015b90:	fa83 f34c 	uadd8	r3, r3, ip
10015b94:	faa2 f38c 	sel	r3, r2, ip
10015b98:	b9e3      	cbnz	r3, 10015bd4 <strlen+0x94>
10015b9a:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
10015b9e:	fa82 f24c 	uadd8	r2, r2, ip
10015ba2:	f100 0008 	add.w	r0, r0, #8
10015ba6:	faa4 f28c 	sel	r2, r4, ip
10015baa:	fa83 f34c 	uadd8	r3, r3, ip
10015bae:	faa2 f38c 	sel	r3, r2, ip
10015bb2:	b97b      	cbnz	r3, 10015bd4 <strlen+0x94>
10015bb4:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
10015bb8:	f101 0120 	add.w	r1, r1, #32
10015bbc:	fa82 f24c 	uadd8	r2, r2, ip
10015bc0:	f100 0008 	add.w	r0, r0, #8
10015bc4:	faa4 f28c 	sel	r2, r4, ip
10015bc8:	fa83 f34c 	uadd8	r3, r3, ip
10015bcc:	faa2 f38c 	sel	r3, r2, ip
10015bd0:	2b00      	cmp	r3, #0
10015bd2:	d0c6      	beq.n	10015b62 <strlen+0x22>
10015bd4:	2a00      	cmp	r2, #0
10015bd6:	bf04      	itt	eq
10015bd8:	3004      	addeq	r0, #4
10015bda:	461a      	moveq	r2, r3
10015bdc:	ba12      	rev	r2, r2
10015bde:	fab2 f282 	clz	r2, r2
10015be2:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
10015be6:	bc30      	pop	{r4, r5}
10015be8:	4770      	bx	lr
10015bea:	e9d1 2300 	ldrd	r2, r3, [r1]
10015bee:	f004 0503 	and.w	r5, r4, #3
10015bf2:	f1c4 0000 	rsb	r0, r4, #0
10015bf6:	ea4f 05c5 	mov.w	r5, r5, lsl #3
10015bfa:	f014 0f04 	tst.w	r4, #4
10015bfe:	f891 f040 	pld	[r1, #64]	@ 0x40
10015c02:	fa0c f505 	lsl.w	r5, ip, r5
10015c06:	ea62 0205 	orn	r2, r2, r5
10015c0a:	bf1c      	itt	ne
10015c0c:	ea63 0305 	ornne	r3, r3, r5
10015c10:	4662      	movne	r2, ip
10015c12:	f04f 0400 	mov.w	r4, #0
10015c16:	e7aa      	b.n	10015b6e <strlen+0x2e>

10015c18 <__sccl>:
10015c18:	b570      	push	{r4, r5, r6, lr}
10015c1a:	780c      	ldrb	r4, [r1, #0]
10015c1c:	2c5e      	cmp	r4, #94	@ 0x5e
10015c1e:	4686      	mov	lr, r0
10015c20:	d026      	beq.n	10015c70 <__sccl+0x58>
10015c22:	2300      	movs	r3, #0
10015c24:	1c48      	adds	r0, r1, #1
10015c26:	469c      	mov	ip, r3
10015c28:	2200      	movs	r2, #0
10015c2a:	f363 0207 	bfi	r2, r3, #0, #8
10015c2e:	f363 220f 	bfi	r2, r3, #8, #8
10015c32:	f363 4217 	bfi	r2, r3, #16, #8
10015c36:	f363 621f 	bfi	r2, r3, #24, #8
10015c3a:	f50e 7180 	add.w	r1, lr, #256	@ 0x100
10015c3e:	4673      	mov	r3, lr
10015c40:	f843 2b04 	str.w	r2, [r3], #4
10015c44:	428b      	cmp	r3, r1
10015c46:	d1fb      	bne.n	10015c40 <__sccl+0x28>
10015c48:	b184      	cbz	r4, 10015c6c <__sccl+0x54>
10015c4a:	f08c 0101 	eor.w	r1, ip, #1
10015c4e:	f80e 1004 	strb.w	r1, [lr, r4]
10015c52:	1c45      	adds	r5, r0, #1
10015c54:	f815 3c01 	ldrb.w	r3, [r5, #-1]
10015c58:	2b2d      	cmp	r3, #45	@ 0x2d
10015c5a:	d00e      	beq.n	10015c7a <__sccl+0x62>
10015c5c:	2b5d      	cmp	r3, #93	@ 0x5d
10015c5e:	d003      	beq.n	10015c68 <__sccl+0x50>
10015c60:	b11b      	cbz	r3, 10015c6a <__sccl+0x52>
10015c62:	461c      	mov	r4, r3
10015c64:	4628      	mov	r0, r5
10015c66:	e7f2      	b.n	10015c4e <__sccl+0x36>
10015c68:	4628      	mov	r0, r5
10015c6a:	bd70      	pop	{r4, r5, r6, pc}
10015c6c:	3801      	subs	r0, #1
10015c6e:	bd70      	pop	{r4, r5, r6, pc}
10015c70:	2301      	movs	r3, #1
10015c72:	784c      	ldrb	r4, [r1, #1]
10015c74:	1c88      	adds	r0, r1, #2
10015c76:	469c      	mov	ip, r3
10015c78:	e7d6      	b.n	10015c28 <__sccl+0x10>
10015c7a:	f890 c001 	ldrb.w	ip, [r0, #1]
10015c7e:	f1bc 0f5d 	cmp.w	ip, #93	@ 0x5d
10015c82:	d0ee      	beq.n	10015c62 <__sccl+0x4a>
10015c84:	4564      	cmp	r4, ip
10015c86:	dcec      	bgt.n	10015c62 <__sccl+0x4a>
10015c88:	1c66      	adds	r6, r4, #1
10015c8a:	3002      	adds	r0, #2
10015c8c:	eb0e 0206 	add.w	r2, lr, r6
10015c90:	f802 1b01 	strb.w	r1, [r2], #1
10015c94:	eba2 030e 	sub.w	r3, r2, lr
10015c98:	3b01      	subs	r3, #1
10015c9a:	459c      	cmp	ip, r3
10015c9c:	dcf8      	bgt.n	10015c90 <__sccl+0x78>
10015c9e:	ebac 0304 	sub.w	r3, ip, r4
10015ca2:	3b01      	subs	r3, #1
10015ca4:	4564      	cmp	r4, ip
10015ca6:	bfa8      	it	ge
10015ca8:	2300      	movge	r3, #0
10015caa:	3502      	adds	r5, #2
10015cac:	18f4      	adds	r4, r6, r3
10015cae:	e7d1      	b.n	10015c54 <__sccl+0x3c>

10015cb0 <nanf>:
10015cb0:	4800      	ldr	r0, [pc, #0]	@ (10015cb4 <nanf+0x4>)
10015cb2:	4770      	bx	lr
10015cb4:	7fc00000 	.word	0x7fc00000

10015cb8 <_realloc_r>:
10015cb8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
10015cbc:	4616      	mov	r6, r2
10015cbe:	2900      	cmp	r1, #0
10015cc0:	f000 8096 	beq.w	10015df0 <_realloc_r+0x138>
10015cc4:	460c      	mov	r4, r1
10015cc6:	4680      	mov	r8, r0
10015cc8:	f106 050b 	add.w	r5, r6, #11
10015ccc:	f7ff fbd0 	bl	10015470 <__malloc_lock>
10015cd0:	f854 1c04 	ldr.w	r1, [r4, #-4]
10015cd4:	2d16      	cmp	r5, #22
10015cd6:	f1a4 0908 	sub.w	r9, r4, #8
10015cda:	f021 0703 	bic.w	r7, r1, #3
10015cde:	d858      	bhi.n	10015d92 <_realloc_r+0xda>
10015ce0:	2510      	movs	r5, #16
10015ce2:	42ae      	cmp	r6, r5
10015ce4:	d858      	bhi.n	10015d98 <_realloc_r+0xe0>
10015ce6:	42af      	cmp	r7, r5
10015ce8:	da60      	bge.n	10015dac <_realloc_r+0xf4>
10015cea:	4bbe      	ldr	r3, [pc, #760]	@ (10015fe4 <_realloc_r+0x32c>)
10015cec:	689a      	ldr	r2, [r3, #8]
10015cee:	eb09 0c07 	add.w	ip, r9, r7
10015cf2:	4562      	cmp	r2, ip
10015cf4:	f8dc 0004 	ldr.w	r0, [ip, #4]
10015cf8:	f000 8090 	beq.w	10015e1c <_realloc_r+0x164>
10015cfc:	f020 0301 	bic.w	r3, r0, #1
10015d00:	4463      	add	r3, ip
10015d02:	685b      	ldr	r3, [r3, #4]
10015d04:	07da      	lsls	r2, r3, #31
10015d06:	d468      	bmi.n	10015dda <_realloc_r+0x122>
10015d08:	f020 0003 	bic.w	r0, r0, #3
10015d0c:	183b      	adds	r3, r7, r0
10015d0e:	429d      	cmp	r5, r3
10015d10:	dd47      	ble.n	10015da2 <_realloc_r+0xea>
10015d12:	07cb      	lsls	r3, r1, #31
10015d14:	d412      	bmi.n	10015d3c <_realloc_r+0x84>
10015d16:	f854 3c08 	ldr.w	r3, [r4, #-8]
10015d1a:	eba9 0b03 	sub.w	fp, r9, r3
10015d1e:	f8db 3004 	ldr.w	r3, [fp, #4]
10015d22:	f023 0203 	bic.w	r2, r3, #3
10015d26:	4410      	add	r0, r2
10015d28:	eb00 0a07 	add.w	sl, r0, r7
10015d2c:	4555      	cmp	r5, sl
10015d2e:	f340 80f6 	ble.w	10015f1e <_realloc_r+0x266>
10015d32:	eb07 0a02 	add.w	sl, r7, r2
10015d36:	4555      	cmp	r5, sl
10015d38:	f340 80cc 	ble.w	10015ed4 <_realloc_r+0x21c>
10015d3c:	4631      	mov	r1, r6
10015d3e:	4640      	mov	r0, r8
10015d40:	f7fe fe20 	bl	10014984 <_malloc_r>
10015d44:	4606      	mov	r6, r0
10015d46:	2800      	cmp	r0, #0
10015d48:	f000 8120 	beq.w	10015f8c <_realloc_r+0x2d4>
10015d4c:	f854 3c04 	ldr.w	r3, [r4, #-4]
10015d50:	f023 0301 	bic.w	r3, r3, #1
10015d54:	444b      	add	r3, r9
10015d56:	f1a0 0208 	sub.w	r2, r0, #8
10015d5a:	4293      	cmp	r3, r2
10015d5c:	f000 80b4 	beq.w	10015ec8 <_realloc_r+0x210>
10015d60:	1f3a      	subs	r2, r7, #4
10015d62:	2a24      	cmp	r2, #36	@ 0x24
10015d64:	f200 80d7 	bhi.w	10015f16 <_realloc_r+0x25e>
10015d68:	2a13      	cmp	r2, #19
10015d6a:	f200 80a2 	bhi.w	10015eb2 <_realloc_r+0x1fa>
10015d6e:	4603      	mov	r3, r0
10015d70:	4622      	mov	r2, r4
10015d72:	6811      	ldr	r1, [r2, #0]
10015d74:	6019      	str	r1, [r3, #0]
10015d76:	6851      	ldr	r1, [r2, #4]
10015d78:	6059      	str	r1, [r3, #4]
10015d7a:	6892      	ldr	r2, [r2, #8]
10015d7c:	609a      	str	r2, [r3, #8]
10015d7e:	4621      	mov	r1, r4
10015d80:	4640      	mov	r0, r8
10015d82:	f001 f981 	bl	10017088 <_free_r>
10015d86:	4640      	mov	r0, r8
10015d88:	f7ff fb78 	bl	1001547c <__malloc_unlock>
10015d8c:	4630      	mov	r0, r6
10015d8e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
10015d92:	f035 0507 	bics.w	r5, r5, #7
10015d96:	d5a4      	bpl.n	10015ce2 <_realloc_r+0x2a>
10015d98:	230c      	movs	r3, #12
10015d9a:	f8c8 3000 	str.w	r3, [r8]
10015d9e:	2600      	movs	r6, #0
10015da0:	e018      	b.n	10015dd4 <_realloc_r+0x11c>
10015da2:	461f      	mov	r7, r3
10015da4:	e9dc 2302 	ldrd	r2, r3, [ip, #8]
10015da8:	60d3      	str	r3, [r2, #12]
10015daa:	609a      	str	r2, [r3, #8]
10015dac:	f8d9 3004 	ldr.w	r3, [r9, #4]
10015db0:	1b7a      	subs	r2, r7, r5
10015db2:	2a0f      	cmp	r2, #15
10015db4:	f003 0301 	and.w	r3, r3, #1
10015db8:	eb09 0007 	add.w	r0, r9, r7
10015dbc:	d81d      	bhi.n	10015dfa <_realloc_r+0x142>
10015dbe:	433b      	orrs	r3, r7
10015dc0:	f8c9 3004 	str.w	r3, [r9, #4]
10015dc4:	6843      	ldr	r3, [r0, #4]
10015dc6:	f043 0301 	orr.w	r3, r3, #1
10015dca:	6043      	str	r3, [r0, #4]
10015dcc:	4640      	mov	r0, r8
10015dce:	f7ff fb55 	bl	1001547c <__malloc_unlock>
10015dd2:	4626      	mov	r6, r4
10015dd4:	4630      	mov	r0, r6
10015dd6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
10015dda:	07c9      	lsls	r1, r1, #31
10015ddc:	d4ae      	bmi.n	10015d3c <_realloc_r+0x84>
10015dde:	f854 3c08 	ldr.w	r3, [r4, #-8]
10015de2:	eba9 0b03 	sub.w	fp, r9, r3
10015de6:	f8db 3004 	ldr.w	r3, [fp, #4]
10015dea:	f023 0203 	bic.w	r2, r3, #3
10015dee:	e7a0      	b.n	10015d32 <_realloc_r+0x7a>
10015df0:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
10015df4:	4611      	mov	r1, r2
10015df6:	f7fe bdc5 	b.w	10014984 <_malloc_r>
10015dfa:	eb09 0105 	add.w	r1, r9, r5
10015dfe:	432b      	orrs	r3, r5
10015e00:	f042 0201 	orr.w	r2, r2, #1
10015e04:	f8c9 3004 	str.w	r3, [r9, #4]
10015e08:	604a      	str	r2, [r1, #4]
10015e0a:	6843      	ldr	r3, [r0, #4]
10015e0c:	f043 0301 	orr.w	r3, r3, #1
10015e10:	6043      	str	r3, [r0, #4]
10015e12:	3108      	adds	r1, #8
10015e14:	4640      	mov	r0, r8
10015e16:	f001 f937 	bl	10017088 <_free_r>
10015e1a:	e7d7      	b.n	10015dcc <_realloc_r+0x114>
10015e1c:	f020 0003 	bic.w	r0, r0, #3
10015e20:	19c2      	adds	r2, r0, r7
10015e22:	f105 0c10 	add.w	ip, r5, #16
10015e26:	4562      	cmp	r2, ip
10015e28:	f280 8091 	bge.w	10015f4e <_realloc_r+0x296>
10015e2c:	07ca      	lsls	r2, r1, #31
10015e2e:	d485      	bmi.n	10015d3c <_realloc_r+0x84>
10015e30:	f854 2c08 	ldr.w	r2, [r4, #-8]
10015e34:	eba9 0b02 	sub.w	fp, r9, r2
10015e38:	f8db 2004 	ldr.w	r2, [fp, #4]
10015e3c:	f022 0203 	bic.w	r2, r2, #3
10015e40:	4410      	add	r0, r2
10015e42:	eb00 0a07 	add.w	sl, r0, r7
10015e46:	45d4      	cmp	ip, sl
10015e48:	f73f af73 	bgt.w	10015d32 <_realloc_r+0x7a>
10015e4c:	465e      	mov	r6, fp
10015e4e:	f8db 100c 	ldr.w	r1, [fp, #12]
10015e52:	f856 0f08 	ldr.w	r0, [r6, #8]!
10015e56:	1f3a      	subs	r2, r7, #4
10015e58:	2a24      	cmp	r2, #36	@ 0x24
10015e5a:	60c1      	str	r1, [r0, #12]
10015e5c:	6088      	str	r0, [r1, #8]
10015e5e:	f200 80ae 	bhi.w	10015fbe <_realloc_r+0x306>
10015e62:	2a13      	cmp	r2, #19
10015e64:	f240 80a9 	bls.w	10015fba <_realloc_r+0x302>
10015e68:	6821      	ldr	r1, [r4, #0]
10015e6a:	f8cb 1008 	str.w	r1, [fp, #8]
10015e6e:	6861      	ldr	r1, [r4, #4]
10015e70:	f8cb 100c 	str.w	r1, [fp, #12]
10015e74:	2a1b      	cmp	r2, #27
10015e76:	f200 80a8 	bhi.w	10015fca <_realloc_r+0x312>
10015e7a:	3408      	adds	r4, #8
10015e7c:	f10b 0210 	add.w	r2, fp, #16
10015e80:	6821      	ldr	r1, [r4, #0]
10015e82:	6011      	str	r1, [r2, #0]
10015e84:	6861      	ldr	r1, [r4, #4]
10015e86:	6051      	str	r1, [r2, #4]
10015e88:	68a1      	ldr	r1, [r4, #8]
10015e8a:	6091      	str	r1, [r2, #8]
10015e8c:	eb0b 0105 	add.w	r1, fp, r5
10015e90:	ebaa 0205 	sub.w	r2, sl, r5
10015e94:	f042 0201 	orr.w	r2, r2, #1
10015e98:	6099      	str	r1, [r3, #8]
10015e9a:	604a      	str	r2, [r1, #4]
10015e9c:	f8db 3004 	ldr.w	r3, [fp, #4]
10015ea0:	f003 0301 	and.w	r3, r3, #1
10015ea4:	432b      	orrs	r3, r5
10015ea6:	4640      	mov	r0, r8
10015ea8:	f8cb 3004 	str.w	r3, [fp, #4]
10015eac:	f7ff fae6 	bl	1001547c <__malloc_unlock>
10015eb0:	e790      	b.n	10015dd4 <_realloc_r+0x11c>
10015eb2:	6823      	ldr	r3, [r4, #0]
10015eb4:	6003      	str	r3, [r0, #0]
10015eb6:	6863      	ldr	r3, [r4, #4]
10015eb8:	6043      	str	r3, [r0, #4]
10015eba:	2a1b      	cmp	r2, #27
10015ebc:	d83c      	bhi.n	10015f38 <_realloc_r+0x280>
10015ebe:	f104 0208 	add.w	r2, r4, #8
10015ec2:	f100 0308 	add.w	r3, r0, #8
10015ec6:	e754      	b.n	10015d72 <_realloc_r+0xba>
10015ec8:	f850 3c04 	ldr.w	r3, [r0, #-4]
10015ecc:	f023 0303 	bic.w	r3, r3, #3
10015ed0:	441f      	add	r7, r3
10015ed2:	e76b      	b.n	10015dac <_realloc_r+0xf4>
10015ed4:	1f3a      	subs	r2, r7, #4
10015ed6:	465e      	mov	r6, fp
10015ed8:	f8db 300c 	ldr.w	r3, [fp, #12]
10015edc:	f856 1f08 	ldr.w	r1, [r6, #8]!
10015ee0:	2a24      	cmp	r2, #36	@ 0x24
10015ee2:	60cb      	str	r3, [r1, #12]
10015ee4:	6099      	str	r1, [r3, #8]
10015ee6:	d822      	bhi.n	10015f2e <_realloc_r+0x276>
10015ee8:	2a13      	cmp	r2, #19
10015eea:	d91e      	bls.n	10015f2a <_realloc_r+0x272>
10015eec:	6823      	ldr	r3, [r4, #0]
10015eee:	f8cb 3008 	str.w	r3, [fp, #8]
10015ef2:	6863      	ldr	r3, [r4, #4]
10015ef4:	f8cb 300c 	str.w	r3, [fp, #12]
10015ef8:	2a1b      	cmp	r2, #27
10015efa:	d83b      	bhi.n	10015f74 <_realloc_r+0x2bc>
10015efc:	3408      	adds	r4, #8
10015efe:	f10b 0310 	add.w	r3, fp, #16
10015f02:	6822      	ldr	r2, [r4, #0]
10015f04:	601a      	str	r2, [r3, #0]
10015f06:	6862      	ldr	r2, [r4, #4]
10015f08:	605a      	str	r2, [r3, #4]
10015f0a:	68a2      	ldr	r2, [r4, #8]
10015f0c:	609a      	str	r2, [r3, #8]
10015f0e:	4634      	mov	r4, r6
10015f10:	4657      	mov	r7, sl
10015f12:	46d9      	mov	r9, fp
10015f14:	e74a      	b.n	10015dac <_realloc_r+0xf4>
10015f16:	4621      	mov	r1, r4
10015f18:	f007 f9ee 	bl	1001d2f8 <memmove>
10015f1c:	e72f      	b.n	10015d7e <_realloc_r+0xc6>
10015f1e:	e9dc 1302 	ldrd	r1, r3, [ip, #8]
10015f22:	1f3a      	subs	r2, r7, #4
10015f24:	60cb      	str	r3, [r1, #12]
10015f26:	6099      	str	r1, [r3, #8]
10015f28:	e7d5      	b.n	10015ed6 <_realloc_r+0x21e>
10015f2a:	4633      	mov	r3, r6
10015f2c:	e7e9      	b.n	10015f02 <_realloc_r+0x24a>
10015f2e:	4621      	mov	r1, r4
10015f30:	4630      	mov	r0, r6
10015f32:	f007 f9e1 	bl	1001d2f8 <memmove>
10015f36:	e7ea      	b.n	10015f0e <_realloc_r+0x256>
10015f38:	68a3      	ldr	r3, [r4, #8]
10015f3a:	6083      	str	r3, [r0, #8]
10015f3c:	68e3      	ldr	r3, [r4, #12]
10015f3e:	60c3      	str	r3, [r0, #12]
10015f40:	2a24      	cmp	r2, #36	@ 0x24
10015f42:	d027      	beq.n	10015f94 <_realloc_r+0x2dc>
10015f44:	f104 0210 	add.w	r2, r4, #16
10015f48:	f100 0310 	add.w	r3, r0, #16
10015f4c:	e711      	b.n	10015d72 <_realloc_r+0xba>
10015f4e:	eb09 0105 	add.w	r1, r9, r5
10015f52:	6099      	str	r1, [r3, #8]
10015f54:	1b53      	subs	r3, r2, r5
10015f56:	f043 0301 	orr.w	r3, r3, #1
10015f5a:	604b      	str	r3, [r1, #4]
10015f5c:	f854 3c04 	ldr.w	r3, [r4, #-4]
10015f60:	f003 0301 	and.w	r3, r3, #1
10015f64:	432b      	orrs	r3, r5
10015f66:	4640      	mov	r0, r8
10015f68:	f844 3c04 	str.w	r3, [r4, #-4]
10015f6c:	f7ff fa86 	bl	1001547c <__malloc_unlock>
10015f70:	4626      	mov	r6, r4
10015f72:	e72f      	b.n	10015dd4 <_realloc_r+0x11c>
10015f74:	68a3      	ldr	r3, [r4, #8]
10015f76:	f8cb 3010 	str.w	r3, [fp, #16]
10015f7a:	68e3      	ldr	r3, [r4, #12]
10015f7c:	f8cb 3014 	str.w	r3, [fp, #20]
10015f80:	2a24      	cmp	r2, #36	@ 0x24
10015f82:	d010      	beq.n	10015fa6 <_realloc_r+0x2ee>
10015f84:	3410      	adds	r4, #16
10015f86:	f10b 0318 	add.w	r3, fp, #24
10015f8a:	e7ba      	b.n	10015f02 <_realloc_r+0x24a>
10015f8c:	4640      	mov	r0, r8
10015f8e:	f7ff fa75 	bl	1001547c <__malloc_unlock>
10015f92:	e704      	b.n	10015d9e <_realloc_r+0xe6>
10015f94:	6923      	ldr	r3, [r4, #16]
10015f96:	6103      	str	r3, [r0, #16]
10015f98:	6961      	ldr	r1, [r4, #20]
10015f9a:	6141      	str	r1, [r0, #20]
10015f9c:	f104 0218 	add.w	r2, r4, #24
10015fa0:	f100 0318 	add.w	r3, r0, #24
10015fa4:	e6e5      	b.n	10015d72 <_realloc_r+0xba>
10015fa6:	6923      	ldr	r3, [r4, #16]
10015fa8:	f8cb 3018 	str.w	r3, [fp, #24]
10015fac:	6963      	ldr	r3, [r4, #20]
10015fae:	f8cb 301c 	str.w	r3, [fp, #28]
10015fb2:	3418      	adds	r4, #24
10015fb4:	f10b 0320 	add.w	r3, fp, #32
10015fb8:	e7a3      	b.n	10015f02 <_realloc_r+0x24a>
10015fba:	4632      	mov	r2, r6
10015fbc:	e760      	b.n	10015e80 <_realloc_r+0x1c8>
10015fbe:	4621      	mov	r1, r4
10015fc0:	4630      	mov	r0, r6
10015fc2:	f007 f999 	bl	1001d2f8 <memmove>
10015fc6:	4b07      	ldr	r3, [pc, #28]	@ (10015fe4 <_realloc_r+0x32c>)
10015fc8:	e760      	b.n	10015e8c <_realloc_r+0x1d4>
10015fca:	68a1      	ldr	r1, [r4, #8]
10015fcc:	f8cb 1010 	str.w	r1, [fp, #16]
10015fd0:	68e1      	ldr	r1, [r4, #12]
10015fd2:	f8cb 1014 	str.w	r1, [fp, #20]
10015fd6:	2a24      	cmp	r2, #36	@ 0x24
10015fd8:	d006      	beq.n	10015fe8 <_realloc_r+0x330>
10015fda:	3410      	adds	r4, #16
10015fdc:	f10b 0218 	add.w	r2, fp, #24
10015fe0:	e74e      	b.n	10015e80 <_realloc_r+0x1c8>
10015fe2:	bf00      	nop
10015fe4:	20000018 	.word	0x20000018
10015fe8:	6922      	ldr	r2, [r4, #16]
10015fea:	f8cb 2018 	str.w	r2, [fp, #24]
10015fee:	6962      	ldr	r2, [r4, #20]
10015ff0:	f8cb 201c 	str.w	r2, [fp, #28]
10015ff4:	3418      	adds	r4, #24
10015ff6:	f10b 0220 	add.w	r2, fp, #32
10015ffa:	e741      	b.n	10015e80 <_realloc_r+0x1c8>
10015ffc:	0000      	movs	r0, r0
	...

10016000 <_strtod_l>:
10016000:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10016004:	b09f      	sub	sp, #124	@ 0x7c
10016006:	460e      	mov	r6, r1
10016008:	2100      	movs	r1, #0
1001600a:	9207      	str	r2, [sp, #28]
1001600c:	911a      	str	r1, [sp, #104]	@ 0x68
1001600e:	2200      	movs	r2, #0
10016010:	2100      	movs	r1, #0
10016012:	e9cd 1204 	strd	r1, r2, [sp, #16]
10016016:	4683      	mov	fp, r0
10016018:	4631      	mov	r1, r6
1001601a:	9119      	str	r1, [sp, #100]	@ 0x64
1001601c:	4688      	mov	r8, r1
1001601e:	f811 2b01 	ldrb.w	r2, [r1], #1
10016022:	2a2d      	cmp	r2, #45	@ 0x2d
10016024:	d85e      	bhi.n	100160e4 <_strtod_l+0xe4>
10016026:	a001      	add	r0, pc, #4	@ (adr r0, 1001602c <_strtod_l+0x2c>)
10016028:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
1001602c:	100161fd 	.word	0x100161fd
10016030:	100160e5 	.word	0x100160e5
10016034:	100160e5 	.word	0x100160e5
10016038:	100160e5 	.word	0x100160e5
1001603c:	100160e5 	.word	0x100160e5
10016040:	100160e5 	.word	0x100160e5
10016044:	100160e5 	.word	0x100160e5
10016048:	100160e5 	.word	0x100160e5
1001604c:	100160e5 	.word	0x100160e5
10016050:	1001601b 	.word	0x1001601b
10016054:	1001601b 	.word	0x1001601b
10016058:	1001601b 	.word	0x1001601b
1001605c:	1001601b 	.word	0x1001601b
10016060:	1001601b 	.word	0x1001601b
10016064:	100160e5 	.word	0x100160e5
10016068:	100160e5 	.word	0x100160e5
1001606c:	100160e5 	.word	0x100160e5
10016070:	100160e5 	.word	0x100160e5
10016074:	100160e5 	.word	0x100160e5
10016078:	100160e5 	.word	0x100160e5
1001607c:	100160e5 	.word	0x100160e5
10016080:	100160e5 	.word	0x100160e5
10016084:	100160e5 	.word	0x100160e5
10016088:	100160e5 	.word	0x100160e5
1001608c:	100160e5 	.word	0x100160e5
10016090:	100160e5 	.word	0x100160e5
10016094:	100160e5 	.word	0x100160e5
10016098:	100160e5 	.word	0x100160e5
1001609c:	100160e5 	.word	0x100160e5
100160a0:	100160e5 	.word	0x100160e5
100160a4:	100160e5 	.word	0x100160e5
100160a8:	100160e5 	.word	0x100160e5
100160ac:	1001601b 	.word	0x1001601b
100160b0:	100160e5 	.word	0x100160e5
100160b4:	100160e5 	.word	0x100160e5
100160b8:	100160e5 	.word	0x100160e5
100160bc:	100160e5 	.word	0x100160e5
100160c0:	100160e5 	.word	0x100160e5
100160c4:	100160e5 	.word	0x100160e5
100160c8:	100160e5 	.word	0x100160e5
100160cc:	100160e5 	.word	0x100160e5
100160d0:	100160e5 	.word	0x100160e5
100160d4:	100160e5 	.word	0x100160e5
100160d8:	100167fb 	.word	0x100167fb
100160dc:	100160e5 	.word	0x100160e5
100160e0:	10016813 	.word	0x10016813
100160e4:	2100      	movs	r1, #0
100160e6:	9108      	str	r1, [sp, #32]
100160e8:	2a30      	cmp	r2, #48	@ 0x30
100160ea:	f000 8093 	beq.w	10016214 <_strtod_l+0x214>
100160ee:	2300      	movs	r3, #0
100160f0:	9309      	str	r3, [sp, #36]	@ 0x24
100160f2:	2a2f      	cmp	r2, #47	@ 0x2f
100160f4:	4617      	mov	r7, r2
100160f6:	f240 84ee 	bls.w	10016ad6 <_strtod_l+0xad6>
100160fa:	f04f 0900 	mov.w	r9, #0
100160fe:	4640      	mov	r0, r8
10016100:	464d      	mov	r5, r9
10016102:	464c      	mov	r4, r9
10016104:	e013      	b.n	1001612e <_strtod_l+0x12e>
10016106:	3001      	adds	r0, #1
10016108:	2c08      	cmp	r4, #8
1001610a:	9019      	str	r0, [sp, #100]	@ 0x64
1001610c:	bfc8      	it	gt
1001610e:	eb09 0989 	addgt.w	r9, r9, r9, lsl #2
10016112:	7807      	ldrb	r7, [r0, #0]
10016114:	bfc6      	itte	gt
10016116:	eb02 0249 	addgt.w	r2, r2, r9, lsl #1
1001611a:	f1a2 0930 	subgt.w	r9, r2, #48	@ 0x30
1001611e:	f1a3 0530 	suble.w	r5, r3, #48	@ 0x30
10016122:	2f2f      	cmp	r7, #47	@ 0x2f
10016124:	f104 0401 	add.w	r4, r4, #1
10016128:	463a      	mov	r2, r7
1001612a:	f340 80b7 	ble.w	1001629c <_strtod_l+0x29c>
1001612e:	eb05 0385 	add.w	r3, r5, r5, lsl #2
10016132:	2f39      	cmp	r7, #57	@ 0x39
10016134:	eb02 0343 	add.w	r3, r2, r3, lsl #1
10016138:	dde5      	ble.n	10016106 <_strtod_l+0x106>
1001613a:	4974      	ldr	r1, [pc, #464]	@ (1001630c <_strtod_l+0x30c>)
1001613c:	2201      	movs	r2, #1
1001613e:	f001 fde7 	bl	10017d10 <strncmp>
10016142:	2800      	cmp	r0, #0
10016144:	d17b      	bne.n	1001623e <_strtod_l+0x23e>
10016146:	9a19      	ldr	r2, [sp, #100]	@ 0x64
10016148:	4613      	mov	r3, r2
1001614a:	3201      	adds	r2, #1
1001614c:	9219      	str	r2, [sp, #100]	@ 0x64
1001614e:	785f      	ldrb	r7, [r3, #1]
10016150:	2c00      	cmp	r4, #0
10016152:	f040 8587 	bne.w	10016c64 <_strtod_l+0xc64>
10016156:	2f30      	cmp	r7, #48	@ 0x30
10016158:	f040 851f 	bne.w	10016b9a <_strtod_l+0xb9a>
1001615c:	4613      	mov	r3, r2
1001615e:	4618      	mov	r0, r3
10016160:	3301      	adds	r3, #1
10016162:	9319      	str	r3, [sp, #100]	@ 0x64
10016164:	781f      	ldrb	r7, [r3, #0]
10016166:	2f30      	cmp	r7, #48	@ 0x30
10016168:	d0f9      	beq.n	1001615e <_strtod_l+0x15e>
1001616a:	f1c2 0201 	rsb	r2, r2, #1
1001616e:	4410      	add	r0, r2
10016170:	f1a7 0331 	sub.w	r3, r7, #49	@ 0x31
10016174:	2b08      	cmp	r3, #8
10016176:	d834      	bhi.n	100161e2 <_strtod_l+0x1e2>
10016178:	f8dd 8064 	ldr.w	r8, [sp, #100]	@ 0x64
1001617c:	1c43      	adds	r3, r0, #1
1001617e:	f1a7 0e30 	sub.w	lr, r7, #48	@ 0x30
10016182:	930e      	str	r3, [sp, #56]	@ 0x38
10016184:	2401      	movs	r4, #1
10016186:	4647      	mov	r7, r8
10016188:	f04f 0a00 	mov.w	sl, #0
1001618c:	eb05 0585 	add.w	r5, r5, r5, lsl #2
10016190:	eb0e 0545 	add.w	r5, lr, r5, lsl #1
10016194:	2000      	movs	r0, #0
10016196:	1c7b      	adds	r3, r7, #1
10016198:	9319      	str	r3, [sp, #100]	@ 0x64
1001619a:	787f      	ldrb	r7, [r7, #1]
1001619c:	f1a7 0230 	sub.w	r2, r7, #48	@ 0x30
100161a0:	2a09      	cmp	r2, #9
100161a2:	f200 8322 	bhi.w	100167ea <_strtod_l+0x7ea>
100161a6:	9f19      	ldr	r7, [sp, #100]	@ 0x64
100161a8:	3001      	adds	r0, #1
100161aa:	4696      	mov	lr, r2
100161ac:	2a00      	cmp	r2, #0
100161ae:	d0f2      	beq.n	10016196 <_strtod_l+0x196>
100161b0:	2801      	cmp	r0, #1
100161b2:	f000 86e5 	beq.w	10016f80 <_strtod_l+0xf80>
100161b6:	eb00 0c04 	add.w	ip, r0, r4
100161ba:	f10c 31ff 	add.w	r1, ip, #4294967295	@ 0xffffffff
100161be:	e003      	b.n	100161c8 <_strtod_l+0x1c8>
100161c0:	005d      	lsls	r5, r3, #1
100161c2:	428c      	cmp	r4, r1
100161c4:	f000 8477 	beq.w	10016ab6 <_strtod_l+0xab6>
100161c8:	2c08      	cmp	r4, #8
100161ca:	eb05 0385 	add.w	r3, r5, r5, lsl #2
100161ce:	f104 0401 	add.w	r4, r4, #1
100161d2:	d9f5      	bls.n	100161c0 <_strtod_l+0x1c0>
100161d4:	2c10      	cmp	r4, #16
100161d6:	bfdc      	itt	le
100161d8:	eb09 0989 	addle.w	r9, r9, r9, lsl #2
100161dc:	ea4f 0949 	movle.w	r9, r9, lsl #1
100161e0:	e7ef      	b.n	100161c2 <_strtod_l+0x1c2>
100161e2:	2f65      	cmp	r7, #101	@ 0x65
100161e4:	f040 8318 	bne.w	10016818 <_strtod_l+0x818>
100161e8:	f04f 0a00 	mov.w	sl, #0
100161ec:	f8cd a038 	str.w	sl, [sp, #56]	@ 0x38
100161f0:	f04f 0c01 	mov.w	ip, #1
100161f4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100161f6:	4303      	orrs	r3, r0
100161f8:	f040 82fd 	bne.w	100167f6 <_strtod_l+0x7f6>
100161fc:	9b07      	ldr	r3, [sp, #28]
100161fe:	f04f 0800 	mov.w	r8, #0
10016202:	f04f 0900 	mov.w	r9, #0
10016206:	b103      	cbz	r3, 1001620a <_strtod_l+0x20a>
10016208:	601e      	str	r6, [r3, #0]
1001620a:	4640      	mov	r0, r8
1001620c:	4649      	mov	r1, r9
1001620e:	b01f      	add	sp, #124	@ 0x7c
10016210:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10016214:	f898 2001 	ldrb.w	r2, [r8, #1]
10016218:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
1001621c:	2a58      	cmp	r2, #88	@ 0x58
1001621e:	bf18      	it	ne
10016220:	4643      	movne	r3, r8
10016222:	f000 83fc 	beq.w	10016a1e <_strtod_l+0xa1e>
10016226:	3301      	adds	r3, #1
10016228:	9319      	str	r3, [sp, #100]	@ 0x64
1001622a:	781a      	ldrb	r2, [r3, #0]
1001622c:	2a30      	cmp	r2, #48	@ 0x30
1001622e:	d0fa      	beq.n	10016226 <_strtod_l+0x226>
10016230:	4698      	mov	r8, r3
10016232:	2a00      	cmp	r2, #0
10016234:	f000 82bb 	beq.w	100167ae <_strtod_l+0x7ae>
10016238:	2301      	movs	r3, #1
1001623a:	9309      	str	r3, [sp, #36]	@ 0x24
1001623c:	e759      	b.n	100160f2 <_strtod_l+0xf2>
1001623e:	2000      	movs	r0, #0
10016240:	46a2      	mov	sl, r4
10016242:	900e      	str	r0, [sp, #56]	@ 0x38
10016244:	4684      	mov	ip, r0
10016246:	2f65      	cmp	r7, #101	@ 0x65
10016248:	d035      	beq.n	100162b6 <_strtod_l+0x2b6>
1001624a:	2f45      	cmp	r7, #69	@ 0x45
1001624c:	d033      	beq.n	100162b6 <_strtod_l+0x2b6>
1001624e:	2300      	movs	r3, #0
10016250:	930f      	str	r3, [sp, #60]	@ 0x3c
10016252:	2c00      	cmp	r4, #0
10016254:	f040 8081 	bne.w	1001635a <_strtod_l+0x35a>
10016258:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001625a:	4303      	orrs	r3, r0
1001625c:	f040 82a7 	bne.w	100167ae <_strtod_l+0x7ae>
10016260:	f1bc 0f00 	cmp.w	ip, #0
10016264:	d1ca      	bne.n	100161fc <_strtod_l+0x1fc>
10016266:	2f69      	cmp	r7, #105	@ 0x69
10016268:	f000 847e 	beq.w	10016b68 <_strtod_l+0xb68>
1001626c:	f300 83a3 	bgt.w	100169b6 <_strtod_l+0x9b6>
10016270:	2f49      	cmp	r7, #73	@ 0x49
10016272:	f000 8479 	beq.w	10016b68 <_strtod_l+0xb68>
10016276:	2f4e      	cmp	r7, #78	@ 0x4e
10016278:	d1c0      	bne.n	100161fc <_strtod_l+0x1fc>
1001627a:	4925      	ldr	r1, [pc, #148]	@ (10016310 <_strtod_l+0x310>)
1001627c:	a819      	add	r0, sp, #100	@ 0x64
1001627e:	f001 fc47 	bl	10017b10 <__match>
10016282:	2800      	cmp	r0, #0
10016284:	d0ba      	beq.n	100161fc <_strtod_l+0x1fc>
10016286:	9b19      	ldr	r3, [sp, #100]	@ 0x64
10016288:	781b      	ldrb	r3, [r3, #0]
1001628a:	2b28      	cmp	r3, #40	@ 0x28
1001628c:	f000 85a2 	beq.w	10016dd4 <_strtod_l+0xdd4>
10016290:	4820      	ldr	r0, [pc, #128]	@ (10016314 <_strtod_l+0x314>)
10016292:	f008 ffd1 	bl	1001f238 <nan>
10016296:	4680      	mov	r8, r0
10016298:	4689      	mov	r9, r1
1001629a:	e28c      	b.n	100167b6 <_strtod_l+0x7b6>
1001629c:	491b      	ldr	r1, [pc, #108]	@ (1001630c <_strtod_l+0x30c>)
1001629e:	2201      	movs	r2, #1
100162a0:	f001 fd36 	bl	10017d10 <strncmp>
100162a4:	2800      	cmp	r0, #0
100162a6:	d1ca      	bne.n	1001623e <_strtod_l+0x23e>
100162a8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
100162aa:	900e      	str	r0, [sp, #56]	@ 0x38
100162ac:	1c5a      	adds	r2, r3, #1
100162ae:	9219      	str	r2, [sp, #100]	@ 0x64
100162b0:	785f      	ldrb	r7, [r3, #1]
100162b2:	46a2      	mov	sl, r4
100162b4:	e772      	b.n	1001619c <_strtod_l+0x19c>
100162b6:	2c00      	cmp	r4, #0
100162b8:	d09c      	beq.n	100161f4 <_strtod_l+0x1f4>
100162ba:	9e19      	ldr	r6, [sp, #100]	@ 0x64
100162bc:	1c73      	adds	r3, r6, #1
100162be:	9319      	str	r3, [sp, #100]	@ 0x64
100162c0:	7877      	ldrb	r7, [r6, #1]
100162c2:	2f2b      	cmp	r7, #43	@ 0x2b
100162c4:	f000 8294 	beq.w	100167f0 <_strtod_l+0x7f0>
100162c8:	2f2d      	cmp	r7, #45	@ 0x2d
100162ca:	f000 8284 	beq.w	100167d6 <_strtod_l+0x7d6>
100162ce:	2300      	movs	r3, #0
100162d0:	930a      	str	r3, [sp, #40]	@ 0x28
100162d2:	f1a7 0130 	sub.w	r1, r7, #48	@ 0x30
100162d6:	2909      	cmp	r1, #9
100162d8:	f200 8283 	bhi.w	100167e2 <_strtod_l+0x7e2>
100162dc:	2f30      	cmp	r7, #48	@ 0x30
100162de:	9b19      	ldr	r3, [sp, #100]	@ 0x64
100162e0:	d10a      	bne.n	100162f8 <_strtod_l+0x2f8>
100162e2:	3301      	adds	r3, #1
100162e4:	9319      	str	r3, [sp, #100]	@ 0x64
100162e6:	781f      	ldrb	r7, [r3, #0]
100162e8:	2f30      	cmp	r7, #48	@ 0x30
100162ea:	d0fa      	beq.n	100162e2 <_strtod_l+0x2e2>
100162ec:	f1a7 0231 	sub.w	r2, r7, #49	@ 0x31
100162f0:	2a08      	cmp	r2, #8
100162f2:	d8ac      	bhi.n	1001624e <_strtod_l+0x24e>
100162f4:	f1a7 0130 	sub.w	r1, r7, #48	@ 0x30
100162f8:	1c5a      	adds	r2, r3, #1
100162fa:	9219      	str	r2, [sp, #100]	@ 0x64
100162fc:	785f      	ldrb	r7, [r3, #1]
100162fe:	2f2f      	cmp	r7, #47	@ 0x2f
10016300:	f340 83fc 	ble.w	10016afc <_strtod_l+0xafc>
10016304:	4696      	mov	lr, r2
10016306:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
1001630a:	e00e      	b.n	1001632a <_strtod_l+0x32a>
1001630c:	100209e4 	.word	0x100209e4
10016310:	10020c1c 	.word	0x10020c1c
10016314:	100207e8 	.word	0x100207e8
10016318:	3201      	adds	r2, #1
1001631a:	9219      	str	r2, [sp, #100]	@ 0x64
1001631c:	f89e 7001 	ldrb.w	r7, [lr, #1]
10016320:	2f2f      	cmp	r7, #47	@ 0x2f
10016322:	f1a8 0130 	sub.w	r1, r8, #48	@ 0x30
10016326:	dd06      	ble.n	10016336 <_strtod_l+0x336>
10016328:	4696      	mov	lr, r2
1001632a:	eb01 0881 	add.w	r8, r1, r1, lsl #2
1001632e:	2f39      	cmp	r7, #57	@ 0x39
10016330:	eb07 0848 	add.w	r8, r7, r8, lsl #1
10016334:	ddf0      	ble.n	10016318 <_strtod_l+0x318>
10016336:	1ad2      	subs	r2, r2, r3
10016338:	2a08      	cmp	r2, #8
1001633a:	f8dd 802c 	ldr.w	r8, [sp, #44]	@ 0x2c
1001633e:	f340 83dd 	ble.w	10016afc <_strtod_l+0xafc>
10016342:	f644 631f 	movw	r3, #19999	@ 0x4e1f
10016346:	930f      	str	r3, [sp, #60]	@ 0x3c
10016348:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001634a:	2b00      	cmp	r3, #0
1001634c:	d081      	beq.n	10016252 <_strtod_l+0x252>
1001634e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
10016350:	425b      	negs	r3, r3
10016352:	930f      	str	r3, [sp, #60]	@ 0x3c
10016354:	2c00      	cmp	r4, #0
10016356:	f43f af7f 	beq.w	10016258 <_strtod_l+0x258>
1001635a:	4628      	mov	r0, r5
1001635c:	f009 fb90 	bl	1001fa80 <__aeabi_ui2d>
10016360:	4602      	mov	r2, r0
10016362:	460b      	mov	r3, r1
10016364:	e9cd 2304 	strd	r2, r3, [sp, #16]
10016368:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
1001636c:	f1ba 0f00 	cmp.w	sl, #0
10016370:	bf08      	it	eq
10016372:	46a2      	moveq	sl, r4
10016374:	2c10      	cmp	r4, #16
10016376:	eba3 0302 	sub.w	r3, r3, r2
1001637a:	4626      	mov	r6, r4
1001637c:	bfa8      	it	ge
1001637e:	2610      	movge	r6, #16
10016380:	2c09      	cmp	r4, #9
10016382:	930b      	str	r3, [sp, #44]	@ 0x2c
10016384:	dd16      	ble.n	100163b4 <_strtod_l+0x3b4>
10016386:	4b4f      	ldr	r3, [pc, #316]	@ (100164c4 <_strtod_l+0x4c4>)
10016388:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
1001638c:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
10016390:	f009 fbf0 	bl	1001fb74 <__aeabi_dmul>
10016394:	e9cd 0104 	strd	r0, r1, [sp, #16]
10016398:	4648      	mov	r0, r9
1001639a:	f009 fb71 	bl	1001fa80 <__aeabi_ui2d>
1001639e:	4602      	mov	r2, r0
100163a0:	460b      	mov	r3, r1
100163a2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
100163a6:	f009 fa2f 	bl	1001f808 <__adddf3>
100163aa:	2c0f      	cmp	r4, #15
100163ac:	e9cd 0104 	strd	r0, r1, [sp, #16]
100163b0:	f300 81a7 	bgt.w	10016702 <_strtod_l+0x702>
100163b4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
100163b6:	2b00      	cmp	r3, #0
100163b8:	f000 8301 	beq.w	100169be <_strtod_l+0x9be>
100163bc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
100163be:	f340 8231 	ble.w	10016824 <_strtod_l+0x824>
100163c2:	2b16      	cmp	r3, #22
100163c4:	f340 83a1 	ble.w	10016b0a <_strtod_l+0xb0a>
100163c8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
100163ca:	f1c4 0325 	rsb	r3, r4, #37	@ 0x25
100163ce:	4293      	cmp	r3, r2
100163d0:	f280 8432 	bge.w	10016c38 <_strtod_l+0xc38>
100163d4:	1ba6      	subs	r6, r4, r6
100163d6:	4416      	add	r6, r2
100163d8:	f016 000f 	ands.w	r0, r6, #15
100163dc:	d00a      	beq.n	100163f4 <_strtod_l+0x3f4>
100163de:	4939      	ldr	r1, [pc, #228]	@ (100164c4 <_strtod_l+0x4c4>)
100163e0:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
100163e4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
100163e8:	e9d1 0100 	ldrd	r0, r1, [r1]
100163ec:	f009 fbc2 	bl	1001fb74 <__aeabi_dmul>
100163f0:	e9cd 0104 	strd	r0, r1, [sp, #16]
100163f4:	f036 030f 	bics.w	r3, r6, #15
100163f8:	d046      	beq.n	10016488 <_strtod_l+0x488>
100163fa:	f5b3 7f9a 	cmp.w	r3, #308	@ 0x134
100163fe:	f300 834e 	bgt.w	10016a9e <_strtod_l+0xa9e>
10016402:	2b10      	cmp	r3, #16
10016404:	4a30      	ldr	r2, [pc, #192]	@ (100164c8 <_strtod_l+0x4c8>)
10016406:	ea4f 1623 	mov.w	r6, r3, asr #4
1001640a:	f340 8539 	ble.w	10016e80 <_strtod_l+0xe80>
1001640e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
10016412:	2300      	movs	r3, #0
10016414:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
10016418:	4617      	mov	r7, r2
1001641a:	4699      	mov	r9, r3
1001641c:	4690      	mov	r8, r2
1001641e:	f016 0f01 	tst.w	r6, #1
10016422:	f109 0901 	add.w	r9, r9, #1
10016426:	ea4f 0666 	mov.w	r6, r6, asr #1
1001642a:	d004      	beq.n	10016436 <_strtod_l+0x436>
1001642c:	e9d7 2300 	ldrd	r2, r3, [r7]
10016430:	f009 fba0 	bl	1001fb74 <__aeabi_dmul>
10016434:	2301      	movs	r3, #1
10016436:	2e01      	cmp	r6, #1
10016438:	f107 0708 	add.w	r7, r7, #8
1001643c:	d1ef      	bne.n	1001641e <_strtod_l+0x41e>
1001643e:	4642      	mov	r2, r8
10016440:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
10016444:	b10b      	cbz	r3, 1001644a <_strtod_l+0x44a>
10016446:	e9cd 0104 	strd	r0, r1, [sp, #16]
1001644a:	9b05      	ldr	r3, [sp, #20]
1001644c:	f1a3 7354 	sub.w	r3, r3, #55574528	@ 0x3500000
10016450:	eb02 01c9 	add.w	r1, r2, r9, lsl #3
10016454:	9305      	str	r3, [sp, #20]
10016456:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
1001645a:	e9d1 0100 	ldrd	r0, r1, [r1]
1001645e:	f009 fb89 	bl	1001fb74 <__aeabi_dmul>
10016462:	4b1a      	ldr	r3, [pc, #104]	@ (100164cc <_strtod_l+0x4cc>)
10016464:	e9cd 0104 	strd	r0, r1, [sp, #16]
10016468:	400b      	ands	r3, r1
1001646a:	460a      	mov	r2, r1
1001646c:	4918      	ldr	r1, [pc, #96]	@ (100164d0 <_strtod_l+0x4d0>)
1001646e:	428b      	cmp	r3, r1
10016470:	f200 8315 	bhi.w	10016a9e <_strtod_l+0xa9e>
10016474:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
10016478:	428b      	cmp	r3, r1
1001647a:	f240 8454 	bls.w	10016d26 <_strtod_l+0xd26>
1001647e:	4b15      	ldr	r3, [pc, #84]	@ (100164d4 <_strtod_l+0x4d4>)
10016480:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10016484:	e9cd 2304 	strd	r2, r3, [sp, #16]
10016488:	2300      	movs	r3, #0
1001648a:	930a      	str	r3, [sp, #40]	@ 0x28
1001648c:	9500      	str	r5, [sp, #0]
1001648e:	4623      	mov	r3, r4
10016490:	4652      	mov	r2, sl
10016492:	4641      	mov	r1, r8
10016494:	4658      	mov	r0, fp
10016496:	f007 fa35 	bl	1001d904 <__s2b>
1001649a:	9014      	str	r0, [sp, #80]	@ 0x50
1001649c:	2800      	cmp	r0, #0
1001649e:	f000 82fe 	beq.w	10016a9e <_strtod_l+0xa9e>
100164a2:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	@ 0x38
100164a6:	1a9b      	subs	r3, r3, r2
100164a8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
100164aa:	2a00      	cmp	r2, #0
100164ac:	bfa8      	it	ge
100164ae:	2300      	movge	r3, #0
100164b0:	930e      	str	r3, [sp, #56]	@ 0x38
100164b2:	f04f 0a00 	mov.w	sl, #0
100164b6:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
100164ba:	f8cd a024 	str.w	sl, [sp, #36]	@ 0x24
100164be:	9315      	str	r3, [sp, #84]	@ 0x54
100164c0:	e0df      	b.n	10016682 <_strtod_l+0x682>
100164c2:	bf00      	nop
100164c4:	10027a20 	.word	0x10027a20
100164c8:	100279f8 	.word	0x100279f8
100164cc:	7ff00000 	.word	0x7ff00000
100164d0:	7ca00000 	.word	0x7ca00000
100164d4:	7fefffff 	.word	0x7fefffff
100164d8:	1ad2      	subs	r2, r2, r3
100164da:	2a1f      	cmp	r2, #31
100164dc:	eba4 0402 	sub.w	r4, r4, r2
100164e0:	f300 822e 	bgt.w	10016940 <_strtod_l+0x940>
100164e4:	2301      	movs	r3, #1
100164e6:	4093      	lsls	r3, r2
100164e8:	4698      	mov	r8, r3
100164ea:	2500      	movs	r5, #0
100164ec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100164ee:	4426      	add	r6, r4
100164f0:	443c      	add	r4, r7
100164f2:	42a7      	cmp	r7, r4
100164f4:	441e      	add	r6, r3
100164f6:	463b      	mov	r3, r7
100164f8:	bfa8      	it	ge
100164fa:	4623      	movge	r3, r4
100164fc:	42b3      	cmp	r3, r6
100164fe:	bfa8      	it	ge
10016500:	4633      	movge	r3, r6
10016502:	2b00      	cmp	r3, #0
10016504:	dd02      	ble.n	1001650c <_strtod_l+0x50c>
10016506:	1ae4      	subs	r4, r4, r3
10016508:	1af6      	subs	r6, r6, r3
1001650a:	1aff      	subs	r7, r7, r3
1001650c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001650e:	2b00      	cmp	r3, #0
10016510:	f300 81bc 	bgt.w	1001688c <_strtod_l+0x88c>
10016514:	2c00      	cmp	r4, #0
10016516:	f300 81d2 	bgt.w	100168be <_strtod_l+0x8be>
1001651a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001651c:	2b00      	cmp	r3, #0
1001651e:	f300 8205 	bgt.w	1001692c <_strtod_l+0x92c>
10016522:	2e00      	cmp	r6, #0
10016524:	f300 81f6 	bgt.w	10016914 <_strtod_l+0x914>
10016528:	2f00      	cmp	r7, #0
1001652a:	dd08      	ble.n	1001653e <_strtod_l+0x53e>
1001652c:	4651      	mov	r1, sl
1001652e:	463a      	mov	r2, r7
10016530:	4658      	mov	r0, fp
10016532:	f007 fbcf 	bl	1001dcd4 <__lshift>
10016536:	4682      	mov	sl, r0
10016538:	2800      	cmp	r0, #0
1001653a:	f000 81f4 	beq.w	10016926 <_strtod_l+0x926>
1001653e:	991a      	ldr	r1, [sp, #104]	@ 0x68
10016540:	464a      	mov	r2, r9
10016542:	4658      	mov	r0, fp
10016544:	f007 fc5e 	bl	1001de04 <__mdiff>
10016548:	9009      	str	r0, [sp, #36]	@ 0x24
1001654a:	2800      	cmp	r0, #0
1001654c:	f000 81eb 	beq.w	10016926 <_strtod_l+0x926>
10016550:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10016552:	2300      	movs	r3, #0
10016554:	68d1      	ldr	r1, [r2, #12]
10016556:	910f      	str	r1, [sp, #60]	@ 0x3c
10016558:	60d3      	str	r3, [r2, #12]
1001655a:	4651      	mov	r1, sl
1001655c:	f007 fc32 	bl	1001ddc4 <__mcmp>
10016560:	2800      	cmp	r0, #0
10016562:	f2c0 8402 	blt.w	10016d6a <_strtod_l+0xd6a>
10016566:	9f05      	ldr	r7, [sp, #20]
10016568:	f000 8389 	beq.w	10016c7e <_strtod_l+0xc7e>
1001656c:	9809      	ldr	r0, [sp, #36]	@ 0x24
1001656e:	4651      	mov	r1, sl
10016570:	f007 fdde 	bl	1001e130 <__ratio>
10016574:	2200      	movs	r2, #0
10016576:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
1001657a:	4604      	mov	r4, r0
1001657c:	460d      	mov	r5, r1
1001657e:	f009 fd75 	bl	1002006c <__aeabi_dcmple>
10016582:	2800      	cmp	r0, #0
10016584:	f000 8172 	beq.w	1001686c <_strtod_l+0x86c>
10016588:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001658a:	2b00      	cmp	r3, #0
1001658c:	f040 81e4 	bne.w	10016958 <_strtod_l+0x958>
10016590:	9b04      	ldr	r3, [sp, #16]
10016592:	2b00      	cmp	r3, #0
10016594:	f040 8273 	bne.w	10016a7e <_strtod_l+0xa7e>
10016598:	f3c7 0313 	ubfx	r3, r7, #0, #20
1001659c:	2b00      	cmp	r3, #0
1001659e:	f040 8211 	bne.w	100169c4 <_strtod_l+0x9c4>
100165a2:	4bab      	ldr	r3, [pc, #684]	@ (10016850 <_strtod_l+0x850>)
100165a4:	2200      	movs	r2, #0
100165a6:	4620      	mov	r0, r4
100165a8:	4629      	mov	r1, r5
100165aa:	f009 fd55 	bl	10020058 <__aeabi_dcmplt>
100165ae:	2800      	cmp	r0, #0
100165b0:	f040 835c 	bne.w	10016c6c <_strtod_l+0xc6c>
100165b4:	4ba7      	ldr	r3, [pc, #668]	@ (10016854 <_strtod_l+0x854>)
100165b6:	4620      	mov	r0, r4
100165b8:	4629      	mov	r1, r5
100165ba:	2200      	movs	r2, #0
100165bc:	f009 fada 	bl	1001fb74 <__aeabi_dmul>
100165c0:	4603      	mov	r3, r0
100165c2:	460c      	mov	r4, r1
100165c4:	e9cd 3412 	strd	r3, r4, [sp, #72]	@ 0x48
100165c8:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
100165cc:	900c      	str	r0, [sp, #48]	@ 0x30
100165ce:	930d      	str	r3, [sp, #52]	@ 0x34
100165d0:	4ea1      	ldr	r6, [pc, #644]	@ (10016858 <_strtod_l+0x858>)
100165d2:	4ba2      	ldr	r3, [pc, #648]	@ (1001685c <_strtod_l+0x85c>)
100165d4:	403e      	ands	r6, r7
100165d6:	429e      	cmp	r6, r3
100165d8:	e9dd 450c 	ldrd	r4, r5, [sp, #48]	@ 0x30
100165dc:	f000 81c3 	beq.w	10016966 <_strtod_l+0x966>
100165e0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100165e2:	b323      	cbz	r3, 1001662e <_strtod_l+0x62e>
100165e4:	f1b6 6fd4 	cmp.w	r6, #111149056	@ 0x6a00000
100165e8:	d821      	bhi.n	1001662e <_strtod_l+0x62e>
100165ea:	e9dd 7812 	ldrd	r7, r8, [sp, #72]	@ 0x48
100165ee:	a396      	add	r3, pc, #600	@ (adr r3, 10016848 <_strtod_l+0x848>)
100165f0:	e9d3 2300 	ldrd	r2, r3, [r3]
100165f4:	4638      	mov	r0, r7
100165f6:	4641      	mov	r1, r8
100165f8:	f009 fd38 	bl	1002006c <__aeabi_dcmple>
100165fc:	b1a0      	cbz	r0, 10016628 <_strtod_l+0x628>
100165fe:	4641      	mov	r1, r8
10016600:	4638      	mov	r0, r7
10016602:	f009 fd8f 	bl	10020124 <__aeabi_d2uiz>
10016606:	2801      	cmp	r0, #1
10016608:	bf38      	it	cc
1001660a:	2001      	movcc	r0, #1
1001660c:	f009 fa38 	bl	1001fa80 <__aeabi_ui2d>
10016610:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
10016612:	e9cd 0112 	strd	r0, r1, [sp, #72]	@ 0x48
10016616:	2b00      	cmp	r3, #0
10016618:	f040 82ba 	bne.w	10016b90 <_strtod_l+0xb90>
1001661c:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
10016620:	9016      	str	r0, [sp, #88]	@ 0x58
10016622:	9317      	str	r3, [sp, #92]	@ 0x5c
10016624:	e9dd 4516 	ldrd	r4, r5, [sp, #88]	@ 0x58
10016628:	f105 63d6 	add.w	r3, r5, #112197632	@ 0x6b00000
1001662c:	1b9d      	subs	r5, r3, r6
1001662e:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	@ 0x40
10016632:	4638      	mov	r0, r7
10016634:	4641      	mov	r1, r8
10016636:	f007 fc97 	bl	1001df68 <__ulp>
1001663a:	4602      	mov	r2, r0
1001663c:	460b      	mov	r3, r1
1001663e:	4620      	mov	r0, r4
10016640:	4629      	mov	r1, r5
10016642:	f009 fa97 	bl	1001fb74 <__aeabi_dmul>
10016646:	463a      	mov	r2, r7
10016648:	4643      	mov	r3, r8
1001664a:	f009 f8dd 	bl	1001f808 <__adddf3>
1001664e:	e9cd 0104 	strd	r0, r1, [sp, #16]
10016652:	460c      	mov	r4, r1
10016654:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016656:	b923      	cbnz	r3, 10016662 <_strtod_l+0x662>
10016658:	4b7f      	ldr	r3, [pc, #508]	@ (10016858 <_strtod_l+0x858>)
1001665a:	4023      	ands	r3, r4
1001665c:	429e      	cmp	r6, r3
1001665e:	f000 81ba 	beq.w	100169d6 <_strtod_l+0x9d6>
10016662:	991a      	ldr	r1, [sp, #104]	@ 0x68
10016664:	4658      	mov	r0, fp
10016666:	f007 f8f3 	bl	1001d850 <_Bfree>
1001666a:	4649      	mov	r1, r9
1001666c:	4658      	mov	r0, fp
1001666e:	f007 f8ef 	bl	1001d850 <_Bfree>
10016672:	4651      	mov	r1, sl
10016674:	4658      	mov	r0, fp
10016676:	f007 f8eb 	bl	1001d850 <_Bfree>
1001667a:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001667c:	4658      	mov	r0, fp
1001667e:	f007 f8e7 	bl	1001d850 <_Bfree>
10016682:	9c14      	ldr	r4, [sp, #80]	@ 0x50
10016684:	4658      	mov	r0, fp
10016686:	6861      	ldr	r1, [r4, #4]
10016688:	f007 f8bc 	bl	1001d804 <_Balloc>
1001668c:	4681      	mov	r9, r0
1001668e:	2800      	cmp	r0, #0
10016690:	f000 8149 	beq.w	10016926 <_strtod_l+0x926>
10016694:	6922      	ldr	r2, [r4, #16]
10016696:	3202      	adds	r2, #2
10016698:	f104 010c 	add.w	r1, r4, #12
1001669c:	0092      	lsls	r2, r2, #2
1001669e:	300c      	adds	r0, #12
100166a0:	f7ff f9ae 	bl	10015a00 <memcpy>
100166a4:	ab1c      	add	r3, sp, #112	@ 0x70
100166a6:	9301      	str	r3, [sp, #4]
100166a8:	ab1b      	add	r3, sp, #108	@ 0x6c
100166aa:	9300      	str	r3, [sp, #0]
100166ac:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
100166b0:	4658      	mov	r0, fp
100166b2:	e9cd 3410 	strd	r3, r4, [sp, #64]	@ 0x40
100166b6:	461a      	mov	r2, r3
100166b8:	4623      	mov	r3, r4
100166ba:	f007 fcdb 	bl	1001e074 <__d2b>
100166be:	901a      	str	r0, [sp, #104]	@ 0x68
100166c0:	2800      	cmp	r0, #0
100166c2:	f000 8105 	beq.w	100168d0 <_strtod_l+0x8d0>
100166c6:	2101      	movs	r1, #1
100166c8:	4658      	mov	r0, fp
100166ca:	f007 f9c5 	bl	1001da58 <__i2b>
100166ce:	4682      	mov	sl, r0
100166d0:	2800      	cmp	r0, #0
100166d2:	f000 8128 	beq.w	10016926 <_strtod_l+0x926>
100166d6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
100166d8:	2b00      	cmp	r3, #0
100166da:	f2c0 8117 	blt.w	1001690c <_strtod_l+0x90c>
100166de:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
100166e0:	9e15      	ldr	r6, [sp, #84]	@ 0x54
100166e2:	189f      	adds	r7, r3, r2
100166e4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100166e6:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
100166e8:	1a9b      	subs	r3, r3, r2
100166ea:	4423      	add	r3, r4
100166ec:	4a5c      	ldr	r2, [pc, #368]	@ (10016860 <_strtod_l+0x860>)
100166ee:	3b01      	subs	r3, #1
100166f0:	4293      	cmp	r3, r2
100166f2:	f1c4 0436 	rsb	r4, r4, #54	@ 0x36
100166f6:	f6ff aeef 	blt.w	100164d8 <_strtod_l+0x4d8>
100166fa:	2301      	movs	r3, #1
100166fc:	2500      	movs	r5, #0
100166fe:	4698      	mov	r8, r3
10016700:	e6f4      	b.n	100164ec <_strtod_l+0x4ec>
10016702:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10016704:	1ba6      	subs	r6, r4, r6
10016706:	441e      	add	r6, r3
10016708:	2e00      	cmp	r6, #0
1001670a:	f73f ae65 	bgt.w	100163d8 <_strtod_l+0x3d8>
1001670e:	f43f aebb 	beq.w	10016488 <_strtod_l+0x488>
10016712:	4276      	negs	r6, r6
10016714:	f016 020f 	ands.w	r2, r6, #15
10016718:	d00a      	beq.n	10016730 <_strtod_l+0x730>
1001671a:	4b52      	ldr	r3, [pc, #328]	@ (10016864 <_strtod_l+0x864>)
1001671c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
10016720:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
10016724:	e9d3 2300 	ldrd	r2, r3, [r3]
10016728:	f009 fb4e 	bl	1001fdc8 <__aeabi_ddiv>
1001672c:	e9cd 0104 	strd	r0, r1, [sp, #16]
10016730:	1136      	asrs	r6, r6, #4
10016732:	f43f aea9 	beq.w	10016488 <_strtod_l+0x488>
10016736:	2e1f      	cmp	r6, #31
10016738:	dc36      	bgt.n	100167a8 <_strtod_l+0x7a8>
1001673a:	f016 0310 	ands.w	r3, r6, #16
1001673e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
10016742:	bf18      	it	ne
10016744:	236a      	movne	r3, #106	@ 0x6a
10016746:	4f48      	ldr	r7, [pc, #288]	@ (10016868 <_strtod_l+0x868>)
10016748:	930a      	str	r3, [sp, #40]	@ 0x28
1001674a:	2300      	movs	r3, #0
1001674c:	07f2      	lsls	r2, r6, #31
1001674e:	d504      	bpl.n	1001675a <_strtod_l+0x75a>
10016750:	e9d7 2300 	ldrd	r2, r3, [r7]
10016754:	f009 fa0e 	bl	1001fb74 <__aeabi_dmul>
10016758:	2301      	movs	r3, #1
1001675a:	1076      	asrs	r6, r6, #1
1001675c:	f107 0708 	add.w	r7, r7, #8
10016760:	d1f4      	bne.n	1001674c <_strtod_l+0x74c>
10016762:	b10b      	cbz	r3, 10016768 <_strtod_l+0x768>
10016764:	e9cd 0104 	strd	r0, r1, [sp, #16]
10016768:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001676a:	b1a3      	cbz	r3, 10016796 <_strtod_l+0x796>
1001676c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
10016770:	f3c1 520a 	ubfx	r2, r1, #20, #11
10016774:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
10016778:	2b00      	cmp	r3, #0
1001677a:	dd0a      	ble.n	10016792 <_strtod_l+0x792>
1001677c:	2b1f      	cmp	r3, #31
1001677e:	f340 8398 	ble.w	10016eb2 <_strtod_l+0xeb2>
10016782:	2000      	movs	r0, #0
10016784:	2b34      	cmp	r3, #52	@ 0x34
10016786:	9004      	str	r0, [sp, #16]
10016788:	f340 83ca 	ble.w	10016f20 <_strtod_l+0xf20>
1001678c:	f04f 735c 	mov.w	r3, #57671680	@ 0x3700000
10016790:	9305      	str	r3, [sp, #20]
10016792:	236a      	movs	r3, #106	@ 0x6a
10016794:	930a      	str	r3, [sp, #40]	@ 0x28
10016796:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001679a:	2200      	movs	r2, #0
1001679c:	2300      	movs	r3, #0
1001679e:	f009 fc51 	bl	10020044 <__aeabi_dcmpeq>
100167a2:	2800      	cmp	r0, #0
100167a4:	f43f ae72 	beq.w	1001648c <_strtod_l+0x48c>
100167a8:	2322      	movs	r3, #34	@ 0x22
100167aa:	f8cb 3000 	str.w	r3, [fp]
100167ae:	f04f 0800 	mov.w	r8, #0
100167b2:	f04f 0900 	mov.w	r9, #0
100167b6:	9a07      	ldr	r2, [sp, #28]
100167b8:	b10a      	cbz	r2, 100167be <_strtod_l+0x7be>
100167ba:	9b19      	ldr	r3, [sp, #100]	@ 0x64
100167bc:	6013      	str	r3, [r2, #0]
100167be:	9b08      	ldr	r3, [sp, #32]
100167c0:	2b00      	cmp	r3, #0
100167c2:	f43f ad22 	beq.w	1001620a <_strtod_l+0x20a>
100167c6:	f109 4300 	add.w	r3, r9, #2147483648	@ 0x80000000
100167ca:	4699      	mov	r9, r3
100167cc:	4640      	mov	r0, r8
100167ce:	4649      	mov	r1, r9
100167d0:	b01f      	add	sp, #124	@ 0x7c
100167d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100167d6:	2301      	movs	r3, #1
100167d8:	930a      	str	r3, [sp, #40]	@ 0x28
100167da:	1cb3      	adds	r3, r6, #2
100167dc:	9319      	str	r3, [sp, #100]	@ 0x64
100167de:	78b7      	ldrb	r7, [r6, #2]
100167e0:	e577      	b.n	100162d2 <_strtod_l+0x2d2>
100167e2:	2300      	movs	r3, #0
100167e4:	9619      	str	r6, [sp, #100]	@ 0x64
100167e6:	930f      	str	r3, [sp, #60]	@ 0x3c
100167e8:	e533      	b.n	10016252 <_strtod_l+0x252>
100167ea:	f04f 0c01 	mov.w	ip, #1
100167ee:	e52a      	b.n	10016246 <_strtod_l+0x246>
100167f0:	2300      	movs	r3, #0
100167f2:	930a      	str	r3, [sp, #40]	@ 0x28
100167f4:	e7f1      	b.n	100167da <_strtod_l+0x7da>
100167f6:	2400      	movs	r4, #0
100167f8:	e55f      	b.n	100162ba <_strtod_l+0x2ba>
100167fa:	2200      	movs	r2, #0
100167fc:	9208      	str	r2, [sp, #32]
100167fe:	f108 0101 	add.w	r1, r8, #1
10016802:	9119      	str	r1, [sp, #100]	@ 0x64
10016804:	f898 2001 	ldrb.w	r2, [r8, #1]
10016808:	2a00      	cmp	r2, #0
1001680a:	f43f acf7 	beq.w	100161fc <_strtod_l+0x1fc>
1001680e:	4688      	mov	r8, r1
10016810:	e46a      	b.n	100160e8 <_strtod_l+0xe8>
10016812:	2201      	movs	r2, #1
10016814:	9208      	str	r2, [sp, #32]
10016816:	e7f2      	b.n	100167fe <_strtod_l+0x7fe>
10016818:	2f45      	cmp	r7, #69	@ 0x45
1001681a:	f43f ace5 	beq.w	100161e8 <_strtod_l+0x1e8>
1001681e:	f04f 0c01 	mov.w	ip, #1
10016822:	e519      	b.n	10016258 <_strtod_l+0x258>
10016824:	3316      	adds	r3, #22
10016826:	f6ff af6c 	blt.w	10016702 <_strtod_l+0x702>
1001682a:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	@ 0x38
1001682e:	1a9a      	subs	r2, r3, r2
10016830:	4b0c      	ldr	r3, [pc, #48]	@ (10016864 <_strtod_l+0x864>)
10016832:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
10016836:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001683a:	e9d3 2300 	ldrd	r2, r3, [r3]
1001683e:	f009 fac3 	bl	1001fdc8 <__aeabi_ddiv>
10016842:	4680      	mov	r8, r0
10016844:	4689      	mov	r9, r1
10016846:	e7b6      	b.n	100167b6 <_strtod_l+0x7b6>
10016848:	ffc00000 	.word	0xffc00000
1001684c:	41dfffff 	.word	0x41dfffff
10016850:	3ff00000 	.word	0x3ff00000
10016854:	3fe00000 	.word	0x3fe00000
10016858:	7ff00000 	.word	0x7ff00000
1001685c:	7fe00000 	.word	0x7fe00000
10016860:	fffffc02 	.word	0xfffffc02
10016864:	10027a20 	.word	0x10027a20
10016868:	10020c48 	.word	0x10020c48
1001686c:	4bb4      	ldr	r3, [pc, #720]	@ (10016b40 <_strtod_l+0xb40>)
1001686e:	4620      	mov	r0, r4
10016870:	4629      	mov	r1, r5
10016872:	2200      	movs	r2, #0
10016874:	f009 f97e 	bl	1001fb74 <__aeabi_dmul>
10016878:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001687a:	e9cd 0112 	strd	r0, r1, [sp, #72]	@ 0x48
1001687e:	2b00      	cmp	r3, #0
10016880:	d165      	bne.n	1001694e <_strtod_l+0x94e>
10016882:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
10016886:	900c      	str	r0, [sp, #48]	@ 0x30
10016888:	930d      	str	r3, [sp, #52]	@ 0x34
1001688a:	e6a1      	b.n	100165d0 <_strtod_l+0x5d0>
1001688c:	4651      	mov	r1, sl
1001688e:	461a      	mov	r2, r3
10016890:	4658      	mov	r0, fp
10016892:	f007 f9c5 	bl	1001dc20 <__pow5mult>
10016896:	4682      	mov	sl, r0
10016898:	2800      	cmp	r0, #0
1001689a:	d044      	beq.n	10016926 <_strtod_l+0x926>
1001689c:	4601      	mov	r1, r0
1001689e:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
100168a0:	4658      	mov	r0, fp
100168a2:	f007 f907 	bl	1001dab4 <__multiply>
100168a6:	2800      	cmp	r0, #0
100168a8:	d03d      	beq.n	10016926 <_strtod_l+0x926>
100168aa:	900f      	str	r0, [sp, #60]	@ 0x3c
100168ac:	991a      	ldr	r1, [sp, #104]	@ 0x68
100168ae:	4658      	mov	r0, fp
100168b0:	f006 ffce 	bl	1001d850 <_Bfree>
100168b4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
100168b6:	931a      	str	r3, [sp, #104]	@ 0x68
100168b8:	2c00      	cmp	r4, #0
100168ba:	f77f ae2e 	ble.w	1001651a <_strtod_l+0x51a>
100168be:	991a      	ldr	r1, [sp, #104]	@ 0x68
100168c0:	4622      	mov	r2, r4
100168c2:	4658      	mov	r0, fp
100168c4:	f007 fa06 	bl	1001dcd4 <__lshift>
100168c8:	901a      	str	r0, [sp, #104]	@ 0x68
100168ca:	2800      	cmp	r0, #0
100168cc:	f47f ae25 	bne.w	1001651a <_strtod_l+0x51a>
100168d0:	464f      	mov	r7, r9
100168d2:	4605      	mov	r5, r0
100168d4:	2322      	movs	r3, #34	@ 0x22
100168d6:	f8df 926c 	ldr.w	r9, [pc, #620]	@ 10016b44 <_strtod_l+0xb44>
100168da:	f8cb 3000 	str.w	r3, [fp]
100168de:	f04f 0800 	mov.w	r8, #0
100168e2:	4629      	mov	r1, r5
100168e4:	4658      	mov	r0, fp
100168e6:	f006 ffb3 	bl	1001d850 <_Bfree>
100168ea:	4639      	mov	r1, r7
100168ec:	4658      	mov	r0, fp
100168ee:	f006 ffaf 	bl	1001d850 <_Bfree>
100168f2:	4651      	mov	r1, sl
100168f4:	4658      	mov	r0, fp
100168f6:	f006 ffab 	bl	1001d850 <_Bfree>
100168fa:	9914      	ldr	r1, [sp, #80]	@ 0x50
100168fc:	4658      	mov	r0, fp
100168fe:	f006 ffa7 	bl	1001d850 <_Bfree>
10016902:	9909      	ldr	r1, [sp, #36]	@ 0x24
10016904:	4658      	mov	r0, fp
10016906:	f006 ffa3 	bl	1001d850 <_Bfree>
1001690a:	e754      	b.n	100167b6 <_strtod_l+0x7b6>
1001690c:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001690e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
10016910:	1ad6      	subs	r6, r2, r3
10016912:	e6e7      	b.n	100166e4 <_strtod_l+0x6e4>
10016914:	4649      	mov	r1, r9
10016916:	4632      	mov	r2, r6
10016918:	4658      	mov	r0, fp
1001691a:	f007 f9db 	bl	1001dcd4 <__lshift>
1001691e:	4681      	mov	r9, r0
10016920:	2800      	cmp	r0, #0
10016922:	f47f ae01 	bne.w	10016528 <_strtod_l+0x528>
10016926:	464f      	mov	r7, r9
10016928:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
1001692a:	e7d3      	b.n	100168d4 <_strtod_l+0x8d4>
1001692c:	4649      	mov	r1, r9
1001692e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10016930:	4658      	mov	r0, fp
10016932:	f007 f975 	bl	1001dc20 <__pow5mult>
10016936:	4681      	mov	r9, r0
10016938:	2800      	cmp	r0, #0
1001693a:	f47f adf2 	bne.w	10016522 <_strtod_l+0x522>
1001693e:	e7f2      	b.n	10016926 <_strtod_l+0x926>
10016940:	4a81      	ldr	r2, [pc, #516]	@ (10016b48 <_strtod_l+0xb48>)
10016942:	1ad3      	subs	r3, r2, r3
10016944:	2201      	movs	r2, #1
10016946:	fa02 f503 	lsl.w	r5, r2, r3
1001694a:	4690      	mov	r8, r2
1001694c:	e5ce      	b.n	100164ec <_strtod_l+0x4ec>
1001694e:	e9dd 3412 	ldrd	r3, r4, [sp, #72]	@ 0x48
10016952:	e9cd 340c 	strd	r3, r4, [sp, #48]	@ 0x30
10016956:	e63b      	b.n	100165d0 <_strtod_l+0x5d0>
10016958:	4c7c      	ldr	r4, [pc, #496]	@ (10016b4c <_strtod_l+0xb4c>)
1001695a:	2300      	movs	r3, #0
1001695c:	e9cd 340c 	strd	r3, r4, [sp, #48]	@ 0x30
10016960:	e9cd 3412 	strd	r3, r4, [sp, #72]	@ 0x48
10016964:	e634      	b.n	100165d0 <_strtod_l+0x5d0>
10016966:	f1a7 7354 	sub.w	r3, r7, #55574528	@ 0x3500000
1001696a:	9305      	str	r3, [sp, #20]
1001696c:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
10016970:	4620      	mov	r0, r4
10016972:	4629      	mov	r1, r5
10016974:	f007 faf8 	bl	1001df68 <__ulp>
10016978:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
1001697c:	f009 f8fa 	bl	1001fb74 <__aeabi_dmul>
10016980:	462b      	mov	r3, r5
10016982:	4622      	mov	r2, r4
10016984:	f008 ff40 	bl	1001f808 <__adddf3>
10016988:	4f6e      	ldr	r7, [pc, #440]	@ (10016b44 <_strtod_l+0xb44>)
1001698a:	4b71      	ldr	r3, [pc, #452]	@ (10016b50 <_strtod_l+0xb50>)
1001698c:	400f      	ands	r7, r1
1001698e:	429f      	cmp	r7, r3
10016990:	e9cd 0104 	strd	r0, r1, [sp, #16]
10016994:	f240 808b 	bls.w	10016aae <_strtod_l+0xaae>
10016998:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
1001699c:	f103 7354 	add.w	r3, r3, #55574528	@ 0x3500000
100169a0:	4299      	cmp	r1, r3
100169a2:	d102      	bne.n	100169aa <_strtod_l+0x9aa>
100169a4:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
100169a8:	d0bd      	beq.n	10016926 <_strtod_l+0x926>
100169aa:	4c6a      	ldr	r4, [pc, #424]	@ (10016b54 <_strtod_l+0xb54>)
100169ac:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
100169b0:	e9cd 3404 	strd	r3, r4, [sp, #16]
100169b4:	e655      	b.n	10016662 <_strtod_l+0x662>
100169b6:	2f6e      	cmp	r7, #110	@ 0x6e
100169b8:	f43f ac5f 	beq.w	1001627a <_strtod_l+0x27a>
100169bc:	e41e      	b.n	100161fc <_strtod_l+0x1fc>
100169be:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
100169c2:	e6f8      	b.n	100167b6 <_strtod_l+0x7b6>
100169c4:	4c64      	ldr	r4, [pc, #400]	@ (10016b58 <_strtod_l+0xb58>)
100169c6:	2300      	movs	r3, #0
100169c8:	e9cd 340c 	strd	r3, r4, [sp, #48]	@ 0x30
100169cc:	4c5f      	ldr	r4, [pc, #380]	@ (10016b4c <_strtod_l+0xb4c>)
100169ce:	2300      	movs	r3, #0
100169d0:	e9cd 3412 	strd	r3, r4, [sp, #72]	@ 0x48
100169d4:	e5fc      	b.n	100165d0 <_strtod_l+0x5d0>
100169d6:	e9dd 5612 	ldrd	r5, r6, [sp, #72]	@ 0x48
100169da:	4628      	mov	r0, r5
100169dc:	4631      	mov	r1, r6
100169de:	f009 fc29 	bl	10020234 <__aeabi_d2lz>
100169e2:	f009 f899 	bl	1001fb18 <__aeabi_l2d>
100169e6:	460b      	mov	r3, r1
100169e8:	4602      	mov	r2, r0
100169ea:	4631      	mov	r1, r6
100169ec:	4628      	mov	r0, r5
100169ee:	f008 ff09 	bl	1001f804 <__aeabi_dsub>
100169f2:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
100169f4:	9b04      	ldr	r3, [sp, #16]
100169f6:	f3c4 0413 	ubfx	r4, r4, #0, #20
100169fa:	431d      	orrs	r5, r3
100169fc:	432c      	orrs	r4, r5
100169fe:	4606      	mov	r6, r0
10016a00:	460f      	mov	r7, r1
10016a02:	d12a      	bne.n	10016a5a <_strtod_l+0xa5a>
10016a04:	a348      	add	r3, pc, #288	@ (adr r3, 10016b28 <_strtod_l+0xb28>)
10016a06:	e9d3 2300 	ldrd	r2, r3, [r3]
10016a0a:	f009 fb25 	bl	10020058 <__aeabi_dcmplt>
10016a0e:	2800      	cmp	r0, #0
10016a10:	f43f ae27 	beq.w	10016662 <_strtod_l+0x662>
10016a14:	464f      	mov	r7, r9
10016a16:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
10016a1a:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
10016a1c:	e761      	b.n	100168e2 <_strtod_l+0x8e2>
10016a1e:	9302      	str	r3, [sp, #8]
10016a20:	9b08      	ldr	r3, [sp, #32]
10016a22:	9301      	str	r3, [sp, #4]
10016a24:	ab1a      	add	r3, sp, #104	@ 0x68
10016a26:	9300      	str	r3, [sp, #0]
10016a28:	4a4c      	ldr	r2, [pc, #304]	@ (10016b5c <_strtod_l+0xb5c>)
10016a2a:	ab1b      	add	r3, sp, #108	@ 0x6c
10016a2c:	a919      	add	r1, sp, #100	@ 0x64
10016a2e:	4658      	mov	r0, fp
10016a30:	f000 fd18 	bl	10017464 <__gethex>
10016a34:	f010 050f 	ands.w	r5, r0, #15
10016a38:	4604      	mov	r4, r0
10016a3a:	f43f aeb8 	beq.w	100167ae <_strtod_l+0x7ae>
10016a3e:	2d06      	cmp	r5, #6
10016a40:	f040 80ae 	bne.w	10016ba0 <_strtod_l+0xba0>
10016a44:	9a07      	ldr	r2, [sp, #28]
10016a46:	b112      	cbz	r2, 10016a4e <_strtod_l+0xa4e>
10016a48:	f108 0301 	add.w	r3, r8, #1
10016a4c:	6013      	str	r3, [r2, #0]
10016a4e:	f04f 0800 	mov.w	r8, #0
10016a52:	f04f 0900 	mov.w	r9, #0
10016a56:	f7ff bbd8 	b.w	1001620a <_strtod_l+0x20a>
10016a5a:	a335      	add	r3, pc, #212	@ (adr r3, 10016b30 <_strtod_l+0xb30>)
10016a5c:	e9d3 2300 	ldrd	r2, r3, [r3]
10016a60:	f009 fafa 	bl	10020058 <__aeabi_dcmplt>
10016a64:	2800      	cmp	r0, #0
10016a66:	d1d5      	bne.n	10016a14 <_strtod_l+0xa14>
10016a68:	a333      	add	r3, pc, #204	@ (adr r3, 10016b38 <_strtod_l+0xb38>)
10016a6a:	e9d3 2300 	ldrd	r2, r3, [r3]
10016a6e:	4630      	mov	r0, r6
10016a70:	4639      	mov	r1, r7
10016a72:	f009 fb0f 	bl	10020094 <__aeabi_dcmpgt>
10016a76:	2800      	cmp	r0, #0
10016a78:	f43f adf3 	beq.w	10016662 <_strtod_l+0x662>
10016a7c:	e7ca      	b.n	10016a14 <_strtod_l+0xa14>
10016a7e:	9b04      	ldr	r3, [sp, #16]
10016a80:	2b01      	cmp	r3, #1
10016a82:	d19f      	bne.n	100169c4 <_strtod_l+0x9c4>
10016a84:	2f00      	cmp	r7, #0
10016a86:	d19d      	bne.n	100169c4 <_strtod_l+0x9c4>
10016a88:	464f      	mov	r7, r9
10016a8a:	9c1a      	ldr	r4, [sp, #104]	@ 0x68
10016a8c:	2322      	movs	r3, #34	@ 0x22
10016a8e:	4625      	mov	r5, r4
10016a90:	f8cb 3000 	str.w	r3, [fp]
10016a94:	f04f 0800 	mov.w	r8, #0
10016a98:	f04f 0900 	mov.w	r9, #0
10016a9c:	e721      	b.n	100168e2 <_strtod_l+0x8e2>
10016a9e:	2322      	movs	r3, #34	@ 0x22
10016aa0:	f8cb 3000 	str.w	r3, [fp]
10016aa4:	f8df 909c 	ldr.w	r9, [pc, #156]	@ 10016b44 <_strtod_l+0xb44>
10016aa8:	f04f 0800 	mov.w	r8, #0
10016aac:	e683      	b.n	100167b6 <_strtod_l+0x7b6>
10016aae:	f101 7454 	add.w	r4, r1, #55574528	@ 0x3500000
10016ab2:	9405      	str	r4, [sp, #20]
10016ab4:	e5ce      	b.n	10016654 <_strtod_l+0x654>
10016ab6:	4664      	mov	r4, ip
10016ab8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10016aba:	2908      	cmp	r1, #8
10016abc:	4403      	add	r3, r0
10016abe:	930e      	str	r3, [sp, #56]	@ 0x38
10016ac0:	f77f ab64 	ble.w	1001618c <_strtod_l+0x18c>
10016ac4:	2c10      	cmp	r4, #16
10016ac6:	bfdc      	itt	le
10016ac8:	eb09 0989 	addle.w	r9, r9, r9, lsl #2
10016acc:	eb02 0949 	addle.w	r9, r2, r9, lsl #1
10016ad0:	2000      	movs	r0, #0
10016ad2:	f7ff bb60 	b.w	10016196 <_strtod_l+0x196>
10016ad6:	4922      	ldr	r1, [pc, #136]	@ (10016b60 <_strtod_l+0xb60>)
10016ad8:	2201      	movs	r2, #1
10016ada:	4640      	mov	r0, r8
10016adc:	f001 f918 	bl	10017d10 <strncmp>
10016ae0:	2800      	cmp	r0, #0
10016ae2:	f000 80a0 	beq.w	10016c26 <_strtod_l+0xc26>
10016ae6:	f04f 0a00 	mov.w	sl, #0
10016aea:	46d1      	mov	r9, sl
10016aec:	4655      	mov	r5, sl
10016aee:	4650      	mov	r0, sl
10016af0:	f8cd a038 	str.w	sl, [sp, #56]	@ 0x38
10016af4:	4654      	mov	r4, sl
10016af6:	46d4      	mov	ip, sl
10016af8:	f7ff bba7 	b.w	1001624a <_strtod_l+0x24a>
10016afc:	f644 631f 	movw	r3, #19999	@ 0x4e1f
10016b00:	4299      	cmp	r1, r3
10016b02:	bfa8      	it	ge
10016b04:	4619      	movge	r1, r3
10016b06:	910f      	str	r1, [sp, #60]	@ 0x3c
10016b08:	e41e      	b.n	10016348 <_strtod_l+0x348>
10016b0a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
10016b0c:	4915      	ldr	r1, [pc, #84]	@ (10016b64 <_strtod_l+0xb64>)
10016b0e:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
10016b12:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
10016b16:	e9d1 0100 	ldrd	r0, r1, [r1]
10016b1a:	f009 f82b 	bl	1001fb74 <__aeabi_dmul>
10016b1e:	4680      	mov	r8, r0
10016b20:	4689      	mov	r9, r1
10016b22:	e648      	b.n	100167b6 <_strtod_l+0x7b6>
10016b24:	f3af 8000 	nop.w
10016b28:	94a03595 	.word	0x94a03595
10016b2c:	3fcfffff 	.word	0x3fcfffff
10016b30:	94a03595 	.word	0x94a03595
10016b34:	3fdfffff 	.word	0x3fdfffff
10016b38:	35afe535 	.word	0x35afe535
10016b3c:	3fe00000 	.word	0x3fe00000
10016b40:	3fe00000 	.word	0x3fe00000
10016b44:	7ff00000 	.word	0x7ff00000
10016b48:	fffffbe2 	.word	0xfffffbe2
10016b4c:	3ff00000 	.word	0x3ff00000
10016b50:	7c9fffff 	.word	0x7c9fffff
10016b54:	7fefffff 	.word	0x7fefffff
10016b58:	bff00000 	.word	0xbff00000
10016b5c:	10020c34 	.word	0x10020c34
10016b60:	100209e4 	.word	0x100209e4
10016b64:	10027a20 	.word	0x10027a20
10016b68:	49a4      	ldr	r1, [pc, #656]	@ (10016dfc <_strtod_l+0xdfc>)
10016b6a:	a819      	add	r0, sp, #100	@ 0x64
10016b6c:	f000 ffd0 	bl	10017b10 <__match>
10016b70:	2800      	cmp	r0, #0
10016b72:	f43f ab43 	beq.w	100161fc <_strtod_l+0x1fc>
10016b76:	9b19      	ldr	r3, [sp, #100]	@ 0x64
10016b78:	49a1      	ldr	r1, [pc, #644]	@ (10016e00 <_strtod_l+0xe00>)
10016b7a:	3b01      	subs	r3, #1
10016b7c:	a819      	add	r0, sp, #100	@ 0x64
10016b7e:	9319      	str	r3, [sp, #100]	@ 0x64
10016b80:	f000 ffc6 	bl	10017b10 <__match>
10016b84:	2800      	cmp	r0, #0
10016b86:	d18d      	bne.n	10016aa4 <_strtod_l+0xaa4>
10016b88:	9b19      	ldr	r3, [sp, #100]	@ 0x64
10016b8a:	3301      	adds	r3, #1
10016b8c:	9319      	str	r3, [sp, #100]	@ 0x64
10016b8e:	e789      	b.n	10016aa4 <_strtod_l+0xaa4>
10016b90:	e9dd 3412 	ldrd	r3, r4, [sp, #72]	@ 0x48
10016b94:	e9cd 3416 	strd	r3, r4, [sp, #88]	@ 0x58
10016b98:	e544      	b.n	10016624 <_strtod_l+0x624>
10016b9a:	2000      	movs	r0, #0
10016b9c:	f7ff bae8 	b.w	10016170 <_strtod_l+0x170>
10016ba0:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
10016ba2:	b13a      	cbz	r2, 10016bb4 <_strtod_l+0xbb4>
10016ba4:	2135      	movs	r1, #53	@ 0x35
10016ba6:	a81c      	add	r0, sp, #112	@ 0x70
10016ba8:	f007 faec 	bl	1001e184 <__copybits>
10016bac:	991a      	ldr	r1, [sp, #104]	@ 0x68
10016bae:	4658      	mov	r0, fp
10016bb0:	f006 fe4e 	bl	1001d850 <_Bfree>
10016bb4:	3d01      	subs	r5, #1
10016bb6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
10016bb8:	2d04      	cmp	r5, #4
10016bba:	f200 81fc 	bhi.w	10016fb6 <_strtod_l+0xfb6>
10016bbe:	e8df f005 	tbb	[pc, r5]
10016bc2:	2c03      	.short	0x2c03
10016bc4:	1e29      	.short	0x1e29
10016bc6:	03          	.byte	0x03
10016bc7:	00          	.byte	0x00
10016bc8:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
10016bca:	9204      	str	r2, [sp, #16]
10016bcc:	f203 4233 	addw	r2, r3, #1075	@ 0x433
10016bd0:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
10016bd2:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
10016bd6:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
10016bda:	9305      	str	r3, [sp, #20]
10016bdc:	05e1      	lsls	r1, r4, #23
10016bde:	d502      	bpl.n	10016be6 <_strtod_l+0xbe6>
10016be0:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
10016be4:	9305      	str	r3, [sp, #20]
10016be6:	4a87      	ldr	r2, [pc, #540]	@ (10016e04 <_strtod_l+0xe04>)
10016be8:	401a      	ands	r2, r3
10016bea:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
10016bee:	2a00      	cmp	r2, #0
10016bf0:	f47f ade1 	bne.w	100167b6 <_strtod_l+0x7b6>
10016bf4:	f7fc fa6e 	bl	100130d4 <__errno>
10016bf8:	2322      	movs	r3, #34	@ 0x22
10016bfa:	6003      	str	r3, [r0, #0]
10016bfc:	e5db      	b.n	100167b6 <_strtod_l+0x7b6>
10016bfe:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10016c02:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
10016c06:	e9cd 2304 	strd	r2, r3, [sp, #16]
10016c0a:	05e3      	lsls	r3, r4, #23
10016c0c:	f57f aed7 	bpl.w	100169be <_strtod_l+0x9be>
10016c10:	9b05      	ldr	r3, [sp, #20]
10016c12:	e7e5      	b.n	10016be0 <_strtod_l+0xbe0>
10016c14:	4b7b      	ldr	r3, [pc, #492]	@ (10016e04 <_strtod_l+0xe04>)
10016c16:	9305      	str	r3, [sp, #20]
10016c18:	e7f7      	b.n	10016c0a <_strtod_l+0xc0a>
10016c1a:	e9dd 121c 	ldrd	r1, r2, [sp, #112]	@ 0x70
10016c1e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
10016c20:	e9cd 1204 	strd	r1, r2, [sp, #16]
10016c24:	e7da      	b.n	10016bdc <_strtod_l+0xbdc>
10016c26:	9a19      	ldr	r2, [sp, #100]	@ 0x64
10016c28:	4613      	mov	r3, r2
10016c2a:	3201      	adds	r2, #1
10016c2c:	9219      	str	r2, [sp, #100]	@ 0x64
10016c2e:	785f      	ldrb	r7, [r3, #1]
10016c30:	4605      	mov	r5, r0
10016c32:	4681      	mov	r9, r0
10016c34:	f7ff ba8f 	b.w	10016156 <_strtod_l+0x156>
10016c38:	4d73      	ldr	r5, [pc, #460]	@ (10016e08 <_strtod_l+0xe08>)
10016c3a:	f1c4 040f 	rsb	r4, r4, #15
10016c3e:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
10016c42:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
10016c46:	e9d1 0100 	ldrd	r0, r1, [r1]
10016c4a:	f008 ff93 	bl	1001fb74 <__aeabi_dmul>
10016c4e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10016c50:	1b1c      	subs	r4, r3, r4
10016c52:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
10016c56:	e9d5 2300 	ldrd	r2, r3, [r5]
10016c5a:	f008 ff8b 	bl	1001fb74 <__aeabi_dmul>
10016c5e:	4680      	mov	r8, r0
10016c60:	4689      	mov	r9, r1
10016c62:	e5a8      	b.n	100167b6 <_strtod_l+0x7b6>
10016c64:	46a2      	mov	sl, r4
10016c66:	900e      	str	r0, [sp, #56]	@ 0x38
10016c68:	f7ff ba98 	b.w	1001619c <_strtod_l+0x19c>
10016c6c:	4c67      	ldr	r4, [pc, #412]	@ (10016e0c <_strtod_l+0xe0c>)
10016c6e:	2300      	movs	r3, #0
10016c70:	e9cd 340c 	strd	r3, r4, [sp, #48]	@ 0x30
10016c74:	4c66      	ldr	r4, [pc, #408]	@ (10016e10 <_strtod_l+0xe10>)
10016c76:	2300      	movs	r3, #0
10016c78:	e9cd 3412 	strd	r3, r4, [sp, #72]	@ 0x48
10016c7c:	e4a8      	b.n	100165d0 <_strtod_l+0x5d0>
10016c7e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
10016c80:	4964      	ldr	r1, [pc, #400]	@ (10016e14 <_strtod_l+0xe14>)
10016c82:	463b      	mov	r3, r7
10016c84:	46c4      	mov	ip, r8
10016c86:	464f      	mov	r7, r9
10016c88:	46ae      	mov	lr, r5
10016c8a:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
10016c8e:	f3c3 0213 	ubfx	r2, r3, #0, #20
10016c92:	2800      	cmp	r0, #0
10016c94:	d04c      	beq.n	10016d30 <_strtod_l+0xd30>
10016c96:	428a      	cmp	r2, r1
10016c98:	f000 80fc 	beq.w	10016e94 <_strtod_l+0xe94>
10016c9c:	2d00      	cmp	r5, #0
10016c9e:	f000 80f3 	beq.w	10016e88 <_strtod_l+0xe88>
10016ca2:	421d      	tst	r5, r3
10016ca4:	d03b      	beq.n	10016d1e <_strtod_l+0xd1e>
10016ca6:	4640      	mov	r0, r8
10016ca8:	4649      	mov	r1, r9
10016caa:	9304      	str	r3, [sp, #16]
10016cac:	f007 f95c 	bl	1001df68 <__ulp>
10016cb0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016cb2:	4604      	mov	r4, r0
10016cb4:	460d      	mov	r5, r1
10016cb6:	2b00      	cmp	r3, #0
10016cb8:	f000 8128 	beq.w	10016f0c <_strtod_l+0xf0c>
10016cbc:	9b04      	ldr	r3, [sp, #16]
10016cbe:	f3c3 530a 	ubfx	r3, r3, #20, #11
10016cc2:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
10016cc6:	2b00      	cmp	r3, #0
10016cc8:	f340 8151 	ble.w	10016f6e <_strtod_l+0xf6e>
10016ccc:	051c      	lsls	r4, r3, #20
10016cce:	f104 537f 	add.w	r3, r4, #1069547520	@ 0x3fc00000
10016cd2:	2200      	movs	r2, #0
10016cd4:	f503 1340 	add.w	r3, r3, #3145728	@ 0x300000
10016cd8:	f008 ff4c 	bl	1001fb74 <__aeabi_dmul>
10016cdc:	4602      	mov	r2, r0
10016cde:	460b      	mov	r3, r1
10016ce0:	4640      	mov	r0, r8
10016ce2:	4649      	mov	r1, r9
10016ce4:	f008 fd90 	bl	1001f808 <__adddf3>
10016ce8:	4680      	mov	r8, r0
10016cea:	4689      	mov	r9, r1
10016cec:	4b4a      	ldr	r3, [pc, #296]	@ (10016e18 <_strtod_l+0xe18>)
10016cee:	4640      	mov	r0, r8
10016cf0:	4649      	mov	r1, r9
10016cf2:	2200      	movs	r2, #0
10016cf4:	f008 ff3e 	bl	1001fb74 <__aeabi_dmul>
10016cf8:	4b42      	ldr	r3, [pc, #264]	@ (10016e04 <_strtod_l+0xe04>)
10016cfa:	400b      	ands	r3, r1
10016cfc:	4680      	mov	r8, r0
10016cfe:	4689      	mov	r9, r1
10016d00:	2b00      	cmp	r3, #0
10016d02:	f47f ae8a 	bne.w	10016a1a <_strtod_l+0xa1a>
10016d06:	2322      	movs	r3, #34	@ 0x22
10016d08:	f8cb 3000 	str.w	r3, [fp]
10016d0c:	e685      	b.n	10016a1a <_strtod_l+0xa1a>
10016d0e:	f1be 0f00 	cmp.w	lr, #0
10016d12:	f000 8089 	beq.w	10016e28 <_strtod_l+0xe28>
10016d16:	ea1e 0f03 	tst.w	lr, r3
10016d1a:	f040 8089 	bne.w	10016e30 <_strtod_l+0xe30>
10016d1e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016d20:	2b00      	cmp	r3, #0
10016d22:	d1e3      	bne.n	10016cec <_strtod_l+0xcec>
10016d24:	e679      	b.n	10016a1a <_strtod_l+0xa1a>
10016d26:	f102 7354 	add.w	r3, r2, #55574528	@ 0x3500000
10016d2a:	9305      	str	r3, [sp, #20]
10016d2c:	f7ff bbac 	b.w	10016488 <_strtod_l+0x488>
10016d30:	2a00      	cmp	r2, #0
10016d32:	d175      	bne.n	10016e20 <_strtod_l+0xe20>
10016d34:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
10016d38:	4622      	mov	r2, r4
10016d3a:	2c00      	cmp	r4, #0
10016d3c:	d1e7      	bne.n	10016d0e <_strtod_l+0xd0e>
10016d3e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10016d40:	2a00      	cmp	r2, #0
10016d42:	f040 80be 	bne.w	10016ec2 <_strtod_l+0xec2>
10016d46:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
10016d4a:	0d24      	lsrs	r4, r4, #20
10016d4c:	0524      	lsls	r4, r4, #20
10016d4e:	f5a4 1480 	sub.w	r4, r4, #1048576	@ 0x100000
10016d52:	ea6f 5314 	mvn.w	r3, r4, lsr #20
10016d56:	ea6f 5303 	mvn.w	r3, r3, lsl #20
10016d5a:	9305      	str	r3, [sp, #20]
10016d5c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10016d60:	9304      	str	r3, [sp, #16]
10016d62:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
10016d66:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
10016d68:	e5bb      	b.n	100168e2 <_strtod_l+0x8e2>
10016d6a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
10016d6e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
10016d70:	4303      	orrs	r3, r0
10016d72:	464f      	mov	r7, r9
10016d74:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
10016d78:	d1d1      	bne.n	10016d1e <_strtod_l+0xd1e>
10016d7a:	f3c1 0313 	ubfx	r3, r1, #0, #20
10016d7e:	2b00      	cmp	r3, #0
10016d80:	d1cd      	bne.n	10016d1e <_strtod_l+0xd1e>
10016d82:	f021 4400 	bic.w	r4, r1, #2147483648	@ 0x80000000
10016d86:	0d24      	lsrs	r4, r4, #20
10016d88:	0524      	lsls	r4, r4, #20
10016d8a:	f1b4 6fd6 	cmp.w	r4, #112197632	@ 0x6b00000
10016d8e:	4625      	mov	r5, r4
10016d90:	d9c5      	bls.n	10016d1e <_strtod_l+0xd1e>
10016d92:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10016d94:	6953      	ldr	r3, [r2, #20]
10016d96:	b913      	cbnz	r3, 10016d9e <_strtod_l+0xd9e>
10016d98:	6913      	ldr	r3, [r2, #16]
10016d9a:	2b01      	cmp	r3, #1
10016d9c:	ddbf      	ble.n	10016d1e <_strtod_l+0xd1e>
10016d9e:	9909      	ldr	r1, [sp, #36]	@ 0x24
10016da0:	2201      	movs	r2, #1
10016da2:	4658      	mov	r0, fp
10016da4:	f006 ff96 	bl	1001dcd4 <__lshift>
10016da8:	4651      	mov	r1, sl
10016daa:	9009      	str	r0, [sp, #36]	@ 0x24
10016dac:	f007 f80a 	bl	1001ddc4 <__mcmp>
10016db0:	2800      	cmp	r0, #0
10016db2:	ddb4      	ble.n	10016d1e <_strtod_l+0xd1e>
10016db4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016db6:	2b00      	cmp	r3, #0
10016db8:	d0c9      	beq.n	10016d4e <_strtod_l+0xd4e>
10016dba:	f5a5 1380 	sub.w	r3, r5, #1048576	@ 0x100000
10016dbe:	ea6f 5313 	mvn.w	r3, r3, lsr #20
10016dc2:	ea6f 5303 	mvn.w	r3, r3, lsl #20
10016dc6:	9305      	str	r3, [sp, #20]
10016dc8:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10016dcc:	9304      	str	r3, [sp, #16]
10016dce:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
10016dd2:	e78b      	b.n	10016cec <_strtod_l+0xcec>
10016dd4:	4911      	ldr	r1, [pc, #68]	@ (10016e1c <_strtod_l+0xe1c>)
10016dd6:	a819      	add	r0, sp, #100	@ 0x64
10016dd8:	aa1c      	add	r2, sp, #112	@ 0x70
10016dda:	f000 feb3 	bl	10017b44 <__hexnan>
10016dde:	2805      	cmp	r0, #5
10016de0:	f47f aa56 	bne.w	10016290 <_strtod_l+0x290>
10016de4:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
10016de6:	f043 43ff 	orr.w	r3, r3, #2139095040	@ 0x7f800000
10016dea:	f443 03e0 	orr.w	r3, r3, #7340032	@ 0x700000
10016dee:	9305      	str	r3, [sp, #20]
10016df0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
10016df2:	9304      	str	r3, [sp, #16]
10016df4:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
10016df8:	e4dd      	b.n	100167b6 <_strtod_l+0x7b6>
10016dfa:	bf00      	nop
10016dfc:	10020c10 	.word	0x10020c10
10016e00:	10020c14 	.word	0x10020c14
10016e04:	7ff00000 	.word	0x7ff00000
10016e08:	10027a20 	.word	0x10027a20
10016e0c:	bfe00000 	.word	0xbfe00000
10016e10:	3fe00000 	.word	0x3fe00000
10016e14:	000fffff 	.word	0x000fffff
10016e18:	39500000 	.word	0x39500000
10016e1c:	10020c20 	.word	0x10020c20
10016e20:	2d00      	cmp	r5, #0
10016e22:	f47f af78 	bne.w	10016d16 <_strtod_l+0xd16>
10016e26:	9a04      	ldr	r2, [sp, #16]
10016e28:	ea1c 0f02 	tst.w	ip, r2
10016e2c:	f43f af77 	beq.w	10016d1e <_strtod_l+0xd1e>
10016e30:	4640      	mov	r0, r8
10016e32:	4649      	mov	r1, r9
10016e34:	9304      	str	r3, [sp, #16]
10016e36:	f007 f897 	bl	1001df68 <__ulp>
10016e3a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016e3c:	2b00      	cmp	r3, #0
10016e3e:	d053      	beq.n	10016ee8 <_strtod_l+0xee8>
10016e40:	9b04      	ldr	r3, [sp, #16]
10016e42:	f3c3 530a 	ubfx	r3, r3, #20, #11
10016e46:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
10016e4a:	2b00      	cmp	r3, #0
10016e4c:	f340 809b 	ble.w	10016f86 <_strtod_l+0xf86>
10016e50:	051c      	lsls	r4, r3, #20
10016e52:	f104 537f 	add.w	r3, r4, #1069547520	@ 0x3fc00000
10016e56:	2200      	movs	r2, #0
10016e58:	f503 1340 	add.w	r3, r3, #3145728	@ 0x300000
10016e5c:	f008 fe8a 	bl	1001fb74 <__aeabi_dmul>
10016e60:	4602      	mov	r2, r0
10016e62:	460b      	mov	r3, r1
10016e64:	4640      	mov	r0, r8
10016e66:	4649      	mov	r1, r9
10016e68:	f008 fccc 	bl	1001f804 <__aeabi_dsub>
10016e6c:	2200      	movs	r2, #0
10016e6e:	2300      	movs	r3, #0
10016e70:	4680      	mov	r8, r0
10016e72:	4689      	mov	r9, r1
10016e74:	f009 f8e6 	bl	10020044 <__aeabi_dcmpeq>
10016e78:	2800      	cmp	r0, #0
10016e7a:	f43f af37 	beq.w	10016cec <_strtod_l+0xcec>
10016e7e:	e604      	b.n	10016a8a <_strtod_l+0xa8a>
10016e80:	f04f 0900 	mov.w	r9, #0
10016e84:	f7ff bae1 	b.w	1001644a <_strtod_l+0x44a>
10016e88:	9a04      	ldr	r2, [sp, #16]
10016e8a:	ea1c 0f02 	tst.w	ip, r2
10016e8e:	f43f af46 	beq.w	10016d1e <_strtod_l+0xd1e>
10016e92:	e708      	b.n	10016ca6 <_strtod_l+0xca6>
10016e94:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
10016e98:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10016e9a:	4604      	mov	r4, r0
10016e9c:	2a00      	cmp	r2, #0
10016e9e:	d147      	bne.n	10016f30 <_strtod_l+0xf30>
10016ea0:	4602      	mov	r2, r0
10016ea2:	3201      	adds	r2, #1
10016ea4:	d077      	beq.n	10016f96 <_strtod_l+0xf96>
10016ea6:	2d00      	cmp	r5, #0
10016ea8:	d070      	beq.n	10016f8c <_strtod_l+0xf8c>
10016eaa:	421d      	tst	r5, r3
10016eac:	f43f adb5 	beq.w	10016a1a <_strtod_l+0xa1a>
10016eb0:	e6f9      	b.n	10016ca6 <_strtod_l+0xca6>
10016eb2:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10016eb6:	fa02 f303 	lsl.w	r3, r2, r3
10016eba:	9a04      	ldr	r2, [sp, #16]
10016ebc:	401a      	ands	r2, r3
10016ebe:	9204      	str	r2, [sp, #16]
10016ec0:	e467      	b.n	10016792 <_strtod_l+0x792>
10016ec2:	4d3e      	ldr	r5, [pc, #248]	@ (10016fbc <_strtod_l+0xfbc>)
10016ec4:	401d      	ands	r5, r3
10016ec6:	f1b5 6fd6 	cmp.w	r5, #112197632	@ 0x6b00000
10016eca:	f63f af76 	bhi.w	10016dba <_strtod_l+0xdba>
10016ece:	f1b5 7f5c 	cmp.w	r5, #57671680	@ 0x3700000
10016ed2:	f63f af0b 	bhi.w	10016cec <_strtod_l+0xcec>
10016ed6:	2322      	movs	r3, #34	@ 0x22
10016ed8:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
10016eda:	f8cb 3000 	str.w	r3, [fp]
10016ede:	f04f 0800 	mov.w	r8, #0
10016ee2:	f04f 0900 	mov.w	r9, #0
10016ee6:	e4fc      	b.n	100168e2 <_strtod_l+0x8e2>
10016ee8:	4602      	mov	r2, r0
10016eea:	460b      	mov	r3, r1
10016eec:	4640      	mov	r0, r8
10016eee:	4649      	mov	r1, r9
10016ef0:	f008 fc88 	bl	1001f804 <__aeabi_dsub>
10016ef4:	9c1a      	ldr	r4, [sp, #104]	@ 0x68
10016ef6:	2200      	movs	r2, #0
10016ef8:	2300      	movs	r3, #0
10016efa:	4680      	mov	r8, r0
10016efc:	4689      	mov	r9, r1
10016efe:	4625      	mov	r5, r4
10016f00:	f009 f8a0 	bl	10020044 <__aeabi_dcmpeq>
10016f04:	2800      	cmp	r0, #0
10016f06:	f43f acec 	beq.w	100168e2 <_strtod_l+0x8e2>
10016f0a:	e5bf      	b.n	10016a8c <_strtod_l+0xa8c>
10016f0c:	4640      	mov	r0, r8
10016f0e:	4649      	mov	r1, r9
10016f10:	462b      	mov	r3, r5
10016f12:	4622      	mov	r2, r4
10016f14:	f008 fc78 	bl	1001f808 <__adddf3>
10016f18:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
10016f1a:	4680      	mov	r8, r0
10016f1c:	4689      	mov	r9, r1
10016f1e:	e4e0      	b.n	100168e2 <_strtod_l+0x8e2>
10016f20:	f1c2 024b 	rsb	r2, r2, #75	@ 0x4b
10016f24:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10016f28:	4093      	lsls	r3, r2
10016f2a:	400b      	ands	r3, r1
10016f2c:	9305      	str	r3, [sp, #20]
10016f2e:	e430      	b.n	10016792 <_strtod_l+0x792>
10016f30:	4a22      	ldr	r2, [pc, #136]	@ (10016fbc <_strtod_l+0xfbc>)
10016f32:	401a      	ands	r2, r3
10016f34:	f1b2 6fd4 	cmp.w	r2, #111149056	@ 0x6a00000
10016f38:	d909      	bls.n	10016f4e <_strtod_l+0xf4e>
10016f3a:	1c61      	adds	r1, r4, #1
10016f3c:	d032      	beq.n	10016fa4 <_strtod_l+0xfa4>
10016f3e:	f1be 0f00 	cmp.w	lr, #0
10016f42:	d033      	beq.n	10016fac <_strtod_l+0xfac>
10016f44:	ea1e 0f03 	tst.w	lr, r3
10016f48:	f43f aed0 	beq.w	10016cec <_strtod_l+0xcec>
10016f4c:	e6ab      	b.n	10016ca6 <_strtod_l+0xca6>
10016f4e:	0d10      	lsrs	r0, r2, #20
10016f50:	f1c0 006b 	rsb	r0, r0, #107	@ 0x6b
10016f54:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
10016f58:	4081      	lsls	r1, r0
10016f5a:	428c      	cmp	r4, r1
10016f5c:	d1ef      	bne.n	10016f3e <_strtod_l+0xf3e>
10016f5e:	f502 1380 	add.w	r3, r2, #1048576	@ 0x100000
10016f62:	9305      	str	r3, [sp, #20]
10016f64:	2300      	movs	r3, #0
10016f66:	9304      	str	r3, [sp, #16]
10016f68:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
10016f6c:	e6d7      	b.n	10016d1e <_strtod_l+0xd1e>
10016f6e:	4640      	mov	r0, r8
10016f70:	4649      	mov	r1, r9
10016f72:	4622      	mov	r2, r4
10016f74:	462b      	mov	r3, r5
10016f76:	f008 fc47 	bl	1001f808 <__adddf3>
10016f7a:	4680      	mov	r8, r0
10016f7c:	4689      	mov	r9, r1
10016f7e:	e6b5      	b.n	10016cec <_strtod_l+0xcec>
10016f80:	4621      	mov	r1, r4
10016f82:	3401      	adds	r4, #1
10016f84:	e598      	b.n	10016ab8 <_strtod_l+0xab8>
10016f86:	4602      	mov	r2, r0
10016f88:	460b      	mov	r3, r1
10016f8a:	e76b      	b.n	10016e64 <_strtod_l+0xe64>
10016f8c:	ea10 0f0c 	tst.w	r0, ip
10016f90:	f43f ad43 	beq.w	10016a1a <_strtod_l+0xa1a>
10016f94:	e687      	b.n	10016ca6 <_strtod_l+0xca6>
10016f96:	4a0a      	ldr	r2, [pc, #40]	@ (10016fc0 <_strtod_l+0xfc0>)
10016f98:	4293      	cmp	r3, r2
10016f9a:	f43f acc5 	beq.w	10016928 <_strtod_l+0x928>
10016f9e:	3201      	adds	r2, #1
10016fa0:	401a      	ands	r2, r3
10016fa2:	e7dc      	b.n	10016f5e <_strtod_l+0xf5e>
10016fa4:	4906      	ldr	r1, [pc, #24]	@ (10016fc0 <_strtod_l+0xfc0>)
10016fa6:	428b      	cmp	r3, r1
10016fa8:	d1d9      	bne.n	10016f5e <_strtod_l+0xf5e>
10016faa:	e4bd      	b.n	10016928 <_strtod_l+0x928>
10016fac:	ea14 0f0c 	tst.w	r4, ip
10016fb0:	f43f ae9c 	beq.w	10016cec <_strtod_l+0xcec>
10016fb4:	e677      	b.n	10016ca6 <_strtod_l+0xca6>
10016fb6:	2300      	movs	r3, #0
10016fb8:	e610      	b.n	10016bdc <_strtod_l+0xbdc>
10016fba:	bf00      	nop
10016fbc:	7ff00000 	.word	0x7ff00000
10016fc0:	7fefffff 	.word	0x7fefffff

10016fc4 <_strtod_r>:
10016fc4:	4b01      	ldr	r3, [pc, #4]	@ (10016fcc <_strtod_r+0x8>)
10016fc6:	f7ff b81b 	b.w	10016000 <_strtod_l>
10016fca:	bf00      	nop
10016fcc:	20000424 	.word	0x20000424

10016fd0 <_malloc_trim_r>:
10016fd0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10016fd4:	4606      	mov	r6, r0
10016fd6:	2008      	movs	r0, #8
10016fd8:	4689      	mov	r9, r1
10016fda:	f7fe f861 	bl	100150a0 <sysconf>
10016fde:	f8df 809c 	ldr.w	r8, [pc, #156]	@ 1001707c <_malloc_trim_r+0xac>
10016fe2:	4605      	mov	r5, r0
10016fe4:	4630      	mov	r0, r6
10016fe6:	f7fe fa43 	bl	10015470 <__malloc_lock>
10016fea:	f8d8 3008 	ldr.w	r3, [r8, #8]
10016fee:	685f      	ldr	r7, [r3, #4]
10016ff0:	f027 0703 	bic.w	r7, r7, #3
10016ff4:	f1a7 0411 	sub.w	r4, r7, #17
10016ff8:	eba4 0409 	sub.w	r4, r4, r9
10016ffc:	442c      	add	r4, r5
10016ffe:	fbb4 f4f5 	udiv	r4, r4, r5
10017002:	3c01      	subs	r4, #1
10017004:	fb05 f404 	mul.w	r4, r5, r4
10017008:	42a5      	cmp	r5, r4
1001700a:	dc08      	bgt.n	1001701e <_malloc_trim_r+0x4e>
1001700c:	2100      	movs	r1, #0
1001700e:	4630      	mov	r0, r6
10017010:	f001 f960 	bl	100182d4 <_sbrk_r>
10017014:	f8d8 3008 	ldr.w	r3, [r8, #8]
10017018:	443b      	add	r3, r7
1001701a:	4298      	cmp	r0, r3
1001701c:	d005      	beq.n	1001702a <_malloc_trim_r+0x5a>
1001701e:	4630      	mov	r0, r6
10017020:	f7fe fa2c 	bl	1001547c <__malloc_unlock>
10017024:	2000      	movs	r0, #0
10017026:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1001702a:	4261      	negs	r1, r4
1001702c:	4630      	mov	r0, r6
1001702e:	f001 f951 	bl	100182d4 <_sbrk_r>
10017032:	3001      	adds	r0, #1
10017034:	d00f      	beq.n	10017056 <_malloc_trim_r+0x86>
10017036:	4a12      	ldr	r2, [pc, #72]	@ (10017080 <_malloc_trim_r+0xb0>)
10017038:	f8d8 3008 	ldr.w	r3, [r8, #8]
1001703c:	1b3f      	subs	r7, r7, r4
1001703e:	f047 0701 	orr.w	r7, r7, #1
10017042:	605f      	str	r7, [r3, #4]
10017044:	6813      	ldr	r3, [r2, #0]
10017046:	4630      	mov	r0, r6
10017048:	1b1b      	subs	r3, r3, r4
1001704a:	6013      	str	r3, [r2, #0]
1001704c:	f7fe fa16 	bl	1001547c <__malloc_unlock>
10017050:	2001      	movs	r0, #1
10017052:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
10017056:	2100      	movs	r1, #0
10017058:	4630      	mov	r0, r6
1001705a:	f001 f93b 	bl	100182d4 <_sbrk_r>
1001705e:	f8d8 2008 	ldr.w	r2, [r8, #8]
10017062:	1a83      	subs	r3, r0, r2
10017064:	2b0f      	cmp	r3, #15
10017066:	ddda      	ble.n	1001701e <_malloc_trim_r+0x4e>
10017068:	f043 0301 	orr.w	r3, r3, #1
1001706c:	6053      	str	r3, [r2, #4]
1001706e:	4b05      	ldr	r3, [pc, #20]	@ (10017084 <_malloc_trim_r+0xb4>)
10017070:	4903      	ldr	r1, [pc, #12]	@ (10017080 <_malloc_trim_r+0xb0>)
10017072:	681b      	ldr	r3, [r3, #0]
10017074:	1ac0      	subs	r0, r0, r3
10017076:	6008      	str	r0, [r1, #0]
10017078:	e7d1      	b.n	1001701e <_malloc_trim_r+0x4e>
1001707a:	bf00      	nop
1001707c:	20000018 	.word	0x20000018
10017080:	20001454 	.word	0x20001454
10017084:	20000010 	.word	0x20000010

10017088 <_free_r>:
10017088:	2900      	cmp	r1, #0
1001708a:	d07c      	beq.n	10017186 <_free_r+0xfe>
1001708c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1001708e:	460c      	mov	r4, r1
10017090:	4606      	mov	r6, r0
10017092:	f7fe f9ed 	bl	10015470 <__malloc_lock>
10017096:	f854 3c04 	ldr.w	r3, [r4, #-4]
1001709a:	4f77      	ldr	r7, [pc, #476]	@ (10017278 <_free_r+0x1f0>)
1001709c:	f1a4 0508 	sub.w	r5, r4, #8
100170a0:	f023 0101 	bic.w	r1, r3, #1
100170a4:	1868      	adds	r0, r5, r1
100170a6:	f8d7 c008 	ldr.w	ip, [r7, #8]
100170aa:	6842      	ldr	r2, [r0, #4]
100170ac:	4584      	cmp	ip, r0
100170ae:	f022 0203 	bic.w	r2, r2, #3
100170b2:	f000 8083 	beq.w	100171bc <_free_r+0x134>
100170b6:	07db      	lsls	r3, r3, #31
100170b8:	6042      	str	r2, [r0, #4]
100170ba:	eb00 0c02 	add.w	ip, r0, r2
100170be:	d433      	bmi.n	10017128 <_free_r+0xa0>
100170c0:	f854 4c08 	ldr.w	r4, [r4, #-8]
100170c4:	f8dc 3004 	ldr.w	r3, [ip, #4]
100170c8:	1b2d      	subs	r5, r5, r4
100170ca:	4421      	add	r1, r4
100170cc:	68ac      	ldr	r4, [r5, #8]
100170ce:	f107 0c08 	add.w	ip, r7, #8
100170d2:	4564      	cmp	r4, ip
100170d4:	f003 0301 	and.w	r3, r3, #1
100170d8:	d064      	beq.n	100171a4 <_free_r+0x11c>
100170da:	f8d5 e00c 	ldr.w	lr, [r5, #12]
100170de:	f8c4 e00c 	str.w	lr, [r4, #12]
100170e2:	f8ce 4008 	str.w	r4, [lr, #8]
100170e6:	2b00      	cmp	r3, #0
100170e8:	f000 8081 	beq.w	100171ee <_free_r+0x166>
100170ec:	f041 0301 	orr.w	r3, r1, #1
100170f0:	606b      	str	r3, [r5, #4]
100170f2:	6001      	str	r1, [r0, #0]
100170f4:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
100170f8:	d222      	bcs.n	10017140 <_free_r+0xb8>
100170fa:	6878      	ldr	r0, [r7, #4]
100170fc:	08cb      	lsrs	r3, r1, #3
100170fe:	2201      	movs	r2, #1
10017100:	0949      	lsrs	r1, r1, #5
10017102:	3301      	adds	r3, #1
10017104:	408a      	lsls	r2, r1
10017106:	4302      	orrs	r2, r0
10017108:	f857 1033 	ldr.w	r1, [r7, r3, lsl #3]
1001710c:	607a      	str	r2, [r7, #4]
1001710e:	eb07 02c3 	add.w	r2, r7, r3, lsl #3
10017112:	3a08      	subs	r2, #8
10017114:	e9c5 1202 	strd	r1, r2, [r5, #8]
10017118:	f847 5033 	str.w	r5, [r7, r3, lsl #3]
1001711c:	60cd      	str	r5, [r1, #12]
1001711e:	4630      	mov	r0, r6
10017120:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
10017124:	f7fe b9aa 	b.w	1001547c <__malloc_unlock>
10017128:	f8dc 3004 	ldr.w	r3, [ip, #4]
1001712c:	07db      	lsls	r3, r3, #31
1001712e:	d52b      	bpl.n	10017188 <_free_r+0x100>
10017130:	f041 0301 	orr.w	r3, r1, #1
10017134:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
10017138:	f844 3c04 	str.w	r3, [r4, #-4]
1001713c:	6001      	str	r1, [r0, #0]
1001713e:	d3dc      	bcc.n	100170fa <_free_r+0x72>
10017140:	f5b1 6f20 	cmp.w	r1, #2560	@ 0xa00
10017144:	ea4f 2351 	mov.w	r3, r1, lsr #9
10017148:	d253      	bcs.n	100171f2 <_free_r+0x16a>
1001714a:	098b      	lsrs	r3, r1, #6
1001714c:	f103 0039 	add.w	r0, r3, #57	@ 0x39
10017150:	f103 0238 	add.w	r2, r3, #56	@ 0x38
10017154:	00c3      	lsls	r3, r0, #3
10017156:	18f8      	adds	r0, r7, r3
10017158:	58fb      	ldr	r3, [r7, r3]
1001715a:	3808      	subs	r0, #8
1001715c:	4298      	cmp	r0, r3
1001715e:	d103      	bne.n	10017168 <_free_r+0xe0>
10017160:	e063      	b.n	1001722a <_free_r+0x1a2>
10017162:	689b      	ldr	r3, [r3, #8]
10017164:	4298      	cmp	r0, r3
10017166:	d004      	beq.n	10017172 <_free_r+0xea>
10017168:	685a      	ldr	r2, [r3, #4]
1001716a:	f022 0203 	bic.w	r2, r2, #3
1001716e:	428a      	cmp	r2, r1
10017170:	d8f7      	bhi.n	10017162 <_free_r+0xda>
10017172:	68d8      	ldr	r0, [r3, #12]
10017174:	e9c5 3002 	strd	r3, r0, [r5, #8]
10017178:	6085      	str	r5, [r0, #8]
1001717a:	60dd      	str	r5, [r3, #12]
1001717c:	4630      	mov	r0, r6
1001717e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
10017182:	f7fe b97b 	b.w	1001547c <__malloc_unlock>
10017186:	4770      	bx	lr
10017188:	4411      	add	r1, r2
1001718a:	f107 0c08 	add.w	ip, r7, #8
1001718e:	6883      	ldr	r3, [r0, #8]
10017190:	4563      	cmp	r3, ip
10017192:	d03f      	beq.n	10017214 <_free_r+0x18c>
10017194:	68c2      	ldr	r2, [r0, #12]
10017196:	60da      	str	r2, [r3, #12]
10017198:	6093      	str	r3, [r2, #8]
1001719a:	f041 0301 	orr.w	r3, r1, #1
1001719e:	606b      	str	r3, [r5, #4]
100171a0:	5069      	str	r1, [r5, r1]
100171a2:	e7a7      	b.n	100170f4 <_free_r+0x6c>
100171a4:	2b00      	cmp	r3, #0
100171a6:	d161      	bne.n	1001726c <_free_r+0x1e4>
100171a8:	440a      	add	r2, r1
100171aa:	e9d0 1302 	ldrd	r1, r3, [r0, #8]
100171ae:	60cb      	str	r3, [r1, #12]
100171b0:	6099      	str	r1, [r3, #8]
100171b2:	f042 0301 	orr.w	r3, r2, #1
100171b6:	606b      	str	r3, [r5, #4]
100171b8:	50aa      	str	r2, [r5, r2]
100171ba:	e7b0      	b.n	1001711e <_free_r+0x96>
100171bc:	440a      	add	r2, r1
100171be:	07d9      	lsls	r1, r3, #31
100171c0:	d407      	bmi.n	100171d2 <_free_r+0x14a>
100171c2:	f854 3c08 	ldr.w	r3, [r4, #-8]
100171c6:	1aed      	subs	r5, r5, r3
100171c8:	441a      	add	r2, r3
100171ca:	e9d5 1302 	ldrd	r1, r3, [r5, #8]
100171ce:	60cb      	str	r3, [r1, #12]
100171d0:	6099      	str	r1, [r3, #8]
100171d2:	f042 0301 	orr.w	r3, r2, #1
100171d6:	606b      	str	r3, [r5, #4]
100171d8:	4b28      	ldr	r3, [pc, #160]	@ (1001727c <_free_r+0x1f4>)
100171da:	60bd      	str	r5, [r7, #8]
100171dc:	681b      	ldr	r3, [r3, #0]
100171de:	4293      	cmp	r3, r2
100171e0:	d89d      	bhi.n	1001711e <_free_r+0x96>
100171e2:	4b27      	ldr	r3, [pc, #156]	@ (10017280 <_free_r+0x1f8>)
100171e4:	4630      	mov	r0, r6
100171e6:	6819      	ldr	r1, [r3, #0]
100171e8:	f7ff fef2 	bl	10016fd0 <_malloc_trim_r>
100171ec:	e797      	b.n	1001711e <_free_r+0x96>
100171ee:	4411      	add	r1, r2
100171f0:	e7cd      	b.n	1001718e <_free_r+0x106>
100171f2:	2b14      	cmp	r3, #20
100171f4:	d908      	bls.n	10017208 <_free_r+0x180>
100171f6:	2b54      	cmp	r3, #84	@ 0x54
100171f8:	d81f      	bhi.n	1001723a <_free_r+0x1b2>
100171fa:	0b0b      	lsrs	r3, r1, #12
100171fc:	f103 006f 	add.w	r0, r3, #111	@ 0x6f
10017200:	f103 026e 	add.w	r2, r3, #110	@ 0x6e
10017204:	00c3      	lsls	r3, r0, #3
10017206:	e7a6      	b.n	10017156 <_free_r+0xce>
10017208:	f103 005c 	add.w	r0, r3, #92	@ 0x5c
1001720c:	f103 025b 	add.w	r2, r3, #91	@ 0x5b
10017210:	00c3      	lsls	r3, r0, #3
10017212:	e7a0      	b.n	10017156 <_free_r+0xce>
10017214:	f041 0301 	orr.w	r3, r1, #1
10017218:	613d      	str	r5, [r7, #16]
1001721a:	617d      	str	r5, [r7, #20]
1001721c:	f8c5 c008 	str.w	ip, [r5, #8]
10017220:	f8c5 c00c 	str.w	ip, [r5, #12]
10017224:	606b      	str	r3, [r5, #4]
10017226:	5069      	str	r1, [r5, r1]
10017228:	e779      	b.n	1001711e <_free_r+0x96>
1001722a:	6879      	ldr	r1, [r7, #4]
1001722c:	1092      	asrs	r2, r2, #2
1001722e:	2401      	movs	r4, #1
10017230:	fa04 f202 	lsl.w	r2, r4, r2
10017234:	430a      	orrs	r2, r1
10017236:	607a      	str	r2, [r7, #4]
10017238:	e79c      	b.n	10017174 <_free_r+0xec>
1001723a:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
1001723e:	d806      	bhi.n	1001724e <_free_r+0x1c6>
10017240:	0bcb      	lsrs	r3, r1, #15
10017242:	f103 0078 	add.w	r0, r3, #120	@ 0x78
10017246:	f103 0277 	add.w	r2, r3, #119	@ 0x77
1001724a:	00c3      	lsls	r3, r0, #3
1001724c:	e783      	b.n	10017156 <_free_r+0xce>
1001724e:	f240 5254 	movw	r2, #1364	@ 0x554
10017252:	4293      	cmp	r3, r2
10017254:	d806      	bhi.n	10017264 <_free_r+0x1dc>
10017256:	0c8b      	lsrs	r3, r1, #18
10017258:	f103 007d 	add.w	r0, r3, #125	@ 0x7d
1001725c:	f103 027c 	add.w	r2, r3, #124	@ 0x7c
10017260:	00c3      	lsls	r3, r0, #3
10017262:	e778      	b.n	10017156 <_free_r+0xce>
10017264:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
10017268:	227e      	movs	r2, #126	@ 0x7e
1001726a:	e774      	b.n	10017156 <_free_r+0xce>
1001726c:	f041 0301 	orr.w	r3, r1, #1
10017270:	606b      	str	r3, [r5, #4]
10017272:	6001      	str	r1, [r0, #0]
10017274:	e753      	b.n	1001711e <_free_r+0x96>
10017276:	bf00      	nop
10017278:	20000018 	.word	0x20000018
1001727c:	20000014 	.word	0x20000014
10017280:	20001484 	.word	0x20001484

10017284 <_strtol_l.constprop.0>:
10017284:	2b24      	cmp	r3, #36	@ 0x24
10017286:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001728a:	d843      	bhi.n	10017314 <_strtol_l.constprop.0+0x90>
1001728c:	2b01      	cmp	r3, #1
1001728e:	d041      	beq.n	10017314 <_strtol_l.constprop.0+0x90>
10017290:	4680      	mov	r8, r0
10017292:	4849      	ldr	r0, [pc, #292]	@ (100173b8 <_strtol_l.constprop.0+0x134>)
10017294:	461f      	mov	r7, r3
10017296:	468e      	mov	lr, r1
10017298:	4675      	mov	r5, lr
1001729a:	f81e bb01 	ldrb.w	fp, [lr], #1
1001729e:	f810 400b 	ldrb.w	r4, [r0, fp]
100172a2:	f014 0408 	ands.w	r4, r4, #8
100172a6:	d1f7      	bne.n	10017298 <_strtol_l.constprop.0+0x14>
100172a8:	f1bb 0f2d 	cmp.w	fp, #45	@ 0x2d
100172ac:	d06f      	beq.n	1001738e <_strtol_l.constprop.0+0x10a>
100172ae:	f1bb 0f2b 	cmp.w	fp, #43	@ 0x2b
100172b2:	bf08      	it	eq
100172b4:	f89e b000 	ldrbeq.w	fp, [lr]
100172b8:	f06f 4900 	mvn.w	r9, #2147483648	@ 0x80000000
100172bc:	bf08      	it	eq
100172be:	f105 0e02 	addeq.w	lr, r5, #2
100172c2:	bb73      	cbnz	r3, 10017322 <_strtol_l.constprop.0+0x9e>
100172c4:	f1bb 0f30 	cmp.w	fp, #48	@ 0x30
100172c8:	d04b      	beq.n	10017362 <_strtol_l.constprop.0+0xde>
100172ca:	270a      	movs	r7, #10
100172cc:	463b      	mov	r3, r7
100172ce:	2500      	movs	r5, #0
100172d0:	fbb9 f6f7 	udiv	r6, r9, r7
100172d4:	4628      	mov	r0, r5
100172d6:	fb07 9a16 	mls	sl, r7, r6, r9
100172da:	e005      	b.n	100172e8 <_strtol_l.constprop.0+0x64>
100172dc:	d03a      	beq.n	10017354 <_strtol_l.constprop.0+0xd0>
100172de:	fb07 c000 	mla	r0, r7, r0, ip
100172e2:	2501      	movs	r5, #1
100172e4:	f81e bb01 	ldrb.w	fp, [lr], #1
100172e8:	f1ab 0c30 	sub.w	ip, fp, #48	@ 0x30
100172ec:	f1bc 0f09 	cmp.w	ip, #9
100172f0:	d906      	bls.n	10017300 <_strtol_l.constprop.0+0x7c>
100172f2:	f1ab 0c41 	sub.w	ip, fp, #65	@ 0x41
100172f6:	f1bc 0f19 	cmp.w	ip, #25
100172fa:	d819      	bhi.n	10017330 <_strtol_l.constprop.0+0xac>
100172fc:	f1ab 0c37 	sub.w	ip, fp, #55	@ 0x37
10017300:	4563      	cmp	r3, ip
10017302:	dd1e      	ble.n	10017342 <_strtol_l.constprop.0+0xbe>
10017304:	f1b5 3fff 	cmp.w	r5, #4294967295	@ 0xffffffff
10017308:	d0ec      	beq.n	100172e4 <_strtol_l.constprop.0+0x60>
1001730a:	4286      	cmp	r6, r0
1001730c:	d2e6      	bcs.n	100172dc <_strtol_l.constprop.0+0x58>
1001730e:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
10017312:	e7e7      	b.n	100172e4 <_strtol_l.constprop.0+0x60>
10017314:	f7fb fede 	bl	100130d4 <__errno>
10017318:	2316      	movs	r3, #22
1001731a:	6003      	str	r3, [r0, #0]
1001731c:	2000      	movs	r0, #0
1001731e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
10017322:	2b10      	cmp	r3, #16
10017324:	d1d3      	bne.n	100172ce <_strtol_l.constprop.0+0x4a>
10017326:	f1bb 0f30 	cmp.w	fp, #48	@ 0x30
1001732a:	d023      	beq.n	10017374 <_strtol_l.constprop.0+0xf0>
1001732c:	461f      	mov	r7, r3
1001732e:	e7ce      	b.n	100172ce <_strtol_l.constprop.0+0x4a>
10017330:	f1ab 0c61 	sub.w	ip, fp, #97	@ 0x61
10017334:	f1bc 0f19 	cmp.w	ip, #25
10017338:	d803      	bhi.n	10017342 <_strtol_l.constprop.0+0xbe>
1001733a:	f1ab 0c57 	sub.w	ip, fp, #87	@ 0x57
1001733e:	4563      	cmp	r3, ip
10017340:	dce0      	bgt.n	10017304 <_strtol_l.constprop.0+0x80>
10017342:	1c6b      	adds	r3, r5, #1
10017344:	d02b      	beq.n	1001739e <_strtol_l.constprop.0+0x11a>
10017346:	b954      	cbnz	r4, 1001735e <_strtol_l.constprop.0+0xda>
10017348:	2a00      	cmp	r2, #0
1001734a:	d0e8      	beq.n	1001731e <_strtol_l.constprop.0+0x9a>
1001734c:	bb85      	cbnz	r5, 100173b0 <_strtol_l.constprop.0+0x12c>
1001734e:	6011      	str	r1, [r2, #0]
10017350:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
10017354:	45e2      	cmp	sl, ip
10017356:	dac2      	bge.n	100172de <_strtol_l.constprop.0+0x5a>
10017358:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
1001735c:	e7c2      	b.n	100172e4 <_strtol_l.constprop.0+0x60>
1001735e:	4240      	negs	r0, r0
10017360:	e7f2      	b.n	10017348 <_strtol_l.constprop.0+0xc4>
10017362:	f89e 3000 	ldrb.w	r3, [lr]
10017366:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
1001736a:	2b58      	cmp	r3, #88	@ 0x58
1001736c:	d008      	beq.n	10017380 <_strtol_l.constprop.0+0xfc>
1001736e:	2708      	movs	r7, #8
10017370:	463b      	mov	r3, r7
10017372:	e7ac      	b.n	100172ce <_strtol_l.constprop.0+0x4a>
10017374:	f89e 0000 	ldrb.w	r0, [lr]
10017378:	f000 00df 	and.w	r0, r0, #223	@ 0xdf
1001737c:	2858      	cmp	r0, #88	@ 0x58
1001737e:	d1d5      	bne.n	1001732c <_strtol_l.constprop.0+0xa8>
10017380:	2710      	movs	r7, #16
10017382:	f89e b001 	ldrb.w	fp, [lr, #1]
10017386:	463b      	mov	r3, r7
10017388:	f10e 0e02 	add.w	lr, lr, #2
1001738c:	e79f      	b.n	100172ce <_strtol_l.constprop.0+0x4a>
1001738e:	f89e b000 	ldrb.w	fp, [lr]
10017392:	f04f 4900 	mov.w	r9, #2147483648	@ 0x80000000
10017396:	f105 0e02 	add.w	lr, r5, #2
1001739a:	2401      	movs	r4, #1
1001739c:	e791      	b.n	100172c2 <_strtol_l.constprop.0+0x3e>
1001739e:	2322      	movs	r3, #34	@ 0x22
100173a0:	f8c8 3000 	str.w	r3, [r8]
100173a4:	b132      	cbz	r2, 100173b4 <_strtol_l.constprop.0+0x130>
100173a6:	f10e 31ff 	add.w	r1, lr, #4294967295	@ 0xffffffff
100173aa:	4648      	mov	r0, r9
100173ac:	6011      	str	r1, [r2, #0]
100173ae:	e7cf      	b.n	10017350 <_strtol_l.constprop.0+0xcc>
100173b0:	4681      	mov	r9, r0
100173b2:	e7f8      	b.n	100173a6 <_strtol_l.constprop.0+0x122>
100173b4:	4648      	mov	r0, r9
100173b6:	e7b2      	b.n	1001731e <_strtol_l.constprop.0+0x9a>
100173b8:	10020b0d 	.word	0x10020b0d

100173bc <_strtol_r>:
100173bc:	f7ff bf62 	b.w	10017284 <_strtol_l.constprop.0>

100173c0 <rshift>:
100173c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
100173c4:	6904      	ldr	r4, [r0, #16]
100173c6:	ebb4 1f61 	cmp.w	r4, r1, asr #5
100173ca:	dc05      	bgt.n	100173d8 <rshift+0x18>
100173cc:	2300      	movs	r3, #0
100173ce:	6103      	str	r3, [r0, #16]
100173d0:	2300      	movs	r3, #0
100173d2:	6143      	str	r3, [r0, #20]
100173d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
100173d8:	f100 0514 	add.w	r5, r0, #20
100173dc:	114e      	asrs	r6, r1, #5
100173de:	f011 0c1f 	ands.w	ip, r1, #31
100173e2:	eb05 0e84 	add.w	lr, r5, r4, lsl #2
100173e6:	eb05 0386 	add.w	r3, r5, r6, lsl #2
100173ea:	d021      	beq.n	10017430 <rshift+0x70>
100173ec:	f855 1026 	ldr.w	r1, [r5, r6, lsl #2]
100173f0:	3304      	adds	r3, #4
100173f2:	459e      	cmp	lr, r3
100173f4:	fa21 f10c 	lsr.w	r1, r1, ip
100173f8:	f1cc 0820 	rsb	r8, ip, #32
100173fc:	d92d      	bls.n	1001745a <rshift+0x9a>
100173fe:	462f      	mov	r7, r5
10017400:	681a      	ldr	r2, [r3, #0]
10017402:	fa02 f208 	lsl.w	r2, r2, r8
10017406:	430a      	orrs	r2, r1
10017408:	f847 2b04 	str.w	r2, [r7], #4
1001740c:	f853 1b04 	ldr.w	r1, [r3], #4
10017410:	459e      	cmp	lr, r3
10017412:	fa21 f10c 	lsr.w	r1, r1, ip
10017416:	d8f3      	bhi.n	10017400 <rshift+0x40>
10017418:	1ba3      	subs	r3, r4, r6
1001741a:	009b      	lsls	r3, r3, #2
1001741c:	3b05      	subs	r3, #5
1001741e:	089b      	lsrs	r3, r3, #2
10017420:	3301      	adds	r3, #1
10017422:	eb05 0483 	add.w	r4, r5, r3, lsl #2
10017426:	f845 1023 	str.w	r1, [r5, r3, lsl #2]
1001742a:	b179      	cbz	r1, 1001744c <rshift+0x8c>
1001742c:	3404      	adds	r4, #4
1001742e:	e00d      	b.n	1001744c <rshift+0x8c>
10017430:	459e      	cmp	lr, r3
10017432:	bf88      	it	hi
10017434:	f100 0210 	addhi.w	r2, r0, #16
10017438:	d9c8      	bls.n	100173cc <rshift+0xc>
1001743a:	f853 1b04 	ldr.w	r1, [r3], #4
1001743e:	f842 1f04 	str.w	r1, [r2, #4]!
10017442:	459e      	cmp	lr, r3
10017444:	d8f9      	bhi.n	1001743a <rshift+0x7a>
10017446:	1ba4      	subs	r4, r4, r6
10017448:	eb05 0484 	add.w	r4, r5, r4, lsl #2
1001744c:	1b63      	subs	r3, r4, r5
1001744e:	109b      	asrs	r3, r3, #2
10017450:	42ac      	cmp	r4, r5
10017452:	6103      	str	r3, [r0, #16]
10017454:	d0bc      	beq.n	100173d0 <rshift+0x10>
10017456:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001745a:	6141      	str	r1, [r0, #20]
1001745c:	2900      	cmp	r1, #0
1001745e:	d0b5      	beq.n	100173cc <rshift+0xc>
10017460:	462c      	mov	r4, r5
10017462:	e7e3      	b.n	1001742c <rshift+0x6c>

10017464 <__gethex>:
10017464:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10017468:	680f      	ldr	r7, [r1, #0]
1001746a:	b085      	sub	sp, #20
1001746c:	e9cd 2000 	strd	r2, r0, [sp]
10017470:	78ba      	ldrb	r2, [r7, #2]
10017472:	9303      	str	r3, [sp, #12]
10017474:	2a30      	cmp	r2, #48	@ 0x30
10017476:	4689      	mov	r9, r1
10017478:	f040 81ca 	bne.w	10017810 <__gethex+0x3ac>
1001747c:	1cfb      	adds	r3, r7, #3
1001747e:	781a      	ldrb	r2, [r3, #0]
10017480:	2a30      	cmp	r2, #48	@ 0x30
10017482:	461c      	mov	r4, r3
10017484:	f103 0301 	add.w	r3, r3, #1
10017488:	d0f9      	beq.n	1001747e <__gethex+0x1a>
1001748a:	1be7      	subs	r7, r4, r7
1001748c:	3f02      	subs	r7, #2
1001748e:	f8df 82d8 	ldr.w	r8, [pc, #728]	@ 10017768 <__gethex+0x304>
10017492:	f818 3002 	ldrb.w	r3, [r8, r2]
10017496:	2b00      	cmp	r3, #0
10017498:	f000 80df 	beq.w	1001765a <__gethex+0x1f6>
1001749c:	7823      	ldrb	r3, [r4, #0]
1001749e:	f818 3003 	ldrb.w	r3, [r8, r3]
100174a2:	f04f 0a00 	mov.w	sl, #0
100174a6:	4655      	mov	r5, sl
100174a8:	2b00      	cmp	r3, #0
100174aa:	f000 8150 	beq.w	1001774e <__gethex+0x2ea>
100174ae:	4626      	mov	r6, r4
100174b0:	f816 3f01 	ldrb.w	r3, [r6, #1]!
100174b4:	f818 3003 	ldrb.w	r3, [r8, r3]
100174b8:	2b00      	cmp	r3, #0
100174ba:	d1f9      	bne.n	100174b0 <__gethex+0x4c>
100174bc:	49ab      	ldr	r1, [pc, #684]	@ (1001776c <__gethex+0x308>)
100174be:	2201      	movs	r2, #1
100174c0:	4630      	mov	r0, r6
100174c2:	f000 fc25 	bl	10017d10 <strncmp>
100174c6:	4683      	mov	fp, r0
100174c8:	2800      	cmp	r0, #0
100174ca:	d04c      	beq.n	10017566 <__gethex+0x102>
100174cc:	7832      	ldrb	r2, [r6, #0]
100174ce:	2d00      	cmp	r5, #0
100174d0:	f000 8180 	beq.w	100177d4 <__gethex+0x370>
100174d4:	1bab      	subs	r3, r5, r6
100174d6:	ea4f 0b83 	mov.w	fp, r3, lsl #2
100174da:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
100174de:	2a50      	cmp	r2, #80	@ 0x50
100174e0:	4635      	mov	r5, r6
100174e2:	d04c      	beq.n	1001757e <__gethex+0x11a>
100174e4:	f8c9 6000 	str.w	r6, [r9]
100174e8:	f1ba 0f00 	cmp.w	sl, #0
100174ec:	d165      	bne.n	100175ba <__gethex+0x156>
100174ee:	1b2a      	subs	r2, r5, r4
100174f0:	3a01      	subs	r2, #1
100174f2:	2a07      	cmp	r2, #7
100174f4:	4651      	mov	r1, sl
100174f6:	dd04      	ble.n	10017502 <__gethex+0x9e>
100174f8:	1052      	asrs	r2, r2, #1
100174fa:	2a07      	cmp	r2, #7
100174fc:	f101 0101 	add.w	r1, r1, #1
10017500:	dcfa      	bgt.n	100174f8 <__gethex+0x94>
10017502:	9801      	ldr	r0, [sp, #4]
10017504:	f006 f97e 	bl	1001d804 <_Balloc>
10017508:	4682      	mov	sl, r0
1001750a:	2800      	cmp	r0, #0
1001750c:	f000 8250 	beq.w	100179b0 <__gethex+0x54c>
10017510:	f100 0614 	add.w	r6, r0, #20
10017514:	42a5      	cmp	r5, r4
10017516:	9602      	str	r6, [sp, #8]
10017518:	d957      	bls.n	100175ca <__gethex+0x166>
1001751a:	2700      	movs	r7, #0
1001751c:	46b9      	mov	r9, r7
1001751e:	e00d      	b.n	1001753c <__gethex+0xd8>
10017520:	2f20      	cmp	r7, #32
10017522:	d01a      	beq.n	1001755a <__gethex+0xf6>
10017524:	463a      	mov	r2, r7
10017526:	3704      	adds	r7, #4
10017528:	782b      	ldrb	r3, [r5, #0]
1001752a:	f818 3003 	ldrb.w	r3, [r8, r3]
1001752e:	f003 030f 	and.w	r3, r3, #15
10017532:	4093      	lsls	r3, r2
10017534:	ea49 0903 	orr.w	r9, r9, r3
10017538:	42a5      	cmp	r5, r4
1001753a:	d049      	beq.n	100175d0 <__gethex+0x16c>
1001753c:	f815 3d01 	ldrb.w	r3, [r5, #-1]!
10017540:	2b2e      	cmp	r3, #46	@ 0x2e
10017542:	d1ed      	bne.n	10017520 <__gethex+0xbc>
10017544:	42a5      	cmp	r5, r4
10017546:	d3eb      	bcc.n	10017520 <__gethex+0xbc>
10017548:	4988      	ldr	r1, [pc, #544]	@ (1001776c <__gethex+0x308>)
1001754a:	2201      	movs	r2, #1
1001754c:	4628      	mov	r0, r5
1001754e:	f000 fbdf 	bl	10017d10 <strncmp>
10017552:	2800      	cmp	r0, #0
10017554:	d0f0      	beq.n	10017538 <__gethex+0xd4>
10017556:	2f20      	cmp	r7, #32
10017558:	d1e4      	bne.n	10017524 <__gethex+0xc0>
1001755a:	2200      	movs	r2, #0
1001755c:	f846 9b04 	str.w	r9, [r6], #4
10017560:	2704      	movs	r7, #4
10017562:	4691      	mov	r9, r2
10017564:	e7e0      	b.n	10017528 <__gethex+0xc4>
10017566:	2d00      	cmp	r5, #0
10017568:	f000 8143 	beq.w	100177f2 <__gethex+0x38e>
1001756c:	7832      	ldrb	r2, [r6, #0]
1001756e:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
10017572:	1bab      	subs	r3, r5, r6
10017574:	2a50      	cmp	r2, #80	@ 0x50
10017576:	ea4f 0b83 	mov.w	fp, r3, lsl #2
1001757a:	4635      	mov	r5, r6
1001757c:	d1b2      	bne.n	100174e4 <__gethex+0x80>
1001757e:	786a      	ldrb	r2, [r5, #1]
10017580:	2a2b      	cmp	r2, #43	@ 0x2b
10017582:	f000 8125 	beq.w	100177d0 <__gethex+0x36c>
10017586:	2a2d      	cmp	r2, #45	@ 0x2d
10017588:	f000 80a1 	beq.w	100176ce <__gethex+0x26a>
1001758c:	1c6e      	adds	r6, r5, #1
1001758e:	2000      	movs	r0, #0
10017590:	f818 1002 	ldrb.w	r1, [r8, r2]
10017594:	1e4a      	subs	r2, r1, #1
10017596:	2a18      	cmp	r2, #24
10017598:	f200 8097 	bhi.w	100176ca <__gethex+0x266>
1001759c:	7872      	ldrb	r2, [r6, #1]
1001759e:	f818 2002 	ldrb.w	r2, [r8, r2]
100175a2:	3910      	subs	r1, #16
100175a4:	3601      	adds	r6, #1
100175a6:	2a00      	cmp	r2, #0
100175a8:	d154      	bne.n	10017654 <__gethex+0x1f0>
100175aa:	b100      	cbz	r0, 100175ae <__gethex+0x14a>
100175ac:	4249      	negs	r1, r1
100175ae:	448b      	add	fp, r1
100175b0:	f8c9 6000 	str.w	r6, [r9]
100175b4:	f1ba 0f00 	cmp.w	sl, #0
100175b8:	d099      	beq.n	100174ee <__gethex+0x8a>
100175ba:	2f00      	cmp	r7, #0
100175bc:	bf0c      	ite	eq
100175be:	2506      	moveq	r5, #6
100175c0:	2500      	movne	r5, #0
100175c2:	4628      	mov	r0, r5
100175c4:	b005      	add	sp, #20
100175c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100175ca:	9e02      	ldr	r6, [sp, #8]
100175cc:	f04f 0900 	mov.w	r9, #0
100175d0:	f846 9b04 	str.w	r9, [r6], #4
100175d4:	9b02      	ldr	r3, [sp, #8]
100175d6:	1af6      	subs	r6, r6, r3
100175d8:	10b6      	asrs	r6, r6, #2
100175da:	f8ca 6010 	str.w	r6, [sl, #16]
100175de:	4648      	mov	r0, r9
100175e0:	f006 f9e8 	bl	1001d9b4 <__hi0bits>
100175e4:	9b00      	ldr	r3, [sp, #0]
100175e6:	0176      	lsls	r6, r6, #5
100175e8:	681c      	ldr	r4, [r3, #0]
100175ea:	1a36      	subs	r6, r6, r0
100175ec:	42a6      	cmp	r6, r4
100175ee:	dc72      	bgt.n	100176d6 <__gethex+0x272>
100175f0:	f2c0 80f2 	blt.w	100177d8 <__gethex+0x374>
100175f4:	2700      	movs	r7, #0
100175f6:	9b00      	ldr	r3, [sp, #0]
100175f8:	689a      	ldr	r2, [r3, #8]
100175fa:	455a      	cmp	r2, fp
100175fc:	f2c0 8129 	blt.w	10017852 <__gethex+0x3ee>
10017600:	9b00      	ldr	r3, [sp, #0]
10017602:	685a      	ldr	r2, [r3, #4]
10017604:	455a      	cmp	r2, fp
10017606:	dd49      	ble.n	1001769c <__gethex+0x238>
10017608:	eba2 0b0b 	sub.w	fp, r2, fp
1001760c:	455c      	cmp	r4, fp
1001760e:	dc7f      	bgt.n	10017710 <__gethex+0x2ac>
10017610:	68db      	ldr	r3, [r3, #12]
10017612:	2b02      	cmp	r3, #2
10017614:	f000 815b 	beq.w	100178ce <__gethex+0x46a>
10017618:	2b03      	cmp	r3, #3
1001761a:	f000 8153 	beq.w	100178c4 <__gethex+0x460>
1001761e:	2b01      	cmp	r3, #1
10017620:	f000 8136 	beq.w	10017890 <__gethex+0x42c>
10017624:	9801      	ldr	r0, [sp, #4]
10017626:	4651      	mov	r1, sl
10017628:	f006 f912 	bl	1001d850 <_Bfree>
1001762c:	2550      	movs	r5, #80	@ 0x50
1001762e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
10017630:	2300      	movs	r3, #0
10017632:	4628      	mov	r0, r5
10017634:	6013      	str	r3, [r2, #0]
10017636:	b005      	add	sp, #20
10017638:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001763c:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10017640:	f816 3f01 	ldrb.w	r3, [r6, #1]!
10017644:	eb02 0241 	add.w	r2, r2, r1, lsl #1
10017648:	f1a2 0110 	sub.w	r1, r2, #16
1001764c:	f818 2003 	ldrb.w	r2, [r8, r3]
10017650:	2a00      	cmp	r2, #0
10017652:	d0aa      	beq.n	100175aa <__gethex+0x146>
10017654:	2a19      	cmp	r2, #25
10017656:	ddf1      	ble.n	1001763c <__gethex+0x1d8>
10017658:	e7a7      	b.n	100175aa <__gethex+0x146>
1001765a:	4944      	ldr	r1, [pc, #272]	@ (1001776c <__gethex+0x308>)
1001765c:	2201      	movs	r2, #1
1001765e:	4620      	mov	r0, r4
10017660:	f000 fb56 	bl	10017d10 <strncmp>
10017664:	4682      	mov	sl, r0
10017666:	2800      	cmp	r0, #0
10017668:	d173      	bne.n	10017752 <__gethex+0x2ee>
1001766a:	7863      	ldrb	r3, [r4, #1]
1001766c:	f818 2003 	ldrb.w	r2, [r8, r3]
10017670:	1c65      	adds	r5, r4, #1
10017672:	2a00      	cmp	r2, #0
10017674:	d06f      	beq.n	10017756 <__gethex+0x2f2>
10017676:	2b30      	cmp	r3, #48	@ 0x30
10017678:	462c      	mov	r4, r5
1001767a:	f040 8134 	bne.w	100178e6 <__gethex+0x482>
1001767e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
10017682:	2b30      	cmp	r3, #48	@ 0x30
10017684:	d0fb      	beq.n	1001767e <__gethex+0x21a>
10017686:	f818 3003 	ldrb.w	r3, [r8, r3]
1001768a:	fab3 fa83 	clz	sl, r3
1001768e:	2701      	movs	r7, #1
10017690:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
10017694:	2b00      	cmp	r3, #0
10017696:	f47f af0a 	bne.w	100174ae <__gethex+0x4a>
1001769a:	e058      	b.n	1001774e <__gethex+0x2ea>
1001769c:	2501      	movs	r5, #1
1001769e:	b157      	cbz	r7, 100176b6 <__gethex+0x252>
100176a0:	9b00      	ldr	r3, [sp, #0]
100176a2:	68da      	ldr	r2, [r3, #12]
100176a4:	2a02      	cmp	r2, #2
100176a6:	d063      	beq.n	10017770 <__gethex+0x30c>
100176a8:	2a03      	cmp	r2, #3
100176aa:	d065      	beq.n	10017778 <__gethex+0x314>
100176ac:	2a01      	cmp	r2, #1
100176ae:	f000 8086 	beq.w	100177be <__gethex+0x35a>
100176b2:	f045 0510 	orr.w	r5, r5, #16
100176b6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100176b8:	f8c3 a000 	str.w	sl, [r3]
100176bc:	9b03      	ldr	r3, [sp, #12]
100176be:	4628      	mov	r0, r5
100176c0:	f8c3 b000 	str.w	fp, [r3]
100176c4:	b005      	add	sp, #20
100176c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100176ca:	462e      	mov	r6, r5
100176cc:	e70a      	b.n	100174e4 <__gethex+0x80>
100176ce:	2001      	movs	r0, #1
100176d0:	78aa      	ldrb	r2, [r5, #2]
100176d2:	1cae      	adds	r6, r5, #2
100176d4:	e75c      	b.n	10017590 <__gethex+0x12c>
100176d6:	1b36      	subs	r6, r6, r4
100176d8:	4631      	mov	r1, r6
100176da:	4650      	mov	r0, sl
100176dc:	f006 fd80 	bl	1001e1e0 <__any_on>
100176e0:	4607      	mov	r7, r0
100176e2:	b178      	cbz	r0, 10017704 <__gethex+0x2a0>
100176e4:	1e71      	subs	r1, r6, #1
100176e6:	114a      	asrs	r2, r1, #5
100176e8:	9b02      	ldr	r3, [sp, #8]
100176ea:	2701      	movs	r7, #1
100176ec:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
100176f0:	f001 021f 	and.w	r2, r1, #31
100176f4:	fa07 f202 	lsl.w	r2, r7, r2
100176f8:	4202      	tst	r2, r0
100176fa:	d003      	beq.n	10017704 <__gethex+0x2a0>
100176fc:	42b9      	cmp	r1, r7
100176fe:	f300 80b9 	bgt.w	10017874 <__gethex+0x410>
10017702:	2702      	movs	r7, #2
10017704:	4631      	mov	r1, r6
10017706:	4650      	mov	r0, sl
10017708:	44b3      	add	fp, r6
1001770a:	f7ff fe59 	bl	100173c0 <rshift>
1001770e:	e772      	b.n	100175f6 <__gethex+0x192>
10017710:	f10b 36ff 	add.w	r6, fp, #4294967295	@ 0xffffffff
10017714:	2f00      	cmp	r7, #0
10017716:	f040 80a5 	bne.w	10017864 <__gethex+0x400>
1001771a:	2e00      	cmp	r6, #0
1001771c:	f040 80a4 	bne.w	10017868 <__gethex+0x404>
10017720:	1173      	asrs	r3, r6, #5
10017722:	9a02      	ldr	r2, [sp, #8]
10017724:	f006 061f 	and.w	r6, r6, #31
10017728:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
1001772c:	2301      	movs	r3, #1
1001772e:	40b3      	lsls	r3, r6
10017730:	4213      	tst	r3, r2
10017732:	4659      	mov	r1, fp
10017734:	4650      	mov	r0, sl
10017736:	bf18      	it	ne
10017738:	f047 0702 	orrne.w	r7, r7, #2
1001773c:	f7ff fe40 	bl	100173c0 <rshift>
10017740:	9b00      	ldr	r3, [sp, #0]
10017742:	eba4 040b 	sub.w	r4, r4, fp
10017746:	2502      	movs	r5, #2
10017748:	f8d3 b004 	ldr.w	fp, [r3, #4]
1001774c:	e7a7      	b.n	1001769e <__gethex+0x23a>
1001774e:	4626      	mov	r6, r4
10017750:	e6b4      	b.n	100174bc <__gethex+0x58>
10017752:	7823      	ldrb	r3, [r4, #0]
10017754:	4625      	mov	r5, r4
10017756:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
1001775a:	2b50      	cmp	r3, #80	@ 0x50
1001775c:	f000 8093 	beq.w	10017886 <__gethex+0x422>
10017760:	f8c9 5000 	str.w	r5, [r9]
10017764:	e729      	b.n	100175ba <__gethex+0x156>
10017766:	bf00      	nop
10017768:	10020ce8 	.word	0x10020ce8
1001776c:	100209e4 	.word	0x100209e4
10017770:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
10017772:	f1c3 0301 	rsb	r3, r3, #1
10017776:	930f      	str	r3, [sp, #60]	@ 0x3c
10017778:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001777a:	2b00      	cmp	r3, #0
1001777c:	d099      	beq.n	100176b2 <__gethex+0x24e>
1001777e:	f8dd 8008 	ldr.w	r8, [sp, #8]
10017782:	f8da 7010 	ldr.w	r7, [sl, #16]
10017786:	4642      	mov	r2, r8
10017788:	ea4f 0987 	mov.w	r9, r7, lsl #2
1001778c:	eb08 0687 	add.w	r6, r8, r7, lsl #2
10017790:	2000      	movs	r0, #0
10017792:	e003      	b.n	1001779c <__gethex+0x338>
10017794:	4296      	cmp	r6, r2
10017796:	f842 0c04 	str.w	r0, [r2, #-4]
1001779a:	d93c      	bls.n	10017816 <__gethex+0x3b2>
1001779c:	4694      	mov	ip, r2
1001779e:	f852 1b04 	ldr.w	r1, [r2], #4
100177a2:	1c4b      	adds	r3, r1, #1
100177a4:	d0f6      	beq.n	10017794 <__gethex+0x330>
100177a6:	3101      	adds	r1, #1
100177a8:	2d02      	cmp	r5, #2
100177aa:	f8cc 1000 	str.w	r1, [ip]
100177ae:	f000 8093 	beq.w	100178d8 <__gethex+0x474>
100177b2:	f014 041f 	ands.w	r4, r4, #31
100177b6:	f040 80b3 	bne.w	10017920 <__gethex+0x4bc>
100177ba:	2521      	movs	r5, #33	@ 0x21
100177bc:	e77b      	b.n	100176b6 <__gethex+0x252>
100177be:	07b9      	lsls	r1, r7, #30
100177c0:	f57f af77 	bpl.w	100176b2 <__gethex+0x24e>
100177c4:	9b02      	ldr	r3, [sp, #8]
100177c6:	681a      	ldr	r2, [r3, #0]
100177c8:	4317      	orrs	r7, r2
100177ca:	07fa      	lsls	r2, r7, #31
100177cc:	d4d7      	bmi.n	1001777e <__gethex+0x31a>
100177ce:	e770      	b.n	100176b2 <__gethex+0x24e>
100177d0:	2000      	movs	r0, #0
100177d2:	e77d      	b.n	100176d0 <__gethex+0x26c>
100177d4:	46ab      	mov	fp, r5
100177d6:	e680      	b.n	100174da <__gethex+0x76>
100177d8:	1ba2      	subs	r2, r4, r6
100177da:	4651      	mov	r1, sl
100177dc:	9801      	ldr	r0, [sp, #4]
100177de:	ebab 0b02 	sub.w	fp, fp, r2
100177e2:	f006 fa77 	bl	1001dcd4 <__lshift>
100177e6:	f100 0314 	add.w	r3, r0, #20
100177ea:	4682      	mov	sl, r0
100177ec:	9302      	str	r3, [sp, #8]
100177ee:	2700      	movs	r7, #0
100177f0:	e701      	b.n	100175f6 <__gethex+0x192>
100177f2:	7872      	ldrb	r2, [r6, #1]
100177f4:	f818 1002 	ldrb.w	r1, [r8, r2]
100177f8:	1c75      	adds	r5, r6, #1
100177fa:	462e      	mov	r6, r5
100177fc:	2900      	cmp	r1, #0
100177fe:	f43f ae6c 	beq.w	100174da <__gethex+0x76>
10017802:	f816 2f01 	ldrb.w	r2, [r6, #1]!
10017806:	f818 3002 	ldrb.w	r3, [r8, r2]
1001780a:	2b00      	cmp	r3, #0
1001780c:	d1f9      	bne.n	10017802 <__gethex+0x39e>
1001780e:	e661      	b.n	100174d4 <__gethex+0x70>
10017810:	1cbc      	adds	r4, r7, #2
10017812:	2700      	movs	r7, #0
10017814:	e63b      	b.n	1001748e <__gethex+0x2a>
10017816:	f8da 2008 	ldr.w	r2, [sl, #8]
1001781a:	4297      	cmp	r7, r2
1001781c:	da65      	bge.n	100178ea <__gethex+0x486>
1001781e:	463a      	mov	r2, r7
10017820:	eb0a 0182 	add.w	r1, sl, r2, lsl #2
10017824:	2001      	movs	r0, #1
10017826:	3201      	adds	r2, #1
10017828:	2d02      	cmp	r5, #2
1001782a:	f8ca 2010 	str.w	r2, [sl, #16]
1001782e:	6148      	str	r0, [r1, #20]
10017830:	d052      	beq.n	100178d8 <__gethex+0x474>
10017832:	4297      	cmp	r7, r2
10017834:	dabd      	bge.n	100177b2 <__gethex+0x34e>
10017836:	2a00      	cmp	r2, #0
10017838:	dc7f      	bgt.n	1001793a <__gethex+0x4d6>
1001783a:	2200      	movs	r2, #0
1001783c:	f8ca 2010 	str.w	r2, [sl, #16]
10017840:	2200      	movs	r2, #0
10017842:	f8ca 2014 	str.w	r2, [sl, #20]
10017846:	9b00      	ldr	r3, [sp, #0]
10017848:	689a      	ldr	r2, [r3, #8]
1001784a:	f10b 0b01 	add.w	fp, fp, #1
1001784e:	455a      	cmp	r2, fp
10017850:	dab3      	bge.n	100177ba <__gethex+0x356>
10017852:	9801      	ldr	r0, [sp, #4]
10017854:	4651      	mov	r1, sl
10017856:	f005 fffb 	bl	1001d850 <_Bfree>
1001785a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
1001785c:	2300      	movs	r3, #0
1001785e:	6013      	str	r3, [r2, #0]
10017860:	25a3      	movs	r5, #163	@ 0xa3
10017862:	e6ae      	b.n	100175c2 <__gethex+0x15e>
10017864:	2701      	movs	r7, #1
10017866:	e75b      	b.n	10017720 <__gethex+0x2bc>
10017868:	4631      	mov	r1, r6
1001786a:	4650      	mov	r0, sl
1001786c:	f006 fcb8 	bl	1001e1e0 <__any_on>
10017870:	4607      	mov	r7, r0
10017872:	e755      	b.n	10017720 <__gethex+0x2bc>
10017874:	1eb1      	subs	r1, r6, #2
10017876:	4650      	mov	r0, sl
10017878:	f006 fcb2 	bl	1001e1e0 <__any_on>
1001787c:	2800      	cmp	r0, #0
1001787e:	f43f af40 	beq.w	10017702 <__gethex+0x29e>
10017882:	2703      	movs	r7, #3
10017884:	e73e      	b.n	10017704 <__gethex+0x2a0>
10017886:	f04f 0b00 	mov.w	fp, #0
1001788a:	f04f 0a01 	mov.w	sl, #1
1001788e:	e676      	b.n	1001757e <__gethex+0x11a>
10017890:	455c      	cmp	r4, fp
10017892:	f47f aec7 	bne.w	10017624 <__gethex+0x1c0>
10017896:	2c01      	cmp	r4, #1
10017898:	d008      	beq.n	100178ac <__gethex+0x448>
1001789a:	1e61      	subs	r1, r4, #1
1001789c:	4650      	mov	r0, sl
1001789e:	f006 fc9f 	bl	1001e1e0 <__any_on>
100178a2:	2800      	cmp	r0, #0
100178a4:	f43f aebe 	beq.w	10017624 <__gethex+0x1c0>
100178a8:	9b00      	ldr	r3, [sp, #0]
100178aa:	685a      	ldr	r2, [r3, #4]
100178ac:	9903      	ldr	r1, [sp, #12]
100178ae:	600a      	str	r2, [r1, #0]
100178b0:	9a02      	ldr	r2, [sp, #8]
100178b2:	2301      	movs	r3, #1
100178b4:	f8ca 3010 	str.w	r3, [sl, #16]
100178b8:	6013      	str	r3, [r2, #0]
100178ba:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100178bc:	2562      	movs	r5, #98	@ 0x62
100178be:	f8c3 a000 	str.w	sl, [r3]
100178c2:	e67e      	b.n	100175c2 <__gethex+0x15e>
100178c4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
100178c6:	2b00      	cmp	r3, #0
100178c8:	f43f aeac 	beq.w	10017624 <__gethex+0x1c0>
100178cc:	e7ee      	b.n	100178ac <__gethex+0x448>
100178ce:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
100178d0:	2b00      	cmp	r3, #0
100178d2:	f47f aea7 	bne.w	10017624 <__gethex+0x1c0>
100178d6:	e7e9      	b.n	100178ac <__gethex+0x448>
100178d8:	9b00      	ldr	r3, [sp, #0]
100178da:	681a      	ldr	r2, [r3, #0]
100178dc:	3a01      	subs	r2, #1
100178de:	42a2      	cmp	r2, r4
100178e0:	d054      	beq.n	1001798c <__gethex+0x528>
100178e2:	2522      	movs	r5, #34	@ 0x22
100178e4:	e6e7      	b.n	100176b6 <__gethex+0x252>
100178e6:	2701      	movs	r7, #1
100178e8:	e5e1      	b.n	100174ae <__gethex+0x4a>
100178ea:	f8da 1004 	ldr.w	r1, [sl, #4]
100178ee:	9801      	ldr	r0, [sp, #4]
100178f0:	3101      	adds	r1, #1
100178f2:	f005 ff87 	bl	1001d804 <_Balloc>
100178f6:	4606      	mov	r6, r0
100178f8:	2800      	cmp	r0, #0
100178fa:	d05f      	beq.n	100179bc <__gethex+0x558>
100178fc:	f8da 2010 	ldr.w	r2, [sl, #16]
10017900:	3202      	adds	r2, #2
10017902:	0092      	lsls	r2, r2, #2
10017904:	f10a 010c 	add.w	r1, sl, #12
10017908:	300c      	adds	r0, #12
1001790a:	f7fe f879 	bl	10015a00 <memcpy>
1001790e:	4651      	mov	r1, sl
10017910:	9801      	ldr	r0, [sp, #4]
10017912:	f005 ff9d 	bl	1001d850 <_Bfree>
10017916:	f106 0814 	add.w	r8, r6, #20
1001791a:	6932      	ldr	r2, [r6, #16]
1001791c:	46b2      	mov	sl, r6
1001791e:	e77f      	b.n	10017820 <__gethex+0x3bc>
10017920:	44c1      	add	r9, r8
10017922:	f1c4 0420 	rsb	r4, r4, #32
10017926:	f859 0c04 	ldr.w	r0, [r9, #-4]
1001792a:	f006 f843 	bl	1001d9b4 <__hi0bits>
1001792e:	42a0      	cmp	r0, r4
10017930:	f6bf af43 	bge.w	100177ba <__gethex+0x356>
10017934:	f8da 2010 	ldr.w	r2, [sl, #16]
10017938:	e77d      	b.n	10017836 <__gethex+0x3d2>
1001793a:	f8da 0014 	ldr.w	r0, [sl, #20]
1001793e:	eb08 0282 	add.w	r2, r8, r2, lsl #2
10017942:	f10a 0418 	add.w	r4, sl, #24
10017946:	42a2      	cmp	r2, r4
10017948:	ea4f 0050 	mov.w	r0, r0, lsr #1
1001794c:	d92a      	bls.n	100179a4 <__gethex+0x540>
1001794e:	4645      	mov	r5, r8
10017950:	6823      	ldr	r3, [r4, #0]
10017952:	ea40 70c3 	orr.w	r0, r0, r3, lsl #31
10017956:	f845 0b04 	str.w	r0, [r5], #4
1001795a:	f854 0b04 	ldr.w	r0, [r4], #4
1001795e:	42a2      	cmp	r2, r4
10017960:	ea4f 0050 	mov.w	r0, r0, lsr #1
10017964:	d8f4      	bhi.n	10017950 <__gethex+0x4ec>
10017966:	eba2 020a 	sub.w	r2, r2, sl
1001796a:	3a19      	subs	r2, #25
1001796c:	0892      	lsrs	r2, r2, #2
1001796e:	3201      	adds	r2, #1
10017970:	f848 0022 	str.w	r0, [r8, r2, lsl #2]
10017974:	eb08 0282 	add.w	r2, r8, r2, lsl #2
10017978:	b9c0      	cbnz	r0, 100179ac <__gethex+0x548>
1001797a:	eba2 0108 	sub.w	r1, r2, r8
1001797e:	1089      	asrs	r1, r1, #2
10017980:	4590      	cmp	r8, r2
10017982:	f8ca 1010 	str.w	r1, [sl, #16]
10017986:	f47f af5e 	bne.w	10017846 <__gethex+0x3e2>
1001798a:	e759      	b.n	10017840 <__gethex+0x3dc>
1001798c:	1162      	asrs	r2, r4, #5
1001798e:	f004 041f 	and.w	r4, r4, #31
10017992:	f858 1022 	ldr.w	r1, [r8, r2, lsl #2]
10017996:	2201      	movs	r2, #1
10017998:	40a2      	lsls	r2, r4
1001799a:	420a      	tst	r2, r1
1001799c:	bf14      	ite	ne
1001799e:	2521      	movne	r5, #33	@ 0x21
100179a0:	2522      	moveq	r5, #34	@ 0x22
100179a2:	e688      	b.n	100176b6 <__gethex+0x252>
100179a4:	f8c8 0000 	str.w	r0, [r8]
100179a8:	4642      	mov	r2, r8
100179aa:	b168      	cbz	r0, 100179c8 <__gethex+0x564>
100179ac:	3204      	adds	r2, #4
100179ae:	e7e4      	b.n	1001797a <__gethex+0x516>
100179b0:	4b07      	ldr	r3, [pc, #28]	@ (100179d0 <__gethex+0x56c>)
100179b2:	4808      	ldr	r0, [pc, #32]	@ (100179d4 <__gethex+0x570>)
100179b4:	4652      	mov	r2, sl
100179b6:	21e4      	movs	r1, #228	@ 0xe4
100179b8:	f005 fd1e 	bl	1001d3f8 <__assert_func>
100179bc:	4b04      	ldr	r3, [pc, #16]	@ (100179d0 <__gethex+0x56c>)
100179be:	4805      	ldr	r0, [pc, #20]	@ (100179d4 <__gethex+0x570>)
100179c0:	4632      	mov	r2, r6
100179c2:	2184      	movs	r1, #132	@ 0x84
100179c4:	f005 fd18 	bl	1001d3f8 <__assert_func>
100179c8:	f8ca 0010 	str.w	r0, [sl, #16]
100179cc:	e738      	b.n	10017840 <__gethex+0x3dc>
100179ce:	bf00      	nop
100179d0:	10020c70 	.word	0x10020c70
100179d4:	10020c84 	.word	0x10020c84

100179d8 <_strtoul_l.constprop.0>:
100179d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
100179dc:	4607      	mov	r7, r0
100179de:	4849      	ldr	r0, [pc, #292]	@ (10017b04 <_strtoul_l.constprop.0+0x12c>)
100179e0:	460e      	mov	r6, r1
100179e2:	4635      	mov	r5, r6
100179e4:	f816 eb01 	ldrb.w	lr, [r6], #1
100179e8:	f810 c00e 	ldrb.w	ip, [r0, lr]
100179ec:	f01c 0c08 	ands.w	ip, ip, #8
100179f0:	d1f7      	bne.n	100179e2 <_strtoul_l.constprop.0+0xa>
100179f2:	f1be 0f2d 	cmp.w	lr, #45	@ 0x2d
100179f6:	d05a      	beq.n	10017aae <_strtoul_l.constprop.0+0xd6>
100179f8:	f1be 0f2b 	cmp.w	lr, #43	@ 0x2b
100179fc:	bf03      	ittte	eq
100179fe:	f896 e000 	ldrbeq.w	lr, [r6]
10017a02:	4664      	moveq	r4, ip
10017a04:	1cae      	addeq	r6, r5, #2
10017a06:	4664      	movne	r4, ip
10017a08:	b94b      	cbnz	r3, 10017a1e <_strtoul_l.constprop.0+0x46>
10017a0a:	f1be 0f30 	cmp.w	lr, #48	@ 0x30
10017a0e:	d05c      	beq.n	10017aca <_strtoul_l.constprop.0+0xf2>
10017a10:	230a      	movs	r3, #10
10017a12:	f8df 80f4 	ldr.w	r8, [pc, #244]	@ 10017b08 <_strtoul_l.constprop.0+0x130>
10017a16:	f04f 0a05 	mov.w	sl, #5
10017a1a:	4699      	mov	r9, r3
10017a1c:	e00a      	b.n	10017a34 <_strtoul_l.constprop.0+0x5c>
10017a1e:	2b10      	cmp	r3, #16
10017a20:	d04a      	beq.n	10017ab8 <_strtoul_l.constprop.0+0xe0>
10017a22:	f04f 38ff 	mov.w	r8, #4294967295	@ 0xffffffff
10017a26:	fbb8 f8f3 	udiv	r8, r8, r3
10017a2a:	fb03 fa08 	mul.w	sl, r3, r8
10017a2e:	ea6f 0a0a 	mvn.w	sl, sl
10017a32:	4699      	mov	r9, r3
10017a34:	2500      	movs	r5, #0
10017a36:	4628      	mov	r0, r5
10017a38:	e005      	b.n	10017a46 <_strtoul_l.constprop.0+0x6e>
10017a3a:	d02c      	beq.n	10017a96 <_strtoul_l.constprop.0+0xbe>
10017a3c:	fb09 c000 	mla	r0, r9, r0, ip
10017a40:	2501      	movs	r5, #1
10017a42:	f816 eb01 	ldrb.w	lr, [r6], #1
10017a46:	f1ae 0c30 	sub.w	ip, lr, #48	@ 0x30
10017a4a:	f1bc 0f09 	cmp.w	ip, #9
10017a4e:	d906      	bls.n	10017a5e <_strtoul_l.constprop.0+0x86>
10017a50:	f1ae 0c41 	sub.w	ip, lr, #65	@ 0x41
10017a54:	f1bc 0f19 	cmp.w	ip, #25
10017a58:	d80b      	bhi.n	10017a72 <_strtoul_l.constprop.0+0x9a>
10017a5a:	f1ae 0c37 	sub.w	ip, lr, #55	@ 0x37
10017a5e:	4563      	cmp	r3, ip
10017a60:	dd10      	ble.n	10017a84 <_strtoul_l.constprop.0+0xac>
10017a62:	f1b5 3fff 	cmp.w	r5, #4294967295	@ 0xffffffff
10017a66:	d0ec      	beq.n	10017a42 <_strtoul_l.constprop.0+0x6a>
10017a68:	4540      	cmp	r0, r8
10017a6a:	d9e6      	bls.n	10017a3a <_strtoul_l.constprop.0+0x62>
10017a6c:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
10017a70:	e7e7      	b.n	10017a42 <_strtoul_l.constprop.0+0x6a>
10017a72:	f1ae 0c61 	sub.w	ip, lr, #97	@ 0x61
10017a76:	f1bc 0f19 	cmp.w	ip, #25
10017a7a:	d803      	bhi.n	10017a84 <_strtoul_l.constprop.0+0xac>
10017a7c:	f1ae 0c57 	sub.w	ip, lr, #87	@ 0x57
10017a80:	4563      	cmp	r3, ip
10017a82:	dcee      	bgt.n	10017a62 <_strtoul_l.constprop.0+0x8a>
10017a84:	1c6b      	adds	r3, r5, #1
10017a86:	d00b      	beq.n	10017aa0 <_strtoul_l.constprop.0+0xc8>
10017a88:	b104      	cbz	r4, 10017a8c <_strtoul_l.constprop.0+0xb4>
10017a8a:	4240      	negs	r0, r0
10017a8c:	b10a      	cbz	r2, 10017a92 <_strtoul_l.constprop.0+0xba>
10017a8e:	b965      	cbnz	r5, 10017aaa <_strtoul_l.constprop.0+0xd2>
10017a90:	6011      	str	r1, [r2, #0]
10017a92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
10017a96:	45d4      	cmp	ip, sl
10017a98:	ddd0      	ble.n	10017a3c <_strtoul_l.constprop.0+0x64>
10017a9a:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
10017a9e:	e7d0      	b.n	10017a42 <_strtoul_l.constprop.0+0x6a>
10017aa0:	2322      	movs	r3, #34	@ 0x22
10017aa2:	603b      	str	r3, [r7, #0]
10017aa4:	4628      	mov	r0, r5
10017aa6:	2a00      	cmp	r2, #0
10017aa8:	d0f3      	beq.n	10017a92 <_strtoul_l.constprop.0+0xba>
10017aaa:	1e71      	subs	r1, r6, #1
10017aac:	e7f0      	b.n	10017a90 <_strtoul_l.constprop.0+0xb8>
10017aae:	f896 e000 	ldrb.w	lr, [r6]
10017ab2:	2401      	movs	r4, #1
10017ab4:	1cae      	adds	r6, r5, #2
10017ab6:	e7a7      	b.n	10017a08 <_strtoul_l.constprop.0+0x30>
10017ab8:	f1be 0f30 	cmp.w	lr, #48	@ 0x30
10017abc:	d011      	beq.n	10017ae2 <_strtoul_l.constprop.0+0x10a>
10017abe:	f04f 0a0f 	mov.w	sl, #15
10017ac2:	f06f 4870 	mvn.w	r8, #4026531840	@ 0xf0000000
10017ac6:	4699      	mov	r9, r3
10017ac8:	e7b4      	b.n	10017a34 <_strtoul_l.constprop.0+0x5c>
10017aca:	7833      	ldrb	r3, [r6, #0]
10017acc:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
10017ad0:	2b58      	cmp	r3, #88	@ 0x58
10017ad2:	d00b      	beq.n	10017aec <_strtoul_l.constprop.0+0x114>
10017ad4:	2308      	movs	r3, #8
10017ad6:	f04f 0a07 	mov.w	sl, #7
10017ada:	f06f 4860 	mvn.w	r8, #3758096384	@ 0xe0000000
10017ade:	4699      	mov	r9, r3
10017ae0:	e7a8      	b.n	10017a34 <_strtoul_l.constprop.0+0x5c>
10017ae2:	7830      	ldrb	r0, [r6, #0]
10017ae4:	f000 00df 	and.w	r0, r0, #223	@ 0xdf
10017ae8:	2858      	cmp	r0, #88	@ 0x58
10017aea:	d1e8      	bne.n	10017abe <_strtoul_l.constprop.0+0xe6>
10017aec:	f04f 0910 	mov.w	r9, #16
10017af0:	f896 e001 	ldrb.w	lr, [r6, #1]
10017af4:	f04f 0a0f 	mov.w	sl, #15
10017af8:	3602      	adds	r6, #2
10017afa:	f06f 4870 	mvn.w	r8, #4026531840	@ 0xf0000000
10017afe:	464b      	mov	r3, r9
10017b00:	e798      	b.n	10017a34 <_strtoul_l.constprop.0+0x5c>
10017b02:	bf00      	nop
10017b04:	10020b0d 	.word	0x10020b0d
10017b08:	19999999 	.word	0x19999999

10017b0c <_strtoul_r>:
10017b0c:	f7ff bf64 	b.w	100179d8 <_strtoul_l.constprop.0>

10017b10 <__match>:
10017b10:	b410      	push	{r4}
10017b12:	6804      	ldr	r4, [r0, #0]
10017b14:	3401      	adds	r4, #1
10017b16:	e009      	b.n	10017b2c <__match+0x1c>
10017b18:	f814 3b01 	ldrb.w	r3, [r4], #1
10017b1c:	f1a3 0c41 	sub.w	ip, r3, #65	@ 0x41
10017b20:	f1bc 0f19 	cmp.w	ip, #25
10017b24:	bf98      	it	ls
10017b26:	3320      	addls	r3, #32
10017b28:	4293      	cmp	r3, r2
10017b2a:	d107      	bne.n	10017b3c <__match+0x2c>
10017b2c:	f811 2b01 	ldrb.w	r2, [r1], #1
10017b30:	2a00      	cmp	r2, #0
10017b32:	d1f1      	bne.n	10017b18 <__match+0x8>
10017b34:	6004      	str	r4, [r0, #0]
10017b36:	2001      	movs	r0, #1
10017b38:	bc10      	pop	{r4}
10017b3a:	4770      	bx	lr
10017b3c:	2000      	movs	r0, #0
10017b3e:	bc10      	pop	{r4}
10017b40:	4770      	bx	lr
10017b42:	bf00      	nop

10017b44 <__hexnan>:
10017b44:	6809      	ldr	r1, [r1, #0]
10017b46:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10017b4a:	114b      	asrs	r3, r1, #5
10017b4c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
10017b50:	f011 0b1f 	ands.w	fp, r1, #31
10017b54:	4607      	mov	r7, r0
10017b56:	bf0c      	ite	eq
10017b58:	4618      	moveq	r0, r3
10017b5a:	1d18      	addne	r0, r3, #4
10017b5c:	683c      	ldr	r4, [r7, #0]
10017b5e:	bf0c      	ite	eq
10017b60:	1f1d      	subeq	r5, r3, #4
10017b62:	461d      	movne	r5, r3
10017b64:	2300      	movs	r3, #0
10017b66:	f840 3c04 	str.w	r3, [r0, #-4]
10017b6a:	7861      	ldrb	r1, [r4, #1]
10017b6c:	b085      	sub	sp, #20
10017b6e:	3401      	adds	r4, #1
10017b70:	2900      	cmp	r1, #0
10017b72:	f000 80a8 	beq.w	10017cc6 <__hexnan+0x182>
10017b76:	469e      	mov	lr, r3
10017b78:	469a      	mov	sl, r3
10017b7a:	461e      	mov	r6, r3
10017b7c:	460b      	mov	r3, r1
10017b7e:	4601      	mov	r1, r0
10017b80:	4610      	mov	r0, r2
10017b82:	f8df 9188 	ldr.w	r9, [pc, #392]	@ 10017d0c <__hexnan+0x1c8>
10017b86:	9701      	str	r7, [sp, #4]
10017b88:	465a      	mov	r2, fp
10017b8a:	46a8      	mov	r8, r5
10017b8c:	46ac      	mov	ip, r5
10017b8e:	4683      	mov	fp, r0
10017b90:	e010      	b.n	10017bb4 <__hexnan+0x70>
10017b92:	2b20      	cmp	r3, #32
10017b94:	f200 808f 	bhi.w	10017cb6 <__hexnan+0x172>
10017b98:	4556      	cmp	r6, sl
10017b9a:	dd08      	ble.n	10017bae <__hexnan+0x6a>
10017b9c:	45c4      	cmp	ip, r8
10017b9e:	d202      	bcs.n	10017ba6 <__hexnan+0x62>
10017ba0:	f1be 0f07 	cmp.w	lr, #7
10017ba4:	dd5f      	ble.n	10017c66 <__hexnan+0x122>
10017ba6:	45e3      	cmp	fp, ip
10017ba8:	d354      	bcc.n	10017c54 <__hexnan+0x110>
10017baa:	f04f 0e08 	mov.w	lr, #8
10017bae:	f814 3f01 	ldrb.w	r3, [r4, #1]!
10017bb2:	b1b3      	cbz	r3, 10017be2 <__hexnan+0x9e>
10017bb4:	f819 7003 	ldrb.w	r7, [r9, r3]
10017bb8:	2f00      	cmp	r7, #0
10017bba:	d0ea      	beq.n	10017b92 <__hexnan+0x4e>
10017bbc:	f10e 0e01 	add.w	lr, lr, #1
10017bc0:	f1be 0f08 	cmp.w	lr, #8
10017bc4:	f106 0601 	add.w	r6, r6, #1
10017bc8:	dc3a      	bgt.n	10017c40 <__hexnan+0xfc>
10017bca:	f8dc 3000 	ldr.w	r3, [ip]
10017bce:	011b      	lsls	r3, r3, #4
10017bd0:	f007 070f 	and.w	r7, r7, #15
10017bd4:	431f      	orrs	r7, r3
10017bd6:	f8cc 7000 	str.w	r7, [ip]
10017bda:	f814 3f01 	ldrb.w	r3, [r4, #1]!
10017bde:	2b00      	cmp	r3, #0
10017be0:	d1e8      	bne.n	10017bb4 <__hexnan+0x70>
10017be2:	465b      	mov	r3, fp
10017be4:	4608      	mov	r0, r1
10017be6:	4693      	mov	fp, r2
10017be8:	461a      	mov	r2, r3
10017bea:	2e00      	cmp	r6, #0
10017bec:	d06b      	beq.n	10017cc6 <__hexnan+0x182>
10017bee:	45e0      	cmp	r8, ip
10017bf0:	d902      	bls.n	10017bf8 <__hexnan+0xb4>
10017bf2:	f1be 0f07 	cmp.w	lr, #7
10017bf6:	dd73      	ble.n	10017ce0 <__hexnan+0x19c>
10017bf8:	4562      	cmp	r2, ip
10017bfa:	d24d      	bcs.n	10017c98 <__hexnan+0x154>
10017bfc:	1f11      	subs	r1, r2, #4
10017bfe:	4663      	mov	r3, ip
10017c00:	f853 4b04 	ldr.w	r4, [r3], #4
10017c04:	f841 4f04 	str.w	r4, [r1, #4]!
10017c08:	42ab      	cmp	r3, r5
10017c0a:	d9f9      	bls.n	10017c00 <__hexnan+0xbc>
10017c0c:	eba5 030c 	sub.w	r3, r5, ip
10017c10:	f023 0303 	bic.w	r3, r3, #3
10017c14:	1c69      	adds	r1, r5, #1
10017c16:	3304      	adds	r3, #4
10017c18:	f10c 0c01 	add.w	ip, ip, #1
10017c1c:	4561      	cmp	r1, ip
10017c1e:	bf38      	it	cc
10017c20:	2304      	movcc	r3, #4
10017c22:	4413      	add	r3, r2
10017c24:	2100      	movs	r1, #0
10017c26:	f843 1b04 	str.w	r1, [r3], #4
10017c2a:	42ab      	cmp	r3, r5
10017c2c:	d9fb      	bls.n	10017c26 <__hexnan+0xe2>
10017c2e:	f850 3c04 	ldr.w	r3, [r0, #-4]
10017c32:	2b00      	cmp	r3, #0
10017c34:	d14d      	bne.n	10017cd2 <__hexnan+0x18e>
10017c36:	42aa      	cmp	r2, r5
10017c38:	d049      	beq.n	10017cce <__hexnan+0x18a>
10017c3a:	f855 3d04 	ldr.w	r3, [r5, #-4]!
10017c3e:	e7f8      	b.n	10017c32 <__hexnan+0xee>
10017c40:	45e3      	cmp	fp, ip
10017c42:	d2b4      	bcs.n	10017bae <__hexnan+0x6a>
10017c44:	2300      	movs	r3, #0
10017c46:	f84c 3c04 	str.w	r3, [ip, #-4]
10017c4a:	f04f 0e01 	mov.w	lr, #1
10017c4e:	f1ac 0c04 	sub.w	ip, ip, #4
10017c52:	e7bd      	b.n	10017bd0 <__hexnan+0x8c>
10017c54:	2300      	movs	r3, #0
10017c56:	f1ac 0804 	sub.w	r8, ip, #4
10017c5a:	f84c 3c04 	str.w	r3, [ip, #-4]
10017c5e:	46b2      	mov	sl, r6
10017c60:	46c4      	mov	ip, r8
10017c62:	469e      	mov	lr, r3
10017c64:	e7a3      	b.n	10017bae <__hexnan+0x6a>
10017c66:	f1ce 0008 	rsb	r0, lr, #8
10017c6a:	0080      	lsls	r0, r0, #2
10017c6c:	e9cd 2c02 	strd	r2, ip, [sp, #8]
10017c70:	f8dc 3000 	ldr.w	r3, [ip]
10017c74:	4667      	mov	r7, ip
10017c76:	f1c0 0e20 	rsb	lr, r0, #32
10017c7a:	4684      	mov	ip, r0
10017c7c:	6878      	ldr	r0, [r7, #4]
10017c7e:	fa00 f20e 	lsl.w	r2, r0, lr
10017c82:	431a      	orrs	r2, r3
10017c84:	fa20 f30c 	lsr.w	r3, r0, ip
10017c88:	603a      	str	r2, [r7, #0]
10017c8a:	f847 3f04 	str.w	r3, [r7, #4]!
10017c8e:	4547      	cmp	r7, r8
10017c90:	d3f4      	bcc.n	10017c7c <__hexnan+0x138>
10017c92:	e9dd 2c02 	ldrd	r2, ip, [sp, #8]
10017c96:	e786      	b.n	10017ba6 <__hexnan+0x62>
10017c98:	f850 3c04 	ldr.w	r3, [r0, #-4]
10017c9c:	f1bb 0f00 	cmp.w	fp, #0
10017ca0:	d0c7      	beq.n	10017c32 <__hexnan+0xee>
10017ca2:	f1cb 0b20 	rsb	fp, fp, #32
10017ca6:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
10017caa:	fa21 f10b 	lsr.w	r1, r1, fp
10017cae:	400b      	ands	r3, r1
10017cb0:	f840 3c04 	str.w	r3, [r0, #-4]
10017cb4:	e7bd      	b.n	10017c32 <__hexnan+0xee>
10017cb6:	4608      	mov	r0, r1
10017cb8:	4619      	mov	r1, r3
10017cba:	2929      	cmp	r1, #41	@ 0x29
10017cbc:	465b      	mov	r3, fp
10017cbe:	9f01      	ldr	r7, [sp, #4]
10017cc0:	4693      	mov	fp, r2
10017cc2:	461a      	mov	r2, r3
10017cc4:	d009      	beq.n	10017cda <__hexnan+0x196>
10017cc6:	2004      	movs	r0, #4
10017cc8:	b005      	add	sp, #20
10017cca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10017cce:	2301      	movs	r3, #1
10017cd0:	602b      	str	r3, [r5, #0]
10017cd2:	2005      	movs	r0, #5
10017cd4:	b005      	add	sp, #20
10017cd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10017cda:	3401      	adds	r4, #1
10017cdc:	603c      	str	r4, [r7, #0]
10017cde:	e784      	b.n	10017bea <__hexnan+0xa6>
10017ce0:	f1ce 0308 	rsb	r3, lr, #8
10017ce4:	f8dc 1000 	ldr.w	r1, [ip]
10017ce8:	009b      	lsls	r3, r3, #2
10017cea:	f1c3 0e20 	rsb	lr, r3, #32
10017cee:	4666      	mov	r6, ip
10017cf0:	460c      	mov	r4, r1
10017cf2:	6877      	ldr	r7, [r6, #4]
10017cf4:	fa07 f10e 	lsl.w	r1, r7, lr
10017cf8:	4321      	orrs	r1, r4
10017cfa:	fa27 f403 	lsr.w	r4, r7, r3
10017cfe:	6031      	str	r1, [r6, #0]
10017d00:	f846 4f04 	str.w	r4, [r6, #4]!
10017d04:	45b0      	cmp	r8, r6
10017d06:	d8f4      	bhi.n	10017cf2 <__hexnan+0x1ae>
10017d08:	e776      	b.n	10017bf8 <__hexnan+0xb4>
10017d0a:	bf00      	nop
10017d0c:	10020ce8 	.word	0x10020ce8

10017d10 <strncmp>:
10017d10:	b3b2      	cbz	r2, 10017d80 <strncmp+0x70>
10017d12:	ea40 0301 	orr.w	r3, r0, r1
10017d16:	079b      	lsls	r3, r3, #30
10017d18:	b530      	push	{r4, r5, lr}
10017d1a:	4684      	mov	ip, r0
10017d1c:	d118      	bne.n	10017d50 <strncmp+0x40>
10017d1e:	2a03      	cmp	r2, #3
10017d20:	d916      	bls.n	10017d50 <strncmp+0x40>
10017d22:	4604      	mov	r4, r0
10017d24:	460b      	mov	r3, r1
10017d26:	e006      	b.n	10017d36 <strncmp+0x26>
10017d28:	3a04      	subs	r2, #4
10017d2a:	d02b      	beq.n	10017d84 <strncmp+0x74>
10017d2c:	f01e 3f80 	tst.w	lr, #2155905152	@ 0x80808080
10017d30:	d128      	bne.n	10017d84 <strncmp+0x74>
10017d32:	2a03      	cmp	r2, #3
10017d34:	d92a      	bls.n	10017d8c <strncmp+0x7c>
10017d36:	6820      	ldr	r0, [r4, #0]
10017d38:	4619      	mov	r1, r3
10017d3a:	f853 5b04 	ldr.w	r5, [r3], #4
10017d3e:	f1a0 3e01 	sub.w	lr, r0, #16843009	@ 0x1010101
10017d42:	42a8      	cmp	r0, r5
10017d44:	46a4      	mov	ip, r4
10017d46:	ea2e 0e00 	bic.w	lr, lr, r0
10017d4a:	f104 0404 	add.w	r4, r4, #4
10017d4e:	d0eb      	beq.n	10017d28 <strncmp+0x18>
10017d50:	f89c 0000 	ldrb.w	r0, [ip]
10017d54:	780c      	ldrb	r4, [r1, #0]
10017d56:	4284      	cmp	r4, r0
10017d58:	d116      	bne.n	10017d88 <strncmp+0x78>
10017d5a:	2a01      	cmp	r2, #1
10017d5c:	d012      	beq.n	10017d84 <strncmp+0x74>
10017d5e:	46e6      	mov	lr, ip
10017d60:	b168      	cbz	r0, 10017d7e <strncmp+0x6e>
10017d62:	f81e 0f01 	ldrb.w	r0, [lr, #1]!
10017d66:	f811 4f01 	ldrb.w	r4, [r1, #1]!
10017d6a:	eba2 030e 	sub.w	r3, r2, lr
10017d6e:	42a0      	cmp	r0, r4
10017d70:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
10017d74:	d108      	bne.n	10017d88 <strncmp+0x78>
10017d76:	eb1c 0303 	adds.w	r3, ip, r3
10017d7a:	d1f1      	bne.n	10017d60 <strncmp+0x50>
10017d7c:	4618      	mov	r0, r3
10017d7e:	bd30      	pop	{r4, r5, pc}
10017d80:	4610      	mov	r0, r2
10017d82:	4770      	bx	lr
10017d84:	2000      	movs	r0, #0
10017d86:	bd30      	pop	{r4, r5, pc}
10017d88:	1b00      	subs	r0, r0, r4
10017d8a:	bd30      	pop	{r4, r5, pc}
10017d8c:	46a4      	mov	ip, r4
10017d8e:	4619      	mov	r1, r3
10017d90:	e7de      	b.n	10017d50 <strncmp+0x40>
10017d92:	bf00      	nop

10017d94 <_strtoll_l.constprop.0>:
10017d94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10017d98:	b085      	sub	sp, #20
10017d9a:	4692      	mov	sl, r2
10017d9c:	4a5b      	ldr	r2, [pc, #364]	@ (10017f0c <_strtoll_l.constprop.0+0x178>)
10017d9e:	9003      	str	r0, [sp, #12]
10017da0:	4689      	mov	r9, r1
10017da2:	461e      	mov	r6, r3
10017da4:	460d      	mov	r5, r1
10017da6:	4629      	mov	r1, r5
10017da8:	f815 4b01 	ldrb.w	r4, [r5], #1
10017dac:	5d13      	ldrb	r3, [r2, r4]
10017dae:	f013 0308 	ands.w	r3, r3, #8
10017db2:	d1f8      	bne.n	10017da6 <_strtoll_l.constprop.0+0x12>
10017db4:	2c2d      	cmp	r4, #45	@ 0x2d
10017db6:	d07d      	beq.n	10017eb4 <_strtoll_l.constprop.0+0x120>
10017db8:	2c2b      	cmp	r4, #43	@ 0x2b
10017dba:	d041      	beq.n	10017e40 <_strtoll_l.constprop.0+0xac>
10017dbc:	9302      	str	r3, [sp, #8]
10017dbe:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10017dc2:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
10017dc6:	e9cd 2300 	strd	r2, r3, [sp]
10017dca:	2e00      	cmp	r6, #0
10017dcc:	d143      	bne.n	10017e56 <_strtoll_l.constprop.0+0xc2>
10017dce:	2c30      	cmp	r4, #48	@ 0x30
10017dd0:	d079      	beq.n	10017ec6 <_strtoll_l.constprop.0+0x132>
10017dd2:	270a      	movs	r7, #10
10017dd4:	46b0      	mov	r8, r6
10017dd6:	463e      	mov	r6, r7
10017dd8:	e9dd 0100 	ldrd	r0, r1, [sp]
10017ddc:	463a      	mov	r2, r7
10017dde:	4643      	mov	r3, r8
10017de0:	f008 fa10 	bl	10020204 <__aeabi_uldivmod>
10017de4:	2300      	movs	r3, #0
10017de6:	468e      	mov	lr, r1
10017de8:	4683      	mov	fp, r0
10017dea:	4619      	mov	r1, r3
10017dec:	4618      	mov	r0, r3
10017dee:	46a4      	mov	ip, r4
10017df0:	e010      	b.n	10017e14 <_strtoll_l.constprop.0+0x80>
10017df2:	458e      	cmp	lr, r1
10017df4:	bf08      	it	eq
10017df6:	4583      	cmpeq	fp, r0
10017df8:	d04c      	beq.n	10017e94 <_strtoll_l.constprop.0+0x100>
10017dfa:	fb00 f308 	mul.w	r3, r0, r8
10017dfe:	fb07 3301 	mla	r3, r7, r1, r3
10017e02:	fba0 0107 	umull	r0, r1, r0, r7
10017e06:	440b      	add	r3, r1
10017e08:	1820      	adds	r0, r4, r0
10017e0a:	eb43 71e4 	adc.w	r1, r3, r4, asr #31
10017e0e:	2301      	movs	r3, #1
10017e10:	f815 cb01 	ldrb.w	ip, [r5], #1
10017e14:	f1ac 0430 	sub.w	r4, ip, #48	@ 0x30
10017e18:	2c09      	cmp	r4, #9
10017e1a:	d905      	bls.n	10017e28 <_strtoll_l.constprop.0+0x94>
10017e1c:	f1ac 0441 	sub.w	r4, ip, #65	@ 0x41
10017e20:	2c19      	cmp	r4, #25
10017e22:	d81e      	bhi.n	10017e62 <_strtoll_l.constprop.0+0xce>
10017e24:	f1ac 0437 	sub.w	r4, ip, #55	@ 0x37
10017e28:	42a6      	cmp	r6, r4
10017e2a:	dd22      	ble.n	10017e72 <_strtoll_l.constprop.0+0xde>
10017e2c:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
10017e30:	d0ee      	beq.n	10017e10 <_strtoll_l.constprop.0+0x7c>
10017e32:	4583      	cmp	fp, r0
10017e34:	eb7e 0301 	sbcs.w	r3, lr, r1
10017e38:	d2db      	bcs.n	10017df2 <_strtoll_l.constprop.0+0x5e>
10017e3a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10017e3e:	e7e7      	b.n	10017e10 <_strtoll_l.constprop.0+0x7c>
10017e40:	782c      	ldrb	r4, [r5, #0]
10017e42:	9302      	str	r3, [sp, #8]
10017e44:	1c8d      	adds	r5, r1, #2
10017e46:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
10017e4a:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
10017e4e:	e9cd 1300 	strd	r1, r3, [sp]
10017e52:	2e00      	cmp	r6, #0
10017e54:	d0bb      	beq.n	10017dce <_strtoll_l.constprop.0+0x3a>
10017e56:	2e10      	cmp	r6, #16
10017e58:	d03e      	beq.n	10017ed8 <_strtoll_l.constprop.0+0x144>
10017e5a:	4637      	mov	r7, r6
10017e5c:	ea4f 78e6 	mov.w	r8, r6, asr #31
10017e60:	e7ba      	b.n	10017dd8 <_strtoll_l.constprop.0+0x44>
10017e62:	f1ac 0461 	sub.w	r4, ip, #97	@ 0x61
10017e66:	2c19      	cmp	r4, #25
10017e68:	d803      	bhi.n	10017e72 <_strtoll_l.constprop.0+0xde>
10017e6a:	f1ac 0457 	sub.w	r4, ip, #87	@ 0x57
10017e6e:	42a6      	cmp	r6, r4
10017e70:	dcdc      	bgt.n	10017e2c <_strtoll_l.constprop.0+0x98>
10017e72:	1c5a      	adds	r2, r3, #1
10017e74:	d013      	beq.n	10017e9e <_strtoll_l.constprop.0+0x10a>
10017e76:	9a02      	ldr	r2, [sp, #8]
10017e78:	b112      	cbz	r2, 10017e80 <_strtoll_l.constprop.0+0xec>
10017e7a:	4240      	negs	r0, r0
10017e7c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10017e80:	f1ba 0f00 	cmp.w	sl, #0
10017e84:	d003      	beq.n	10017e8e <_strtoll_l.constprop.0+0xfa>
10017e86:	2b00      	cmp	r3, #0
10017e88:	d13d      	bne.n	10017f06 <_strtoll_l.constprop.0+0x172>
10017e8a:	f8ca 9000 	str.w	r9, [sl]
10017e8e:	b005      	add	sp, #20
10017e90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10017e94:	42a2      	cmp	r2, r4
10017e96:	dab0      	bge.n	10017dfa <_strtoll_l.constprop.0+0x66>
10017e98:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10017e9c:	e7b8      	b.n	10017e10 <_strtoll_l.constprop.0+0x7c>
10017e9e:	9a03      	ldr	r2, [sp, #12]
10017ea0:	2322      	movs	r3, #34	@ 0x22
10017ea2:	6013      	str	r3, [r2, #0]
10017ea4:	f1ba 0f00 	cmp.w	sl, #0
10017ea8:	d028      	beq.n	10017efc <_strtoll_l.constprop.0+0x168>
10017eaa:	e9dd 0100 	ldrd	r0, r1, [sp]
10017eae:	f105 39ff 	add.w	r9, r5, #4294967295	@ 0xffffffff
10017eb2:	e7ea      	b.n	10017e8a <_strtoll_l.constprop.0+0xf6>
10017eb4:	9300      	str	r3, [sp, #0]
10017eb6:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
10017eba:	2301      	movs	r3, #1
10017ebc:	782c      	ldrb	r4, [r5, #0]
10017ebe:	e9cd 0301 	strd	r0, r3, [sp, #4]
10017ec2:	1c8d      	adds	r5, r1, #2
10017ec4:	e781      	b.n	10017dca <_strtoll_l.constprop.0+0x36>
10017ec6:	782b      	ldrb	r3, [r5, #0]
10017ec8:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
10017ecc:	2b58      	cmp	r3, #88	@ 0x58
10017ece:	d00e      	beq.n	10017eee <_strtoll_l.constprop.0+0x15a>
10017ed0:	2708      	movs	r7, #8
10017ed2:	46b0      	mov	r8, r6
10017ed4:	463e      	mov	r6, r7
10017ed6:	e77f      	b.n	10017dd8 <_strtoll_l.constprop.0+0x44>
10017ed8:	2c30      	cmp	r4, #48	@ 0x30
10017eda:	d003      	beq.n	10017ee4 <_strtoll_l.constprop.0+0x150>
10017edc:	4637      	mov	r7, r6
10017ede:	f04f 0800 	mov.w	r8, #0
10017ee2:	e779      	b.n	10017dd8 <_strtoll_l.constprop.0+0x44>
10017ee4:	782b      	ldrb	r3, [r5, #0]
10017ee6:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
10017eea:	2b58      	cmp	r3, #88	@ 0x58
10017eec:	d1f6      	bne.n	10017edc <_strtoll_l.constprop.0+0x148>
10017eee:	2710      	movs	r7, #16
10017ef0:	786c      	ldrb	r4, [r5, #1]
10017ef2:	f04f 0800 	mov.w	r8, #0
10017ef6:	3502      	adds	r5, #2
10017ef8:	463e      	mov	r6, r7
10017efa:	e76d      	b.n	10017dd8 <_strtoll_l.constprop.0+0x44>
10017efc:	e9dd 0100 	ldrd	r0, r1, [sp]
10017f00:	b005      	add	sp, #20
10017f02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10017f06:	e9cd 0100 	strd	r0, r1, [sp]
10017f0a:	e7ce      	b.n	10017eaa <_strtoll_l.constprop.0+0x116>
10017f0c:	10020b0d 	.word	0x10020b0d

10017f10 <_strtoll_r>:
10017f10:	f7ff bf40 	b.w	10017d94 <_strtoll_l.constprop.0>

10017f14 <strncpy>:
10017f14:	ea40 0301 	orr.w	r3, r0, r1
10017f18:	079b      	lsls	r3, r3, #30
10017f1a:	b510      	push	{r4, lr}
10017f1c:	d101      	bne.n	10017f22 <strncpy+0xe>
10017f1e:	2a03      	cmp	r2, #3
10017f20:	d817      	bhi.n	10017f52 <strncpy+0x3e>
10017f22:	4684      	mov	ip, r0
10017f24:	f101 3eff 	add.w	lr, r1, #4294967295	@ 0xffffffff
10017f28:	e007      	b.n	10017f3a <strncpy+0x26>
10017f2a:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
10017f2e:	f803 1b01 	strb.w	r1, [r3], #1
10017f32:	1e54      	subs	r4, r2, #1
10017f34:	b129      	cbz	r1, 10017f42 <strncpy+0x2e>
10017f36:	469c      	mov	ip, r3
10017f38:	4622      	mov	r2, r4
10017f3a:	4663      	mov	r3, ip
10017f3c:	2a00      	cmp	r2, #0
10017f3e:	d1f4      	bne.n	10017f2a <strncpy+0x16>
10017f40:	bd10      	pop	{r4, pc}
10017f42:	4494      	add	ip, r2
10017f44:	2c00      	cmp	r4, #0
10017f46:	d0fb      	beq.n	10017f40 <strncpy+0x2c>
10017f48:	f803 1b01 	strb.w	r1, [r3], #1
10017f4c:	4563      	cmp	r3, ip
10017f4e:	d1fb      	bne.n	10017f48 <strncpy+0x34>
10017f50:	bd10      	pop	{r4, pc}
10017f52:	468e      	mov	lr, r1
10017f54:	4684      	mov	ip, r0
10017f56:	f8de 4000 	ldr.w	r4, [lr]
10017f5a:	f1a4 3301 	sub.w	r3, r4, #16843009	@ 0x1010101
10017f5e:	ea23 0304 	bic.w	r3, r3, r4
10017f62:	f013 3f80 	tst.w	r3, #2155905152	@ 0x80808080
10017f66:	4671      	mov	r1, lr
10017f68:	f10e 0e04 	add.w	lr, lr, #4
10017f6c:	d1da      	bne.n	10017f24 <strncpy+0x10>
10017f6e:	3a04      	subs	r2, #4
10017f70:	2a03      	cmp	r2, #3
10017f72:	f84c 4b04 	str.w	r4, [ip], #4
10017f76:	d8ee      	bhi.n	10017f56 <strncpy+0x42>
10017f78:	4671      	mov	r1, lr
10017f7a:	e7d3      	b.n	10017f24 <strncpy+0x10>

10017f7c <_strtoull_l.constprop.0>:
10017f7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10017f80:	b085      	sub	sp, #20
10017f82:	468b      	mov	fp, r1
10017f84:	9201      	str	r2, [sp, #4]
10017f86:	4a60      	ldr	r2, [pc, #384]	@ (10018108 <_strtoull_l.constprop.0+0x18c>)
10017f88:	9003      	str	r0, [sp, #12]
10017f8a:	461e      	mov	r6, r3
10017f8c:	460d      	mov	r5, r1
10017f8e:	4629      	mov	r1, r5
10017f90:	f815 4b01 	ldrb.w	r4, [r5], #1
10017f94:	5d13      	ldrb	r3, [r2, r4]
10017f96:	f013 0308 	ands.w	r3, r3, #8
10017f9a:	d1f8      	bne.n	10017f8e <_strtoull_l.constprop.0+0x12>
10017f9c:	2c2d      	cmp	r4, #45	@ 0x2d
10017f9e:	d07e      	beq.n	1001809e <_strtoull_l.constprop.0+0x122>
10017fa0:	2c2b      	cmp	r4, #43	@ 0x2b
10017fa2:	bf03      	ittte	eq
10017fa4:	782c      	ldrbeq	r4, [r5, #0]
10017fa6:	9302      	streq	r3, [sp, #8]
10017fa8:	1c8d      	addeq	r5, r1, #2
10017faa:	9302      	strne	r3, [sp, #8]
10017fac:	b96e      	cbnz	r6, 10017fca <_strtoull_l.constprop.0+0x4e>
10017fae:	2c30      	cmp	r4, #48	@ 0x30
10017fb0:	f000 8086 	beq.w	100180c0 <_strtoull_l.constprop.0+0x144>
10017fb4:	f04f 090a 	mov.w	r9, #10
10017fb8:	46b2      	mov	sl, r6
10017fba:	f8df 8150 	ldr.w	r8, [pc, #336]	@ 1001810c <_strtoull_l.constprop.0+0x190>
10017fbe:	f04f 0c05 	mov.w	ip, #5
10017fc2:	f04f 3799 	mov.w	r7, #2576980377	@ 0x99999999
10017fc6:	464e      	mov	r6, r9
10017fc8:	e017      	b.n	10017ffa <_strtoull_l.constprop.0+0x7e>
10017fca:	2e10      	cmp	r6, #16
10017fcc:	d06c      	beq.n	100180a8 <_strtoull_l.constprop.0+0x12c>
10017fce:	ea4f 7ae6 	mov.w	sl, r6, asr #31
10017fd2:	4632      	mov	r2, r6
10017fd4:	4653      	mov	r3, sl
10017fd6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10017fda:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
10017fde:	f008 f911 	bl	10020204 <__aeabi_uldivmod>
10017fe2:	4632      	mov	r2, r6
10017fe4:	4607      	mov	r7, r0
10017fe6:	4688      	mov	r8, r1
10017fe8:	4653      	mov	r3, sl
10017fea:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10017fee:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
10017ff2:	f008 f907 	bl	10020204 <__aeabi_uldivmod>
10017ff6:	46b1      	mov	r9, r6
10017ff8:	4694      	mov	ip, r2
10017ffa:	2200      	movs	r2, #0
10017ffc:	4610      	mov	r0, r2
10017ffe:	4611      	mov	r1, r2
10018000:	e010      	b.n	10018024 <_strtoull_l.constprop.0+0xa8>
10018002:	4541      	cmp	r1, r8
10018004:	bf08      	it	eq
10018006:	42b8      	cmpeq	r0, r7
10018008:	d039      	beq.n	1001807e <_strtoull_l.constprop.0+0x102>
1001800a:	fb00 f20a 	mul.w	r2, r0, sl
1001800e:	fb09 2101 	mla	r1, r9, r1, r2
10018012:	fba0 0209 	umull	r0, r2, r0, r9
10018016:	4411      	add	r1, r2
10018018:	1818      	adds	r0, r3, r0
1001801a:	eb41 71e3 	adc.w	r1, r1, r3, asr #31
1001801e:	2201      	movs	r2, #1
10018020:	f815 4b01 	ldrb.w	r4, [r5], #1
10018024:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
10018028:	2b09      	cmp	r3, #9
1001802a:	d905      	bls.n	10018038 <_strtoull_l.constprop.0+0xbc>
1001802c:	f1a4 0341 	sub.w	r3, r4, #65	@ 0x41
10018030:	2b19      	cmp	r3, #25
10018032:	d80c      	bhi.n	1001804e <_strtoull_l.constprop.0+0xd2>
10018034:	f1a4 0337 	sub.w	r3, r4, #55	@ 0x37
10018038:	429e      	cmp	r6, r3
1001803a:	dd10      	ble.n	1001805e <_strtoull_l.constprop.0+0xe2>
1001803c:	1c54      	adds	r4, r2, #1
1001803e:	d0ef      	beq.n	10018020 <_strtoull_l.constprop.0+0xa4>
10018040:	4287      	cmp	r7, r0
10018042:	eb78 0201 	sbcs.w	r2, r8, r1
10018046:	d2dc      	bcs.n	10018002 <_strtoull_l.constprop.0+0x86>
10018048:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1001804c:	e7e8      	b.n	10018020 <_strtoull_l.constprop.0+0xa4>
1001804e:	f1a4 0361 	sub.w	r3, r4, #97	@ 0x61
10018052:	2b19      	cmp	r3, #25
10018054:	d803      	bhi.n	1001805e <_strtoull_l.constprop.0+0xe2>
10018056:	f1a4 0357 	sub.w	r3, r4, #87	@ 0x57
1001805a:	429e      	cmp	r6, r3
1001805c:	dcee      	bgt.n	1001803c <_strtoull_l.constprop.0+0xc0>
1001805e:	1c53      	adds	r3, r2, #1
10018060:	d012      	beq.n	10018088 <_strtoull_l.constprop.0+0x10c>
10018062:	9b02      	ldr	r3, [sp, #8]
10018064:	b113      	cbz	r3, 1001806c <_strtoull_l.constprop.0+0xf0>
10018066:	4240      	negs	r0, r0
10018068:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1001806c:	9b01      	ldr	r3, [sp, #4]
1001806e:	b11b      	cbz	r3, 10018078 <_strtoull_l.constprop.0+0xfc>
10018070:	b992      	cbnz	r2, 10018098 <_strtoull_l.constprop.0+0x11c>
10018072:	9b01      	ldr	r3, [sp, #4]
10018074:	f8c3 b000 	str.w	fp, [r3]
10018078:	b005      	add	sp, #20
1001807a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001807e:	4563      	cmp	r3, ip
10018080:	ddc3      	ble.n	1001800a <_strtoull_l.constprop.0+0x8e>
10018082:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10018086:	e7cb      	b.n	10018020 <_strtoull_l.constprop.0+0xa4>
10018088:	9903      	ldr	r1, [sp, #12]
1001808a:	2322      	movs	r3, #34	@ 0x22
1001808c:	600b      	str	r3, [r1, #0]
1001808e:	9b01      	ldr	r3, [sp, #4]
10018090:	4610      	mov	r0, r2
10018092:	4611      	mov	r1, r2
10018094:	2b00      	cmp	r3, #0
10018096:	d0ef      	beq.n	10018078 <_strtoull_l.constprop.0+0xfc>
10018098:	f105 3bff 	add.w	fp, r5, #4294967295	@ 0xffffffff
1001809c:	e7e9      	b.n	10018072 <_strtoull_l.constprop.0+0xf6>
1001809e:	2301      	movs	r3, #1
100180a0:	782c      	ldrb	r4, [r5, #0]
100180a2:	9302      	str	r3, [sp, #8]
100180a4:	1c8d      	adds	r5, r1, #2
100180a6:	e781      	b.n	10017fac <_strtoull_l.constprop.0+0x30>
100180a8:	2c30      	cmp	r4, #48	@ 0x30
100180aa:	d019      	beq.n	100180e0 <_strtoull_l.constprop.0+0x164>
100180ac:	f04f 0c0f 	mov.w	ip, #15
100180b0:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
100180b4:	f06f 4870 	mvn.w	r8, #4026531840	@ 0xf0000000
100180b8:	46b1      	mov	r9, r6
100180ba:	f04f 0a00 	mov.w	sl, #0
100180be:	e79c      	b.n	10017ffa <_strtoull_l.constprop.0+0x7e>
100180c0:	782b      	ldrb	r3, [r5, #0]
100180c2:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
100180c6:	2b58      	cmp	r3, #88	@ 0x58
100180c8:	d00f      	beq.n	100180ea <_strtoull_l.constprop.0+0x16e>
100180ca:	f04f 0908 	mov.w	r9, #8
100180ce:	46b2      	mov	sl, r6
100180d0:	f04f 0c07 	mov.w	ip, #7
100180d4:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
100180d8:	f06f 4860 	mvn.w	r8, #3758096384	@ 0xe0000000
100180dc:	464e      	mov	r6, r9
100180de:	e78c      	b.n	10017ffa <_strtoull_l.constprop.0+0x7e>
100180e0:	782b      	ldrb	r3, [r5, #0]
100180e2:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
100180e6:	2b58      	cmp	r3, #88	@ 0x58
100180e8:	d1e0      	bne.n	100180ac <_strtoull_l.constprop.0+0x130>
100180ea:	f04f 0910 	mov.w	r9, #16
100180ee:	786c      	ldrb	r4, [r5, #1]
100180f0:	f04f 0c0f 	mov.w	ip, #15
100180f4:	3502      	adds	r5, #2
100180f6:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
100180fa:	f06f 4870 	mvn.w	r8, #4026531840	@ 0xf0000000
100180fe:	f04f 0a00 	mov.w	sl, #0
10018102:	464e      	mov	r6, r9
10018104:	e779      	b.n	10017ffa <_strtoull_l.constprop.0+0x7e>
10018106:	bf00      	nop
10018108:	10020b0d 	.word	0x10020b0d
1001810c:	19999999 	.word	0x19999999

10018110 <_strtoull_r>:
10018110:	f7ff bf34 	b.w	10017f7c <_strtoull_l.constprop.0>

10018114 <_lseek_r>:
10018114:	b538      	push	{r3, r4, r5, lr}
10018116:	460c      	mov	r4, r1
10018118:	4d08      	ldr	r5, [pc, #32]	@ (1001813c <_lseek_r+0x28>)
1001811a:	4684      	mov	ip, r0
1001811c:	4611      	mov	r1, r2
1001811e:	4620      	mov	r0, r4
10018120:	461a      	mov	r2, r3
10018122:	2300      	movs	r3, #0
10018124:	602b      	str	r3, [r5, #0]
10018126:	4664      	mov	r4, ip
10018128:	f7f8 ff36 	bl	10010f98 <_lseek>
1001812c:	1c43      	adds	r3, r0, #1
1001812e:	d000      	beq.n	10018132 <_lseek_r+0x1e>
10018130:	bd38      	pop	{r3, r4, r5, pc}
10018132:	682b      	ldr	r3, [r5, #0]
10018134:	2b00      	cmp	r3, #0
10018136:	d0fb      	beq.n	10018130 <_lseek_r+0x1c>
10018138:	6023      	str	r3, [r4, #0]
1001813a:	bd38      	pop	{r3, r4, r5, pc}
1001813c:	20001498 	.word	0x20001498

10018140 <_read_r>:
10018140:	b538      	push	{r3, r4, r5, lr}
10018142:	460c      	mov	r4, r1
10018144:	4d08      	ldr	r5, [pc, #32]	@ (10018168 <_read_r+0x28>)
10018146:	4684      	mov	ip, r0
10018148:	4611      	mov	r1, r2
1001814a:	4620      	mov	r0, r4
1001814c:	461a      	mov	r2, r3
1001814e:	2300      	movs	r3, #0
10018150:	602b      	str	r3, [r5, #0]
10018152:	4664      	mov	r4, ip
10018154:	f7f8 ff28 	bl	10010fa8 <_read>
10018158:	1c43      	adds	r3, r0, #1
1001815a:	d000      	beq.n	1001815e <_read_r+0x1e>
1001815c:	bd38      	pop	{r3, r4, r5, pc}
1001815e:	682b      	ldr	r3, [r5, #0]
10018160:	2b00      	cmp	r3, #0
10018162:	d0fb      	beq.n	1001815c <_read_r+0x1c>
10018164:	6023      	str	r3, [r4, #0]
10018166:	bd38      	pop	{r3, r4, r5, pc}
10018168:	20001498 	.word	0x20001498

1001816c <iswspace>:
1001816c:	2100      	movs	r1, #0
1001816e:	f000 b801 	b.w	10018174 <iswspace_l>
10018172:	bf00      	nop

10018174 <iswspace_l>:
10018174:	b510      	push	{r4, lr}
10018176:	f000 faf1 	bl	1001875c <_jp2uc_l>
1001817a:	4604      	mov	r4, r0
1001817c:	f000 f876 	bl	1001826c <category>
10018180:	f1a0 031a 	sub.w	r3, r0, #26
10018184:	b2db      	uxtb	r3, r3
10018186:	2b02      	cmp	r3, #2
10018188:	d906      	bls.n	10018198 <iswspace_l+0x24>
1001818a:	f1a4 0009 	sub.w	r0, r4, #9
1001818e:	2804      	cmp	r0, #4
10018190:	bf8c      	ite	hi
10018192:	2000      	movhi	r0, #0
10018194:	2001      	movls	r0, #1
10018196:	bd10      	pop	{r4, pc}
10018198:	2001      	movs	r0, #1
1001819a:	bd10      	pop	{r4, pc}

1001819c <sprintf>:
1001819c:	b40e      	push	{r1, r2, r3}
1001819e:	b510      	push	{r4, lr}
100181a0:	b09d      	sub	sp, #116	@ 0x74
100181a2:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
100181a6:	ab1f      	add	r3, sp, #124	@ 0x7c
100181a8:	9104      	str	r1, [sp, #16]
100181aa:	9107      	str	r1, [sp, #28]
100181ac:	4909      	ldr	r1, [pc, #36]	@ (100181d4 <sprintf+0x38>)
100181ae:	f853 2b04 	ldr.w	r2, [r3], #4
100181b2:	9002      	str	r0, [sp, #8]
100181b4:	9006      	str	r0, [sp, #24]
100181b6:	4c08      	ldr	r4, [pc, #32]	@ (100181d8 <sprintf+0x3c>)
100181b8:	6808      	ldr	r0, [r1, #0]
100181ba:	9301      	str	r3, [sp, #4]
100181bc:	a902      	add	r1, sp, #8
100181be:	9405      	str	r4, [sp, #20]
100181c0:	f000 fbb8 	bl	10018934 <_svfprintf_r>
100181c4:	9b02      	ldr	r3, [sp, #8]
100181c6:	2200      	movs	r2, #0
100181c8:	701a      	strb	r2, [r3, #0]
100181ca:	b01d      	add	sp, #116	@ 0x74
100181cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
100181d0:	b003      	add	sp, #12
100181d2:	4770      	bx	lr
100181d4:	20000590 	.word	0x20000590
100181d8:	ffff0208 	.word	0xffff0208

100181dc <stpncpy>:
100181dc:	ea41 0300 	orr.w	r3, r1, r0
100181e0:	079b      	lsls	r3, r3, #30
100181e2:	b410      	push	{r4}
100181e4:	d101      	bne.n	100181ea <stpncpy+0xe>
100181e6:	2a03      	cmp	r2, #3
100181e8:	d81a      	bhi.n	10018220 <stpncpy+0x44>
100181ea:	f101 3cff 	add.w	ip, r1, #4294967295	@ 0xffffffff
100181ee:	e007      	b.n	10018200 <stpncpy+0x24>
100181f0:	f81c 1f01 	ldrb.w	r1, [ip, #1]!
100181f4:	f803 1b01 	strb.w	r1, [r3], #1
100181f8:	1e54      	subs	r4, r2, #1
100181fa:	b131      	cbz	r1, 1001820a <stpncpy+0x2e>
100181fc:	4622      	mov	r2, r4
100181fe:	4618      	mov	r0, r3
10018200:	4603      	mov	r3, r0
10018202:	2a00      	cmp	r2, #0
10018204:	d1f4      	bne.n	100181f0 <stpncpy+0x14>
10018206:	bc10      	pop	{r4}
10018208:	4770      	bx	lr
1001820a:	4402      	add	r2, r0
1001820c:	b1f4      	cbz	r4, 1001824c <stpncpy+0x70>
1001820e:	f803 1b01 	strb.w	r1, [r3], #1
10018212:	4293      	cmp	r3, r2
10018214:	d1fb      	bne.n	1001820e <stpncpy+0x32>
10018216:	2800      	cmp	r0, #0
10018218:	bf08      	it	eq
1001821a:	4610      	moveq	r0, r2
1001821c:	bc10      	pop	{r4}
1001821e:	4770      	bx	lr
10018220:	468c      	mov	ip, r1
10018222:	e004      	b.n	1001822e <stpncpy+0x52>
10018224:	3a04      	subs	r2, #4
10018226:	2a03      	cmp	r2, #3
10018228:	f840 4b04 	str.w	r4, [r0], #4
1001822c:	d90c      	bls.n	10018248 <stpncpy+0x6c>
1001822e:	f8dc 4000 	ldr.w	r4, [ip]
10018232:	f1a4 3301 	sub.w	r3, r4, #16843009	@ 0x1010101
10018236:	ea23 0304 	bic.w	r3, r3, r4
1001823a:	f013 3f80 	tst.w	r3, #2155905152	@ 0x80808080
1001823e:	4661      	mov	r1, ip
10018240:	f10c 0c04 	add.w	ip, ip, #4
10018244:	d0ee      	beq.n	10018224 <stpncpy+0x48>
10018246:	e7d0      	b.n	100181ea <stpncpy+0xe>
10018248:	4661      	mov	r1, ip
1001824a:	e7ce      	b.n	100181ea <stpncpy+0xe>
1001824c:	461a      	mov	r2, r3
1001824e:	e7e2      	b.n	10018216 <stpncpy+0x3a>

10018250 <__ascii_wctomb>:
10018250:	b149      	cbz	r1, 10018266 <__ascii_wctomb+0x16>
10018252:	2aff      	cmp	r2, #255	@ 0xff
10018254:	d802      	bhi.n	1001825c <__ascii_wctomb+0xc>
10018256:	700a      	strb	r2, [r1, #0]
10018258:	2001      	movs	r0, #1
1001825a:	4770      	bx	lr
1001825c:	238a      	movs	r3, #138	@ 0x8a
1001825e:	6003      	str	r3, [r0, #0]
10018260:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10018264:	4770      	bx	lr
10018266:	4608      	mov	r0, r1
10018268:	4770      	bx	lr
1001826a:	bf00      	nop

1001826c <category>:
1001826c:	4b17      	ldr	r3, [pc, #92]	@ (100182cc <category+0x60>)
1001826e:	4298      	cmp	r0, r3
10018270:	d827      	bhi.n	100182c2 <category+0x56>
10018272:	b570      	push	{r4, r5, r6, lr}
10018274:	4d16      	ldr	r5, [pc, #88]	@ (100182d0 <category+0x64>)
10018276:	f04f 0e00 	mov.w	lr, #0
1001827a:	f640 04f9 	movw	r4, #2297	@ 0x8f9
1001827e:	e003      	b.n	10018288 <category+0x1c>
10018280:	f102 0e01 	add.w	lr, r2, #1
10018284:	4574      	cmp	r4, lr
10018286:	db1a      	blt.n	100182be <category+0x52>
10018288:	eb0e 0204 	add.w	r2, lr, r4
1001828c:	f022 0301 	bic.w	r3, r2, #1
10018290:	eb03 0362 	add.w	r3, r3, r2, asr #1
10018294:	eb05 0c43 	add.w	ip, r5, r3, lsl #1
10018298:	1052      	asrs	r2, r2, #1
1001829a:	f89c 1001 	ldrb.w	r1, [ip, #1]
1001829e:	f8bc 6002 	ldrh.w	r6, [ip, #2]
100182a2:	f8bc c004 	ldrh.w	ip, [ip, #4]
100182a6:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
100182aa:	448c      	add	ip, r1
100182ac:	4560      	cmp	r0, ip
100182ae:	ea4f 0343 	mov.w	r3, r3, lsl #1
100182b2:	d8e5      	bhi.n	10018280 <category+0x14>
100182b4:	4288      	cmp	r0, r1
100182b6:	d206      	bcs.n	100182c6 <category+0x5a>
100182b8:	1e54      	subs	r4, r2, #1
100182ba:	4574      	cmp	r4, lr
100182bc:	dae4      	bge.n	10018288 <category+0x1c>
100182be:	20ff      	movs	r0, #255	@ 0xff
100182c0:	bd70      	pop	{r4, r5, r6, pc}
100182c2:	20ff      	movs	r0, #255	@ 0xff
100182c4:	4770      	bx	lr
100182c6:	5ce8      	ldrb	r0, [r5, r3]
100182c8:	bd70      	pop	{r4, r5, r6, pc}
100182ca:	bf00      	nop
100182cc:	000e01ef 	.word	0x000e01ef
100182d0:	10020de8 	.word	0x10020de8

100182d4 <_sbrk_r>:
100182d4:	b538      	push	{r3, r4, r5, lr}
100182d6:	4d07      	ldr	r5, [pc, #28]	@ (100182f4 <_sbrk_r+0x20>)
100182d8:	2200      	movs	r2, #0
100182da:	4604      	mov	r4, r0
100182dc:	4608      	mov	r0, r1
100182de:	602a      	str	r2, [r5, #0]
100182e0:	f7f8 ffb2 	bl	10011248 <_sbrk>
100182e4:	1c43      	adds	r3, r0, #1
100182e6:	d000      	beq.n	100182ea <_sbrk_r+0x16>
100182e8:	bd38      	pop	{r3, r4, r5, pc}
100182ea:	682b      	ldr	r3, [r5, #0]
100182ec:	2b00      	cmp	r3, #0
100182ee:	d0fb      	beq.n	100182e8 <_sbrk_r+0x14>
100182f0:	6023      	str	r3, [r4, #0]
100182f2:	bd38      	pop	{r3, r4, r5, pc}
100182f4:	20001498 	.word	0x20001498

100182f8 <__sfvwrite_r>:
100182f8:	6893      	ldr	r3, [r2, #8]
100182fa:	2b00      	cmp	r3, #0
100182fc:	f000 80f6 	beq.w	100184ec <__sfvwrite_r+0x1f4>
10018300:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10018304:	f9b1 c00c 	ldrsh.w	ip, [r1, #12]
10018308:	f01c 0f08 	tst.w	ip, #8
1001830c:	b083      	sub	sp, #12
1001830e:	4690      	mov	r8, r2
10018310:	4681      	mov	r9, r0
10018312:	460c      	mov	r4, r1
10018314:	d031      	beq.n	1001837a <__sfvwrite_r+0x82>
10018316:	690b      	ldr	r3, [r1, #16]
10018318:	b37b      	cbz	r3, 1001837a <__sfvwrite_r+0x82>
1001831a:	f01c 0702 	ands.w	r7, ip, #2
1001831e:	f8d8 6000 	ldr.w	r6, [r8]
10018322:	d038      	beq.n	10018396 <__sfvwrite_r+0x9e>
10018324:	2700      	movs	r7, #0
10018326:	f8d4 b024 	ldr.w	fp, [r4, #36]	@ 0x24
1001832a:	69e1      	ldr	r1, [r4, #28]
1001832c:	f8df a2bc 	ldr.w	sl, [pc, #700]	@ 100185ec <__sfvwrite_r+0x2f4>
10018330:	463d      	mov	r5, r7
10018332:	4555      	cmp	r5, sl
10018334:	462b      	mov	r3, r5
10018336:	463a      	mov	r2, r7
10018338:	bf28      	it	cs
1001833a:	4653      	movcs	r3, sl
1001833c:	4648      	mov	r0, r9
1001833e:	b1c5      	cbz	r5, 10018372 <__sfvwrite_r+0x7a>
10018340:	47d8      	blx	fp
10018342:	2800      	cmp	r0, #0
10018344:	f340 80c8 	ble.w	100184d8 <__sfvwrite_r+0x1e0>
10018348:	f8d8 3008 	ldr.w	r3, [r8, #8]
1001834c:	1a1b      	subs	r3, r3, r0
1001834e:	4407      	add	r7, r0
10018350:	1a2d      	subs	r5, r5, r0
10018352:	f8c8 3008 	str.w	r3, [r8, #8]
10018356:	2b00      	cmp	r3, #0
10018358:	f000 80b4 	beq.w	100184c4 <__sfvwrite_r+0x1cc>
1001835c:	4555      	cmp	r5, sl
1001835e:	462b      	mov	r3, r5
10018360:	f8d4 b024 	ldr.w	fp, [r4, #36]	@ 0x24
10018364:	69e1      	ldr	r1, [r4, #28]
10018366:	bf28      	it	cs
10018368:	4653      	movcs	r3, sl
1001836a:	463a      	mov	r2, r7
1001836c:	4648      	mov	r0, r9
1001836e:	2d00      	cmp	r5, #0
10018370:	d1e6      	bne.n	10018340 <__sfvwrite_r+0x48>
10018372:	e9d6 7500 	ldrd	r7, r5, [r6]
10018376:	3608      	adds	r6, #8
10018378:	e7db      	b.n	10018332 <__sfvwrite_r+0x3a>
1001837a:	4621      	mov	r1, r4
1001837c:	4648      	mov	r0, r9
1001837e:	f005 f8e1 	bl	1001d544 <__swsetup_r>
10018382:	2800      	cmp	r0, #0
10018384:	f040 80ad 	bne.w	100184e2 <__sfvwrite_r+0x1ea>
10018388:	f9b4 c00c 	ldrsh.w	ip, [r4, #12]
1001838c:	f8d8 6000 	ldr.w	r6, [r8]
10018390:	f01c 0702 	ands.w	r7, ip, #2
10018394:	d1c6      	bne.n	10018324 <__sfvwrite_r+0x2c>
10018396:	f01c 0a01 	ands.w	sl, ip, #1
1001839a:	d163      	bne.n	10018464 <__sfvwrite_r+0x16c>
1001839c:	6823      	ldr	r3, [r4, #0]
1001839e:	68a1      	ldr	r1, [r4, #8]
100183a0:	4657      	mov	r7, sl
100183a2:	4618      	mov	r0, r3
100183a4:	468b      	mov	fp, r1
100183a6:	2f00      	cmp	r7, #0
100183a8:	d058      	beq.n	1001845c <__sfvwrite_r+0x164>
100183aa:	f41c 7f00 	tst.w	ip, #512	@ 0x200
100183ae:	f000 80b1 	beq.w	10018514 <__sfvwrite_r+0x21c>
100183b2:	42b9      	cmp	r1, r7
100183b4:	460a      	mov	r2, r1
100183b6:	f200 80dd 	bhi.w	10018574 <__sfvwrite_r+0x27c>
100183ba:	f41c 6f90 	tst.w	ip, #1152	@ 0x480
100183be:	d02f      	beq.n	10018420 <__sfvwrite_r+0x128>
100183c0:	6921      	ldr	r1, [r4, #16]
100183c2:	6962      	ldr	r2, [r4, #20]
100183c4:	1a5d      	subs	r5, r3, r1
100183c6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
100183ca:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
100183ce:	1c6b      	adds	r3, r5, #1
100183d0:	1052      	asrs	r2, r2, #1
100183d2:	443b      	add	r3, r7
100183d4:	4293      	cmp	r3, r2
100183d6:	bf92      	itee	ls
100183d8:	4693      	movls	fp, r2
100183da:	469b      	movhi	fp, r3
100183dc:	461a      	movhi	r2, r3
100183de:	f41c 6f80 	tst.w	ip, #1024	@ 0x400
100183e2:	f000 80e6 	beq.w	100185b2 <__sfvwrite_r+0x2ba>
100183e6:	4611      	mov	r1, r2
100183e8:	4648      	mov	r0, r9
100183ea:	f7fc facb 	bl	10014984 <_malloc_r>
100183ee:	2800      	cmp	r0, #0
100183f0:	f000 80f5 	beq.w	100185de <__sfvwrite_r+0x2e6>
100183f4:	462a      	mov	r2, r5
100183f6:	6921      	ldr	r1, [r4, #16]
100183f8:	9001      	str	r0, [sp, #4]
100183fa:	f7fd fb01 	bl	10015a00 <memcpy>
100183fe:	89a2      	ldrh	r2, [r4, #12]
10018400:	9b01      	ldr	r3, [sp, #4]
10018402:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
10018406:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
1001840a:	81a2      	strh	r2, [r4, #12]
1001840c:	1958      	adds	r0, r3, r5
1001840e:	ebab 0505 	sub.w	r5, fp, r5
10018412:	f8c4 b014 	str.w	fp, [r4, #20]
10018416:	6123      	str	r3, [r4, #16]
10018418:	60a5      	str	r5, [r4, #8]
1001841a:	6020      	str	r0, [r4, #0]
1001841c:	46bb      	mov	fp, r7
1001841e:	463a      	mov	r2, r7
10018420:	4651      	mov	r1, sl
10018422:	9201      	str	r2, [sp, #4]
10018424:	f004 ff68 	bl	1001d2f8 <memmove>
10018428:	68a1      	ldr	r1, [r4, #8]
1001842a:	6823      	ldr	r3, [r4, #0]
1001842c:	9a01      	ldr	r2, [sp, #4]
1001842e:	eba1 010b 	sub.w	r1, r1, fp
10018432:	441a      	add	r2, r3
10018434:	463d      	mov	r5, r7
10018436:	60a1      	str	r1, [r4, #8]
10018438:	6022      	str	r2, [r4, #0]
1001843a:	2700      	movs	r7, #0
1001843c:	f8d8 3008 	ldr.w	r3, [r8, #8]
10018440:	1b5b      	subs	r3, r3, r5
10018442:	44aa      	add	sl, r5
10018444:	f8c8 3008 	str.w	r3, [r8, #8]
10018448:	2b00      	cmp	r3, #0
1001844a:	d03b      	beq.n	100184c4 <__sfvwrite_r+0x1cc>
1001844c:	6823      	ldr	r3, [r4, #0]
1001844e:	68a1      	ldr	r1, [r4, #8]
10018450:	f9b4 c00c 	ldrsh.w	ip, [r4, #12]
10018454:	4618      	mov	r0, r3
10018456:	468b      	mov	fp, r1
10018458:	2f00      	cmp	r7, #0
1001845a:	d1a6      	bne.n	100183aa <__sfvwrite_r+0xb2>
1001845c:	e9d6 a700 	ldrd	sl, r7, [r6]
10018460:	3608      	adds	r6, #8
10018462:	e79e      	b.n	100183a2 <__sfvwrite_r+0xaa>
10018464:	4638      	mov	r0, r7
10018466:	46bb      	mov	fp, r7
10018468:	463d      	mov	r5, r7
1001846a:	2d00      	cmp	r5, #0
1001846c:	d040      	beq.n	100184f0 <__sfvwrite_r+0x1f8>
1001846e:	2800      	cmp	r0, #0
10018470:	d045      	beq.n	100184fe <__sfvwrite_r+0x206>
10018472:	463a      	mov	r2, r7
10018474:	e9d4 c304 	ldrd	ip, r3, [r4, #16]
10018478:	6820      	ldr	r0, [r4, #0]
1001847a:	68a1      	ldr	r1, [r4, #8]
1001847c:	42aa      	cmp	r2, r5
1001847e:	bf28      	it	cs
10018480:	462a      	movcs	r2, r5
10018482:	4560      	cmp	r0, ip
10018484:	d904      	bls.n	10018490 <__sfvwrite_r+0x198>
10018486:	eb01 0a03 	add.w	sl, r1, r3
1001848a:	4552      	cmp	r2, sl
1001848c:	f300 8082 	bgt.w	10018594 <__sfvwrite_r+0x29c>
10018490:	4293      	cmp	r3, r2
10018492:	dc72      	bgt.n	1001857a <__sfvwrite_r+0x282>
10018494:	69e1      	ldr	r1, [r4, #28]
10018496:	f8d4 c024 	ldr.w	ip, [r4, #36]	@ 0x24
1001849a:	465a      	mov	r2, fp
1001849c:	4648      	mov	r0, r9
1001849e:	47e0      	blx	ip
100184a0:	f1b0 0a00 	subs.w	sl, r0, #0
100184a4:	dd18      	ble.n	100184d8 <__sfvwrite_r+0x1e0>
100184a6:	ebb7 070a 	subs.w	r7, r7, sl
100184aa:	d00f      	beq.n	100184cc <__sfvwrite_r+0x1d4>
100184ac:	2001      	movs	r0, #1
100184ae:	f8d8 3008 	ldr.w	r3, [r8, #8]
100184b2:	eba3 030a 	sub.w	r3, r3, sl
100184b6:	44d3      	add	fp, sl
100184b8:	eba5 050a 	sub.w	r5, r5, sl
100184bc:	f8c8 3008 	str.w	r3, [r8, #8]
100184c0:	2b00      	cmp	r3, #0
100184c2:	d1d2      	bne.n	1001846a <__sfvwrite_r+0x172>
100184c4:	2000      	movs	r0, #0
100184c6:	b003      	add	sp, #12
100184c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100184cc:	4621      	mov	r1, r4
100184ce:	4648      	mov	r0, r9
100184d0:	f7fd f892 	bl	100155f8 <_fflush_r>
100184d4:	2800      	cmp	r0, #0
100184d6:	d0ea      	beq.n	100184ae <__sfvwrite_r+0x1b6>
100184d8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100184dc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100184e0:	81a3      	strh	r3, [r4, #12]
100184e2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100184e6:	b003      	add	sp, #12
100184e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100184ec:	2000      	movs	r0, #0
100184ee:	4770      	bx	lr
100184f0:	6875      	ldr	r5, [r6, #4]
100184f2:	4633      	mov	r3, r6
100184f4:	3608      	adds	r6, #8
100184f6:	2d00      	cmp	r5, #0
100184f8:	d0fa      	beq.n	100184f0 <__sfvwrite_r+0x1f8>
100184fa:	f8d3 b000 	ldr.w	fp, [r3]
100184fe:	462a      	mov	r2, r5
10018500:	210a      	movs	r1, #10
10018502:	4658      	mov	r0, fp
10018504:	f7fd fa2c 	bl	10015960 <memchr>
10018508:	2800      	cmp	r0, #0
1001850a:	d065      	beq.n	100185d8 <__sfvwrite_r+0x2e0>
1001850c:	3001      	adds	r0, #1
1001850e:	eba0 070b 	sub.w	r7, r0, fp
10018512:	e7ae      	b.n	10018472 <__sfvwrite_r+0x17a>
10018514:	6922      	ldr	r2, [r4, #16]
10018516:	429a      	cmp	r2, r3
10018518:	d314      	bcc.n	10018544 <__sfvwrite_r+0x24c>
1001851a:	6962      	ldr	r2, [r4, #20]
1001851c:	42ba      	cmp	r2, r7
1001851e:	d811      	bhi.n	10018544 <__sfvwrite_r+0x24c>
10018520:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
10018524:	42bb      	cmp	r3, r7
10018526:	bf28      	it	cs
10018528:	463b      	movcs	r3, r7
1001852a:	6a65      	ldr	r5, [r4, #36]	@ 0x24
1001852c:	fb93 f3f2 	sdiv	r3, r3, r2
10018530:	69e1      	ldr	r1, [r4, #28]
10018532:	fb02 f303 	mul.w	r3, r2, r3
10018536:	4648      	mov	r0, r9
10018538:	4652      	mov	r2, sl
1001853a:	47a8      	blx	r5
1001853c:	1e05      	subs	r5, r0, #0
1001853e:	ddcb      	ble.n	100184d8 <__sfvwrite_r+0x1e0>
10018540:	1b7f      	subs	r7, r7, r5
10018542:	e77b      	b.n	1001843c <__sfvwrite_r+0x144>
10018544:	42b9      	cmp	r1, r7
10018546:	bf28      	it	cs
10018548:	4639      	movcs	r1, r7
1001854a:	460d      	mov	r5, r1
1001854c:	4618      	mov	r0, r3
1001854e:	460a      	mov	r2, r1
10018550:	4651      	mov	r1, sl
10018552:	f004 fed1 	bl	1001d2f8 <memmove>
10018556:	68a1      	ldr	r1, [r4, #8]
10018558:	6823      	ldr	r3, [r4, #0]
1001855a:	1b49      	subs	r1, r1, r5
1001855c:	442b      	add	r3, r5
1001855e:	60a1      	str	r1, [r4, #8]
10018560:	6023      	str	r3, [r4, #0]
10018562:	2900      	cmp	r1, #0
10018564:	d1ec      	bne.n	10018540 <__sfvwrite_r+0x248>
10018566:	4621      	mov	r1, r4
10018568:	4648      	mov	r0, r9
1001856a:	f7fd f845 	bl	100155f8 <_fflush_r>
1001856e:	2800      	cmp	r0, #0
10018570:	d0e6      	beq.n	10018540 <__sfvwrite_r+0x248>
10018572:	e7b1      	b.n	100184d8 <__sfvwrite_r+0x1e0>
10018574:	46bb      	mov	fp, r7
10018576:	463a      	mov	r2, r7
10018578:	e752      	b.n	10018420 <__sfvwrite_r+0x128>
1001857a:	4659      	mov	r1, fp
1001857c:	9201      	str	r2, [sp, #4]
1001857e:	f004 febb 	bl	1001d2f8 <memmove>
10018582:	9a01      	ldr	r2, [sp, #4]
10018584:	68a3      	ldr	r3, [r4, #8]
10018586:	1a9b      	subs	r3, r3, r2
10018588:	60a3      	str	r3, [r4, #8]
1001858a:	6823      	ldr	r3, [r4, #0]
1001858c:	4413      	add	r3, r2
1001858e:	6023      	str	r3, [r4, #0]
10018590:	4692      	mov	sl, r2
10018592:	e788      	b.n	100184a6 <__sfvwrite_r+0x1ae>
10018594:	4659      	mov	r1, fp
10018596:	4652      	mov	r2, sl
10018598:	f004 feae 	bl	1001d2f8 <memmove>
1001859c:	6823      	ldr	r3, [r4, #0]
1001859e:	4453      	add	r3, sl
100185a0:	6023      	str	r3, [r4, #0]
100185a2:	4621      	mov	r1, r4
100185a4:	4648      	mov	r0, r9
100185a6:	f7fd f827 	bl	100155f8 <_fflush_r>
100185aa:	2800      	cmp	r0, #0
100185ac:	f43f af7b 	beq.w	100184a6 <__sfvwrite_r+0x1ae>
100185b0:	e792      	b.n	100184d8 <__sfvwrite_r+0x1e0>
100185b2:	4648      	mov	r0, r9
100185b4:	f7fd fb80 	bl	10015cb8 <_realloc_r>
100185b8:	4603      	mov	r3, r0
100185ba:	2800      	cmp	r0, #0
100185bc:	f47f af26 	bne.w	1001840c <__sfvwrite_r+0x114>
100185c0:	6921      	ldr	r1, [r4, #16]
100185c2:	4648      	mov	r0, r9
100185c4:	f7fe fd60 	bl	10017088 <_free_r>
100185c8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100185cc:	220c      	movs	r2, #12
100185ce:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
100185d2:	f8c9 2000 	str.w	r2, [r9]
100185d6:	e781      	b.n	100184dc <__sfvwrite_r+0x1e4>
100185d8:	1c6a      	adds	r2, r5, #1
100185da:	4617      	mov	r7, r2
100185dc:	e74a      	b.n	10018474 <__sfvwrite_r+0x17c>
100185de:	220c      	movs	r2, #12
100185e0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100185e4:	f8c9 2000 	str.w	r2, [r9]
100185e8:	e778      	b.n	100184dc <__sfvwrite_r+0x1e4>
100185ea:	bf00      	nop
100185ec:	7ffffc00 	.word	0x7ffffc00

100185f0 <_fwalk_sglue>:
100185f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
100185f4:	4680      	mov	r8, r0
100185f6:	460f      	mov	r7, r1
100185f8:	4616      	mov	r6, r2
100185fa:	f04f 0900 	mov.w	r9, #0
100185fe:	e9d6 5401 	ldrd	r5, r4, [r6, #4]
10018602:	3d01      	subs	r5, #1
10018604:	d411      	bmi.n	1001862a <_fwalk_sglue+0x3a>
10018606:	89a3      	ldrh	r3, [r4, #12]
10018608:	2b01      	cmp	r3, #1
1001860a:	f105 35ff 	add.w	r5, r5, #4294967295	@ 0xffffffff
1001860e:	d908      	bls.n	10018622 <_fwalk_sglue+0x32>
10018610:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
10018614:	3301      	adds	r3, #1
10018616:	4621      	mov	r1, r4
10018618:	d003      	beq.n	10018622 <_fwalk_sglue+0x32>
1001861a:	4640      	mov	r0, r8
1001861c:	47b8      	blx	r7
1001861e:	ea49 0900 	orr.w	r9, r9, r0
10018622:	1c6b      	adds	r3, r5, #1
10018624:	f104 0468 	add.w	r4, r4, #104	@ 0x68
10018628:	d1ed      	bne.n	10018606 <_fwalk_sglue+0x16>
1001862a:	6836      	ldr	r6, [r6, #0]
1001862c:	2e00      	cmp	r6, #0
1001862e:	d1e6      	bne.n	100185fe <_fwalk_sglue+0xe>
10018630:	4648      	mov	r0, r9
10018632:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
10018636:	bf00      	nop

10018638 <__jp2uc>:
10018638:	2902      	cmp	r1, #2
1001863a:	f3c0 2207 	ubfx	r2, r0, #8, #8
1001863e:	b2c3      	uxtb	r3, r0
10018640:	d025      	beq.n	1001868e <__jp2uc+0x56>
10018642:	2903      	cmp	r1, #3
10018644:	d11e      	bne.n	10018684 <__jp2uc+0x4c>
10018646:	f102 0150 	add.w	r1, r2, #80	@ 0x50
1001864a:	b2c9      	uxtb	r1, r1
1001864c:	291f      	cmp	r1, #31
1001864e:	d90b      	bls.n	10018668 <__jp2uc+0x30>
10018650:	f102 0130 	add.w	r1, r2, #48	@ 0x30
10018654:	b2c9      	uxtb	r1, r1
10018656:	2924      	cmp	r1, #36	@ 0x24
10018658:	d834      	bhi.n	100186c4 <__jp2uc+0x8c>
1001865a:	f24f 41a6 	movw	r1, #62630	@ 0xf4a6
1001865e:	4288      	cmp	r0, r1
10018660:	d926      	bls.n	100186b0 <__jp2uc+0x78>
10018662:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10018666:	4770      	bx	lr
10018668:	f64c 71d3 	movw	r1, #53203	@ 0xcfd3
1001866c:	4288      	cmp	r0, r1
1001866e:	d8f8      	bhi.n	10018662 <__jp2uc+0x2a>
10018670:	3ab0      	subs	r2, #176	@ 0xb0
10018672:	ebc2 12c2 	rsb	r2, r2, r2, lsl #7
10018676:	3ba1      	subs	r3, #161	@ 0xa1
10018678:	4930      	ldr	r1, [pc, #192]	@ (1001873c <__jp2uc+0x104>)
1001867a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
1001867e:	f831 0013 	ldrh.w	r0, [r1, r3, lsl #1]
10018682:	4770      	bx	lr
10018684:	f082 0280 	eor.w	r2, r2, #128	@ 0x80
10018688:	f083 0380 	eor.w	r3, r3, #128	@ 0x80
1001868c:	e7db      	b.n	10018646 <__jp2uc+0xe>
1001868e:	2b9e      	cmp	r3, #158	@ 0x9e
10018690:	d90a      	bls.n	100186a8 <__jp2uc+0x70>
10018692:	3323      	adds	r3, #35	@ 0x23
10018694:	b2db      	uxtb	r3, r3
10018696:	2180      	movs	r1, #128	@ 0x80
10018698:	2a9f      	cmp	r2, #159	@ 0x9f
1001869a:	bf94      	ite	ls
1001869c:	3a70      	subls	r2, #112	@ 0x70
1001869e:	3250      	addhi	r2, #80	@ 0x50
100186a0:	eb01 0142 	add.w	r1, r1, r2, lsl #1
100186a4:	b2ca      	uxtb	r2, r1
100186a6:	e7ce      	b.n	10018646 <__jp2uc+0xe>
100186a8:	3b7e      	subs	r3, #126	@ 0x7e
100186aa:	b2db      	uxtb	r3, r3
100186ac:	217f      	movs	r1, #127	@ 0x7f
100186ae:	e7f3      	b.n	10018698 <__jp2uc+0x60>
100186b0:	3ad0      	subs	r2, #208	@ 0xd0
100186b2:	ebc2 12c2 	rsb	r2, r2, r2, lsl #7
100186b6:	3ba1      	subs	r3, #161	@ 0xa1
100186b8:	4921      	ldr	r1, [pc, #132]	@ (10018740 <__jp2uc+0x108>)
100186ba:	eb03 0342 	add.w	r3, r3, r2, lsl #1
100186be:	f831 0013 	ldrh.w	r0, [r1, r3, lsl #1]
100186c2:	4770      	bx	lr
100186c4:	3aa1      	subs	r2, #161	@ 0xa1
100186c6:	2a07      	cmp	r2, #7
100186c8:	d8cb      	bhi.n	10018662 <__jp2uc+0x2a>
100186ca:	e8df f002 	tbb	[pc, r2]
100186ce:	2831      	.short	0x2831
100186d0:	0f13181e 	.word	0x0f13181e
100186d4:	040b      	.short	0x040b
100186d6:	2bc0      	cmp	r3, #192	@ 0xc0
100186d8:	d8c3      	bhi.n	10018662 <__jp2uc+0x2a>
100186da:	4a1a      	ldr	r2, [pc, #104]	@ (10018744 <__jp2uc+0x10c>)
100186dc:	3ba1      	subs	r3, #161	@ 0xa1
100186de:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
100186e2:	4770      	bx	lr
100186e4:	2bf1      	cmp	r3, #241	@ 0xf1
100186e6:	d8bc      	bhi.n	10018662 <__jp2uc+0x2a>
100186e8:	4a17      	ldr	r2, [pc, #92]	@ (10018748 <__jp2uc+0x110>)
100186ea:	e019      	b.n	10018720 <__jp2uc+0xe8>
100186ec:	2bd8      	cmp	r3, #216	@ 0xd8
100186ee:	d8b8      	bhi.n	10018662 <__jp2uc+0x2a>
100186f0:	4a16      	ldr	r2, [pc, #88]	@ (1001874c <__jp2uc+0x114>)
100186f2:	e015      	b.n	10018720 <__jp2uc+0xe8>
100186f4:	2bf6      	cmp	r3, #246	@ 0xf6
100186f6:	d8b4      	bhi.n	10018662 <__jp2uc+0x2a>
100186f8:	f503 5040 	add.w	r0, r3, #12288	@ 0x3000
100186fc:	4770      	bx	lr
100186fe:	2bf3      	cmp	r3, #243	@ 0xf3
10018700:	d8af      	bhi.n	10018662 <__jp2uc+0x2a>
10018702:	f503 503e 	add.w	r0, r3, #12160	@ 0x2f80
10018706:	3020      	adds	r0, #32
10018708:	4770      	bx	lr
1001870a:	4a11      	ldr	r2, [pc, #68]	@ (10018750 <__jp2uc+0x118>)
1001870c:	441a      	add	r2, r3
1001870e:	f812 2ca1 	ldrb.w	r2, [r2, #-161]
10018712:	2a00      	cmp	r2, #0
10018714:	d0a5      	beq.n	10018662 <__jp2uc+0x2a>
10018716:	f503 407e 	add.w	r0, r3, #65024	@ 0xfe00
1001871a:	3060      	adds	r0, #96	@ 0x60
1001871c:	4770      	bx	lr
1001871e:	4a0d      	ldr	r2, [pc, #52]	@ (10018754 <__jp2uc+0x11c>)
10018720:	3ba1      	subs	r3, #161	@ 0xa1
10018722:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
10018726:	2800      	cmp	r0, #0
10018728:	bf08      	it	eq
1001872a:	f04f 30ff 	moveq.w	r0, #4294967295	@ 0xffffffff
1001872e:	4770      	bx	lr
10018730:	4a09      	ldr	r2, [pc, #36]	@ (10018758 <__jp2uc+0x120>)
10018732:	3ba1      	subs	r3, #161	@ 0xa1
10018734:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
10018738:	4770      	bx	lr
1001873a:	bf00      	nop
1001873c:	10025e54 	.word	0x10025e54
10018740:	100243d8 	.word	0x100243d8
10018744:	10027580 	.word	0x10027580
10018748:	100275c0 	.word	0x100275c0
1001874c:	10027664 	.word	0x10027664
10018750:	100276d4 	.word	0x100276d4
10018754:	10027730 	.word	0x10027730
10018758:	100277ec 	.word	0x100277ec

1001875c <_jp2uc_l>:
1001875c:	b538      	push	{r3, r4, r5, lr}
1001875e:	4605      	mov	r5, r0
10018760:	b1b9      	cbz	r1, 10018792 <_jp2uc_l+0x36>
10018762:	f501 7495 	add.w	r4, r1, #298	@ 0x12a
10018766:	4912      	ldr	r1, [pc, #72]	@ (100187b0 <_jp2uc_l+0x54>)
10018768:	4620      	mov	r0, r4
1001876a:	f7fc fca9 	bl	100150c0 <strcmp>
1001876e:	b928      	cbnz	r0, 1001877c <_jp2uc_l+0x20>
10018770:	4628      	mov	r0, r5
10018772:	2101      	movs	r1, #1
10018774:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
10018778:	f7ff bf5e 	b.w	10018638 <__jp2uc>
1001877c:	490d      	ldr	r1, [pc, #52]	@ (100187b4 <_jp2uc_l+0x58>)
1001877e:	4620      	mov	r0, r4
10018780:	f7fc fc9e 	bl	100150c0 <strcmp>
10018784:	b938      	cbnz	r0, 10018796 <_jp2uc_l+0x3a>
10018786:	4628      	mov	r0, r5
10018788:	2102      	movs	r1, #2
1001878a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
1001878e:	f7ff bf53 	b.w	10018638 <__jp2uc>
10018792:	4c09      	ldr	r4, [pc, #36]	@ (100187b8 <_jp2uc_l+0x5c>)
10018794:	e7e7      	b.n	10018766 <_jp2uc_l+0xa>
10018796:	4909      	ldr	r1, [pc, #36]	@ (100187bc <_jp2uc_l+0x60>)
10018798:	4620      	mov	r0, r4
1001879a:	f7fc fc91 	bl	100150c0 <strcmp>
1001879e:	b928      	cbnz	r0, 100187ac <_jp2uc_l+0x50>
100187a0:	4628      	mov	r0, r5
100187a2:	2103      	movs	r1, #3
100187a4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
100187a8:	f7ff bf46 	b.w	10018638 <__jp2uc>
100187ac:	4628      	mov	r0, r5
100187ae:	bd38      	pop	{r3, r4, r5, pc}
100187b0:	100243c4 	.word	0x100243c4
100187b4:	100243c8 	.word	0x100243c8
100187b8:	2000054e 	.word	0x2000054e
100187bc:	100243d0 	.word	0x100243d0

100187c0 <_sungetc_r>:
100187c0:	b538      	push	{r3, r4, r5, lr}
100187c2:	1c4b      	adds	r3, r1, #1
100187c4:	d01a      	beq.n	100187fc <_sungetc_r+0x3c>
100187c6:	4614      	mov	r4, r2
100187c8:	8992      	ldrh	r2, [r2, #12]
100187ca:	6863      	ldr	r3, [r4, #4]
100187cc:	f022 0220 	bic.w	r2, r2, #32
100187d0:	81a2      	strh	r2, [r4, #12]
100187d2:	6b22      	ldr	r2, [r4, #48]	@ 0x30
100187d4:	b2cd      	uxtb	r5, r1
100187d6:	b1a2      	cbz	r2, 10018802 <_sungetc_r+0x42>
100187d8:	6b62      	ldr	r2, [r4, #52]	@ 0x34
100187da:	429a      	cmp	r2, r3
100187dc:	dd09      	ble.n	100187f2 <_sungetc_r+0x32>
100187de:	6823      	ldr	r3, [r4, #0]
100187e0:	1e5a      	subs	r2, r3, #1
100187e2:	6022      	str	r2, [r4, #0]
100187e4:	f803 5c01 	strb.w	r5, [r3, #-1]
100187e8:	6863      	ldr	r3, [r4, #4]
100187ea:	3301      	adds	r3, #1
100187ec:	6063      	str	r3, [r4, #4]
100187ee:	4628      	mov	r0, r5
100187f0:	bd38      	pop	{r3, r4, r5, pc}
100187f2:	4621      	mov	r1, r4
100187f4:	f006 fe08 	bl	1001f408 <__submore>
100187f8:	2800      	cmp	r0, #0
100187fa:	d0f0      	beq.n	100187de <_sungetc_r+0x1e>
100187fc:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
10018800:	e7f5      	b.n	100187ee <_sungetc_r+0x2e>
10018802:	6922      	ldr	r2, [r4, #16]
10018804:	6821      	ldr	r1, [r4, #0]
10018806:	b12a      	cbz	r2, 10018814 <_sungetc_r+0x54>
10018808:	428a      	cmp	r2, r1
1001880a:	d203      	bcs.n	10018814 <_sungetc_r+0x54>
1001880c:	f811 2c01 	ldrb.w	r2, [r1, #-1]
10018810:	42aa      	cmp	r2, r5
10018812:	d00c      	beq.n	1001882e <_sungetc_r+0x6e>
10018814:	4622      	mov	r2, r4
10018816:	e9c4 130e 	strd	r1, r3, [r4, #56]	@ 0x38
1001881a:	f104 0040 	add.w	r0, r4, #64	@ 0x40
1001881e:	2303      	movs	r3, #3
10018820:	6363      	str	r3, [r4, #52]	@ 0x34
10018822:	6320      	str	r0, [r4, #48]	@ 0x30
10018824:	f802 5f42 	strb.w	r5, [r2, #66]!
10018828:	2301      	movs	r3, #1
1001882a:	6022      	str	r2, [r4, #0]
1001882c:	e7de      	b.n	100187ec <_sungetc_r+0x2c>
1001882e:	3901      	subs	r1, #1
10018830:	6021      	str	r1, [r4, #0]
10018832:	3301      	adds	r3, #1
10018834:	e7da      	b.n	100187ec <_sungetc_r+0x2c>
10018836:	bf00      	nop

10018838 <__ssrefill_r>:
10018838:	b510      	push	{r4, lr}
1001883a:	460c      	mov	r4, r1
1001883c:	6b09      	ldr	r1, [r1, #48]	@ 0x30
1001883e:	b169      	cbz	r1, 1001885c <__ssrefill_r+0x24>
10018840:	f104 0340 	add.w	r3, r4, #64	@ 0x40
10018844:	4299      	cmp	r1, r3
10018846:	d001      	beq.n	1001884c <__ssrefill_r+0x14>
10018848:	f7fe fc1e 	bl	10017088 <_free_r>
1001884c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
1001884e:	6063      	str	r3, [r4, #4]
10018850:	2000      	movs	r0, #0
10018852:	6320      	str	r0, [r4, #48]	@ 0x30
10018854:	b113      	cbz	r3, 1001885c <__ssrefill_r+0x24>
10018856:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
10018858:	6023      	str	r3, [r4, #0]
1001885a:	bd10      	pop	{r4, pc}
1001885c:	89a2      	ldrh	r2, [r4, #12]
1001885e:	6923      	ldr	r3, [r4, #16]
10018860:	2100      	movs	r1, #0
10018862:	f042 0220 	orr.w	r2, r2, #32
10018866:	6061      	str	r1, [r4, #4]
10018868:	81a2      	strh	r2, [r4, #12]
1001886a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001886e:	e7f3      	b.n	10018858 <__ssrefill_r+0x20>

10018870 <_sfread_r>:
10018870:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10018874:	b085      	sub	sp, #20
10018876:	469c      	mov	ip, r3
10018878:	fb02 f303 	mul.w	r3, r2, r3
1001887c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
1001887e:	9301      	str	r3, [sp, #4]
10018880:	2b00      	cmp	r3, #0
10018882:	d03c      	beq.n	100188fe <_sfread_r+0x8e>
10018884:	460f      	mov	r7, r1
10018886:	e9d4 1500 	ldrd	r1, r5, [r4]
1001888a:	9b01      	ldr	r3, [sp, #4]
1001888c:	42ab      	cmp	r3, r5
1001888e:	d94e      	bls.n	1001892e <_sfread_r+0xbe>
10018890:	9e01      	ldr	r6, [sp, #4]
10018892:	e9cd c202 	strd	ip, r2, [sp, #8]
10018896:	462b      	mov	r3, r5
10018898:	4683      	mov	fp, r0
1001889a:	4635      	mov	r5, r6
1001889c:	f04f 0800 	mov.w	r8, #0
100188a0:	f104 0940 	add.w	r9, r4, #64	@ 0x40
100188a4:	461e      	mov	r6, r3
100188a6:	4632      	mov	r2, r6
100188a8:	4638      	mov	r0, r7
100188aa:	f7fd f8a9 	bl	10015a00 <memcpy>
100188ae:	6821      	ldr	r1, [r4, #0]
100188b0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
100188b2:	198a      	adds	r2, r1, r6
100188b4:	46aa      	mov	sl, r5
100188b6:	e9c4 2800 	strd	r2, r8, [r4]
100188ba:	4619      	mov	r1, r3
100188bc:	4658      	mov	r0, fp
100188be:	4437      	add	r7, r6
100188c0:	1bad      	subs	r5, r5, r6
100188c2:	b303      	cbz	r3, 10018906 <_sfread_r+0x96>
100188c4:	454b      	cmp	r3, r9
100188c6:	d001      	beq.n	100188cc <_sfread_r+0x5c>
100188c8:	f7fe fbde 	bl	10017088 <_free_r>
100188cc:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
100188ce:	f8c4 8030 	str.w	r8, [r4, #48]	@ 0x30
100188d2:	6060      	str	r0, [r4, #4]
100188d4:	b1b8      	cbz	r0, 10018906 <_sfread_r+0x96>
100188d6:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
100188d8:	6021      	str	r1, [r4, #0]
100188da:	42a8      	cmp	r0, r5
100188dc:	4606      	mov	r6, r0
100188de:	d3e2      	bcc.n	100188a6 <_sfread_r+0x36>
100188e0:	f8dd c008 	ldr.w	ip, [sp, #8]
100188e4:	462e      	mov	r6, r5
100188e6:	4632      	mov	r2, r6
100188e8:	4638      	mov	r0, r7
100188ea:	f8cd c004 	str.w	ip, [sp, #4]
100188ee:	f7fd f887 	bl	10015a00 <memcpy>
100188f2:	e9d4 3200 	ldrd	r3, r2, [r4]
100188f6:	1b92      	subs	r2, r2, r6
100188f8:	4433      	add	r3, r6
100188fa:	e9c4 3200 	strd	r3, r2, [r4]
100188fe:	9801      	ldr	r0, [sp, #4]
10018900:	b005      	add	sp, #20
10018902:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10018906:	9b01      	ldr	r3, [sp, #4]
10018908:	9a03      	ldr	r2, [sp, #12]
1001890a:	4433      	add	r3, r6
1001890c:	eba3 050a 	sub.w	r5, r3, sl
10018910:	fbb5 f3f2 	udiv	r3, r5, r2
10018914:	9301      	str	r3, [sp, #4]
10018916:	89a3      	ldrh	r3, [r4, #12]
10018918:	6922      	ldr	r2, [r4, #16]
1001891a:	9801      	ldr	r0, [sp, #4]
1001891c:	f043 0320 	orr.w	r3, r3, #32
10018920:	81a3      	strh	r3, [r4, #12]
10018922:	2300      	movs	r3, #0
10018924:	e9c4 2300 	strd	r2, r3, [r4]
10018928:	b005      	add	sp, #20
1001892a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001892e:	461e      	mov	r6, r3
10018930:	e7d9      	b.n	100188e6 <_sfread_r+0x76>
10018932:	bf00      	nop

10018934 <_svfprintf_r>:
10018934:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10018938:	b0df      	sub	sp, #380	@ 0x17c
1001893a:	460c      	mov	r4, r1
1001893c:	9109      	str	r1, [sp, #36]	@ 0x24
1001893e:	4691      	mov	r9, r2
10018940:	930d      	str	r3, [sp, #52]	@ 0x34
10018942:	4683      	mov	fp, r0
10018944:	f7fc fba8 	bl	10015098 <_localeconv_r>
10018948:	6803      	ldr	r3, [r0, #0]
1001894a:	931a      	str	r3, [sp, #104]	@ 0x68
1001894c:	4618      	mov	r0, r3
1001894e:	f7fd f8f7 	bl	10015b40 <strlen>
10018952:	2100      	movs	r1, #0
10018954:	9018      	str	r0, [sp, #96]	@ 0x60
10018956:	2208      	movs	r2, #8
10018958:	a82e      	add	r0, sp, #184	@ 0xb8
1001895a:	f7fc fb01 	bl	10014f60 <memset>
1001895e:	89a3      	ldrh	r3, [r4, #12]
10018960:	0619      	lsls	r1, r3, #24
10018962:	d503      	bpl.n	1001896c <_svfprintf_r+0x38>
10018964:	6923      	ldr	r3, [r4, #16]
10018966:	2b00      	cmp	r3, #0
10018968:	f000 8788 	beq.w	1001987c <_svfprintf_r+0xf48>
1001896c:	2300      	movs	r3, #0
1001896e:	e9cd 3333 	strd	r3, r3, [sp, #204]	@ 0xcc
10018972:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
10018976:	e9cd 331d 	strd	r3, r3, [sp, #116]	@ 0x74
1001897a:	9313      	str	r3, [sp, #76]	@ 0x4c
1001897c:	9319      	str	r3, [sp, #100]	@ 0x64
1001897e:	930a      	str	r3, [sp, #40]	@ 0x28
10018980:	2400      	movs	r4, #0
10018982:	2300      	movs	r3, #0
10018984:	e9cd 3416 	strd	r3, r4, [sp, #88]	@ 0x58
10018988:	aa35      	add	r2, sp, #212	@ 0xd4
1001898a:	9232      	str	r2, [sp, #200]	@ 0xc8
1001898c:	4690      	mov	r8, r2
1001898e:	f8cd b01c 	str.w	fp, [sp, #28]
10018992:	464d      	mov	r5, r9
10018994:	9f07      	ldr	r7, [sp, #28]
10018996:	462e      	mov	r6, r5
10018998:	4b73      	ldr	r3, [pc, #460]	@ (10018b68 <_svfprintf_r+0x234>)
1001899a:	f8d3 40e4 	ldr.w	r4, [r3, #228]	@ 0xe4
1001899e:	f7fc fb75 	bl	1001508c <__locale_mb_cur_max>
100189a2:	4603      	mov	r3, r0
100189a4:	a82e      	add	r0, sp, #184	@ 0xb8
100189a6:	9000      	str	r0, [sp, #0]
100189a8:	4632      	mov	r2, r6
100189aa:	a92a      	add	r1, sp, #168	@ 0xa8
100189ac:	4638      	mov	r0, r7
100189ae:	47a0      	blx	r4
100189b0:	2800      	cmp	r0, #0
100189b2:	f000 80a9 	beq.w	10018b08 <_svfprintf_r+0x1d4>
100189b6:	f2c0 809f 	blt.w	10018af8 <_svfprintf_r+0x1c4>
100189ba:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
100189bc:	2a25      	cmp	r2, #37	@ 0x25
100189be:	4603      	mov	r3, r0
100189c0:	d001      	beq.n	100189c6 <_svfprintf_r+0x92>
100189c2:	441e      	add	r6, r3
100189c4:	e7e8      	b.n	10018998 <_svfprintf_r+0x64>
100189c6:	1b77      	subs	r7, r6, r5
100189c8:	4604      	mov	r4, r0
100189ca:	f040 80a0 	bne.w	10018b0e <_svfprintf_r+0x1da>
100189ce:	2300      	movs	r3, #0
100189d0:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
100189d4:	4699      	mov	r9, r3
100189d6:	930b      	str	r3, [sp, #44]	@ 0x2c
100189d8:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
100189dc:	7873      	ldrb	r3, [r6, #1]
100189de:	9208      	str	r2, [sp, #32]
100189e0:	1c74      	adds	r4, r6, #1
100189e2:	3401      	adds	r4, #1
100189e4:	f1a3 0220 	sub.w	r2, r3, #32
100189e8:	2a5a      	cmp	r2, #90	@ 0x5a
100189ea:	f200 80bf 	bhi.w	10018b6c <_svfprintf_r+0x238>
100189ee:	e8df f012 	tbh	[pc, r2, lsl #1]
100189f2:	02e6      	.short	0x02e6
100189f4:	00bd00bd 	.word	0x00bd00bd
100189f8:	00bd02e2 	.word	0x00bd02e2
100189fc:	00bd00bd 	.word	0x00bd00bd
10018a00:	00bd006a 	.word	0x00bd006a
10018a04:	024800bd 	.word	0x024800bd
10018a08:	00bd0257 	.word	0x00bd0257
10018a0c:	02f40253 	.word	0x02f40253
10018a10:	02f000bd 	.word	0x02f000bd
10018a14:	005b005b 	.word	0x005b005b
10018a18:	005b005b 	.word	0x005b005b
10018a1c:	005b005b 	.word	0x005b005b
10018a20:	005b005b 	.word	0x005b005b
10018a24:	00bd005b 	.word	0x00bd005b
10018a28:	00bd00bd 	.word	0x00bd00bd
10018a2c:	00bd00bd 	.word	0x00bd00bd
10018a30:	00bd00bd 	.word	0x00bd00bd
10018a34:	00bd013e 	.word	0x00bd013e
10018a38:	030e01c7 	.word	0x030e01c7
10018a3c:	013e013e 	.word	0x013e013e
10018a40:	00bd013e 	.word	0x00bd013e
10018a44:	00bd00bd 	.word	0x00bd00bd
10018a48:	02de00bd 	.word	0x02de00bd
10018a4c:	00bd00bd 	.word	0x00bd00bd
10018a50:	00bd025c 	.word	0x00bd025c
10018a54:	00bd00bd 	.word	0x00bd00bd
10018a58:	00bd01f1 	.word	0x00bd01f1
10018a5c:	00bd02cb 	.word	0x00bd02cb
10018a60:	070600bd 	.word	0x070600bd
10018a64:	00bd00bd 	.word	0x00bd00bd
10018a68:	00bd00bd 	.word	0x00bd00bd
10018a6c:	00bd00bd 	.word	0x00bd00bd
10018a70:	00bd00bd 	.word	0x00bd00bd
10018a74:	00bd013e 	.word	0x00bd013e
10018a78:	022301c7 	.word	0x022301c7
10018a7c:	013e013e 	.word	0x013e013e
10018a80:	028d013e 	.word	0x028d013e
10018a84:	007f0223 	.word	0x007f0223
10018a88:	02a600bd 	.word	0x02a600bd
10018a8c:	029700bd 	.word	0x029700bd
10018a90:	02b906fb 	.word	0x02b906fb
10018a94:	00bd007f 	.word	0x00bd007f
10018a98:	007d01f1 	.word	0x007d01f1
10018a9c:	00bd0701 	.word	0x00bd0701
10018aa0:	072a00bd 	.word	0x072a00bd
10018aa4:	007d00bd 	.word	0x007d00bd
10018aa8:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10018aac:	2100      	movs	r1, #0
10018aae:	f814 3b01 	ldrb.w	r3, [r4], #1
10018ab2:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10018ab6:	eb02 0141 	add.w	r1, r2, r1, lsl #1
10018aba:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10018abe:	2a09      	cmp	r2, #9
10018ac0:	d9f5      	bls.n	10018aae <_svfprintf_r+0x17a>
10018ac2:	910b      	str	r1, [sp, #44]	@ 0x2c
10018ac4:	e78e      	b.n	100189e4 <_svfprintf_r+0xb0>
10018ac6:	9f07      	ldr	r7, [sp, #28]
10018ac8:	4638      	mov	r0, r7
10018aca:	f7fc fae5 	bl	10015098 <_localeconv_r>
10018ace:	6843      	ldr	r3, [r0, #4]
10018ad0:	931d      	str	r3, [sp, #116]	@ 0x74
10018ad2:	4618      	mov	r0, r3
10018ad4:	f7fd f834 	bl	10015b40 <strlen>
10018ad8:	901e      	str	r0, [sp, #120]	@ 0x78
10018ada:	4606      	mov	r6, r0
10018adc:	4638      	mov	r0, r7
10018ade:	f7fc fadb 	bl	10015098 <_localeconv_r>
10018ae2:	6883      	ldr	r3, [r0, #8]
10018ae4:	931b      	str	r3, [sp, #108]	@ 0x6c
10018ae6:	2e00      	cmp	r6, #0
10018ae8:	f040 8616 	bne.w	10019718 <_svfprintf_r+0xde4>
10018aec:	7823      	ldrb	r3, [r4, #0]
10018aee:	e778      	b.n	100189e2 <_svfprintf_r+0xae>
10018af0:	7823      	ldrb	r3, [r4, #0]
10018af2:	f049 0920 	orr.w	r9, r9, #32
10018af6:	e774      	b.n	100189e2 <_svfprintf_r+0xae>
10018af8:	2208      	movs	r2, #8
10018afa:	2100      	movs	r1, #0
10018afc:	a82e      	add	r0, sp, #184	@ 0xb8
10018afe:	f7fc fa2f 	bl	10014f60 <memset>
10018b02:	2301      	movs	r3, #1
10018b04:	441e      	add	r6, r3
10018b06:	e747      	b.n	10018998 <_svfprintf_r+0x64>
10018b08:	1b77      	subs	r7, r6, r5
10018b0a:	4604      	mov	r4, r0
10018b0c:	d011      	beq.n	10018b32 <_svfprintf_r+0x1fe>
10018b0e:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
10018b10:	443b      	add	r3, r7
10018b12:	9334      	str	r3, [sp, #208]	@ 0xd0
10018b14:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10018b16:	3301      	adds	r3, #1
10018b18:	2b07      	cmp	r3, #7
10018b1a:	e9c8 5700 	strd	r5, r7, [r8]
10018b1e:	9333      	str	r3, [sp, #204]	@ 0xcc
10018b20:	dc18      	bgt.n	10018b54 <_svfprintf_r+0x220>
10018b22:	f108 0808 	add.w	r8, r8, #8
10018b26:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10018b28:	443b      	add	r3, r7
10018b2a:	930a      	str	r3, [sp, #40]	@ 0x28
10018b2c:	2c00      	cmp	r4, #0
10018b2e:	f47f af4e 	bne.w	100189ce <_svfprintf_r+0x9a>
10018b32:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
10018b34:	f8dd b01c 	ldr.w	fp, [sp, #28]
10018b38:	2b00      	cmp	r3, #0
10018b3a:	f041 81ed 	bne.w	10019f18 <_svfprintf_r+0x15e4>
10018b3e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10018b40:	899b      	ldrh	r3, [r3, #12]
10018b42:	f003 0340 	and.w	r3, r3, #64	@ 0x40
10018b46:	2b00      	cmp	r3, #0
10018b48:	f041 83bd 	bne.w	1001a2c6 <_svfprintf_r+0x1992>
10018b4c:	980a      	ldr	r0, [sp, #40]	@ 0x28
10018b4e:	b05f      	add	sp, #380	@ 0x17c
10018b50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10018b54:	9909      	ldr	r1, [sp, #36]	@ 0x24
10018b56:	9807      	ldr	r0, [sp, #28]
10018b58:	aa32      	add	r2, sp, #200	@ 0xc8
10018b5a:	f006 fc8f 	bl	1001f47c <__ssprint_r>
10018b5e:	2800      	cmp	r0, #0
10018b60:	d1ed      	bne.n	10018b3e <_svfprintf_r+0x20a>
10018b62:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10018b66:	e7de      	b.n	10018b26 <_svfprintf_r+0x1f2>
10018b68:	20000424 	.word	0x20000424
10018b6c:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10018b70:	2b00      	cmp	r3, #0
10018b72:	d0de      	beq.n	10018b32 <_svfprintf_r+0x1fe>
10018b74:	2200      	movs	r2, #0
10018b76:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
10018b7a:	2301      	movs	r3, #1
10018b7c:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10018b80:	9306      	str	r3, [sp, #24]
10018b82:	920c      	str	r2, [sp, #48]	@ 0x30
10018b84:	469b      	mov	fp, r3
10018b86:	9208      	str	r2, [sp, #32]
10018b88:	9214      	str	r2, [sp, #80]	@ 0x50
10018b8a:	9210      	str	r2, [sp, #64]	@ 0x40
10018b8c:	9212      	str	r2, [sp, #72]	@ 0x48
10018b8e:	ad45      	add	r5, sp, #276	@ 0x114
10018b90:	f019 0302 	ands.w	r3, r9, #2
10018b94:	d002      	beq.n	10018b9c <_svfprintf_r+0x268>
10018b96:	9906      	ldr	r1, [sp, #24]
10018b98:	3102      	adds	r1, #2
10018b9a:	9106      	str	r1, [sp, #24]
10018b9c:	f019 0784 	ands.w	r7, r9, #132	@ 0x84
10018ba0:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10018ba2:	d105      	bne.n	10018bb0 <_svfprintf_r+0x27c>
10018ba4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
10018ba6:	9806      	ldr	r0, [sp, #24]
10018ba8:	1a0e      	subs	r6, r1, r0
10018baa:	2e00      	cmp	r6, #0
10018bac:	f300 80a7 	bgt.w	10018cfe <_svfprintf_r+0x3ca>
10018bb0:	b182      	cbz	r2, 10018bd4 <_svfprintf_r+0x2a0>
10018bb2:	2201      	movs	r2, #1
10018bb4:	f8c8 2004 	str.w	r2, [r8, #4]
10018bb8:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
10018bba:	3201      	adds	r2, #1
10018bbc:	3401      	adds	r4, #1
10018bbe:	f10d 019f 	add.w	r1, sp, #159	@ 0x9f
10018bc2:	2a07      	cmp	r2, #7
10018bc4:	9434      	str	r4, [sp, #208]	@ 0xd0
10018bc6:	9233      	str	r2, [sp, #204]	@ 0xcc
10018bc8:	f8c8 1000 	str.w	r1, [r8]
10018bcc:	f300 8403 	bgt.w	100193d6 <_svfprintf_r+0xaa2>
10018bd0:	f108 0808 	add.w	r8, r8, #8
10018bd4:	b183      	cbz	r3, 10018bf8 <_svfprintf_r+0x2c4>
10018bd6:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10018bd8:	aa28      	add	r2, sp, #160	@ 0xa0
10018bda:	3301      	adds	r3, #1
10018bdc:	3402      	adds	r4, #2
10018bde:	f8c8 2000 	str.w	r2, [r8]
10018be2:	2b07      	cmp	r3, #7
10018be4:	f04f 0202 	mov.w	r2, #2
10018be8:	9434      	str	r4, [sp, #208]	@ 0xd0
10018bea:	9333      	str	r3, [sp, #204]	@ 0xcc
10018bec:	f8c8 2004 	str.w	r2, [r8, #4]
10018bf0:	f300 83e5 	bgt.w	100193be <_svfprintf_r+0xa8a>
10018bf4:	f108 0808 	add.w	r8, r8, #8
10018bf8:	2f80      	cmp	r7, #128	@ 0x80
10018bfa:	f000 82be 	beq.w	1001917a <_svfprintf_r+0x846>
10018bfe:	9b08      	ldr	r3, [sp, #32]
10018c00:	eba3 060b 	sub.w	r6, r3, fp
10018c04:	2e00      	cmp	r6, #0
10018c06:	f300 82fd 	bgt.w	10019204 <_svfprintf_r+0x8d0>
10018c0a:	f419 7f80 	tst.w	r9, #256	@ 0x100
10018c0e:	f040 8217 	bne.w	10019040 <_svfprintf_r+0x70c>
10018c12:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10018c14:	f8c8 5000 	str.w	r5, [r8]
10018c18:	3301      	adds	r3, #1
10018c1a:	445c      	add	r4, fp
10018c1c:	2b07      	cmp	r3, #7
10018c1e:	f8c8 b004 	str.w	fp, [r8, #4]
10018c22:	9434      	str	r4, [sp, #208]	@ 0xd0
10018c24:	9333      	str	r3, [sp, #204]	@ 0xcc
10018c26:	f300 836a 	bgt.w	100192fe <_svfprintf_r+0x9ca>
10018c2a:	f108 0808 	add.w	r8, r8, #8
10018c2e:	f019 0f04 	tst.w	r9, #4
10018c32:	d005      	beq.n	10018c40 <_svfprintf_r+0x30c>
10018c34:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10018c36:	9a06      	ldr	r2, [sp, #24]
10018c38:	1a9d      	subs	r5, r3, r2
10018c3a:	2d00      	cmp	r5, #0
10018c3c:	f300 83da 	bgt.w	100193f4 <_svfprintf_r+0xac0>
10018c40:	e9dd 320a 	ldrd	r3, r2, [sp, #40]	@ 0x28
10018c44:	9906      	ldr	r1, [sp, #24]
10018c46:	428a      	cmp	r2, r1
10018c48:	bfac      	ite	ge
10018c4a:	189b      	addge	r3, r3, r2
10018c4c:	185b      	addlt	r3, r3, r1
10018c4e:	930a      	str	r3, [sp, #40]	@ 0x28
10018c50:	2c00      	cmp	r4, #0
10018c52:	f040 8316 	bne.w	10019282 <_svfprintf_r+0x94e>
10018c56:	2300      	movs	r3, #0
10018c58:	9333      	str	r3, [sp, #204]	@ 0xcc
10018c5a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10018c5c:	b11b      	cbz	r3, 10018c66 <_svfprintf_r+0x332>
10018c5e:	990c      	ldr	r1, [sp, #48]	@ 0x30
10018c60:	9807      	ldr	r0, [sp, #28]
10018c62:	f7fe fa11 	bl	10017088 <_free_r>
10018c66:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10018c6a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
10018c6c:	e692      	b.n	10018994 <_svfprintf_r+0x60>
10018c6e:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10018c72:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10018c74:	3307      	adds	r3, #7
10018c76:	f023 0307 	bic.w	r3, r3, #7
10018c7a:	e8f3 6702 	ldrd	r6, r7, [r3], #8
10018c7e:	930d      	str	r3, [sp, #52]	@ 0x34
10018c80:	f027 4300 	bic.w	r3, r7, #2147483648	@ 0x80000000
10018c84:	9323      	str	r3, [sp, #140]	@ 0x8c
10018c86:	9622      	str	r6, [sp, #136]	@ 0x88
10018c88:	e9dd ab22 	ldrd	sl, fp, [sp, #136]	@ 0x88
10018c8c:	4bb1      	ldr	r3, [pc, #708]	@ (10018f54 <_svfprintf_r+0x620>)
10018c8e:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10018c92:	4650      	mov	r0, sl
10018c94:	4659      	mov	r1, fp
10018c96:	e9cd 6716 	strd	r6, r7, [sp, #88]	@ 0x58
10018c9a:	f007 fa05 	bl	100200a8 <__aeabi_dcmpun>
10018c9e:	2800      	cmp	r0, #0
10018ca0:	f040 8547 	bne.w	10019732 <_svfprintf_r+0xdfe>
10018ca4:	4bab      	ldr	r3, [pc, #684]	@ (10018f54 <_svfprintf_r+0x620>)
10018ca6:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10018caa:	4650      	mov	r0, sl
10018cac:	4659      	mov	r1, fp
10018cae:	f007 f9dd 	bl	1002006c <__aeabi_dcmple>
10018cb2:	2800      	cmp	r0, #0
10018cb4:	f040 853d 	bne.w	10019732 <_svfprintf_r+0xdfe>
10018cb8:	2200      	movs	r2, #0
10018cba:	2300      	movs	r3, #0
10018cbc:	4630      	mov	r0, r6
10018cbe:	4639      	mov	r1, r7
10018cc0:	f007 f9ca 	bl	10020058 <__aeabi_dcmplt>
10018cc4:	2800      	cmp	r0, #0
10018cc6:	f041 8053 	bne.w	10019d70 <_svfprintf_r+0x143c>
10018cca:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10018cce:	4da2      	ldr	r5, [pc, #648]	@ (10018f58 <_svfprintf_r+0x624>)
10018cd0:	4ba2      	ldr	r3, [pc, #648]	@ (10018f5c <_svfprintf_r+0x628>)
10018cd2:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
10018cd6:	990e      	ldr	r1, [sp, #56]	@ 0x38
10018cd8:	2947      	cmp	r1, #71	@ 0x47
10018cda:	bfc8      	it	gt
10018cdc:	461d      	movgt	r5, r3
10018cde:	2300      	movs	r3, #0
10018ce0:	2103      	movs	r1, #3
10018ce2:	930c      	str	r3, [sp, #48]	@ 0x30
10018ce4:	9106      	str	r1, [sp, #24]
10018ce6:	468b      	mov	fp, r1
10018ce8:	9308      	str	r3, [sp, #32]
10018cea:	9314      	str	r3, [sp, #80]	@ 0x50
10018cec:	9310      	str	r3, [sp, #64]	@ 0x40
10018cee:	9312      	str	r3, [sp, #72]	@ 0x48
10018cf0:	2a00      	cmp	r2, #0
10018cf2:	f43f af4d 	beq.w	10018b90 <_svfprintf_r+0x25c>
10018cf6:	9b06      	ldr	r3, [sp, #24]
10018cf8:	3301      	adds	r3, #1
10018cfa:	9306      	str	r3, [sp, #24]
10018cfc:	e748      	b.n	10018b90 <_svfprintf_r+0x25c>
10018cfe:	2e10      	cmp	r6, #16
10018d00:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
10018d02:	f341 8279 	ble.w	1001a1f8 <_svfprintf_r+0x18c4>
10018d06:	4896      	ldr	r0, [pc, #600]	@ (10018f60 <_svfprintf_r+0x62c>)
10018d08:	9521      	str	r5, [sp, #132]	@ 0x84
10018d0a:	e9cd 371f 	strd	r3, r7, [sp, #124]	@ 0x7c
10018d0e:	4621      	mov	r1, r4
10018d10:	9d09      	ldr	r5, [sp, #36]	@ 0x24
10018d12:	9c07      	ldr	r4, [sp, #28]
10018d14:	9015      	str	r0, [sp, #84]	@ 0x54
10018d16:	f04f 0a10 	mov.w	sl, #16
10018d1a:	4607      	mov	r7, r0
10018d1c:	e004      	b.n	10018d28 <_svfprintf_r+0x3f4>
10018d1e:	3e10      	subs	r6, #16
10018d20:	2e10      	cmp	r6, #16
10018d22:	f108 0808 	add.w	r8, r8, #8
10018d26:	dd16      	ble.n	10018d56 <_svfprintf_r+0x422>
10018d28:	3201      	adds	r2, #1
10018d2a:	3110      	adds	r1, #16
10018d2c:	2a07      	cmp	r2, #7
10018d2e:	e9c8 7a00 	strd	r7, sl, [r8]
10018d32:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
10018d36:	ddf2      	ble.n	10018d1e <_svfprintf_r+0x3ea>
10018d38:	aa32      	add	r2, sp, #200	@ 0xc8
10018d3a:	4629      	mov	r1, r5
10018d3c:	4620      	mov	r0, r4
10018d3e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10018d42:	f006 fb9b 	bl	1001f47c <__ssprint_r>
10018d46:	2800      	cmp	r0, #0
10018d48:	f040 86f1 	bne.w	10019b2e <_svfprintf_r+0x11fa>
10018d4c:	3e10      	subs	r6, #16
10018d4e:	2e10      	cmp	r6, #16
10018d50:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
10018d54:	dce8      	bgt.n	10018d28 <_svfprintf_r+0x3f4>
10018d56:	e9dd 371f 	ldrd	r3, r7, [sp, #124]	@ 0x7c
10018d5a:	9d21      	ldr	r5, [sp, #132]	@ 0x84
10018d5c:	460c      	mov	r4, r1
10018d5e:	3201      	adds	r2, #1
10018d60:	9915      	ldr	r1, [sp, #84]	@ 0x54
10018d62:	f8c8 1000 	str.w	r1, [r8]
10018d66:	4434      	add	r4, r6
10018d68:	2a07      	cmp	r2, #7
10018d6a:	e9cd 2433 	strd	r2, r4, [sp, #204]	@ 0xcc
10018d6e:	f8c8 6004 	str.w	r6, [r8, #4]
10018d72:	f300 86cb 	bgt.w	10019b0c <_svfprintf_r+0x11d8>
10018d76:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10018d7a:	f108 0808 	add.w	r8, r8, #8
10018d7e:	e717      	b.n	10018bb0 <_svfprintf_r+0x27c>
10018d80:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10018d82:	2b43      	cmp	r3, #67	@ 0x43
10018d84:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10018d88:	f102 0404 	add.w	r4, r2, #4
10018d8c:	d003      	beq.n	10018d96 <_svfprintf_r+0x462>
10018d8e:	f019 0f10 	tst.w	r9, #16
10018d92:	f000 855d 	beq.w	10019850 <_svfprintf_r+0xf1c>
10018d96:	2208      	movs	r2, #8
10018d98:	2100      	movs	r1, #0
10018d9a:	a830      	add	r0, sp, #192	@ 0xc0
10018d9c:	f7fc f8e0 	bl	10014f60 <memset>
10018da0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10018da2:	9807      	ldr	r0, [sp, #28]
10018da4:	681a      	ldr	r2, [r3, #0]
10018da6:	ad45      	add	r5, sp, #276	@ 0x114
10018da8:	ab30      	add	r3, sp, #192	@ 0xc0
10018daa:	4629      	mov	r1, r5
10018dac:	f004 fb44 	bl	1001d438 <_wcrtomb_r>
10018db0:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
10018db4:	4683      	mov	fp, r0
10018db6:	f001 8281 	beq.w	1001a2bc <_svfprintf_r+0x1988>
10018dba:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
10018dbe:	9306      	str	r3, [sp, #24]
10018dc0:	2200      	movs	r2, #0
10018dc2:	940d      	str	r4, [sp, #52]	@ 0x34
10018dc4:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10018dc8:	920c      	str	r2, [sp, #48]	@ 0x30
10018dca:	9208      	str	r2, [sp, #32]
10018dcc:	9214      	str	r2, [sp, #80]	@ 0x50
10018dce:	9210      	str	r2, [sp, #64]	@ 0x40
10018dd0:	9212      	str	r2, [sp, #72]	@ 0x48
10018dd2:	e6dd      	b.n	10018b90 <_svfprintf_r+0x25c>
10018dd4:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
10018dd6:	f856 5b04 	ldr.w	r5, [r6], #4
10018dda:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10018dde:	2300      	movs	r3, #0
10018de0:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10018de4:	2d00      	cmp	r5, #0
10018de6:	f000 8558 	beq.w	1001989a <_svfprintf_r+0xf66>
10018dea:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10018dec:	2b53      	cmp	r3, #83	@ 0x53
10018dee:	f000 86ba 	beq.w	10019b66 <_svfprintf_r+0x1232>
10018df2:	f019 0310 	ands.w	r3, r9, #16
10018df6:	9312      	str	r3, [sp, #72]	@ 0x48
10018df8:	f040 86b5 	bne.w	10019b66 <_svfprintf_r+0x1232>
10018dfc:	9b08      	ldr	r3, [sp, #32]
10018dfe:	1c5a      	adds	r2, r3, #1
10018e00:	f001 8095 	beq.w	10019f2e <_svfprintf_r+0x15fa>
10018e04:	9912      	ldr	r1, [sp, #72]	@ 0x48
10018e06:	461a      	mov	r2, r3
10018e08:	4628      	mov	r0, r5
10018e0a:	f7fc fda9 	bl	10015960 <memchr>
10018e0e:	900c      	str	r0, [sp, #48]	@ 0x30
10018e10:	2800      	cmp	r0, #0
10018e12:	f001 82f0 	beq.w	1001a3f6 <_svfprintf_r+0x1ac2>
10018e16:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10018e18:	960d      	str	r6, [sp, #52]	@ 0x34
10018e1a:	eba3 0b05 	sub.w	fp, r3, r5
10018e1e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10018e20:	9308      	str	r3, [sp, #32]
10018e22:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
10018e26:	9314      	str	r3, [sp, #80]	@ 0x50
10018e28:	9310      	str	r3, [sp, #64]	@ 0x40
10018e2a:	930c      	str	r3, [sp, #48]	@ 0x30
10018e2c:	2373      	movs	r3, #115	@ 0x73
10018e2e:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10018e32:	9106      	str	r1, [sp, #24]
10018e34:	930e      	str	r3, [sp, #56]	@ 0x38
10018e36:	e75b      	b.n	10018cf0 <_svfprintf_r+0x3bc>
10018e38:	f019 0f20 	tst.w	r9, #32
10018e3c:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10018e40:	f000 80ed 	beq.w	1001901e <_svfprintf_r+0x6ea>
10018e44:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10018e46:	3307      	adds	r3, #7
10018e48:	f023 0307 	bic.w	r3, r3, #7
10018e4c:	461a      	mov	r2, r3
10018e4e:	6859      	ldr	r1, [r3, #4]
10018e50:	f852 3b08 	ldr.w	r3, [r2], #8
10018e54:	920d      	str	r2, [sp, #52]	@ 0x34
10018e56:	460a      	mov	r2, r1
10018e58:	2900      	cmp	r1, #0
10018e5a:	f2c0 841a 	blt.w	10019692 <_svfprintf_r+0xd5e>
10018e5e:	9908      	ldr	r1, [sp, #32]
10018e60:	3101      	adds	r1, #1
10018e62:	f000 829d 	beq.w	100193a0 <_svfprintf_r+0xa6c>
10018e66:	ea53 0102 	orrs.w	r1, r3, r2
10018e6a:	f029 0480 	bic.w	r4, r9, #128	@ 0x80
10018e6e:	f040 8298 	bne.w	100193a2 <_svfprintf_r+0xa6e>
10018e72:	9a08      	ldr	r2, [sp, #32]
10018e74:	2a00      	cmp	r2, #0
10018e76:	f040 8299 	bne.w	100193ac <_svfprintf_r+0xa78>
10018e7a:	46a1      	mov	r9, r4
10018e7c:	4693      	mov	fp, r2
10018e7e:	ad5e      	add	r5, sp, #376	@ 0x178
10018e80:	e152      	b.n	10019128 <_svfprintf_r+0x7f4>
10018e82:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10018e84:	f853 2b04 	ldr.w	r2, [r3], #4
10018e88:	920b      	str	r2, [sp, #44]	@ 0x2c
10018e8a:	2a00      	cmp	r2, #0
10018e8c:	f280 8425 	bge.w	100196da <_svfprintf_r+0xda6>
10018e90:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
10018e92:	930d      	str	r3, [sp, #52]	@ 0x34
10018e94:	4252      	negs	r2, r2
10018e96:	920b      	str	r2, [sp, #44]	@ 0x2c
10018e98:	7823      	ldrb	r3, [r4, #0]
10018e9a:	f049 0904 	orr.w	r9, r9, #4
10018e9e:	e5a0      	b.n	100189e2 <_svfprintf_r+0xae>
10018ea0:	232b      	movs	r3, #43	@ 0x2b
10018ea2:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10018ea6:	7823      	ldrb	r3, [r4, #0]
10018ea8:	e59b      	b.n	100189e2 <_svfprintf_r+0xae>
10018eaa:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10018eae:	f049 0910 	orr.w	r9, r9, #16
10018eb2:	f019 0220 	ands.w	r2, r9, #32
10018eb6:	f000 83b5 	beq.w	10019624 <_svfprintf_r+0xcf0>
10018eba:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10018ebc:	3307      	adds	r3, #7
10018ebe:	f023 0307 	bic.w	r3, r3, #7
10018ec2:	4619      	mov	r1, r3
10018ec4:	685a      	ldr	r2, [r3, #4]
10018ec6:	f851 3b08 	ldr.w	r3, [r1], #8
10018eca:	910d      	str	r1, [sp, #52]	@ 0x34
10018ecc:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
10018ed0:	2100      	movs	r1, #0
10018ed2:	2000      	movs	r0, #0
10018ed4:	9d08      	ldr	r5, [sp, #32]
10018ed6:	f88d 009f 	strb.w	r0, [sp, #159]	@ 0x9f
10018eda:	1c6f      	adds	r7, r5, #1
10018edc:	f000 810d 	beq.w	100190fa <_svfprintf_r+0x7c6>
10018ee0:	ea53 0002 	orrs.w	r0, r3, r2
10018ee4:	f024 0980 	bic.w	r9, r4, #128	@ 0x80
10018ee8:	f040 8106 	bne.w	100190f8 <_svfprintf_r+0x7c4>
10018eec:	2d00      	cmp	r5, #0
10018eee:	f040 8628 	bne.w	10019b42 <_svfprintf_r+0x120e>
10018ef2:	2900      	cmp	r1, #0
10018ef4:	f040 83c9 	bne.w	1001968a <_svfprintf_r+0xd56>
10018ef8:	f014 0b01 	ands.w	fp, r4, #1
10018efc:	f000 83f1 	beq.w	100196e2 <_svfprintf_r+0xdae>
10018f00:	2330      	movs	r3, #48	@ 0x30
10018f02:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
10018f06:	f20d 1577 	addw	r5, sp, #375	@ 0x177
10018f0a:	e10d      	b.n	10019128 <_svfprintf_r+0x7f4>
10018f0c:	7823      	ldrb	r3, [r4, #0]
10018f0e:	2b68      	cmp	r3, #104	@ 0x68
10018f10:	bf03      	ittte	eq
10018f12:	7863      	ldrbeq	r3, [r4, #1]
10018f14:	f449 7900 	orreq.w	r9, r9, #512	@ 0x200
10018f18:	3401      	addeq	r4, #1
10018f1a:	f049 0940 	orrne.w	r9, r9, #64	@ 0x40
10018f1e:	e560      	b.n	100189e2 <_svfprintf_r+0xae>
10018f20:	f019 0f20 	tst.w	r9, #32
10018f24:	940f      	str	r4, [sp, #60]	@ 0x3c
10018f26:	f000 83e6 	beq.w	100196f6 <_svfprintf_r+0xdc2>
10018f2a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10018f2c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10018f2e:	681b      	ldr	r3, [r3, #0]
10018f30:	601a      	str	r2, [r3, #0]
10018f32:	17d2      	asrs	r2, r2, #31
10018f34:	605a      	str	r2, [r3, #4]
10018f36:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10018f38:	3304      	adds	r3, #4
10018f3a:	930d      	str	r3, [sp, #52]	@ 0x34
10018f3c:	e695      	b.n	10018c6a <_svfprintf_r+0x336>
10018f3e:	7823      	ldrb	r3, [r4, #0]
10018f40:	2b6c      	cmp	r3, #108	@ 0x6c
10018f42:	bf03      	ittte	eq
10018f44:	7863      	ldrbeq	r3, [r4, #1]
10018f46:	f049 0920 	orreq.w	r9, r9, #32
10018f4a:	3401      	addeq	r4, #1
10018f4c:	f049 0910 	orrne.w	r9, r9, #16
10018f50:	e547      	b.n	100189e2 <_svfprintf_r+0xae>
10018f52:	bf00      	nop
10018f54:	7fefffff 	.word	0x7fefffff
10018f58:	100278a8 	.word	0x100278a8
10018f5c:	100278ac 	.word	0x100278ac
10018f60:	100278fc 	.word	0x100278fc
10018f64:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10018f66:	940f      	str	r4, [sp, #60]	@ 0x3c
10018f68:	f852 3b04 	ldr.w	r3, [r2], #4
10018f6c:	920d      	str	r2, [sp, #52]	@ 0x34
10018f6e:	f647 0230 	movw	r2, #30768	@ 0x7830
10018f72:	f8ad 20a0 	strh.w	r2, [sp, #160]	@ 0xa0
10018f76:	2078      	movs	r0, #120	@ 0x78
10018f78:	4aa8      	ldr	r2, [pc, #672]	@ (1001921c <_svfprintf_r+0x8e8>)
10018f7a:	9219      	str	r2, [sp, #100]	@ 0x64
10018f7c:	f049 0402 	orr.w	r4, r9, #2
10018f80:	2200      	movs	r2, #0
10018f82:	2102      	movs	r1, #2
10018f84:	900e      	str	r0, [sp, #56]	@ 0x38
10018f86:	e7a4      	b.n	10018ed2 <_svfprintf_r+0x59e>
10018f88:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10018f8c:	f049 0410 	orr.w	r4, r9, #16
10018f90:	f014 0220 	ands.w	r2, r4, #32
10018f94:	f000 8355 	beq.w	10019642 <_svfprintf_r+0xd0e>
10018f98:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10018f9a:	3307      	adds	r3, #7
10018f9c:	f023 0307 	bic.w	r3, r3, #7
10018fa0:	4619      	mov	r1, r3
10018fa2:	685a      	ldr	r2, [r3, #4]
10018fa4:	f851 3b08 	ldr.w	r3, [r1], #8
10018fa8:	910d      	str	r1, [sp, #52]	@ 0x34
10018faa:	2101      	movs	r1, #1
10018fac:	e791      	b.n	10018ed2 <_svfprintf_r+0x59e>
10018fae:	7823      	ldrb	r3, [r4, #0]
10018fb0:	f049 0908 	orr.w	r9, r9, #8
10018fb4:	e515      	b.n	100189e2 <_svfprintf_r+0xae>
10018fb6:	7823      	ldrb	r3, [r4, #0]
10018fb8:	f049 0901 	orr.w	r9, r9, #1
10018fbc:	e511      	b.n	100189e2 <_svfprintf_r+0xae>
10018fbe:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10018fc2:	7823      	ldrb	r3, [r4, #0]
10018fc4:	2a00      	cmp	r2, #0
10018fc6:	f47f ad0c 	bne.w	100189e2 <_svfprintf_r+0xae>
10018fca:	2220      	movs	r2, #32
10018fcc:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10018fd0:	e507      	b.n	100189e2 <_svfprintf_r+0xae>
10018fd2:	7823      	ldrb	r3, [r4, #0]
10018fd4:	f049 0980 	orr.w	r9, r9, #128	@ 0x80
10018fd8:	e503      	b.n	100189e2 <_svfprintf_r+0xae>
10018fda:	4621      	mov	r1, r4
10018fdc:	f811 3b01 	ldrb.w	r3, [r1], #1
10018fe0:	2b2a      	cmp	r3, #42	@ 0x2a
10018fe2:	f001 822b 	beq.w	1001a43c <_svfprintf_r+0x1b08>
10018fe6:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10018fea:	2a09      	cmp	r2, #9
10018fec:	460c      	mov	r4, r1
10018fee:	bf98      	it	ls
10018ff0:	2100      	movls	r1, #0
10018ff2:	f201 8132 	bhi.w	1001a25a <_svfprintf_r+0x1926>
10018ff6:	f814 3b01 	ldrb.w	r3, [r4], #1
10018ffa:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10018ffe:	eb02 0141 	add.w	r1, r2, r1, lsl #1
10019002:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10019006:	2a09      	cmp	r2, #9
10019008:	d9f5      	bls.n	10018ff6 <_svfprintf_r+0x6c2>
1001900a:	9108      	str	r1, [sp, #32]
1001900c:	e4ea      	b.n	100189e4 <_svfprintf_r+0xb0>
1001900e:	f049 0910 	orr.w	r9, r9, #16
10019012:	f019 0f20 	tst.w	r9, #32
10019016:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001901a:	f47f af13 	bne.w	10018e44 <_svfprintf_r+0x510>
1001901e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10019020:	f019 0f10 	tst.w	r9, #16
10019024:	f852 3b04 	ldr.w	r3, [r2], #4
10019028:	920d      	str	r2, [sp, #52]	@ 0x34
1001902a:	f040 8360 	bne.w	100196ee <_svfprintf_r+0xdba>
1001902e:	f019 0f40 	tst.w	r9, #64	@ 0x40
10019032:	f000 8358 	beq.w	100196e6 <_svfprintf_r+0xdb2>
10019036:	f343 32c0 	sbfx	r2, r3, #15, #1
1001903a:	4611      	mov	r1, r2
1001903c:	b21b      	sxth	r3, r3
1001903e:	e70b      	b.n	10018e58 <_svfprintf_r+0x524>
10019040:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10019042:	2b65      	cmp	r3, #101	@ 0x65
10019044:	f340 8166 	ble.w	10019314 <_svfprintf_r+0x9e0>
10019048:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
1001904c:	2200      	movs	r2, #0
1001904e:	2300      	movs	r3, #0
10019050:	f006 fff8 	bl	10020044 <__aeabi_dcmpeq>
10019054:	2800      	cmp	r0, #0
10019056:	f000 8211 	beq.w	1001947c <_svfprintf_r+0xb48>
1001905a:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001905c:	4a70      	ldr	r2, [pc, #448]	@ (10019220 <_svfprintf_r+0x8ec>)
1001905e:	f8c8 2000 	str.w	r2, [r8]
10019062:	3301      	adds	r3, #1
10019064:	3401      	adds	r4, #1
10019066:	2201      	movs	r2, #1
10019068:	2b07      	cmp	r3, #7
1001906a:	9434      	str	r4, [sp, #208]	@ 0xd0
1001906c:	9333      	str	r3, [sp, #204]	@ 0xcc
1001906e:	f8c8 2004 	str.w	r2, [r8, #4]
10019072:	f300 856b 	bgt.w	10019b4c <_svfprintf_r+0x1218>
10019076:	f108 0808 	add.w	r8, r8, #8
1001907a:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
1001907c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
1001907e:	4293      	cmp	r3, r2
10019080:	f280 8326 	bge.w	100196d0 <_svfprintf_r+0xd9c>
10019084:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10019086:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
10019088:	441c      	add	r4, r3
1001908a:	e9c8 2300 	strd	r2, r3, [r8]
1001908e:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10019090:	9434      	str	r4, [sp, #208]	@ 0xd0
10019092:	3301      	adds	r3, #1
10019094:	2b07      	cmp	r3, #7
10019096:	9333      	str	r3, [sp, #204]	@ 0xcc
10019098:	f300 83e4 	bgt.w	10019864 <_svfprintf_r+0xf30>
1001909c:	f108 0808 	add.w	r8, r8, #8
100190a0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100190a2:	1e5d      	subs	r5, r3, #1
100190a4:	2d00      	cmp	r5, #0
100190a6:	f77f adc2 	ble.w	10018c2e <_svfprintf_r+0x2fa>
100190aa:	2d10      	cmp	r5, #16
100190ac:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100190ae:	f340 85ae 	ble.w	10019c0e <_svfprintf_r+0x12da>
100190b2:	4f5c      	ldr	r7, [pc, #368]	@ (10019224 <_svfprintf_r+0x8f0>)
100190b4:	f8dd b01c 	ldr.w	fp, [sp, #28]
100190b8:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
100190bc:	9715      	str	r7, [sp, #84]	@ 0x54
100190be:	2610      	movs	r6, #16
100190c0:	e005      	b.n	100190ce <_svfprintf_r+0x79a>
100190c2:	f108 0808 	add.w	r8, r8, #8
100190c6:	3d10      	subs	r5, #16
100190c8:	2d10      	cmp	r5, #16
100190ca:	f340 85a2 	ble.w	10019c12 <_svfprintf_r+0x12de>
100190ce:	3301      	adds	r3, #1
100190d0:	3410      	adds	r4, #16
100190d2:	2b07      	cmp	r3, #7
100190d4:	e9c8 7600 	strd	r7, r6, [r8]
100190d8:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100190dc:	ddf1      	ble.n	100190c2 <_svfprintf_r+0x78e>
100190de:	aa32      	add	r2, sp, #200	@ 0xc8
100190e0:	4651      	mov	r1, sl
100190e2:	4658      	mov	r0, fp
100190e4:	f006 f9ca 	bl	1001f47c <__ssprint_r>
100190e8:	2800      	cmp	r0, #0
100190ea:	f040 82c0 	bne.w	1001966e <_svfprintf_r+0xd3a>
100190ee:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
100190f2:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100190f6:	e7e6      	b.n	100190c6 <_svfprintf_r+0x792>
100190f8:	464c      	mov	r4, r9
100190fa:	2901      	cmp	r1, #1
100190fc:	f000 8151 	beq.w	100193a2 <_svfprintf_r+0xa6e>
10019100:	2902      	cmp	r1, #2
10019102:	ad5e      	add	r5, sp, #376	@ 0x178
10019104:	d11e      	bne.n	10019144 <_svfprintf_r+0x810>
10019106:	9819      	ldr	r0, [sp, #100]	@ 0x64
10019108:	f003 010f 	and.w	r1, r3, #15
1001910c:	091b      	lsrs	r3, r3, #4
1001910e:	5c41      	ldrb	r1, [r0, r1]
10019110:	f805 1d01 	strb.w	r1, [r5, #-1]!
10019114:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
10019118:	0912      	lsrs	r2, r2, #4
1001911a:	ea53 0102 	orrs.w	r1, r3, r2
1001911e:	d1f3      	bne.n	10019108 <_svfprintf_r+0x7d4>
10019120:	ab5e      	add	r3, sp, #376	@ 0x178
10019122:	46a1      	mov	r9, r4
10019124:	eba3 0b05 	sub.w	fp, r3, r5
10019128:	9908      	ldr	r1, [sp, #32]
1001912a:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001912e:	4559      	cmp	r1, fp
10019130:	f04f 0300 	mov.w	r3, #0
10019134:	bfb8      	it	lt
10019136:	4659      	movlt	r1, fp
10019138:	930c      	str	r3, [sp, #48]	@ 0x30
1001913a:	9106      	str	r1, [sp, #24]
1001913c:	9314      	str	r3, [sp, #80]	@ 0x50
1001913e:	9310      	str	r3, [sp, #64]	@ 0x40
10019140:	9312      	str	r3, [sp, #72]	@ 0x48
10019142:	e5d5      	b.n	10018cf0 <_svfprintf_r+0x3bc>
10019144:	f003 0107 	and.w	r1, r3, #7
10019148:	08db      	lsrs	r3, r3, #3
1001914a:	ea43 7342 	orr.w	r3, r3, r2, lsl #29
1001914e:	08d2      	lsrs	r2, r2, #3
10019150:	3130      	adds	r1, #48	@ 0x30
10019152:	ea53 0602 	orrs.w	r6, r3, r2
10019156:	4628      	mov	r0, r5
10019158:	f805 1d01 	strb.w	r1, [r5, #-1]!
1001915c:	d1f2      	bne.n	10019144 <_svfprintf_r+0x810>
1001915e:	07e6      	lsls	r6, r4, #31
10019160:	d5de      	bpl.n	10019120 <_svfprintf_r+0x7ec>
10019162:	2930      	cmp	r1, #48	@ 0x30
10019164:	d0dc      	beq.n	10019120 <_svfprintf_r+0x7ec>
10019166:	2330      	movs	r3, #48	@ 0x30
10019168:	3802      	subs	r0, #2
1001916a:	f805 3c01 	strb.w	r3, [r5, #-1]
1001916e:	ab5e      	add	r3, sp, #376	@ 0x178
10019170:	46a1      	mov	r9, r4
10019172:	eba3 0b00 	sub.w	fp, r3, r0
10019176:	4605      	mov	r5, r0
10019178:	e7d6      	b.n	10019128 <_svfprintf_r+0x7f4>
1001917a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001917c:	9a06      	ldr	r2, [sp, #24]
1001917e:	1a9e      	subs	r6, r3, r2
10019180:	2e00      	cmp	r6, #0
10019182:	f77f ad3c 	ble.w	10018bfe <_svfprintf_r+0x2ca>
10019186:	2e10      	cmp	r6, #16
10019188:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001918a:	f341 80a1 	ble.w	1001a2d0 <_svfprintf_r+0x199c>
1001918e:	4825      	ldr	r0, [pc, #148]	@ (10019224 <_svfprintf_r+0x8f0>)
10019190:	f8dd a01c 	ldr.w	sl, [sp, #28]
10019194:	9015      	str	r0, [sp, #84]	@ 0x54
10019196:	4621      	mov	r1, r4
10019198:	2710      	movs	r7, #16
1001919a:	461a      	mov	r2, r3
1001919c:	4604      	mov	r4, r0
1001919e:	e004      	b.n	100191aa <_svfprintf_r+0x876>
100191a0:	3e10      	subs	r6, #16
100191a2:	2e10      	cmp	r6, #16
100191a4:	f108 0808 	add.w	r8, r8, #8
100191a8:	dd16      	ble.n	100191d8 <_svfprintf_r+0x8a4>
100191aa:	3201      	adds	r2, #1
100191ac:	3110      	adds	r1, #16
100191ae:	2a07      	cmp	r2, #7
100191b0:	e9c8 4700 	strd	r4, r7, [r8]
100191b4:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
100191b8:	ddf2      	ble.n	100191a0 <_svfprintf_r+0x86c>
100191ba:	9909      	ldr	r1, [sp, #36]	@ 0x24
100191bc:	aa32      	add	r2, sp, #200	@ 0xc8
100191be:	4650      	mov	r0, sl
100191c0:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100191c4:	f006 f95a 	bl	1001f47c <__ssprint_r>
100191c8:	2800      	cmp	r0, #0
100191ca:	f040 84b2 	bne.w	10019b32 <_svfprintf_r+0x11fe>
100191ce:	3e10      	subs	r6, #16
100191d0:	2e10      	cmp	r6, #16
100191d2:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
100191d6:	dce8      	bgt.n	100191aa <_svfprintf_r+0x876>
100191d8:	460c      	mov	r4, r1
100191da:	4613      	mov	r3, r2
100191dc:	3301      	adds	r3, #1
100191de:	9a15      	ldr	r2, [sp, #84]	@ 0x54
100191e0:	f8c8 2000 	str.w	r2, [r8]
100191e4:	4434      	add	r4, r6
100191e6:	2b07      	cmp	r3, #7
100191e8:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100191ec:	f8c8 6004 	str.w	r6, [r8, #4]
100191f0:	f300 851d 	bgt.w	10019c2e <_svfprintf_r+0x12fa>
100191f4:	9b08      	ldr	r3, [sp, #32]
100191f6:	eba3 060b 	sub.w	r6, r3, fp
100191fa:	2e00      	cmp	r6, #0
100191fc:	f108 0808 	add.w	r8, r8, #8
10019200:	f77f ad03 	ble.w	10018c0a <_svfprintf_r+0x2d6>
10019204:	4a07      	ldr	r2, [pc, #28]	@ (10019224 <_svfprintf_r+0x8f0>)
10019206:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10019208:	9215      	str	r2, [sp, #84]	@ 0x54
1001920a:	2e10      	cmp	r6, #16
1001920c:	dd2a      	ble.n	10019264 <_svfprintf_r+0x930>
1001920e:	4622      	mov	r2, r4
10019210:	9f07      	ldr	r7, [sp, #28]
10019212:	9c09      	ldr	r4, [sp, #36]	@ 0x24
10019214:	f04f 0a10 	mov.w	sl, #16
10019218:	e00b      	b.n	10019232 <_svfprintf_r+0x8fe>
1001921a:	bf00      	nop
1001921c:	100278b8 	.word	0x100278b8
10019220:	100278e8 	.word	0x100278e8
10019224:	100278ec 	.word	0x100278ec
10019228:	3e10      	subs	r6, #16
1001922a:	2e10      	cmp	r6, #16
1001922c:	f108 0808 	add.w	r8, r8, #8
10019230:	dd17      	ble.n	10019262 <_svfprintf_r+0x92e>
10019232:	3301      	adds	r3, #1
10019234:	498e      	ldr	r1, [pc, #568]	@ (10019470 <_svfprintf_r+0xb3c>)
10019236:	3210      	adds	r2, #16
10019238:	2b07      	cmp	r3, #7
1001923a:	e9c8 1a00 	strd	r1, sl, [r8]
1001923e:	e9cd 3233 	strd	r3, r2, [sp, #204]	@ 0xcc
10019242:	ddf1      	ble.n	10019228 <_svfprintf_r+0x8f4>
10019244:	aa32      	add	r2, sp, #200	@ 0xc8
10019246:	4621      	mov	r1, r4
10019248:	4638      	mov	r0, r7
1001924a:	f006 f917 	bl	1001f47c <__ssprint_r>
1001924e:	2800      	cmp	r0, #0
10019250:	f040 820c 	bne.w	1001966c <_svfprintf_r+0xd38>
10019254:	3e10      	subs	r6, #16
10019256:	2e10      	cmp	r6, #16
10019258:	e9dd 3233 	ldrd	r3, r2, [sp, #204]	@ 0xcc
1001925c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10019260:	dce7      	bgt.n	10019232 <_svfprintf_r+0x8fe>
10019262:	4614      	mov	r4, r2
10019264:	3301      	adds	r3, #1
10019266:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10019268:	f8c8 2000 	str.w	r2, [r8]
1001926c:	4434      	add	r4, r6
1001926e:	2b07      	cmp	r3, #7
10019270:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10019274:	f8c8 6004 	str.w	r6, [r8, #4]
10019278:	f300 81c7 	bgt.w	1001960a <_svfprintf_r+0xcd6>
1001927c:	f108 0808 	add.w	r8, r8, #8
10019280:	e4c3      	b.n	10018c0a <_svfprintf_r+0x2d6>
10019282:	9909      	ldr	r1, [sp, #36]	@ 0x24
10019284:	9807      	ldr	r0, [sp, #28]
10019286:	aa32      	add	r2, sp, #200	@ 0xc8
10019288:	f006 f8f8 	bl	1001f47c <__ssprint_r>
1001928c:	2800      	cmp	r0, #0
1001928e:	f43f ace2 	beq.w	10018c56 <_svfprintf_r+0x322>
10019292:	f8dd b01c 	ldr.w	fp, [sp, #28]
10019296:	e1ea      	b.n	1001966e <_svfprintf_r+0xd3a>
10019298:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001929a:	4976      	ldr	r1, [pc, #472]	@ (10019474 <_svfprintf_r+0xb40>)
1001929c:	f8c8 1000 	str.w	r1, [r8]
100192a0:	3301      	adds	r3, #1
100192a2:	3401      	adds	r4, #1
100192a4:	2101      	movs	r1, #1
100192a6:	2b07      	cmp	r3, #7
100192a8:	9434      	str	r4, [sp, #208]	@ 0xd0
100192aa:	9333      	str	r3, [sp, #204]	@ 0xcc
100192ac:	f8c8 1004 	str.w	r1, [r8, #4]
100192b0:	f300 8574 	bgt.w	10019d9c <_svfprintf_r+0x1468>
100192b4:	f108 0808 	add.w	r8, r8, #8
100192b8:	2a00      	cmp	r2, #0
100192ba:	f040 84e6 	bne.w	10019c8a <_svfprintf_r+0x1356>
100192be:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
100192c0:	f009 0301 	and.w	r3, r9, #1
100192c4:	4313      	orrs	r3, r2
100192c6:	f43f acb2 	beq.w	10018c2e <_svfprintf_r+0x2fa>
100192ca:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100192cc:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
100192ce:	441c      	add	r4, r3
100192d0:	e9c8 2300 	strd	r2, r3, [r8]
100192d4:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100192d6:	9434      	str	r4, [sp, #208]	@ 0xd0
100192d8:	3301      	adds	r3, #1
100192da:	2b07      	cmp	r3, #7
100192dc:	9333      	str	r3, [sp, #204]	@ 0xcc
100192de:	f300 8645 	bgt.w	10019f6c <_svfprintf_r+0x1638>
100192e2:	f108 0808 	add.w	r8, r8, #8
100192e6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
100192e8:	f8c8 5000 	str.w	r5, [r8]
100192ec:	3301      	adds	r3, #1
100192ee:	4414      	add	r4, r2
100192f0:	2b07      	cmp	r3, #7
100192f2:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100192f6:	f8c8 2004 	str.w	r2, [r8, #4]
100192fa:	f77f ac96 	ble.w	10018c2a <_svfprintf_r+0x2f6>
100192fe:	9909      	ldr	r1, [sp, #36]	@ 0x24
10019300:	9807      	ldr	r0, [sp, #28]
10019302:	aa32      	add	r2, sp, #200	@ 0xc8
10019304:	f006 f8ba 	bl	1001f47c <__ssprint_r>
10019308:	2800      	cmp	r0, #0
1001930a:	d1c2      	bne.n	10019292 <_svfprintf_r+0x95e>
1001930c:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001930e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10019312:	e48c      	b.n	10018c2e <_svfprintf_r+0x2fa>
10019314:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10019316:	9e33      	ldr	r6, [sp, #204]	@ 0xcc
10019318:	2b01      	cmp	r3, #1
1001931a:	f104 0401 	add.w	r4, r4, #1
1001931e:	f106 0601 	add.w	r6, r6, #1
10019322:	f108 0708 	add.w	r7, r8, #8
10019326:	f340 8129 	ble.w	1001957c <_svfprintf_r+0xc48>
1001932a:	2301      	movs	r3, #1
1001932c:	2e07      	cmp	r6, #7
1001932e:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10019332:	f8c8 5000 	str.w	r5, [r8]
10019336:	f8c8 3004 	str.w	r3, [r8, #4]
1001933a:	f300 81b1 	bgt.w	100196a0 <_svfprintf_r+0xd6c>
1001933e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10019340:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
10019342:	3601      	adds	r6, #1
10019344:	441c      	add	r4, r3
10019346:	2e07      	cmp	r6, #7
10019348:	e9c7 2300 	strd	r2, r3, [r7]
1001934c:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10019350:	f300 81b2 	bgt.w	100196b8 <_svfprintf_r+0xd84>
10019354:	3708      	adds	r7, #8
10019356:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10019358:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
1001935c:	f103 38ff 	add.w	r8, r3, #4294967295	@ 0xffffffff
10019360:	2200      	movs	r2, #0
10019362:	2300      	movs	r3, #0
10019364:	f006 fe6e 	bl	10020044 <__aeabi_dcmpeq>
10019368:	2800      	cmp	r0, #0
1001936a:	f040 8121 	bne.w	100195b0 <_svfprintf_r+0xc7c>
1001936e:	3601      	adds	r6, #1
10019370:	3501      	adds	r5, #1
10019372:	4444      	add	r4, r8
10019374:	2e07      	cmp	r6, #7
10019376:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001937a:	603d      	str	r5, [r7, #0]
1001937c:	f8c7 8004 	str.w	r8, [r7, #4]
10019380:	f300 810a 	bgt.w	10019598 <_svfprintf_r+0xc64>
10019384:	3708      	adds	r7, #8
10019386:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
10019388:	607b      	str	r3, [r7, #4]
1001938a:	3601      	adds	r6, #1
1001938c:	441c      	add	r4, r3
1001938e:	2e07      	cmp	r6, #7
10019390:	ab2c      	add	r3, sp, #176	@ 0xb0
10019392:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10019396:	603b      	str	r3, [r7, #0]
10019398:	dcb1      	bgt.n	100192fe <_svfprintf_r+0x9ca>
1001939a:	f107 0808 	add.w	r8, r7, #8
1001939e:	e446      	b.n	10018c2e <_svfprintf_r+0x2fa>
100193a0:	464c      	mov	r4, r9
100193a2:	2b0a      	cmp	r3, #10
100193a4:	f172 0100 	sbcs.w	r1, r2, #0
100193a8:	f080 8353 	bcs.w	10019a52 <_svfprintf_r+0x111e>
100193ac:	3330      	adds	r3, #48	@ 0x30
100193ae:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
100193b2:	46a1      	mov	r9, r4
100193b4:	f04f 0b01 	mov.w	fp, #1
100193b8:	f20d 1577 	addw	r5, sp, #375	@ 0x177
100193bc:	e6b4      	b.n	10019128 <_svfprintf_r+0x7f4>
100193be:	9909      	ldr	r1, [sp, #36]	@ 0x24
100193c0:	9807      	ldr	r0, [sp, #28]
100193c2:	aa32      	add	r2, sp, #200	@ 0xc8
100193c4:	f006 f85a 	bl	1001f47c <__ssprint_r>
100193c8:	2800      	cmp	r0, #0
100193ca:	f47f af62 	bne.w	10019292 <_svfprintf_r+0x95e>
100193ce:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100193d0:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100193d4:	e410      	b.n	10018bf8 <_svfprintf_r+0x2c4>
100193d6:	9909      	ldr	r1, [sp, #36]	@ 0x24
100193d8:	9807      	ldr	r0, [sp, #28]
100193da:	9315      	str	r3, [sp, #84]	@ 0x54
100193dc:	aa32      	add	r2, sp, #200	@ 0xc8
100193de:	f006 f84d 	bl	1001f47c <__ssprint_r>
100193e2:	2800      	cmp	r0, #0
100193e4:	f47f af55 	bne.w	10019292 <_svfprintf_r+0x95e>
100193e8:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100193ea:	9b15      	ldr	r3, [sp, #84]	@ 0x54
100193ec:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100193f0:	f7ff bbf0 	b.w	10018bd4 <_svfprintf_r+0x2a0>
100193f4:	2d10      	cmp	r5, #16
100193f6:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100193f8:	f340 8733 	ble.w	1001a262 <_svfprintf_r+0x192e>
100193fc:	4f1e      	ldr	r7, [pc, #120]	@ (10019478 <_svfprintf_r+0xb44>)
100193fe:	f8dd 901c 	ldr.w	r9, [sp, #28]
10019402:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
10019406:	9715      	str	r7, [sp, #84]	@ 0x54
10019408:	2610      	movs	r6, #16
1001940a:	e004      	b.n	10019416 <_svfprintf_r+0xae2>
1001940c:	3d10      	subs	r5, #16
1001940e:	2d10      	cmp	r5, #16
10019410:	f108 0808 	add.w	r8, r8, #8
10019414:	dd16      	ble.n	10019444 <_svfprintf_r+0xb10>
10019416:	3301      	adds	r3, #1
10019418:	3410      	adds	r4, #16
1001941a:	2b07      	cmp	r3, #7
1001941c:	e9c8 7600 	strd	r7, r6, [r8]
10019420:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10019424:	ddf2      	ble.n	1001940c <_svfprintf_r+0xad8>
10019426:	aa32      	add	r2, sp, #200	@ 0xc8
10019428:	4651      	mov	r1, sl
1001942a:	4648      	mov	r0, r9
1001942c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10019430:	f006 f824 	bl	1001f47c <__ssprint_r>
10019434:	2800      	cmp	r0, #0
10019436:	f040 83e8 	bne.w	10019c0a <_svfprintf_r+0x12d6>
1001943a:	3d10      	subs	r5, #16
1001943c:	2d10      	cmp	r5, #16
1001943e:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10019442:	dce8      	bgt.n	10019416 <_svfprintf_r+0xae2>
10019444:	3301      	adds	r3, #1
10019446:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10019448:	442c      	add	r4, r5
1001944a:	2b07      	cmp	r3, #7
1001944c:	e9c8 2500 	strd	r2, r5, [r8]
10019450:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10019454:	f77f abf4 	ble.w	10018c40 <_svfprintf_r+0x30c>
10019458:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001945a:	9807      	ldr	r0, [sp, #28]
1001945c:	aa32      	add	r2, sp, #200	@ 0xc8
1001945e:	f006 f80d 	bl	1001f47c <__ssprint_r>
10019462:	2800      	cmp	r0, #0
10019464:	f47f af15 	bne.w	10019292 <_svfprintf_r+0x95e>
10019468:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001946a:	f7ff bbe9 	b.w	10018c40 <_svfprintf_r+0x30c>
1001946e:	bf00      	nop
10019470:	100278ec 	.word	0x100278ec
10019474:	100278e8 	.word	0x100278e8
10019478:	100278fc 	.word	0x100278fc
1001947c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001947e:	2a00      	cmp	r2, #0
10019480:	f77f af0a 	ble.w	10019298 <_svfprintf_r+0x964>
10019484:	e9dd 7312 	ldrd	r7, r3, [sp, #72]	@ 0x48
10019488:	429f      	cmp	r7, r3
1001948a:	bfa8      	it	ge
1001948c:	461f      	movge	r7, r3
1001948e:	2f00      	cmp	r7, #0
10019490:	eb05 0b03 	add.w	fp, r5, r3
10019494:	dd0b      	ble.n	100194ae <_svfprintf_r+0xb7a>
10019496:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10019498:	3301      	adds	r3, #1
1001949a:	443c      	add	r4, r7
1001949c:	2b07      	cmp	r3, #7
1001949e:	e9c8 5700 	strd	r5, r7, [r8]
100194a2:	9434      	str	r4, [sp, #208]	@ 0xd0
100194a4:	9333      	str	r3, [sp, #204]	@ 0xcc
100194a6:	f300 8642 	bgt.w	1001a12e <_svfprintf_r+0x17fa>
100194aa:	f108 0808 	add.w	r8, r8, #8
100194ae:	9e12      	ldr	r6, [sp, #72]	@ 0x48
100194b0:	2f00      	cmp	r7, #0
100194b2:	bfa8      	it	ge
100194b4:	1bf6      	subge	r6, r6, r7
100194b6:	2e00      	cmp	r6, #0
100194b8:	f300 8200 	bgt.w	100198bc <_svfprintf_r+0xf88>
100194bc:	f8dd a048 	ldr.w	sl, [sp, #72]	@ 0x48
100194c0:	f419 6f80 	tst.w	r9, #1024	@ 0x400
100194c4:	44aa      	add	sl, r5
100194c6:	f040 8221 	bne.w	1001990c <_svfprintf_r+0xfd8>
100194ca:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
100194cc:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100194ce:	429d      	cmp	r5, r3
100194d0:	db03      	blt.n	100194da <_svfprintf_r+0xba6>
100194d2:	f019 0f01 	tst.w	r9, #1
100194d6:	f000 846f 	beq.w	10019db8 <_svfprintf_r+0x1484>
100194da:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100194dc:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
100194de:	441c      	add	r4, r3
100194e0:	e9c8 2300 	strd	r2, r3, [r8]
100194e4:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100194e6:	9434      	str	r4, [sp, #208]	@ 0xd0
100194e8:	3301      	adds	r3, #1
100194ea:	2b07      	cmp	r3, #7
100194ec:	9333      	str	r3, [sp, #204]	@ 0xcc
100194ee:	f300 8675 	bgt.w	1001a1dc <_svfprintf_r+0x18a8>
100194f2:	f108 0808 	add.w	r8, r8, #8
100194f6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100194f8:	ebab 060a 	sub.w	r6, fp, sl
100194fc:	1b5d      	subs	r5, r3, r5
100194fe:	42ae      	cmp	r6, r5
10019500:	bfa8      	it	ge
10019502:	462e      	movge	r6, r5
10019504:	2e00      	cmp	r6, #0
10019506:	dd0d      	ble.n	10019524 <_svfprintf_r+0xbf0>
10019508:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001950a:	f8c8 a000 	str.w	sl, [r8]
1001950e:	3301      	adds	r3, #1
10019510:	4434      	add	r4, r6
10019512:	2b07      	cmp	r3, #7
10019514:	f8c8 6004 	str.w	r6, [r8, #4]
10019518:	9434      	str	r4, [sp, #208]	@ 0xd0
1001951a:	9333      	str	r3, [sp, #204]	@ 0xcc
1001951c:	f300 8670 	bgt.w	1001a200 <_svfprintf_r+0x18cc>
10019520:	f108 0808 	add.w	r8, r8, #8
10019524:	2e00      	cmp	r6, #0
10019526:	bfa8      	it	ge
10019528:	1bad      	subge	r5, r5, r6
1001952a:	2d00      	cmp	r5, #0
1001952c:	f77f ab7f 	ble.w	10018c2e <_svfprintf_r+0x2fa>
10019530:	2d10      	cmp	r5, #16
10019532:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10019534:	f340 836b 	ble.w	10019c0e <_svfprintf_r+0x12da>
10019538:	4fad      	ldr	r7, [pc, #692]	@ (100197f0 <_svfprintf_r+0xebc>)
1001953a:	f8dd b01c 	ldr.w	fp, [sp, #28]
1001953e:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
10019542:	9715      	str	r7, [sp, #84]	@ 0x54
10019544:	2610      	movs	r6, #16
10019546:	e005      	b.n	10019554 <_svfprintf_r+0xc20>
10019548:	f108 0808 	add.w	r8, r8, #8
1001954c:	3d10      	subs	r5, #16
1001954e:	2d10      	cmp	r5, #16
10019550:	f340 835f 	ble.w	10019c12 <_svfprintf_r+0x12de>
10019554:	3301      	adds	r3, #1
10019556:	3410      	adds	r4, #16
10019558:	2b07      	cmp	r3, #7
1001955a:	e9c8 7600 	strd	r7, r6, [r8]
1001955e:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10019562:	ddf1      	ble.n	10019548 <_svfprintf_r+0xc14>
10019564:	aa32      	add	r2, sp, #200	@ 0xc8
10019566:	4651      	mov	r1, sl
10019568:	4658      	mov	r0, fp
1001956a:	f005 ff87 	bl	1001f47c <__ssprint_r>
1001956e:	2800      	cmp	r0, #0
10019570:	d17d      	bne.n	1001966e <_svfprintf_r+0xd3a>
10019572:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10019576:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001957a:	e7e7      	b.n	1001954c <_svfprintf_r+0xc18>
1001957c:	f019 0f01 	tst.w	r9, #1
10019580:	f47f aed3 	bne.w	1001932a <_svfprintf_r+0x9f6>
10019584:	2301      	movs	r3, #1
10019586:	2e07      	cmp	r6, #7
10019588:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001958c:	f8c8 5000 	str.w	r5, [r8]
10019590:	f8c8 3004 	str.w	r3, [r8, #4]
10019594:	f77f aef7 	ble.w	10019386 <_svfprintf_r+0xa52>
10019598:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001959a:	9807      	ldr	r0, [sp, #28]
1001959c:	aa32      	add	r2, sp, #200	@ 0xc8
1001959e:	f005 ff6d 	bl	1001f47c <__ssprint_r>
100195a2:	2800      	cmp	r0, #0
100195a4:	f47f ae75 	bne.w	10019292 <_svfprintf_r+0x95e>
100195a8:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
100195ac:	af35      	add	r7, sp, #212	@ 0xd4
100195ae:	e6ea      	b.n	10019386 <_svfprintf_r+0xa52>
100195b0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100195b2:	2b01      	cmp	r3, #1
100195b4:	f77f aee7 	ble.w	10019386 <_svfprintf_r+0xa52>
100195b8:	2b11      	cmp	r3, #17
100195ba:	4b8d      	ldr	r3, [pc, #564]	@ (100197f0 <_svfprintf_r+0xebc>)
100195bc:	9315      	str	r3, [sp, #84]	@ 0x54
100195be:	f340 8358 	ble.w	10019c72 <_svfprintf_r+0x133e>
100195c2:	f8cd 9020 	str.w	r9, [sp, #32]
100195c6:	f8dd a01c 	ldr.w	sl, [sp, #28]
100195ca:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
100195ce:	2510      	movs	r5, #16
100195d0:	4699      	mov	r9, r3
100195d2:	e006      	b.n	100195e2 <_svfprintf_r+0xcae>
100195d4:	3708      	adds	r7, #8
100195d6:	f1a8 0810 	sub.w	r8, r8, #16
100195da:	f1b8 0f10 	cmp.w	r8, #16
100195de:	f340 8346 	ble.w	10019c6e <_svfprintf_r+0x133a>
100195e2:	3601      	adds	r6, #1
100195e4:	3410      	adds	r4, #16
100195e6:	2e07      	cmp	r6, #7
100195e8:	e9c7 9500 	strd	r9, r5, [r7]
100195ec:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
100195f0:	ddf0      	ble.n	100195d4 <_svfprintf_r+0xca0>
100195f2:	aa32      	add	r2, sp, #200	@ 0xc8
100195f4:	4659      	mov	r1, fp
100195f6:	4650      	mov	r0, sl
100195f8:	f005 ff40 	bl	1001f47c <__ssprint_r>
100195fc:	2800      	cmp	r0, #0
100195fe:	f040 8298 	bne.w	10019b32 <_svfprintf_r+0x11fe>
10019602:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10019606:	af35      	add	r7, sp, #212	@ 0xd4
10019608:	e7e5      	b.n	100195d6 <_svfprintf_r+0xca2>
1001960a:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001960c:	9807      	ldr	r0, [sp, #28]
1001960e:	aa32      	add	r2, sp, #200	@ 0xc8
10019610:	f005 ff34 	bl	1001f47c <__ssprint_r>
10019614:	2800      	cmp	r0, #0
10019616:	f47f ae3c 	bne.w	10019292 <_svfprintf_r+0x95e>
1001961a:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001961c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10019620:	f7ff baf3 	b.w	10018c0a <_svfprintf_r+0x2d6>
10019624:	990d      	ldr	r1, [sp, #52]	@ 0x34
10019626:	f851 3b04 	ldr.w	r3, [r1], #4
1001962a:	910d      	str	r1, [sp, #52]	@ 0x34
1001962c:	f019 0110 	ands.w	r1, r9, #16
10019630:	f47f ac4c 	bne.w	10018ecc <_svfprintf_r+0x598>
10019634:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
10019638:	f000 8363 	beq.w	10019d02 <_svfprintf_r+0x13ce>
1001963c:	b29b      	uxth	r3, r3
1001963e:	460a      	mov	r2, r1
10019640:	e444      	b.n	10018ecc <_svfprintf_r+0x598>
10019642:	990d      	ldr	r1, [sp, #52]	@ 0x34
10019644:	f851 3b04 	ldr.w	r3, [r1], #4
10019648:	910d      	str	r1, [sp, #52]	@ 0x34
1001964a:	f014 0110 	ands.w	r1, r4, #16
1001964e:	d10b      	bne.n	10019668 <_svfprintf_r+0xd34>
10019650:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
10019654:	d003      	beq.n	1001965e <_svfprintf_r+0xd2a>
10019656:	460a      	mov	r2, r1
10019658:	b29b      	uxth	r3, r3
1001965a:	2101      	movs	r1, #1
1001965c:	e439      	b.n	10018ed2 <_svfprintf_r+0x59e>
1001965e:	f414 7200 	ands.w	r2, r4, #512	@ 0x200
10019662:	bf1c      	itt	ne
10019664:	b2db      	uxtbne	r3, r3
10019666:	4602      	movne	r2, r0
10019668:	2101      	movs	r1, #1
1001966a:	e432      	b.n	10018ed2 <_svfprintf_r+0x59e>
1001966c:	46bb      	mov	fp, r7
1001966e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10019670:	2b00      	cmp	r3, #0
10019672:	f43f aa64 	beq.w	10018b3e <_svfprintf_r+0x20a>
10019676:	990c      	ldr	r1, [sp, #48]	@ 0x30
10019678:	4658      	mov	r0, fp
1001967a:	f7fd fd05 	bl	10017088 <_free_r>
1001967e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10019680:	899b      	ldrh	r3, [r3, #12]
10019682:	f003 0340 	and.w	r3, r3, #64	@ 0x40
10019686:	f7ff ba5e 	b.w	10018b46 <_svfprintf_r+0x212>
1001968a:	f8dd b020 	ldr.w	fp, [sp, #32]
1001968e:	ad5e      	add	r5, sp, #376	@ 0x178
10019690:	e54a      	b.n	10019128 <_svfprintf_r+0x7f4>
10019692:	425b      	negs	r3, r3
10019694:	eb62 0242 	sbc.w	r2, r2, r2, lsl #1
10019698:	464c      	mov	r4, r9
1001969a:	202d      	movs	r0, #45	@ 0x2d
1001969c:	2101      	movs	r1, #1
1001969e:	e419      	b.n	10018ed4 <_svfprintf_r+0x5a0>
100196a0:	9909      	ldr	r1, [sp, #36]	@ 0x24
100196a2:	9807      	ldr	r0, [sp, #28]
100196a4:	aa32      	add	r2, sp, #200	@ 0xc8
100196a6:	f005 fee9 	bl	1001f47c <__ssprint_r>
100196aa:	2800      	cmp	r0, #0
100196ac:	f47f adf1 	bne.w	10019292 <_svfprintf_r+0x95e>
100196b0:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
100196b4:	af35      	add	r7, sp, #212	@ 0xd4
100196b6:	e642      	b.n	1001933e <_svfprintf_r+0xa0a>
100196b8:	9909      	ldr	r1, [sp, #36]	@ 0x24
100196ba:	9807      	ldr	r0, [sp, #28]
100196bc:	aa32      	add	r2, sp, #200	@ 0xc8
100196be:	f005 fedd 	bl	1001f47c <__ssprint_r>
100196c2:	2800      	cmp	r0, #0
100196c4:	f47f ade5 	bne.w	10019292 <_svfprintf_r+0x95e>
100196c8:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
100196cc:	af35      	add	r7, sp, #212	@ 0xd4
100196ce:	e642      	b.n	10019356 <_svfprintf_r+0xa22>
100196d0:	f019 0f01 	tst.w	r9, #1
100196d4:	f43f aaab 	beq.w	10018c2e <_svfprintf_r+0x2fa>
100196d8:	e4d4      	b.n	10019084 <_svfprintf_r+0x750>
100196da:	930d      	str	r3, [sp, #52]	@ 0x34
100196dc:	7823      	ldrb	r3, [r4, #0]
100196de:	f7ff b980 	b.w	100189e2 <_svfprintf_r+0xae>
100196e2:	ad5e      	add	r5, sp, #376	@ 0x178
100196e4:	e520      	b.n	10019128 <_svfprintf_r+0x7f4>
100196e6:	f419 7f00 	tst.w	r9, #512	@ 0x200
100196ea:	f040 8374 	bne.w	10019dd6 <_svfprintf_r+0x14a2>
100196ee:	17da      	asrs	r2, r3, #31
100196f0:	4611      	mov	r1, r2
100196f2:	f7ff bbb1 	b.w	10018e58 <_svfprintf_r+0x524>
100196f6:	f019 0f10 	tst.w	r9, #16
100196fa:	f040 82b2 	bne.w	10019c62 <_svfprintf_r+0x132e>
100196fe:	f019 0f40 	tst.w	r9, #64	@ 0x40
10019702:	f040 8362 	bne.w	10019dca <_svfprintf_r+0x1496>
10019706:	f419 7f00 	tst.w	r9, #512	@ 0x200
1001970a:	f000 82aa 	beq.w	10019c62 <_svfprintf_r+0x132e>
1001970e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10019710:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10019712:	681b      	ldr	r3, [r3, #0]
10019714:	701a      	strb	r2, [r3, #0]
10019716:	e40e      	b.n	10018f36 <_svfprintf_r+0x602>
10019718:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
1001971a:	7823      	ldrb	r3, [r4, #0]
1001971c:	2a00      	cmp	r2, #0
1001971e:	f43f a960 	beq.w	100189e2 <_svfprintf_r+0xae>
10019722:	7812      	ldrb	r2, [r2, #0]
10019724:	2a00      	cmp	r2, #0
10019726:	f43f a95c 	beq.w	100189e2 <_svfprintf_r+0xae>
1001972a:	f449 6980 	orr.w	r9, r9, #1024	@ 0x400
1001972e:	f7ff b958 	b.w	100189e2 <_svfprintf_r+0xae>
10019732:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10019736:	4602      	mov	r2, r0
10019738:	460b      	mov	r3, r1
1001973a:	f006 fcb5 	bl	100200a8 <__aeabi_dcmpun>
1001973e:	2800      	cmp	r0, #0
10019740:	f040 860f 	bne.w	1001a362 <_svfprintf_r+0x1a2e>
10019744:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10019746:	2b61      	cmp	r3, #97	@ 0x61
10019748:	f000 8506 	beq.w	1001a158 <_svfprintf_r+0x1824>
1001974c:	2b41      	cmp	r3, #65	@ 0x41
1001974e:	f000 8582 	beq.w	1001a256 <_svfprintf_r+0x1922>
10019752:	9b08      	ldr	r3, [sp, #32]
10019754:	3301      	adds	r3, #1
10019756:	f000 8417 	beq.w	10019f88 <_svfprintf_r+0x1654>
1001975a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001975c:	f023 0320 	bic.w	r3, r3, #32
10019760:	2b47      	cmp	r3, #71	@ 0x47
10019762:	d104      	bne.n	1001976e <_svfprintf_r+0xe3a>
10019764:	9b08      	ldr	r3, [sp, #32]
10019766:	2b00      	cmp	r3, #0
10019768:	bf08      	it	eq
1001976a:	2301      	moveq	r3, #1
1001976c:	9308      	str	r3, [sp, #32]
1001976e:	e9dd 1216 	ldrd	r1, r2, [sp, #88]	@ 0x58
10019772:	f449 7080 	orr.w	r0, r9, #256	@ 0x100
10019776:	2a00      	cmp	r2, #0
10019778:	9015      	str	r0, [sp, #84]	@ 0x54
1001977a:	f8cd 9018 	str.w	r9, [sp, #24]
1001977e:	f04f 0300 	mov.w	r3, #0
10019782:	f2c0 8521 	blt.w	1001a1c8 <_svfprintf_r+0x1894>
10019786:	e9cd 1224 	strd	r1, r2, [sp, #144]	@ 0x90
1001978a:	931f      	str	r3, [sp, #124]	@ 0x7c
1001978c:	930c      	str	r3, [sp, #48]	@ 0x30
1001978e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10019790:	3b41      	subs	r3, #65	@ 0x41
10019792:	2b25      	cmp	r3, #37	@ 0x25
10019794:	f200 8328 	bhi.w	10019de8 <_svfprintf_r+0x14b4>
10019798:	e8df f013 	tbh	[pc, r3, lsl #1]
1001979c:	03260401 	.word	0x03260401
100197a0:	03260326 	.word	0x03260326
100197a4:	03fe03fa 	.word	0x03fe03fa
100197a8:	03260326 	.word	0x03260326
100197ac:	03260326 	.word	0x03260326
100197b0:	03260326 	.word	0x03260326
100197b4:	03260326 	.word	0x03260326
100197b8:	03260326 	.word	0x03260326
100197bc:	03260326 	.word	0x03260326
100197c0:	03260326 	.word	0x03260326
100197c4:	03260326 	.word	0x03260326
100197c8:	03260326 	.word	0x03260326
100197cc:	03260326 	.word	0x03260326
100197d0:	03260326 	.word	0x03260326
100197d4:	03260326 	.word	0x03260326
100197d8:	03260326 	.word	0x03260326
100197dc:	03260326 	.word	0x03260326
100197e0:	03260326 	.word	0x03260326
100197e4:	03fe03fa 	.word	0x03fe03fa
100197e8:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100197ec:	f7ff bb61 	b.w	10018eb2 <_svfprintf_r+0x57e>
100197f0:	100278ec 	.word	0x100278ec
100197f4:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100197f8:	464c      	mov	r4, r9
100197fa:	f7ff bbc9 	b.w	10018f90 <_svfprintf_r+0x65c>
100197fe:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10019802:	4bbd      	ldr	r3, [pc, #756]	@ (10019af8 <_svfprintf_r+0x11c4>)
10019804:	9319      	str	r3, [sp, #100]	@ 0x64
10019806:	f019 0220 	ands.w	r2, r9, #32
1001980a:	f000 8108 	beq.w	10019a1e <_svfprintf_r+0x10ea>
1001980e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10019810:	3307      	adds	r3, #7
10019812:	f023 0307 	bic.w	r3, r3, #7
10019816:	4619      	mov	r1, r3
10019818:	685a      	ldr	r2, [r3, #4]
1001981a:	f851 3b08 	ldr.w	r3, [r1], #8
1001981e:	910d      	str	r1, [sp, #52]	@ 0x34
10019820:	f019 0f01 	tst.w	r9, #1
10019824:	d00a      	beq.n	1001983c <_svfprintf_r+0xf08>
10019826:	ea53 0102 	orrs.w	r1, r3, r2
1001982a:	d007      	beq.n	1001983c <_svfprintf_r+0xf08>
1001982c:	990e      	ldr	r1, [sp, #56]	@ 0x38
1001982e:	f88d 10a1 	strb.w	r1, [sp, #161]	@ 0xa1
10019832:	2130      	movs	r1, #48	@ 0x30
10019834:	f049 0902 	orr.w	r9, r9, #2
10019838:	f88d 10a0 	strb.w	r1, [sp, #160]	@ 0xa0
1001983c:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
10019840:	2102      	movs	r1, #2
10019842:	f7ff bb46 	b.w	10018ed2 <_svfprintf_r+0x59e>
10019846:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001984a:	4bac      	ldr	r3, [pc, #688]	@ (10019afc <_svfprintf_r+0x11c8>)
1001984c:	9319      	str	r3, [sp, #100]	@ 0x64
1001984e:	e7da      	b.n	10019806 <_svfprintf_r+0xed2>
10019850:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10019852:	681b      	ldr	r3, [r3, #0]
10019854:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
10019858:	2301      	movs	r3, #1
1001985a:	9306      	str	r3, [sp, #24]
1001985c:	469b      	mov	fp, r3
1001985e:	ad45      	add	r5, sp, #276	@ 0x114
10019860:	f7ff baae 	b.w	10018dc0 <_svfprintf_r+0x48c>
10019864:	9909      	ldr	r1, [sp, #36]	@ 0x24
10019866:	9807      	ldr	r0, [sp, #28]
10019868:	aa32      	add	r2, sp, #200	@ 0xc8
1001986a:	f005 fe07 	bl	1001f47c <__ssprint_r>
1001986e:	2800      	cmp	r0, #0
10019870:	f47f ad0f 	bne.w	10019292 <_svfprintf_r+0x95e>
10019874:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10019876:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001987a:	e411      	b.n	100190a0 <_svfprintf_r+0x76c>
1001987c:	2140      	movs	r1, #64	@ 0x40
1001987e:	4658      	mov	r0, fp
10019880:	f7fb f880 	bl	10014984 <_malloc_r>
10019884:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10019886:	6018      	str	r0, [r3, #0]
10019888:	6118      	str	r0, [r3, #16]
1001988a:	2800      	cmp	r0, #0
1001988c:	f000 8614 	beq.w	1001a4b8 <_svfprintf_r+0x1b84>
10019890:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10019892:	2340      	movs	r3, #64	@ 0x40
10019894:	6153      	str	r3, [r2, #20]
10019896:	f7ff b869 	b.w	1001896c <_svfprintf_r+0x38>
1001989a:	9b08      	ldr	r3, [sp, #32]
1001989c:	950c      	str	r5, [sp, #48]	@ 0x30
1001989e:	2b06      	cmp	r3, #6
100198a0:	4629      	mov	r1, r5
100198a2:	bf28      	it	cs
100198a4:	2306      	movcs	r3, #6
100198a6:	9508      	str	r5, [sp, #32]
100198a8:	462a      	mov	r2, r5
100198aa:	9306      	str	r3, [sp, #24]
100198ac:	4d94      	ldr	r5, [pc, #592]	@ (10019b00 <_svfprintf_r+0x11cc>)
100198ae:	960d      	str	r6, [sp, #52]	@ 0x34
100198b0:	469b      	mov	fp, r3
100198b2:	9114      	str	r1, [sp, #80]	@ 0x50
100198b4:	9110      	str	r1, [sp, #64]	@ 0x40
100198b6:	9112      	str	r1, [sp, #72]	@ 0x48
100198b8:	f7ff ba1a 	b.w	10018cf0 <_svfprintf_r+0x3bc>
100198bc:	2e10      	cmp	r6, #16
100198be:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100198c0:	f340 85eb 	ble.w	1001a49a <_svfprintf_r+0x1b66>
100198c4:	488f      	ldr	r0, [pc, #572]	@ (10019b04 <_svfprintf_r+0x11d0>)
100198c6:	f8dd a01c 	ldr.w	sl, [sp, #28]
100198ca:	9015      	str	r0, [sp, #84]	@ 0x54
100198cc:	4642      	mov	r2, r8
100198ce:	4621      	mov	r1, r4
100198d0:	46a8      	mov	r8, r5
100198d2:	9c09      	ldr	r4, [sp, #36]	@ 0x24
100198d4:	2710      	movs	r7, #16
100198d6:	4605      	mov	r5, r0
100198d8:	e004      	b.n	100198e4 <_svfprintf_r+0xfb0>
100198da:	3208      	adds	r2, #8
100198dc:	3e10      	subs	r6, #16
100198de:	2e10      	cmp	r6, #16
100198e0:	f340 8224 	ble.w	10019d2c <_svfprintf_r+0x13f8>
100198e4:	3301      	adds	r3, #1
100198e6:	3110      	adds	r1, #16
100198e8:	2b07      	cmp	r3, #7
100198ea:	e9c2 5700 	strd	r5, r7, [r2]
100198ee:	e9cd 3133 	strd	r3, r1, [sp, #204]	@ 0xcc
100198f2:	ddf2      	ble.n	100198da <_svfprintf_r+0xfa6>
100198f4:	aa32      	add	r2, sp, #200	@ 0xc8
100198f6:	4621      	mov	r1, r4
100198f8:	4650      	mov	r0, sl
100198fa:	f005 fdbf 	bl	1001f47c <__ssprint_r>
100198fe:	2800      	cmp	r0, #0
10019900:	f040 8117 	bne.w	10019b32 <_svfprintf_r+0x11fe>
10019904:	e9dd 3133 	ldrd	r3, r1, [sp, #204]	@ 0xcc
10019908:	aa35      	add	r2, sp, #212	@ 0xd4
1001990a:	e7e7      	b.n	100198dc <_svfprintf_r+0xfa8>
1001990c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001990e:	f8cd b020 	str.w	fp, [sp, #32]
10019912:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
10019916:	4642      	mov	r2, r8
10019918:	4621      	mov	r1, r4
1001991a:	4f7a      	ldr	r7, [pc, #488]	@ (10019b04 <_svfprintf_r+0x11d0>)
1001991c:	f8dd 9050 	ldr.w	r9, [sp, #80]	@ 0x50
10019920:	f8dd 8078 	ldr.w	r8, [sp, #120]	@ 0x78
10019924:	f8dd b01c 	ldr.w	fp, [sp, #28]
10019928:	4654      	mov	r4, sl
1001992a:	f8dd a06c 	ldr.w	sl, [sp, #108]	@ 0x6c
1001992e:	b383      	cbz	r3, 10019992 <_svfprintf_r+0x105e>
10019930:	f1b9 0f00 	cmp.w	r9, #0
10019934:	f000 80ff 	beq.w	10019b36 <_svfprintf_r+0x1202>
10019938:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
1001993c:	9833      	ldr	r0, [sp, #204]	@ 0xcc
1001993e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
10019940:	3001      	adds	r0, #1
10019942:	4441      	add	r1, r8
10019944:	2807      	cmp	r0, #7
10019946:	e9c2 3800 	strd	r3, r8, [r2]
1001994a:	9134      	str	r1, [sp, #208]	@ 0xd0
1001994c:	9033      	str	r0, [sp, #204]	@ 0xcc
1001994e:	dc75      	bgt.n	10019a3c <_svfprintf_r+0x1108>
10019950:	3208      	adds	r2, #8
10019952:	9b08      	ldr	r3, [sp, #32]
10019954:	f89a 0000 	ldrb.w	r0, [sl]
10019958:	1b1e      	subs	r6, r3, r4
1001995a:	4286      	cmp	r6, r0
1001995c:	bfa8      	it	ge
1001995e:	4606      	movge	r6, r0
10019960:	2e00      	cmp	r6, #0
10019962:	dd0c      	ble.n	1001997e <_svfprintf_r+0x104a>
10019964:	9833      	ldr	r0, [sp, #204]	@ 0xcc
10019966:	3001      	adds	r0, #1
10019968:	4431      	add	r1, r6
1001996a:	2807      	cmp	r0, #7
1001996c:	e9c2 4600 	strd	r4, r6, [r2]
10019970:	9134      	str	r1, [sp, #208]	@ 0xd0
10019972:	9033      	str	r0, [sp, #204]	@ 0xcc
10019974:	f300 8168 	bgt.w	10019c48 <_svfprintf_r+0x1314>
10019978:	f89a 0000 	ldrb.w	r0, [sl]
1001997c:	3208      	adds	r2, #8
1001997e:	2e00      	cmp	r6, #0
10019980:	bfac      	ite	ge
10019982:	1b85      	subge	r5, r0, r6
10019984:	4605      	movlt	r5, r0
10019986:	2d00      	cmp	r5, #0
10019988:	dc13      	bgt.n	100199b2 <_svfprintf_r+0x107e>
1001998a:	4404      	add	r4, r0
1001998c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001998e:	2b00      	cmp	r3, #0
10019990:	d1ce      	bne.n	10019930 <_svfprintf_r+0xffc>
10019992:	f1b9 0f00 	cmp.w	r9, #0
10019996:	d1cf      	bne.n	10019938 <_svfprintf_r+0x1004>
10019998:	f8dd b020 	ldr.w	fp, [sp, #32]
1001999c:	f8cd a06c 	str.w	sl, [sp, #108]	@ 0x6c
100199a0:	46a2      	mov	sl, r4
100199a2:	45da      	cmp	sl, fp
100199a4:	f8dd 9038 	ldr.w	r9, [sp, #56]	@ 0x38
100199a8:	4690      	mov	r8, r2
100199aa:	460c      	mov	r4, r1
100199ac:	bf28      	it	cs
100199ae:	46da      	movcs	sl, fp
100199b0:	e58b      	b.n	100194ca <_svfprintf_r+0xb96>
100199b2:	2d10      	cmp	r5, #16
100199b4:	9833      	ldr	r0, [sp, #204]	@ 0xcc
100199b6:	f340 853e 	ble.w	1001a436 <_svfprintf_r+0x1b02>
100199ba:	4623      	mov	r3, r4
100199bc:	463e      	mov	r6, r7
100199be:	462c      	mov	r4, r5
100199c0:	461d      	mov	r5, r3
100199c2:	e004      	b.n	100199ce <_svfprintf_r+0x109a>
100199c4:	3c10      	subs	r4, #16
100199c6:	2c10      	cmp	r4, #16
100199c8:	f102 0208 	add.w	r2, r2, #8
100199cc:	dd16      	ble.n	100199fc <_svfprintf_r+0x10c8>
100199ce:	3001      	adds	r0, #1
100199d0:	3110      	adds	r1, #16
100199d2:	2310      	movs	r3, #16
100199d4:	2807      	cmp	r0, #7
100199d6:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
100199da:	6017      	str	r7, [r2, #0]
100199dc:	6053      	str	r3, [r2, #4]
100199de:	ddf1      	ble.n	100199c4 <_svfprintf_r+0x1090>
100199e0:	9909      	ldr	r1, [sp, #36]	@ 0x24
100199e2:	aa32      	add	r2, sp, #200	@ 0xc8
100199e4:	4658      	mov	r0, fp
100199e6:	f005 fd49 	bl	1001f47c <__ssprint_r>
100199ea:	2800      	cmp	r0, #0
100199ec:	f47f ae3f 	bne.w	1001966e <_svfprintf_r+0xd3a>
100199f0:	3c10      	subs	r4, #16
100199f2:	2c10      	cmp	r4, #16
100199f4:	e9dd 0133 	ldrd	r0, r1, [sp, #204]	@ 0xcc
100199f8:	aa35      	add	r2, sp, #212	@ 0xd4
100199fa:	dce8      	bgt.n	100199ce <_svfprintf_r+0x109a>
100199fc:	462b      	mov	r3, r5
100199fe:	4625      	mov	r5, r4
10019a00:	461c      	mov	r4, r3
10019a02:	3001      	adds	r0, #1
10019a04:	4429      	add	r1, r5
10019a06:	2807      	cmp	r0, #7
10019a08:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
10019a0c:	6016      	str	r6, [r2, #0]
10019a0e:	6055      	str	r5, [r2, #4]
10019a10:	f300 837f 	bgt.w	1001a112 <_svfprintf_r+0x17de>
10019a14:	f89a 0000 	ldrb.w	r0, [sl]
10019a18:	3208      	adds	r2, #8
10019a1a:	4404      	add	r4, r0
10019a1c:	e7b6      	b.n	1001998c <_svfprintf_r+0x1058>
10019a1e:	990d      	ldr	r1, [sp, #52]	@ 0x34
10019a20:	f851 3b04 	ldr.w	r3, [r1], #4
10019a24:	910d      	str	r1, [sp, #52]	@ 0x34
10019a26:	f019 0110 	ands.w	r1, r9, #16
10019a2a:	f47f aef9 	bne.w	10019820 <_svfprintf_r+0xeec>
10019a2e:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
10019a32:	f000 8160 	beq.w	10019cf6 <_svfprintf_r+0x13c2>
10019a36:	b29b      	uxth	r3, r3
10019a38:	460a      	mov	r2, r1
10019a3a:	e6f1      	b.n	10019820 <_svfprintf_r+0xeec>
10019a3c:	9909      	ldr	r1, [sp, #36]	@ 0x24
10019a3e:	aa32      	add	r2, sp, #200	@ 0xc8
10019a40:	4658      	mov	r0, fp
10019a42:	f005 fd1b 	bl	1001f47c <__ssprint_r>
10019a46:	2800      	cmp	r0, #0
10019a48:	f47f ae11 	bne.w	1001966e <_svfprintf_r+0xd3a>
10019a4c:	9934      	ldr	r1, [sp, #208]	@ 0xd0
10019a4e:	aa35      	add	r2, sp, #212	@ 0xd4
10019a50:	e77f      	b.n	10019952 <_svfprintf_r+0x101e>
10019a52:	f404 6b80 	and.w	fp, r4, #1024	@ 0x400
10019a56:	2100      	movs	r1, #0
10019a58:	f8cd 8030 	str.w	r8, [sp, #48]	@ 0x30
10019a5c:	f8df 90a8 	ldr.w	r9, [pc, #168]	@ 10019b08 <_svfprintf_r+0x11d4>
10019a60:	f8dd 806c 	ldr.w	r8, [sp, #108]	@ 0x6c
10019a64:	9406      	str	r4, [sp, #24]
10019a66:	ad5e      	add	r5, sp, #376	@ 0x178
10019a68:	f04f 3acc 	mov.w	sl, #3435973836	@ 0xcccccccc
10019a6c:	2705      	movs	r7, #5
10019a6e:	468c      	mov	ip, r1
10019a70:	465e      	mov	r6, fp
10019a72:	e005      	b.n	10019a80 <_svfprintf_r+0x114c>
10019a74:	2b0a      	cmp	r3, #10
10019a76:	f172 0200 	sbcs.w	r2, r2, #0
10019a7a:	d333      	bcc.n	10019ae4 <_svfprintf_r+0x11b0>
10019a7c:	465b      	mov	r3, fp
10019a7e:	4622      	mov	r2, r4
10019a80:	1899      	adds	r1, r3, r2
10019a82:	f141 0100 	adc.w	r1, r1, #0
10019a86:	fba9 0401 	umull	r0, r4, r9, r1
10019a8a:	f024 0003 	bic.w	r0, r4, #3
10019a8e:	eb00 0094 	add.w	r0, r0, r4, lsr #2
10019a92:	1a09      	subs	r1, r1, r0
10019a94:	1a58      	subs	r0, r3, r1
10019a96:	f162 0e00 	sbc.w	lr, r2, #0
10019a9a:	fb0a f400 	mul.w	r4, sl, r0
10019a9e:	fba0 b009 	umull	fp, r0, r0, r9
10019aa2:	fb09 440e 	mla	r4, r9, lr, r4
10019aa6:	f00b 0e01 	and.w	lr, fp, #1
10019aaa:	4404      	add	r4, r0
10019aac:	fbae 0e07 	umull	r0, lr, lr, r7
10019ab0:	1840      	adds	r0, r0, r1
10019ab2:	ea4f 0b5b 	mov.w	fp, fp, lsr #1
10019ab6:	3030      	adds	r0, #48	@ 0x30
10019ab8:	f805 0c01 	strb.w	r0, [r5, #-1]
10019abc:	ea4b 7bc4 	orr.w	fp, fp, r4, lsl #31
10019ac0:	f10c 0c01 	add.w	ip, ip, #1
10019ac4:	3d01      	subs	r5, #1
10019ac6:	0864      	lsrs	r4, r4, #1
10019ac8:	2e00      	cmp	r6, #0
10019aca:	d0d3      	beq.n	10019a74 <_svfprintf_r+0x1140>
10019acc:	f898 1000 	ldrb.w	r1, [r8]
10019ad0:	458c      	cmp	ip, r1
10019ad2:	d1cf      	bne.n	10019a74 <_svfprintf_r+0x1140>
10019ad4:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
10019ad8:	d0cc      	beq.n	10019a74 <_svfprintf_r+0x1140>
10019ada:	2b0a      	cmp	r3, #10
10019adc:	f172 0200 	sbcs.w	r2, r2, #0
10019ae0:	f080 8137 	bcs.w	10019d52 <_svfprintf_r+0x141e>
10019ae4:	f8cd 806c 	str.w	r8, [sp, #108]	@ 0x6c
10019ae8:	9c06      	ldr	r4, [sp, #24]
10019aea:	f8dd 8030 	ldr.w	r8, [sp, #48]	@ 0x30
10019aee:	f8cd c04c 	str.w	ip, [sp, #76]	@ 0x4c
10019af2:	f7ff bb15 	b.w	10019120 <_svfprintf_r+0x7ec>
10019af6:	bf00      	nop
10019af8:	100278cc 	.word	0x100278cc
10019afc:	100278b8 	.word	0x100278b8
10019b00:	100278e0 	.word	0x100278e0
10019b04:	100278ec 	.word	0x100278ec
10019b08:	cccccccd 	.word	0xcccccccd
10019b0c:	9909      	ldr	r1, [sp, #36]	@ 0x24
10019b0e:	9807      	ldr	r0, [sp, #28]
10019b10:	9315      	str	r3, [sp, #84]	@ 0x54
10019b12:	aa32      	add	r2, sp, #200	@ 0xc8
10019b14:	f005 fcb2 	bl	1001f47c <__ssprint_r>
10019b18:	2800      	cmp	r0, #0
10019b1a:	f47f abba 	bne.w	10019292 <_svfprintf_r+0x95e>
10019b1e:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10019b22:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10019b24:	9b15      	ldr	r3, [sp, #84]	@ 0x54
10019b26:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10019b2a:	f7ff b841 	b.w	10018bb0 <_svfprintf_r+0x27c>
10019b2e:	46a3      	mov	fp, r4
10019b30:	e59d      	b.n	1001966e <_svfprintf_r+0xd3a>
10019b32:	46d3      	mov	fp, sl
10019b34:	e59b      	b.n	1001966e <_svfprintf_r+0xd3a>
10019b36:	9b10      	ldr	r3, [sp, #64]	@ 0x40
10019b38:	3b01      	subs	r3, #1
10019b3a:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
10019b3e:	9310      	str	r3, [sp, #64]	@ 0x40
10019b40:	e6fc      	b.n	1001993c <_svfprintf_r+0x1008>
10019b42:	2901      	cmp	r1, #1
10019b44:	464c      	mov	r4, r9
10019b46:	f47f aadb 	bne.w	10019100 <_svfprintf_r+0x7cc>
10019b4a:	e42f      	b.n	100193ac <_svfprintf_r+0xa78>
10019b4c:	9909      	ldr	r1, [sp, #36]	@ 0x24
10019b4e:	9807      	ldr	r0, [sp, #28]
10019b50:	aa32      	add	r2, sp, #200	@ 0xc8
10019b52:	f005 fc93 	bl	1001f47c <__ssprint_r>
10019b56:	2800      	cmp	r0, #0
10019b58:	f47f ab9b 	bne.w	10019292 <_svfprintf_r+0x95e>
10019b5c:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10019b5e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10019b62:	f7ff ba8a 	b.w	1001907a <_svfprintf_r+0x746>
10019b66:	af30      	add	r7, sp, #192	@ 0xc0
10019b68:	2208      	movs	r2, #8
10019b6a:	2100      	movs	r1, #0
10019b6c:	4638      	mov	r0, r7
10019b6e:	952b      	str	r5, [sp, #172]	@ 0xac
10019b70:	f7fb f9f6 	bl	10014f60 <memset>
10019b74:	f8dd a020 	ldr.w	sl, [sp, #32]
10019b78:	f1ba 3fff 	cmp.w	sl, #4294967295	@ 0xffffffff
10019b7c:	f000 80c8 	beq.w	10019d10 <_svfprintf_r+0x13dc>
10019b80:	2400      	movs	r4, #0
10019b82:	f8cd 9018 	str.w	r9, [sp, #24]
10019b86:	46a3      	mov	fp, r4
10019b88:	f8dd 901c 	ldr.w	r9, [sp, #28]
10019b8c:	e00c      	b.n	10019ba8 <_svfprintf_r+0x1274>
10019b8e:	a945      	add	r1, sp, #276	@ 0x114
10019b90:	4648      	mov	r0, r9
10019b92:	f003 fc51 	bl	1001d438 <_wcrtomb_r>
10019b96:	1c41      	adds	r1, r0, #1
10019b98:	4458      	add	r0, fp
10019b9a:	f000 838f 	beq.w	1001a2bc <_svfprintf_r+0x1988>
10019b9e:	4550      	cmp	r0, sl
10019ba0:	dc08      	bgt.n	10019bb4 <_svfprintf_r+0x1280>
10019ba2:	f000 8442 	beq.w	1001a42a <_svfprintf_r+0x1af6>
10019ba6:	4683      	mov	fp, r0
10019ba8:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
10019baa:	5912      	ldr	r2, [r2, r4]
10019bac:	463b      	mov	r3, r7
10019bae:	3404      	adds	r4, #4
10019bb0:	2a00      	cmp	r2, #0
10019bb2:	d1ec      	bne.n	10019b8e <_svfprintf_r+0x125a>
10019bb4:	f8dd 9018 	ldr.w	r9, [sp, #24]
10019bb8:	f1bb 0f00 	cmp.w	fp, #0
10019bbc:	f000 80dd 	beq.w	10019d7a <_svfprintf_r+0x1446>
10019bc0:	f1bb 0f63 	cmp.w	fp, #99	@ 0x63
10019bc4:	f300 81ba 	bgt.w	10019f3c <_svfprintf_r+0x1608>
10019bc8:	2300      	movs	r3, #0
10019bca:	930c      	str	r3, [sp, #48]	@ 0x30
10019bcc:	ad45      	add	r5, sp, #276	@ 0x114
10019bce:	2208      	movs	r2, #8
10019bd0:	2100      	movs	r1, #0
10019bd2:	4638      	mov	r0, r7
10019bd4:	f7fb f9c4 	bl	10014f60 <memset>
10019bd8:	9807      	ldr	r0, [sp, #28]
10019bda:	9700      	str	r7, [sp, #0]
10019bdc:	465b      	mov	r3, fp
10019bde:	aa2b      	add	r2, sp, #172	@ 0xac
10019be0:	4629      	mov	r1, r5
10019be2:	f004 fb5f 	bl	1001e2a4 <_wcsrtombs_r>
10019be6:	4583      	cmp	fp, r0
10019be8:	f040 845d 	bne.w	1001a4a6 <_svfprintf_r+0x1b72>
10019bec:	2300      	movs	r3, #0
10019bee:	f805 300b 	strb.w	r3, [r5, fp]
10019bf2:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
10019bf6:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10019bfa:	960d      	str	r6, [sp, #52]	@ 0x34
10019bfc:	9308      	str	r3, [sp, #32]
10019bfe:	9106      	str	r1, [sp, #24]
10019c00:	9314      	str	r3, [sp, #80]	@ 0x50
10019c02:	9310      	str	r3, [sp, #64]	@ 0x40
10019c04:	9312      	str	r3, [sp, #72]	@ 0x48
10019c06:	f7ff b873 	b.w	10018cf0 <_svfprintf_r+0x3bc>
10019c0a:	46cb      	mov	fp, r9
10019c0c:	e52f      	b.n	1001966e <_svfprintf_r+0xd3a>
10019c0e:	4a75      	ldr	r2, [pc, #468]	@ (10019de4 <_svfprintf_r+0x14b0>)
10019c10:	9215      	str	r2, [sp, #84]	@ 0x54
10019c12:	3301      	adds	r3, #1
10019c14:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10019c16:	f8c8 2000 	str.w	r2, [r8]
10019c1a:	442c      	add	r4, r5
10019c1c:	2b07      	cmp	r3, #7
10019c1e:	f8c8 5004 	str.w	r5, [r8, #4]
10019c22:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10019c26:	f77f a800 	ble.w	10018c2a <_svfprintf_r+0x2f6>
10019c2a:	f7ff bb68 	b.w	100192fe <_svfprintf_r+0x9ca>
10019c2e:	9909      	ldr	r1, [sp, #36]	@ 0x24
10019c30:	9807      	ldr	r0, [sp, #28]
10019c32:	aa32      	add	r2, sp, #200	@ 0xc8
10019c34:	f005 fc22 	bl	1001f47c <__ssprint_r>
10019c38:	2800      	cmp	r0, #0
10019c3a:	f47f ab2a 	bne.w	10019292 <_svfprintf_r+0x95e>
10019c3e:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10019c40:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10019c44:	f7fe bfdb 	b.w	10018bfe <_svfprintf_r+0x2ca>
10019c48:	9909      	ldr	r1, [sp, #36]	@ 0x24
10019c4a:	aa32      	add	r2, sp, #200	@ 0xc8
10019c4c:	4658      	mov	r0, fp
10019c4e:	f005 fc15 	bl	1001f47c <__ssprint_r>
10019c52:	2800      	cmp	r0, #0
10019c54:	f47f ad0b 	bne.w	1001966e <_svfprintf_r+0xd3a>
10019c58:	f89a 0000 	ldrb.w	r0, [sl]
10019c5c:	9934      	ldr	r1, [sp, #208]	@ 0xd0
10019c5e:	aa35      	add	r2, sp, #212	@ 0xd4
10019c60:	e68d      	b.n	1001997e <_svfprintf_r+0x104a>
10019c62:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10019c64:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10019c66:	681b      	ldr	r3, [r3, #0]
10019c68:	601a      	str	r2, [r3, #0]
10019c6a:	f7ff b964 	b.w	10018f36 <_svfprintf_r+0x602>
10019c6e:	f8dd 9020 	ldr.w	r9, [sp, #32]
10019c72:	9b15      	ldr	r3, [sp, #84]	@ 0x54
10019c74:	603b      	str	r3, [r7, #0]
10019c76:	3601      	adds	r6, #1
10019c78:	4444      	add	r4, r8
10019c7a:	2e07      	cmp	r6, #7
10019c7c:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10019c80:	f8c7 8004 	str.w	r8, [r7, #4]
10019c84:	f77f ab7e 	ble.w	10019384 <_svfprintf_r+0xa50>
10019c88:	e486      	b.n	10019598 <_svfprintf_r+0xc64>
10019c8a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10019c8c:	991a      	ldr	r1, [sp, #104]	@ 0x68
10019c8e:	441c      	add	r4, r3
10019c90:	e9c8 1300 	strd	r1, r3, [r8]
10019c94:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10019c96:	9434      	str	r4, [sp, #208]	@ 0xd0
10019c98:	3301      	adds	r3, #1
10019c9a:	2b07      	cmp	r3, #7
10019c9c:	9333      	str	r3, [sp, #204]	@ 0xcc
10019c9e:	f300 8165 	bgt.w	10019f6c <_svfprintf_r+0x1638>
10019ca2:	f108 0808 	add.w	r8, r8, #8
10019ca6:	2a00      	cmp	r2, #0
10019ca8:	f6bf ab1d 	bge.w	100192e6 <_svfprintf_r+0x9b2>
10019cac:	4256      	negs	r6, r2
10019cae:	3210      	adds	r2, #16
10019cb0:	4a4c      	ldr	r2, [pc, #304]	@ (10019de4 <_svfprintf_r+0x14b0>)
10019cb2:	9215      	str	r2, [sp, #84]	@ 0x54
10019cb4:	f280 82e8 	bge.w	1001a288 <_svfprintf_r+0x1954>
10019cb8:	46aa      	mov	sl, r5
10019cba:	2710      	movs	r7, #16
10019cbc:	4615      	mov	r5, r2
10019cbe:	e005      	b.n	10019ccc <_svfprintf_r+0x1398>
10019cc0:	f108 0808 	add.w	r8, r8, #8
10019cc4:	3e10      	subs	r6, #16
10019cc6:	2e10      	cmp	r6, #16
10019cc8:	f340 82dd 	ble.w	1001a286 <_svfprintf_r+0x1952>
10019ccc:	3301      	adds	r3, #1
10019cce:	3410      	adds	r4, #16
10019cd0:	2b07      	cmp	r3, #7
10019cd2:	e9c8 5700 	strd	r5, r7, [r8]
10019cd6:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10019cda:	ddf1      	ble.n	10019cc0 <_svfprintf_r+0x138c>
10019cdc:	9909      	ldr	r1, [sp, #36]	@ 0x24
10019cde:	9807      	ldr	r0, [sp, #28]
10019ce0:	aa32      	add	r2, sp, #200	@ 0xc8
10019ce2:	f005 fbcb 	bl	1001f47c <__ssprint_r>
10019ce6:	2800      	cmp	r0, #0
10019ce8:	f47f aad3 	bne.w	10019292 <_svfprintf_r+0x95e>
10019cec:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10019cf0:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10019cf4:	e7e6      	b.n	10019cc4 <_svfprintf_r+0x1390>
10019cf6:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
10019cfa:	bf1c      	itt	ne
10019cfc:	b2db      	uxtbne	r3, r3
10019cfe:	4602      	movne	r2, r0
10019d00:	e58e      	b.n	10019820 <_svfprintf_r+0xeec>
10019d02:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
10019d06:	bf1c      	itt	ne
10019d08:	b2db      	uxtbne	r3, r3
10019d0a:	4602      	movne	r2, r0
10019d0c:	f7ff b8de 	b.w	10018ecc <_svfprintf_r+0x598>
10019d10:	2300      	movs	r3, #0
10019d12:	9807      	ldr	r0, [sp, #28]
10019d14:	9700      	str	r7, [sp, #0]
10019d16:	aa2b      	add	r2, sp, #172	@ 0xac
10019d18:	4619      	mov	r1, r3
10019d1a:	f004 fac3 	bl	1001e2a4 <_wcsrtombs_r>
10019d1e:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
10019d22:	4683      	mov	fp, r0
10019d24:	f000 82ca 	beq.w	1001a2bc <_svfprintf_r+0x1988>
10019d28:	952b      	str	r5, [sp, #172]	@ 0xac
10019d2a:	e745      	b.n	10019bb8 <_svfprintf_r+0x1284>
10019d2c:	4645      	mov	r5, r8
10019d2e:	460c      	mov	r4, r1
10019d30:	4690      	mov	r8, r2
10019d32:	3301      	adds	r3, #1
10019d34:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10019d36:	f8c8 2000 	str.w	r2, [r8]
10019d3a:	4434      	add	r4, r6
10019d3c:	2b07      	cmp	r3, #7
10019d3e:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10019d42:	f8c8 6004 	str.w	r6, [r8, #4]
10019d46:	f300 8104 	bgt.w	10019f52 <_svfprintf_r+0x161e>
10019d4a:	f108 0808 	add.w	r8, r8, #8
10019d4e:	f7ff bbb5 	b.w	100194bc <_svfprintf_r+0xb88>
10019d52:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
10019d54:	991d      	ldr	r1, [sp, #116]	@ 0x74
10019d56:	1aed      	subs	r5, r5, r3
10019d58:	461a      	mov	r2, r3
10019d5a:	4628      	mov	r0, r5
10019d5c:	f7fe f8da 	bl	10017f14 <strncpy>
10019d60:	f898 3001 	ldrb.w	r3, [r8, #1]
10019d64:	b10b      	cbz	r3, 10019d6a <_svfprintf_r+0x1436>
10019d66:	f108 0801 	add.w	r8, r8, #1
10019d6a:	f04f 0c00 	mov.w	ip, #0
10019d6e:	e685      	b.n	10019a7c <_svfprintf_r+0x1148>
10019d70:	222d      	movs	r2, #45	@ 0x2d
10019d72:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10019d76:	f7fe bfaa 	b.w	10018cce <_svfprintf_r+0x39a>
10019d7a:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10019d7e:	960d      	str	r6, [sp, #52]	@ 0x34
10019d80:	f8cd b018 	str.w	fp, [sp, #24]
10019d84:	f8cd b020 	str.w	fp, [sp, #32]
10019d88:	f8cd b050 	str.w	fp, [sp, #80]	@ 0x50
10019d8c:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
10019d90:	f8cd b048 	str.w	fp, [sp, #72]	@ 0x48
10019d94:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
10019d98:	f7fe bfaa 	b.w	10018cf0 <_svfprintf_r+0x3bc>
10019d9c:	9909      	ldr	r1, [sp, #36]	@ 0x24
10019d9e:	9807      	ldr	r0, [sp, #28]
10019da0:	aa32      	add	r2, sp, #200	@ 0xc8
10019da2:	f005 fb6b 	bl	1001f47c <__ssprint_r>
10019da6:	2800      	cmp	r0, #0
10019da8:	f47f aa73 	bne.w	10019292 <_svfprintf_r+0x95e>
10019dac:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10019dae:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10019db0:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10019db4:	f7ff ba80 	b.w	100192b8 <_svfprintf_r+0x984>
10019db8:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10019dba:	ebab 060a 	sub.w	r6, fp, sl
10019dbe:	1b5d      	subs	r5, r3, r5
10019dc0:	42ae      	cmp	r6, r5
10019dc2:	bfa8      	it	ge
10019dc4:	462e      	movge	r6, r5
10019dc6:	f7ff bbad 	b.w	10019524 <_svfprintf_r+0xbf0>
10019dca:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10019dcc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10019dce:	681b      	ldr	r3, [r3, #0]
10019dd0:	801a      	strh	r2, [r3, #0]
10019dd2:	f7ff b8b0 	b.w	10018f36 <_svfprintf_r+0x602>
10019dd6:	f343 12c0 	sbfx	r2, r3, #7, #1
10019dda:	4611      	mov	r1, r2
10019ddc:	b25b      	sxtb	r3, r3
10019dde:	f7ff b83b 	b.w	10018e58 <_svfprintf_r+0x524>
10019de2:	bf00      	nop
10019de4:	100278ec 	.word	0x100278ec
10019de8:	9e08      	ldr	r6, [sp, #32]
10019dea:	2302      	movs	r3, #2
10019dec:	e9cd 3600 	strd	r3, r6, [sp]
10019df0:	ab30      	add	r3, sp, #192	@ 0xc0
10019df2:	9304      	str	r3, [sp, #16]
10019df4:	ab2b      	add	r3, sp, #172	@ 0xac
10019df6:	9303      	str	r3, [sp, #12]
10019df8:	ab29      	add	r3, sp, #164	@ 0xa4
10019dfa:	9302      	str	r3, [sp, #8]
10019dfc:	9807      	ldr	r0, [sp, #28]
10019dfe:	e9dd 2324 	ldrd	r2, r3, [sp, #144]	@ 0x90
10019e02:	f004 faf5 	bl	1001e3f0 <_dtoa_r>
10019e06:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10019e08:	2b67      	cmp	r3, #103	@ 0x67
10019e0a:	4605      	mov	r5, r0
10019e0c:	f000 813b 	beq.w	1001a086 <_svfprintf_r+0x1752>
10019e10:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10019e12:	2b47      	cmp	r3, #71	@ 0x47
10019e14:	f000 8137 	beq.w	1001a086 <_svfprintf_r+0x1752>
10019e18:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10019e1a:	f023 0720 	bic.w	r7, r3, #32
10019e1e:	2f46      	cmp	r7, #70	@ 0x46
10019e20:	eb00 0406 	add.w	r4, r0, r6
10019e24:	d105      	bne.n	10019e32 <_svfprintf_r+0x14fe>
10019e26:	7803      	ldrb	r3, [r0, #0]
10019e28:	2b30      	cmp	r3, #48	@ 0x30
10019e2a:	f000 82f1 	beq.w	1001a410 <_svfprintf_r+0x1adc>
10019e2e:	9e29      	ldr	r6, [sp, #164]	@ 0xa4
10019e30:	4434      	add	r4, r6
10019e32:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
10019e36:	2200      	movs	r2, #0
10019e38:	2300      	movs	r3, #0
10019e3a:	f006 f903 	bl	10020044 <__aeabi_dcmpeq>
10019e3e:	2800      	cmp	r0, #0
10019e40:	f000 813f 	beq.w	1001a0c2 <_svfprintf_r+0x178e>
10019e44:	4623      	mov	r3, r4
10019e46:	1b5b      	subs	r3, r3, r5
10019e48:	9313      	str	r3, [sp, #76]	@ 0x4c
10019e4a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10019e4c:	9212      	str	r2, [sp, #72]	@ 0x48
10019e4e:	2f47      	cmp	r7, #71	@ 0x47
10019e50:	f000 8121 	beq.w	1001a096 <_svfprintf_r+0x1762>
10019e54:	2f46      	cmp	r7, #70	@ 0x46
10019e56:	f000 81e3 	beq.w	1001a220 <_svfprintf_r+0x18ec>
10019e5a:	990e      	ldr	r1, [sp, #56]	@ 0x38
10019e5c:	1e53      	subs	r3, r2, #1
10019e5e:	2961      	cmp	r1, #97	@ 0x61
10019e60:	9329      	str	r3, [sp, #164]	@ 0xa4
10019e62:	f000 8318 	beq.w	1001a496 <_svfprintf_r+0x1b62>
10019e66:	2941      	cmp	r1, #65	@ 0x41
10019e68:	f040 8120 	bne.w	1001a0ac <_svfprintf_r+0x1778>
10019e6c:	2150      	movs	r1, #80	@ 0x50
10019e6e:	2001      	movs	r0, #1
10019e70:	2b00      	cmp	r3, #0
10019e72:	bfb6      	itet	lt
10019e74:	f1c2 0301 	rsblt	r3, r2, #1
10019e78:	222b      	movge	r2, #43	@ 0x2b
10019e7a:	222d      	movlt	r2, #45	@ 0x2d
10019e7c:	2b09      	cmp	r3, #9
10019e7e:	f88d 10b0 	strb.w	r1, [sp, #176]	@ 0xb0
10019e82:	f88d 20b1 	strb.w	r2, [sp, #177]	@ 0xb1
10019e86:	f340 8227 	ble.w	1001a2d8 <_svfprintf_r+0x19a4>
10019e8a:	f10d 04c7 	add.w	r4, sp, #199	@ 0xc7
10019e8e:	4eae      	ldr	r6, [pc, #696]	@ (1001a148 <_svfprintf_r+0x1814>)
10019e90:	4622      	mov	r2, r4
10019e92:	4610      	mov	r0, r2
10019e94:	fba6 1203 	umull	r1, r2, r6, r3
10019e98:	08d2      	lsrs	r2, r2, #3
10019e9a:	eb02 0182 	add.w	r1, r2, r2, lsl #2
10019e9e:	eba3 0141 	sub.w	r1, r3, r1, lsl #1
10019ea2:	3130      	adds	r1, #48	@ 0x30
10019ea4:	f800 1c01 	strb.w	r1, [r0, #-1]
10019ea8:	4619      	mov	r1, r3
10019eaa:	2963      	cmp	r1, #99	@ 0x63
10019eac:	4613      	mov	r3, r2
10019eae:	f100 32ff 	add.w	r2, r0, #4294967295	@ 0xffffffff
10019eb2:	dcee      	bgt.n	10019e92 <_svfprintf_r+0x155e>
10019eb4:	3330      	adds	r3, #48	@ 0x30
10019eb6:	f802 3c01 	strb.w	r3, [r2, #-1]
10019eba:	1e83      	subs	r3, r0, #2
10019ebc:	42a3      	cmp	r3, r4
10019ebe:	f080 82ef 	bcs.w	1001a4a0 <_svfprintf_r+0x1b6c>
10019ec2:	f10d 02b1 	add.w	r2, sp, #177	@ 0xb1
10019ec6:	f813 1b01 	ldrb.w	r1, [r3], #1
10019eca:	f802 1f01 	strb.w	r1, [r2, #1]!
10019ece:	42a3      	cmp	r3, r4
10019ed0:	d1f9      	bne.n	10019ec6 <_svfprintf_r+0x1592>
10019ed2:	ab5e      	add	r3, sp, #376	@ 0x178
10019ed4:	1a18      	subs	r0, r3, r0
10019ed6:	f1a0 03ad 	sub.w	r3, r0, #173	@ 0xad
10019eda:	931c      	str	r3, [sp, #112]	@ 0x70
10019edc:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10019ede:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
10019ee0:	2b01      	cmp	r3, #1
10019ee2:	eb03 0b02 	add.w	fp, r3, r2
10019ee6:	f340 822a 	ble.w	1001a33e <_svfprintf_r+0x1a0a>
10019eea:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10019eec:	449b      	add	fp, r3
10019eee:	9b06      	ldr	r3, [sp, #24]
10019ef0:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
10019ef4:	f443 7980 	orr.w	r9, r3, #256	@ 0x100
10019ef8:	ea2b 72eb 	bic.w	r2, fp, fp, asr #31
10019efc:	2300      	movs	r3, #0
10019efe:	9314      	str	r3, [sp, #80]	@ 0x50
10019f00:	9206      	str	r2, [sp, #24]
10019f02:	9310      	str	r3, [sp, #64]	@ 0x40
10019f04:	9312      	str	r3, [sp, #72]	@ 0x48
10019f06:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
10019f08:	2b00      	cmp	r3, #0
10019f0a:	f040 80d3 	bne.w	1001a0b4 <_svfprintf_r+0x1780>
10019f0e:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10019f12:	9308      	str	r3, [sp, #32]
10019f14:	f7fe beec 	b.w	10018cf0 <_svfprintf_r+0x3bc>
10019f18:	9c09      	ldr	r4, [sp, #36]	@ 0x24
10019f1a:	aa32      	add	r2, sp, #200	@ 0xc8
10019f1c:	4621      	mov	r1, r4
10019f1e:	4658      	mov	r0, fp
10019f20:	f005 faac 	bl	1001f47c <__ssprint_r>
10019f24:	89a3      	ldrh	r3, [r4, #12]
10019f26:	f003 0340 	and.w	r3, r3, #64	@ 0x40
10019f2a:	f7fe be0c 	b.w	10018b46 <_svfprintf_r+0x212>
10019f2e:	4628      	mov	r0, r5
10019f30:	960d      	str	r6, [sp, #52]	@ 0x34
10019f32:	f7fb fe05 	bl	10015b40 <strlen>
10019f36:	4683      	mov	fp, r0
10019f38:	f7fe bf71 	b.w	10018e1e <_svfprintf_r+0x4ea>
10019f3c:	9807      	ldr	r0, [sp, #28]
10019f3e:	f10b 0101 	add.w	r1, fp, #1
10019f42:	f7fa fd1f 	bl	10014984 <_malloc_r>
10019f46:	4605      	mov	r5, r0
10019f48:	2800      	cmp	r0, #0
10019f4a:	f000 81b7 	beq.w	1001a2bc <_svfprintf_r+0x1988>
10019f4e:	900c      	str	r0, [sp, #48]	@ 0x30
10019f50:	e63d      	b.n	10019bce <_svfprintf_r+0x129a>
10019f52:	9909      	ldr	r1, [sp, #36]	@ 0x24
10019f54:	9807      	ldr	r0, [sp, #28]
10019f56:	aa32      	add	r2, sp, #200	@ 0xc8
10019f58:	f005 fa90 	bl	1001f47c <__ssprint_r>
10019f5c:	2800      	cmp	r0, #0
10019f5e:	f47f a998 	bne.w	10019292 <_svfprintf_r+0x95e>
10019f62:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10019f64:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10019f68:	f7ff baa8 	b.w	100194bc <_svfprintf_r+0xb88>
10019f6c:	9909      	ldr	r1, [sp, #36]	@ 0x24
10019f6e:	9807      	ldr	r0, [sp, #28]
10019f70:	aa32      	add	r2, sp, #200	@ 0xc8
10019f72:	f005 fa83 	bl	1001f47c <__ssprint_r>
10019f76:	2800      	cmp	r0, #0
10019f78:	f47f a98b 	bne.w	10019292 <_svfprintf_r+0x95e>
10019f7c:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10019f80:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10019f82:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10019f86:	e68e      	b.n	10019ca6 <_svfprintf_r+0x1372>
10019f88:	2306      	movs	r3, #6
10019f8a:	9308      	str	r3, [sp, #32]
10019f8c:	f7ff bbef 	b.w	1001976e <_svfprintf_r+0xe3a>
10019f90:	9b08      	ldr	r3, [sp, #32]
10019f92:	1c5e      	adds	r6, r3, #1
10019f94:	2302      	movs	r3, #2
10019f96:	e729      	b.n	10019dec <_svfprintf_r+0x14b8>
10019f98:	9e08      	ldr	r6, [sp, #32]
10019f9a:	2303      	movs	r3, #3
10019f9c:	e726      	b.n	10019dec <_svfprintf_r+0x14b8>
10019f9e:	aa29      	add	r2, sp, #164	@ 0xa4
10019fa0:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
10019fa4:	f005 f94e 	bl	1001f244 <frexp>
10019fa8:	2200      	movs	r2, #0
10019faa:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
10019fae:	f005 fde1 	bl	1001fb74 <__aeabi_dmul>
10019fb2:	4602      	mov	r2, r0
10019fb4:	460b      	mov	r3, r1
10019fb6:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
10019fba:	2200      	movs	r2, #0
10019fbc:	2300      	movs	r3, #0
10019fbe:	f006 f841 	bl	10020044 <__aeabi_dcmpeq>
10019fc2:	2800      	cmp	r0, #0
10019fc4:	f040 81c0 	bne.w	1001a348 <_svfprintf_r+0x1a14>
10019fc8:	4b60      	ldr	r3, [pc, #384]	@ (1001a14c <_svfprintf_r+0x1818>)
10019fca:	9312      	str	r3, [sp, #72]	@ 0x48
10019fcc:	9b08      	ldr	r3, [sp, #32]
10019fce:	f8cd 804c 	str.w	r8, [sp, #76]	@ 0x4c
10019fd2:	f103 39ff 	add.w	r9, r3, #4294967295	@ 0xffffffff
10019fd6:	462e      	mov	r6, r5
10019fd8:	9514      	str	r5, [sp, #80]	@ 0x50
10019fda:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
10019fde:	464d      	mov	r5, r9
10019fe0:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
10019fe4:	e005      	b.n	10019ff2 <_svfprintf_r+0x16be>
10019fe6:	2200      	movs	r2, #0
10019fe8:	2300      	movs	r3, #0
10019fea:	f006 f82b 	bl	10020044 <__aeabi_dcmpeq>
10019fee:	b9f0      	cbnz	r0, 1001a02e <_svfprintf_r+0x16fa>
10019ff0:	463d      	mov	r5, r7
10019ff2:	4b57      	ldr	r3, [pc, #348]	@ (1001a150 <_svfprintf_r+0x181c>)
10019ff4:	2200      	movs	r2, #0
10019ff6:	4640      	mov	r0, r8
10019ff8:	4649      	mov	r1, r9
10019ffa:	f005 fdbb 	bl	1001fb74 <__aeabi_dmul>
10019ffe:	4689      	mov	r9, r1
1001a000:	4680      	mov	r8, r0
1001a002:	f006 f867 	bl	100200d4 <__aeabi_d2iz>
1001a006:	4604      	mov	r4, r0
1001a008:	f005 fd4a 	bl	1001faa0 <__aeabi_i2d>
1001a00c:	4602      	mov	r2, r0
1001a00e:	460b      	mov	r3, r1
1001a010:	4640      	mov	r0, r8
1001a012:	4649      	mov	r1, r9
1001a014:	f005 fbf6 	bl	1001f804 <__aeabi_dsub>
1001a018:	f81b 3004 	ldrb.w	r3, [fp, r4]
1001a01c:	1c6a      	adds	r2, r5, #1
1001a01e:	46b2      	mov	sl, r6
1001a020:	f105 37ff 	add.w	r7, r5, #4294967295	@ 0xffffffff
1001a024:	f806 3b01 	strb.w	r3, [r6], #1
1001a028:	4680      	mov	r8, r0
1001a02a:	4689      	mov	r9, r1
1001a02c:	d1db      	bne.n	10019fe6 <_svfprintf_r+0x16b2>
1001a02e:	46cb      	mov	fp, r9
1001a030:	4657      	mov	r7, sl
1001a032:	46c2      	mov	sl, r8
1001a034:	4b47      	ldr	r3, [pc, #284]	@ (1001a154 <_svfprintf_r+0x1820>)
1001a036:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
1001a03a:	2200      	movs	r2, #0
1001a03c:	4650      	mov	r0, sl
1001a03e:	4659      	mov	r1, fp
1001a040:	46a9      	mov	r9, r5
1001a042:	9d14      	ldr	r5, [sp, #80]	@ 0x50
1001a044:	f006 f826 	bl	10020094 <__aeabi_dcmpgt>
1001a048:	2800      	cmp	r0, #0
1001a04a:	f040 8153 	bne.w	1001a2f4 <_svfprintf_r+0x19c0>
1001a04e:	4b41      	ldr	r3, [pc, #260]	@ (1001a154 <_svfprintf_r+0x1820>)
1001a050:	4650      	mov	r0, sl
1001a052:	4659      	mov	r1, fp
1001a054:	2200      	movs	r2, #0
1001a056:	f005 fff5 	bl	10020044 <__aeabi_dcmpeq>
1001a05a:	b110      	cbz	r0, 1001a062 <_svfprintf_r+0x172e>
1001a05c:	07e3      	lsls	r3, r4, #31
1001a05e:	f100 8149 	bmi.w	1001a2f4 <_svfprintf_r+0x19c0>
1001a062:	f1b9 0f00 	cmp.w	r9, #0
1001a066:	f2c0 815f 	blt.w	1001a328 <_svfprintf_r+0x19f4>
1001a06a:	f109 0301 	add.w	r3, r9, #1
1001a06e:	4433      	add	r3, r6
1001a070:	2230      	movs	r2, #48	@ 0x30
1001a072:	f806 2b01 	strb.w	r2, [r6], #1
1001a076:	42b3      	cmp	r3, r6
1001a078:	d1fb      	bne.n	1001a072 <_svfprintf_r+0x173e>
1001a07a:	1b5b      	subs	r3, r3, r5
1001a07c:	9313      	str	r3, [sp, #76]	@ 0x4c
1001a07e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001a080:	f023 0720 	bic.w	r7, r3, #32
1001a084:	e6e1      	b.n	10019e4a <_svfprintf_r+0x1516>
1001a086:	9b06      	ldr	r3, [sp, #24]
1001a088:	07df      	lsls	r7, r3, #31
1001a08a:	f100 80f9 	bmi.w	1001a280 <_svfprintf_r+0x194c>
1001a08e:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1001a090:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001a092:	1b5b      	subs	r3, r3, r5
1001a094:	9313      	str	r3, [sp, #76]	@ 0x4c
1001a096:	1cd3      	adds	r3, r2, #3
1001a098:	9212      	str	r2, [sp, #72]	@ 0x48
1001a09a:	db02      	blt.n	1001a0a2 <_svfprintf_r+0x176e>
1001a09c:	9b08      	ldr	r3, [sp, #32]
1001a09e:	4293      	cmp	r3, r2
1001a0a0:	da1b      	bge.n	1001a0da <_svfprintf_r+0x17a6>
1001a0a2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001a0a4:	3b02      	subs	r3, #2
1001a0a6:	930e      	str	r3, [sp, #56]	@ 0x38
1001a0a8:	1e53      	subs	r3, r2, #1
1001a0aa:	9329      	str	r3, [sp, #164]	@ 0xa4
1001a0ac:	f89d 1038 	ldrb.w	r1, [sp, #56]	@ 0x38
1001a0b0:	2000      	movs	r0, #0
1001a0b2:	e6dd      	b.n	10019e70 <_svfprintf_r+0x153c>
1001a0b4:	222d      	movs	r2, #45	@ 0x2d
1001a0b6:	2300      	movs	r3, #0
1001a0b8:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001a0bc:	9308      	str	r3, [sp, #32]
1001a0be:	f7fe be1a 	b.w	10018cf6 <_svfprintf_r+0x3c2>
1001a0c2:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1001a0c4:	42a3      	cmp	r3, r4
1001a0c6:	f4bf aebe 	bcs.w	10019e46 <_svfprintf_r+0x1512>
1001a0ca:	2130      	movs	r1, #48	@ 0x30
1001a0cc:	1c5a      	adds	r2, r3, #1
1001a0ce:	9230      	str	r2, [sp, #192]	@ 0xc0
1001a0d0:	7019      	strb	r1, [r3, #0]
1001a0d2:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1001a0d4:	429c      	cmp	r4, r3
1001a0d6:	d8f9      	bhi.n	1001a0cc <_svfprintf_r+0x1798>
1001a0d8:	e6b5      	b.n	10019e46 <_svfprintf_r+0x1512>
1001a0da:	9913      	ldr	r1, [sp, #76]	@ 0x4c
1001a0dc:	428a      	cmp	r2, r1
1001a0de:	f2c0 80c4 	blt.w	1001a26a <_svfprintf_r+0x1936>
1001a0e2:	9b06      	ldr	r3, [sp, #24]
1001a0e4:	07dc      	lsls	r4, r3, #31
1001a0e6:	f140 8184 	bpl.w	1001a3f2 <_svfprintf_r+0x1abe>
1001a0ea:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001a0ec:	eb02 0b03 	add.w	fp, r2, r3
1001a0f0:	9b06      	ldr	r3, [sp, #24]
1001a0f2:	0558      	lsls	r0, r3, #21
1001a0f4:	d502      	bpl.n	1001a0fc <_svfprintf_r+0x17c8>
1001a0f6:	2a00      	cmp	r2, #0
1001a0f8:	f300 814d 	bgt.w	1001a396 <_svfprintf_r+0x1a62>
1001a0fc:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001a100:	9306      	str	r3, [sp, #24]
1001a102:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001a106:	2367      	movs	r3, #103	@ 0x67
1001a108:	930e      	str	r3, [sp, #56]	@ 0x38
1001a10a:	2300      	movs	r3, #0
1001a10c:	9314      	str	r3, [sp, #80]	@ 0x50
1001a10e:	9310      	str	r3, [sp, #64]	@ 0x40
1001a110:	e6f9      	b.n	10019f06 <_svfprintf_r+0x15d2>
1001a112:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a114:	aa32      	add	r2, sp, #200	@ 0xc8
1001a116:	4658      	mov	r0, fp
1001a118:	f005 f9b0 	bl	1001f47c <__ssprint_r>
1001a11c:	2800      	cmp	r0, #0
1001a11e:	f47f aaa6 	bne.w	1001966e <_svfprintf_r+0xd3a>
1001a122:	f89a 0000 	ldrb.w	r0, [sl]
1001a126:	9934      	ldr	r1, [sp, #208]	@ 0xd0
1001a128:	aa35      	add	r2, sp, #212	@ 0xd4
1001a12a:	4404      	add	r4, r0
1001a12c:	e42e      	b.n	1001998c <_svfprintf_r+0x1058>
1001a12e:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a130:	9807      	ldr	r0, [sp, #28]
1001a132:	aa32      	add	r2, sp, #200	@ 0xc8
1001a134:	f005 f9a2 	bl	1001f47c <__ssprint_r>
1001a138:	2800      	cmp	r0, #0
1001a13a:	f47f a8aa 	bne.w	10019292 <_svfprintf_r+0x95e>
1001a13e:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001a140:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a144:	f7ff b9b3 	b.w	100194ae <_svfprintf_r+0xb7a>
1001a148:	cccccccd 	.word	0xcccccccd
1001a14c:	100278cc 	.word	0x100278cc
1001a150:	40300000 	.word	0x40300000
1001a154:	3fe00000 	.word	0x3fe00000
1001a158:	2378      	movs	r3, #120	@ 0x78
1001a15a:	f88d 30a1 	strb.w	r3, [sp, #161]	@ 0xa1
1001a15e:	2330      	movs	r3, #48	@ 0x30
1001a160:	f88d 30a0 	strb.w	r3, [sp, #160]	@ 0xa0
1001a164:	f049 0302 	orr.w	r3, r9, #2
1001a168:	9306      	str	r3, [sp, #24]
1001a16a:	9b08      	ldr	r3, [sp, #32]
1001a16c:	2b63      	cmp	r3, #99	@ 0x63
1001a16e:	f300 80dd 	bgt.w	1001a32c <_svfprintf_r+0x19f8>
1001a172:	2300      	movs	r3, #0
1001a174:	930c      	str	r3, [sp, #48]	@ 0x30
1001a176:	ad45      	add	r5, sp, #276	@ 0x114
1001a178:	f449 7381 	orr.w	r3, r9, #258	@ 0x102
1001a17c:	9315      	str	r3, [sp, #84]	@ 0x54
1001a17e:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
1001a180:	2b00      	cmp	r3, #0
1001a182:	db22      	blt.n	1001a1ca <_svfprintf_r+0x1896>
1001a184:	2300      	movs	r3, #0
1001a186:	931f      	str	r3, [sp, #124]	@ 0x7c
1001a188:	e9dd 3416 	ldrd	r3, r4, [sp, #88]	@ 0x58
1001a18c:	e9cd 3424 	strd	r3, r4, [sp, #144]	@ 0x90
1001a190:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001a192:	2b61      	cmp	r3, #97	@ 0x61
1001a194:	f47f aafb 	bne.w	1001978e <_svfprintf_r+0xe5a>
1001a198:	aa29      	add	r2, sp, #164	@ 0xa4
1001a19a:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001a19e:	f005 f851 	bl	1001f244 <frexp>
1001a1a2:	2200      	movs	r2, #0
1001a1a4:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
1001a1a8:	f005 fce4 	bl	1001fb74 <__aeabi_dmul>
1001a1ac:	4602      	mov	r2, r0
1001a1ae:	460b      	mov	r3, r1
1001a1b0:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
1001a1b4:	2200      	movs	r2, #0
1001a1b6:	2300      	movs	r3, #0
1001a1b8:	f005 ff44 	bl	10020044 <__aeabi_dcmpeq>
1001a1bc:	2800      	cmp	r0, #0
1001a1be:	f040 80c3 	bne.w	1001a348 <_svfprintf_r+0x1a14>
1001a1c2:	4ba9      	ldr	r3, [pc, #676]	@ (1001a468 <_svfprintf_r+0x1b34>)
1001a1c4:	9312      	str	r3, [sp, #72]	@ 0x48
1001a1c6:	e701      	b.n	10019fcc <_svfprintf_r+0x1698>
1001a1c8:	930c      	str	r3, [sp, #48]	@ 0x30
1001a1ca:	e9dd 3416 	ldrd	r3, r4, [sp, #88]	@ 0x58
1001a1ce:	9324      	str	r3, [sp, #144]	@ 0x90
1001a1d0:	f104 4300 	add.w	r3, r4, #2147483648	@ 0x80000000
1001a1d4:	9325      	str	r3, [sp, #148]	@ 0x94
1001a1d6:	232d      	movs	r3, #45	@ 0x2d
1001a1d8:	931f      	str	r3, [sp, #124]	@ 0x7c
1001a1da:	e7d9      	b.n	1001a190 <_svfprintf_r+0x185c>
1001a1dc:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a1de:	9807      	ldr	r0, [sp, #28]
1001a1e0:	aa32      	add	r2, sp, #200	@ 0xc8
1001a1e2:	f005 f94b 	bl	1001f47c <__ssprint_r>
1001a1e6:	2800      	cmp	r0, #0
1001a1e8:	f47f a853 	bne.w	10019292 <_svfprintf_r+0x95e>
1001a1ec:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
1001a1ee:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001a1f0:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a1f4:	f7ff b97f 	b.w	100194f6 <_svfprintf_r+0xbc2>
1001a1f8:	499c      	ldr	r1, [pc, #624]	@ (1001a46c <_svfprintf_r+0x1b38>)
1001a1fa:	9115      	str	r1, [sp, #84]	@ 0x54
1001a1fc:	f7fe bdaf 	b.w	10018d5e <_svfprintf_r+0x42a>
1001a200:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a202:	9807      	ldr	r0, [sp, #28]
1001a204:	aa32      	add	r2, sp, #200	@ 0xc8
1001a206:	f005 f939 	bl	1001f47c <__ssprint_r>
1001a20a:	2800      	cmp	r0, #0
1001a20c:	f47f a841 	bne.w	10019292 <_svfprintf_r+0x95e>
1001a210:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
1001a212:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001a214:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001a216:	1b5d      	subs	r5, r3, r5
1001a218:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a21c:	f7ff b982 	b.w	10019524 <_svfprintf_r+0xbf0>
1001a220:	9b06      	ldr	r3, [sp, #24]
1001a222:	9912      	ldr	r1, [sp, #72]	@ 0x48
1001a224:	9a08      	ldr	r2, [sp, #32]
1001a226:	f003 0301 	and.w	r3, r3, #1
1001a22a:	2900      	cmp	r1, #0
1001a22c:	ea43 0302 	orr.w	r3, r3, r2
1001a230:	f340 810f 	ble.w	1001a452 <_svfprintf_r+0x1b1e>
1001a234:	2b00      	cmp	r3, #0
1001a236:	f040 80d5 	bne.w	1001a3e4 <_svfprintf_r+0x1ab0>
1001a23a:	2366      	movs	r3, #102	@ 0x66
1001a23c:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
1001a240:	930e      	str	r3, [sp, #56]	@ 0x38
1001a242:	9b06      	ldr	r3, [sp, #24]
1001a244:	055a      	lsls	r2, r3, #21
1001a246:	f100 80a8 	bmi.w	1001a39a <_svfprintf_r+0x1a66>
1001a24a:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001a24e:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001a252:	9306      	str	r3, [sp, #24]
1001a254:	e759      	b.n	1001a10a <_svfprintf_r+0x17d6>
1001a256:	2358      	movs	r3, #88	@ 0x58
1001a258:	e77f      	b.n	1001a15a <_svfprintf_r+0x1826>
1001a25a:	2200      	movs	r2, #0
1001a25c:	9208      	str	r2, [sp, #32]
1001a25e:	f7fe bbc1 	b.w	100189e4 <_svfprintf_r+0xb0>
1001a262:	4a82      	ldr	r2, [pc, #520]	@ (1001a46c <_svfprintf_r+0x1b38>)
1001a264:	9215      	str	r2, [sp, #84]	@ 0x54
1001a266:	f7ff b8ed 	b.w	10019444 <_svfprintf_r+0xb10>
1001a26a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001a26c:	9a18      	ldr	r2, [sp, #96]	@ 0x60
1001a26e:	eb03 0b02 	add.w	fp, r3, r2
1001a272:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001a274:	2b00      	cmp	r3, #0
1001a276:	f340 8083 	ble.w	1001a380 <_svfprintf_r+0x1a4c>
1001a27a:	2367      	movs	r3, #103	@ 0x67
1001a27c:	930e      	str	r3, [sp, #56]	@ 0x38
1001a27e:	e7e0      	b.n	1001a242 <_svfprintf_r+0x190e>
1001a280:	19ac      	adds	r4, r5, r6
1001a282:	2747      	movs	r7, #71	@ 0x47
1001a284:	e5d5      	b.n	10019e32 <_svfprintf_r+0x14fe>
1001a286:	4655      	mov	r5, sl
1001a288:	3301      	adds	r3, #1
1001a28a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001a28c:	f8c8 2000 	str.w	r2, [r8]
1001a290:	4434      	add	r4, r6
1001a292:	2b07      	cmp	r3, #7
1001a294:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001a298:	f8c8 6004 	str.w	r6, [r8, #4]
1001a29c:	f77f a821 	ble.w	100192e2 <_svfprintf_r+0x9ae>
1001a2a0:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a2a2:	9807      	ldr	r0, [sp, #28]
1001a2a4:	aa32      	add	r2, sp, #200	@ 0xc8
1001a2a6:	f005 f8e9 	bl	1001f47c <__ssprint_r>
1001a2aa:	2800      	cmp	r0, #0
1001a2ac:	f47e aff1 	bne.w	10019292 <_svfprintf_r+0x95e>
1001a2b0:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001a2b4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a2b8:	f7ff b815 	b.w	100192e6 <_svfprintf_r+0x9b2>
1001a2bc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001a2be:	8993      	ldrh	r3, [r2, #12]
1001a2c0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001a2c4:	8193      	strh	r3, [r2, #12]
1001a2c6:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001a2ca:	930a      	str	r3, [sp, #40]	@ 0x28
1001a2cc:	f7fe bc3e 	b.w	10018b4c <_svfprintf_r+0x218>
1001a2d0:	4a67      	ldr	r2, [pc, #412]	@ (1001a470 <_svfprintf_r+0x1b3c>)
1001a2d2:	9215      	str	r2, [sp, #84]	@ 0x54
1001a2d4:	f7fe bf82 	b.w	100191dc <_svfprintf_r+0x8a8>
1001a2d8:	2800      	cmp	r0, #0
1001a2da:	d13f      	bne.n	1001a35c <_svfprintf_r+0x1a28>
1001a2dc:	2230      	movs	r2, #48	@ 0x30
1001a2de:	f88d 20b2 	strb.w	r2, [sp, #178]	@ 0xb2
1001a2e2:	f10d 02b3 	add.w	r2, sp, #179	@ 0xb3
1001a2e6:	3330      	adds	r3, #48	@ 0x30
1001a2e8:	f802 3b01 	strb.w	r3, [r2], #1
1001a2ec:	ab2c      	add	r3, sp, #176	@ 0xb0
1001a2ee:	1ad3      	subs	r3, r2, r3
1001a2f0:	931c      	str	r3, [sp, #112]	@ 0x70
1001a2f2:	e5f3      	b.n	10019edc <_svfprintf_r+0x15a8>
1001a2f4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001a2f6:	9730      	str	r7, [sp, #192]	@ 0xc0
1001a2f8:	7bd9      	ldrb	r1, [r3, #15]
1001a2fa:	f816 2c01 	ldrb.w	r2, [r6, #-1]
1001a2fe:	428a      	cmp	r2, r1
1001a300:	4633      	mov	r3, r6
1001a302:	d109      	bne.n	1001a318 <_svfprintf_r+0x19e4>
1001a304:	2030      	movs	r0, #48	@ 0x30
1001a306:	f803 0c01 	strb.w	r0, [r3, #-1]
1001a30a:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1001a30c:	1e5a      	subs	r2, r3, #1
1001a30e:	9230      	str	r2, [sp, #192]	@ 0xc0
1001a310:	f813 2c01 	ldrb.w	r2, [r3, #-1]
1001a314:	4291      	cmp	r1, r2
1001a316:	d0f6      	beq.n	1001a306 <_svfprintf_r+0x19d2>
1001a318:	2a39      	cmp	r2, #57	@ 0x39
1001a31a:	bf0b      	itete	eq
1001a31c:	9a12      	ldreq	r2, [sp, #72]	@ 0x48
1001a31e:	3201      	addne	r2, #1
1001a320:	7a92      	ldrbeq	r2, [r2, #10]
1001a322:	b2d2      	uxtbne	r2, r2
1001a324:	f803 2c01 	strb.w	r2, [r3, #-1]
1001a328:	4633      	mov	r3, r6
1001a32a:	e6a6      	b.n	1001a07a <_svfprintf_r+0x1746>
1001a32c:	9807      	ldr	r0, [sp, #28]
1001a32e:	1c59      	adds	r1, r3, #1
1001a330:	f7fa fb28 	bl	10014984 <_malloc_r>
1001a334:	4605      	mov	r5, r0
1001a336:	2800      	cmp	r0, #0
1001a338:	d0c0      	beq.n	1001a2bc <_svfprintf_r+0x1988>
1001a33a:	900c      	str	r0, [sp, #48]	@ 0x30
1001a33c:	e71c      	b.n	1001a178 <_svfprintf_r+0x1844>
1001a33e:	9b06      	ldr	r3, [sp, #24]
1001a340:	07de      	lsls	r6, r3, #31
1001a342:	f57f add4 	bpl.w	10019eee <_svfprintf_r+0x15ba>
1001a346:	e5d0      	b.n	10019eea <_svfprintf_r+0x15b6>
1001a348:	4b4a      	ldr	r3, [pc, #296]	@ (1001a474 <_svfprintf_r+0x1b40>)
1001a34a:	4a47      	ldr	r2, [pc, #284]	@ (1001a468 <_svfprintf_r+0x1b34>)
1001a34c:	990e      	ldr	r1, [sp, #56]	@ 0x38
1001a34e:	2961      	cmp	r1, #97	@ 0x61
1001a350:	bf18      	it	ne
1001a352:	461a      	movne	r2, r3
1001a354:	2301      	movs	r3, #1
1001a356:	9212      	str	r2, [sp, #72]	@ 0x48
1001a358:	9329      	str	r3, [sp, #164]	@ 0xa4
1001a35a:	e637      	b.n	10019fcc <_svfprintf_r+0x1698>
1001a35c:	f10d 02b2 	add.w	r2, sp, #178	@ 0xb2
1001a360:	e7c1      	b.n	1001a2e6 <_svfprintf_r+0x19b2>
1001a362:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
1001a364:	4d44      	ldr	r5, [pc, #272]	@ (1001a478 <_svfprintf_r+0x1b44>)
1001a366:	2b00      	cmp	r3, #0
1001a368:	bfb4      	ite	lt
1001a36a:	222d      	movlt	r2, #45	@ 0x2d
1001a36c:	f89d 209f 	ldrbge.w	r2, [sp, #159]	@ 0x9f
1001a370:	4b42      	ldr	r3, [pc, #264]	@ (1001a47c <_svfprintf_r+0x1b48>)
1001a372:	bfb8      	it	lt
1001a374:	f88d 209f 	strblt.w	r2, [sp, #159]	@ 0x9f
1001a378:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
1001a37c:	f7fe bcab 	b.w	10018cd6 <_svfprintf_r+0x3a2>
1001a380:	f1c3 0301 	rsb	r3, r3, #1
1001a384:	449b      	add	fp, r3
1001a386:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001a38a:	9306      	str	r3, [sp, #24]
1001a38c:	2367      	movs	r3, #103	@ 0x67
1001a38e:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001a392:	930e      	str	r3, [sp, #56]	@ 0x38
1001a394:	e6b9      	b.n	1001a10a <_svfprintf_r+0x17d6>
1001a396:	2367      	movs	r3, #103	@ 0x67
1001a398:	930e      	str	r3, [sp, #56]	@ 0x38
1001a39a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
1001a39c:	780b      	ldrb	r3, [r1, #0]
1001a39e:	2bff      	cmp	r3, #255	@ 0xff
1001a3a0:	f000 808e 	beq.w	1001a4c0 <_svfprintf_r+0x1b8c>
1001a3a4:	2400      	movs	r4, #0
1001a3a6:	9a12      	ldr	r2, [sp, #72]	@ 0x48
1001a3a8:	4620      	mov	r0, r4
1001a3aa:	e003      	b.n	1001a3b4 <_svfprintf_r+0x1a80>
1001a3ac:	3001      	adds	r0, #1
1001a3ae:	3101      	adds	r1, #1
1001a3b0:	2bff      	cmp	r3, #255	@ 0xff
1001a3b2:	d008      	beq.n	1001a3c6 <_svfprintf_r+0x1a92>
1001a3b4:	4293      	cmp	r3, r2
1001a3b6:	da06      	bge.n	1001a3c6 <_svfprintf_r+0x1a92>
1001a3b8:	1ad2      	subs	r2, r2, r3
1001a3ba:	784b      	ldrb	r3, [r1, #1]
1001a3bc:	2b00      	cmp	r3, #0
1001a3be:	d1f5      	bne.n	1001a3ac <_svfprintf_r+0x1a78>
1001a3c0:	780b      	ldrb	r3, [r1, #0]
1001a3c2:	3401      	adds	r4, #1
1001a3c4:	e7f4      	b.n	1001a3b0 <_svfprintf_r+0x1a7c>
1001a3c6:	911b      	str	r1, [sp, #108]	@ 0x6c
1001a3c8:	9010      	str	r0, [sp, #64]	@ 0x40
1001a3ca:	9414      	str	r4, [sp, #80]	@ 0x50
1001a3cc:	9212      	str	r2, [sp, #72]	@ 0x48
1001a3ce:	e9dd 3914 	ldrd	r3, r9, [sp, #80]	@ 0x50
1001a3d2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
1001a3d4:	4413      	add	r3, r2
1001a3d6:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
1001a3d8:	fb02 bb03 	mla	fp, r2, r3, fp
1001a3dc:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001a3e0:	9306      	str	r3, [sp, #24]
1001a3e2:	e590      	b.n	10019f06 <_svfprintf_r+0x15d2>
1001a3e4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001a3e6:	18cf      	adds	r7, r1, r3
1001a3e8:	443a      	add	r2, r7
1001a3ea:	2366      	movs	r3, #102	@ 0x66
1001a3ec:	4693      	mov	fp, r2
1001a3ee:	930e      	str	r3, [sp, #56]	@ 0x38
1001a3f0:	e727      	b.n	1001a242 <_svfprintf_r+0x190e>
1001a3f2:	4693      	mov	fp, r2
1001a3f4:	e67c      	b.n	1001a0f0 <_svfprintf_r+0x17bc>
1001a3f6:	9b08      	ldr	r3, [sp, #32]
1001a3f8:	9306      	str	r3, [sp, #24]
1001a3fa:	469b      	mov	fp, r3
1001a3fc:	2373      	movs	r3, #115	@ 0x73
1001a3fe:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001a402:	960d      	str	r6, [sp, #52]	@ 0x34
1001a404:	9008      	str	r0, [sp, #32]
1001a406:	9014      	str	r0, [sp, #80]	@ 0x50
1001a408:	9010      	str	r0, [sp, #64]	@ 0x40
1001a40a:	930e      	str	r3, [sp, #56]	@ 0x38
1001a40c:	f7fe bc70 	b.w	10018cf0 <_svfprintf_r+0x3bc>
1001a410:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001a414:	2200      	movs	r2, #0
1001a416:	2300      	movs	r3, #0
1001a418:	f005 fe14 	bl	10020044 <__aeabi_dcmpeq>
1001a41c:	2800      	cmp	r0, #0
1001a41e:	f47f ad06 	bne.w	10019e2e <_svfprintf_r+0x14fa>
1001a422:	f1c6 0601 	rsb	r6, r6, #1
1001a426:	9629      	str	r6, [sp, #164]	@ 0xa4
1001a428:	e502      	b.n	10019e30 <_svfprintf_r+0x14fc>
1001a42a:	f8dd 9018 	ldr.w	r9, [sp, #24]
1001a42e:	f8dd b020 	ldr.w	fp, [sp, #32]
1001a432:	f7ff bbc1 	b.w	10019bb8 <_svfprintf_r+0x1284>
1001a436:	4e0e      	ldr	r6, [pc, #56]	@ (1001a470 <_svfprintf_r+0x1b3c>)
1001a438:	f7ff bae3 	b.w	10019a02 <_svfprintf_r+0x10ce>
1001a43c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
1001a43e:	7863      	ldrb	r3, [r4, #1]
1001a440:	460c      	mov	r4, r1
1001a442:	f852 1b04 	ldr.w	r1, [r2], #4
1001a446:	920d      	str	r2, [sp, #52]	@ 0x34
1001a448:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
1001a44c:	9108      	str	r1, [sp, #32]
1001a44e:	f7fe bac8 	b.w	100189e2 <_svfprintf_r+0xae>
1001a452:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001a456:	b99b      	cbnz	r3, 1001a480 <_svfprintf_r+0x1b4c>
1001a458:	f04f 0b01 	mov.w	fp, #1
1001a45c:	2366      	movs	r3, #102	@ 0x66
1001a45e:	f8cd b018 	str.w	fp, [sp, #24]
1001a462:	930e      	str	r3, [sp, #56]	@ 0x38
1001a464:	e651      	b.n	1001a10a <_svfprintf_r+0x17d6>
1001a466:	bf00      	nop
1001a468:	100278b8 	.word	0x100278b8
1001a46c:	100278fc 	.word	0x100278fc
1001a470:	100278ec 	.word	0x100278ec
1001a474:	100278cc 	.word	0x100278cc
1001a478:	100278b0 	.word	0x100278b0
1001a47c:	100278b4 	.word	0x100278b4
1001a480:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001a482:	f8dd b020 	ldr.w	fp, [sp, #32]
1001a486:	1c5f      	adds	r7, r3, #1
1001a488:	44bb      	add	fp, r7
1001a48a:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001a48e:	9306      	str	r3, [sp, #24]
1001a490:	2366      	movs	r3, #102	@ 0x66
1001a492:	930e      	str	r3, [sp, #56]	@ 0x38
1001a494:	e639      	b.n	1001a10a <_svfprintf_r+0x17d6>
1001a496:	2170      	movs	r1, #112	@ 0x70
1001a498:	e4e9      	b.n	10019e6e <_svfprintf_r+0x153a>
1001a49a:	4a0b      	ldr	r2, [pc, #44]	@ (1001a4c8 <_svfprintf_r+0x1b94>)
1001a49c:	9215      	str	r2, [sp, #84]	@ 0x54
1001a49e:	e448      	b.n	10019d32 <_svfprintf_r+0x13fe>
1001a4a0:	2302      	movs	r3, #2
1001a4a2:	931c      	str	r3, [sp, #112]	@ 0x70
1001a4a4:	e51a      	b.n	10019edc <_svfprintf_r+0x15a8>
1001a4a6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001a4a8:	f8dd b01c 	ldr.w	fp, [sp, #28]
1001a4ac:	8993      	ldrh	r3, [r2, #12]
1001a4ae:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001a4b2:	8193      	strh	r3, [r2, #12]
1001a4b4:	f7ff b8db 	b.w	1001966e <_svfprintf_r+0xd3a>
1001a4b8:	230c      	movs	r3, #12
1001a4ba:	f8cb 3000 	str.w	r3, [fp]
1001a4be:	e702      	b.n	1001a2c6 <_svfprintf_r+0x1992>
1001a4c0:	2300      	movs	r3, #0
1001a4c2:	9314      	str	r3, [sp, #80]	@ 0x50
1001a4c4:	9310      	str	r3, [sp, #64]	@ 0x40
1001a4c6:	e782      	b.n	1001a3ce <_svfprintf_r+0x1a9a>
1001a4c8:	100278ec 	.word	0x100278ec

1001a4cc <_vfprintf_r>:
1001a4cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001a4d0:	b0df      	sub	sp, #380	@ 0x17c
1001a4d2:	461c      	mov	r4, r3
1001a4d4:	9107      	str	r1, [sp, #28]
1001a4d6:	4691      	mov	r9, r2
1001a4d8:	4683      	mov	fp, r0
1001a4da:	f7fa fddd 	bl	10015098 <_localeconv_r>
1001a4de:	6803      	ldr	r3, [r0, #0]
1001a4e0:	9319      	str	r3, [sp, #100]	@ 0x64
1001a4e2:	4618      	mov	r0, r3
1001a4e4:	f7fb fb2c 	bl	10015b40 <strlen>
1001a4e8:	2208      	movs	r2, #8
1001a4ea:	9018      	str	r0, [sp, #96]	@ 0x60
1001a4ec:	2100      	movs	r1, #0
1001a4ee:	a82e      	add	r0, sp, #184	@ 0xb8
1001a4f0:	940d      	str	r4, [sp, #52]	@ 0x34
1001a4f2:	f7fa fd35 	bl	10014f60 <memset>
1001a4f6:	f1bb 0f00 	cmp.w	fp, #0
1001a4fa:	d004      	beq.n	1001a506 <_vfprintf_r+0x3a>
1001a4fc:	f8db 3034 	ldr.w	r3, [fp, #52]	@ 0x34
1001a500:	2b00      	cmp	r3, #0
1001a502:	f001 807f 	beq.w	1001b604 <_vfprintf_r+0x1138>
1001a506:	9b07      	ldr	r3, [sp, #28]
1001a508:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
1001a50a:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
1001a50e:	07d5      	lsls	r5, r2, #31
1001a510:	d402      	bmi.n	1001a518 <_vfprintf_r+0x4c>
1001a512:	0598      	lsls	r0, r3, #22
1001a514:	f140 869f 	bpl.w	1001b256 <_vfprintf_r+0xd8a>
1001a518:	0499      	lsls	r1, r3, #18
1001a51a:	d407      	bmi.n	1001a52c <_vfprintf_r+0x60>
1001a51c:	9907      	ldr	r1, [sp, #28]
1001a51e:	6e4a      	ldr	r2, [r1, #100]	@ 0x64
1001a520:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
1001a524:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
1001a528:	818b      	strh	r3, [r1, #12]
1001a52a:	664a      	str	r2, [r1, #100]	@ 0x64
1001a52c:	071a      	lsls	r2, r3, #28
1001a52e:	f140 80cc 	bpl.w	1001a6ca <_vfprintf_r+0x1fe>
1001a532:	9a07      	ldr	r2, [sp, #28]
1001a534:	6912      	ldr	r2, [r2, #16]
1001a536:	2a00      	cmp	r2, #0
1001a538:	f000 80c7 	beq.w	1001a6ca <_vfprintf_r+0x1fe>
1001a53c:	f003 021a 	and.w	r2, r3, #26
1001a540:	2a0a      	cmp	r2, #10
1001a542:	f000 80d1 	beq.w	1001a6e8 <_vfprintf_r+0x21c>
1001a546:	2300      	movs	r3, #0
1001a548:	e9cd 3333 	strd	r3, r3, [sp, #204]	@ 0xcc
1001a54c:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
1001a550:	e9cd 331d 	strd	r3, r3, [sp, #116]	@ 0x74
1001a554:	9313      	str	r3, [sp, #76]	@ 0x4c
1001a556:	931a      	str	r3, [sp, #104]	@ 0x68
1001a558:	930a      	str	r3, [sp, #40]	@ 0x28
1001a55a:	2400      	movs	r4, #0
1001a55c:	2300      	movs	r3, #0
1001a55e:	e9cd 3416 	strd	r3, r4, [sp, #88]	@ 0x58
1001a562:	aa35      	add	r2, sp, #212	@ 0xd4
1001a564:	9232      	str	r2, [sp, #200]	@ 0xc8
1001a566:	4690      	mov	r8, r2
1001a568:	f8cd b020 	str.w	fp, [sp, #32]
1001a56c:	464d      	mov	r5, r9
1001a56e:	9f08      	ldr	r7, [sp, #32]
1001a570:	462e      	mov	r6, r5
1001a572:	4b8d      	ldr	r3, [pc, #564]	@ (1001a7a8 <_vfprintf_r+0x2dc>)
1001a574:	f8d3 40e4 	ldr.w	r4, [r3, #228]	@ 0xe4
1001a578:	f7fa fd88 	bl	1001508c <__locale_mb_cur_max>
1001a57c:	4603      	mov	r3, r0
1001a57e:	a82e      	add	r0, sp, #184	@ 0xb8
1001a580:	9000      	str	r0, [sp, #0]
1001a582:	4632      	mov	r2, r6
1001a584:	a92a      	add	r1, sp, #168	@ 0xa8
1001a586:	4638      	mov	r0, r7
1001a588:	47a0      	blx	r4
1001a58a:	2800      	cmp	r0, #0
1001a58c:	f000 80cb 	beq.w	1001a726 <_vfprintf_r+0x25a>
1001a590:	f2c0 80c1 	blt.w	1001a716 <_vfprintf_r+0x24a>
1001a594:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
1001a596:	2a25      	cmp	r2, #37	@ 0x25
1001a598:	4603      	mov	r3, r0
1001a59a:	d001      	beq.n	1001a5a0 <_vfprintf_r+0xd4>
1001a59c:	441e      	add	r6, r3
1001a59e:	e7e8      	b.n	1001a572 <_vfprintf_r+0xa6>
1001a5a0:	1b77      	subs	r7, r6, r5
1001a5a2:	4604      	mov	r4, r0
1001a5a4:	f040 80c2 	bne.w	1001a72c <_vfprintf_r+0x260>
1001a5a8:	2300      	movs	r3, #0
1001a5aa:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
1001a5ae:	4699      	mov	r9, r3
1001a5b0:	930b      	str	r3, [sp, #44]	@ 0x2c
1001a5b2:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1001a5b6:	7873      	ldrb	r3, [r6, #1]
1001a5b8:	9209      	str	r2, [sp, #36]	@ 0x24
1001a5ba:	1c74      	adds	r4, r6, #1
1001a5bc:	3401      	adds	r4, #1
1001a5be:	f1a3 0220 	sub.w	r2, r3, #32
1001a5c2:	2a5a      	cmp	r2, #90	@ 0x5a
1001a5c4:	f200 80f2 	bhi.w	1001a7ac <_vfprintf_r+0x2e0>
1001a5c8:	e8df f012 	tbh	[pc, r2, lsl #1]
1001a5cc:	00f002c7 	.word	0x00f002c7
1001a5d0:	02c300f0 	.word	0x02c300f0
1001a5d4:	00f000f0 	.word	0x00f000f0
1001a5d8:	006a00f0 	.word	0x006a00f0
1001a5dc:	00f000f0 	.word	0x00f000f0
1001a5e0:	02a0027d 	.word	0x02a0027d
1001a5e4:	028800f0 	.word	0x028800f0
1001a5e8:	00f002a9 	.word	0x00f002a9
1001a5ec:	005b02a5 	.word	0x005b02a5
1001a5f0:	005b005b 	.word	0x005b005b
1001a5f4:	005b005b 	.word	0x005b005b
1001a5f8:	005b005b 	.word	0x005b005b
1001a5fc:	005b005b 	.word	0x005b005b
1001a600:	00f000f0 	.word	0x00f000f0
1001a604:	00f000f0 	.word	0x00f000f0
1001a608:	00f000f0 	.word	0x00f000f0
1001a60c:	017100f0 	.word	0x017100f0
1001a610:	020800f0 	.word	0x020800f0
1001a614:	01710322 	.word	0x01710322
1001a618:	01710171 	.word	0x01710171
1001a61c:	00f000f0 	.word	0x00f000f0
1001a620:	00f000f0 	.word	0x00f000f0
1001a624:	00f0031e 	.word	0x00f0031e
1001a628:	02da00f0 	.word	0x02da00f0
1001a62c:	00f000f0 	.word	0x00f000f0
1001a630:	022600f0 	.word	0x022600f0
1001a634:	030b00f0 	.word	0x030b00f0
1001a638:	00f000f0 	.word	0x00f000f0
1001a63c:	00f00717 	.word	0x00f00717
1001a640:	00f000f0 	.word	0x00f000f0
1001a644:	00f000f0 	.word	0x00f000f0
1001a648:	00f000f0 	.word	0x00f000f0
1001a64c:	017100f0 	.word	0x017100f0
1001a650:	020800f0 	.word	0x020800f0
1001a654:	01710258 	.word	0x01710258
1001a658:	01710171 	.word	0x01710171
1001a65c:	02580296 	.word	0x02580296
1001a660:	00f00204 	.word	0x00f00204
1001a664:	00f0028c 	.word	0x00f0028c
1001a668:	073f034d 	.word	0x073f034d
1001a66c:	0204033b 	.word	0x0204033b
1001a670:	022600f0 	.word	0x022600f0
1001a674:	073a007d 	.word	0x073a007d
1001a678:	00f000f0 	.word	0x00f000f0
1001a67c:	00f00743 	.word	0x00f00743
1001a680:	007d      	.short	0x007d
1001a682:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
1001a686:	2100      	movs	r1, #0
1001a688:	f814 3b01 	ldrb.w	r3, [r4], #1
1001a68c:	eb01 0181 	add.w	r1, r1, r1, lsl #2
1001a690:	eb02 0141 	add.w	r1, r2, r1, lsl #1
1001a694:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
1001a698:	2a09      	cmp	r2, #9
1001a69a:	d9f5      	bls.n	1001a688 <_vfprintf_r+0x1bc>
1001a69c:	910b      	str	r1, [sp, #44]	@ 0x2c
1001a69e:	e78e      	b.n	1001a5be <_vfprintf_r+0xf2>
1001a6a0:	9f08      	ldr	r7, [sp, #32]
1001a6a2:	4638      	mov	r0, r7
1001a6a4:	f7fa fcf8 	bl	10015098 <_localeconv_r>
1001a6a8:	6843      	ldr	r3, [r0, #4]
1001a6aa:	931d      	str	r3, [sp, #116]	@ 0x74
1001a6ac:	4618      	mov	r0, r3
1001a6ae:	f7fb fa47 	bl	10015b40 <strlen>
1001a6b2:	901e      	str	r0, [sp, #120]	@ 0x78
1001a6b4:	4606      	mov	r6, r0
1001a6b6:	4638      	mov	r0, r7
1001a6b8:	f7fa fcee 	bl	10015098 <_localeconv_r>
1001a6bc:	6883      	ldr	r3, [r0, #8]
1001a6be:	931b      	str	r3, [sp, #108]	@ 0x6c
1001a6c0:	2e00      	cmp	r6, #0
1001a6c2:	f040 8621 	bne.w	1001b308 <_vfprintf_r+0xe3c>
1001a6c6:	7823      	ldrb	r3, [r4, #0]
1001a6c8:	e778      	b.n	1001a5bc <_vfprintf_r+0xf0>
1001a6ca:	9d07      	ldr	r5, [sp, #28]
1001a6cc:	4658      	mov	r0, fp
1001a6ce:	4629      	mov	r1, r5
1001a6d0:	f002 ff38 	bl	1001d544 <__swsetup_r>
1001a6d4:	2800      	cmp	r0, #0
1001a6d6:	f041 83a6 	bne.w	1001be26 <_vfprintf_r+0x195a>
1001a6da:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
1001a6de:	f003 021a 	and.w	r2, r3, #26
1001a6e2:	2a0a      	cmp	r2, #10
1001a6e4:	f47f af2f 	bne.w	1001a546 <_vfprintf_r+0x7a>
1001a6e8:	9907      	ldr	r1, [sp, #28]
1001a6ea:	f9b1 200e 	ldrsh.w	r2, [r1, #14]
1001a6ee:	2a00      	cmp	r2, #0
1001a6f0:	f6ff af29 	blt.w	1001a546 <_vfprintf_r+0x7a>
1001a6f4:	6e4a      	ldr	r2, [r1, #100]	@ 0x64
1001a6f6:	07d5      	lsls	r5, r2, #31
1001a6f8:	d402      	bmi.n	1001a700 <_vfprintf_r+0x234>
1001a6fa:	0598      	lsls	r0, r3, #22
1001a6fc:	f141 81bf 	bpl.w	1001ba7e <_vfprintf_r+0x15b2>
1001a700:	9907      	ldr	r1, [sp, #28]
1001a702:	4623      	mov	r3, r4
1001a704:	464a      	mov	r2, r9
1001a706:	4658      	mov	r0, fp
1001a708:	f001 fd04 	bl	1001c114 <__sbprintf>
1001a70c:	900a      	str	r0, [sp, #40]	@ 0x28
1001a70e:	980a      	ldr	r0, [sp, #40]	@ 0x28
1001a710:	b05f      	add	sp, #380	@ 0x17c
1001a712:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001a716:	2208      	movs	r2, #8
1001a718:	2100      	movs	r1, #0
1001a71a:	a82e      	add	r0, sp, #184	@ 0xb8
1001a71c:	f7fa fc20 	bl	10014f60 <memset>
1001a720:	2301      	movs	r3, #1
1001a722:	441e      	add	r6, r3
1001a724:	e725      	b.n	1001a572 <_vfprintf_r+0xa6>
1001a726:	1b77      	subs	r7, r6, r5
1001a728:	4604      	mov	r4, r0
1001a72a:	d011      	beq.n	1001a750 <_vfprintf_r+0x284>
1001a72c:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
1001a72e:	443b      	add	r3, r7
1001a730:	9334      	str	r3, [sp, #208]	@ 0xd0
1001a732:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a734:	3301      	adds	r3, #1
1001a736:	2b07      	cmp	r3, #7
1001a738:	e9c8 5700 	strd	r5, r7, [r8]
1001a73c:	9333      	str	r3, [sp, #204]	@ 0xcc
1001a73e:	dc13      	bgt.n	1001a768 <_vfprintf_r+0x29c>
1001a740:	f108 0808 	add.w	r8, r8, #8
1001a744:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001a746:	443b      	add	r3, r7
1001a748:	930a      	str	r3, [sp, #40]	@ 0x28
1001a74a:	2c00      	cmp	r4, #0
1001a74c:	f47f af2c 	bne.w	1001a5a8 <_vfprintf_r+0xdc>
1001a750:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
1001a752:	f8dd b020 	ldr.w	fp, [sp, #32]
1001a756:	2b00      	cmp	r3, #0
1001a758:	f041 80d6 	bne.w	1001b908 <_vfprintf_r+0x143c>
1001a75c:	9b07      	ldr	r3, [sp, #28]
1001a75e:	2200      	movs	r2, #0
1001a760:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
1001a764:	9233      	str	r2, [sp, #204]	@ 0xcc
1001a766:	e012      	b.n	1001a78e <_vfprintf_r+0x2c2>
1001a768:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001a76c:	aa32      	add	r2, sp, #200	@ 0xc8
1001a76e:	f001 fd4d 	bl	1001c20c <__sprint_r>
1001a772:	b948      	cbnz	r0, 1001a788 <_vfprintf_r+0x2bc>
1001a774:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a778:	e7e4      	b.n	1001a744 <_vfprintf_r+0x278>
1001a77a:	46bb      	mov	fp, r7
1001a77c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001a77e:	b11b      	cbz	r3, 1001a788 <_vfprintf_r+0x2bc>
1001a780:	990c      	ldr	r1, [sp, #48]	@ 0x30
1001a782:	4658      	mov	r0, fp
1001a784:	f7fc fc80 	bl	10017088 <_free_r>
1001a788:	9b07      	ldr	r3, [sp, #28]
1001a78a:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
1001a78e:	9a07      	ldr	r2, [sp, #28]
1001a790:	6e52      	ldr	r2, [r2, #100]	@ 0x64
1001a792:	07d4      	lsls	r4, r2, #31
1001a794:	f140 8114 	bpl.w	1001a9c0 <_vfprintf_r+0x4f4>
1001a798:	0659      	lsls	r1, r3, #25
1001a79a:	f101 8350 	bmi.w	1001be3e <_vfprintf_r+0x1972>
1001a79e:	980a      	ldr	r0, [sp, #40]	@ 0x28
1001a7a0:	b05f      	add	sp, #380	@ 0x17c
1001a7a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001a7a6:	bf00      	nop
1001a7a8:	20000424 	.word	0x20000424
1001a7ac:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001a7b0:	2b00      	cmp	r3, #0
1001a7b2:	d0cd      	beq.n	1001a750 <_vfprintf_r+0x284>
1001a7b4:	2200      	movs	r2, #0
1001a7b6:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
1001a7ba:	2301      	movs	r3, #1
1001a7bc:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001a7c0:	9306      	str	r3, [sp, #24]
1001a7c2:	920c      	str	r2, [sp, #48]	@ 0x30
1001a7c4:	469b      	mov	fp, r3
1001a7c6:	9209      	str	r2, [sp, #36]	@ 0x24
1001a7c8:	9214      	str	r2, [sp, #80]	@ 0x50
1001a7ca:	9210      	str	r2, [sp, #64]	@ 0x40
1001a7cc:	9212      	str	r2, [sp, #72]	@ 0x48
1001a7ce:	ad45      	add	r5, sp, #276	@ 0x114
1001a7d0:	f019 0302 	ands.w	r3, r9, #2
1001a7d4:	d002      	beq.n	1001a7dc <_vfprintf_r+0x310>
1001a7d6:	9906      	ldr	r1, [sp, #24]
1001a7d8:	3102      	adds	r1, #2
1001a7da:	9106      	str	r1, [sp, #24]
1001a7dc:	f019 0784 	ands.w	r7, r9, #132	@ 0x84
1001a7e0:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001a7e2:	d105      	bne.n	1001a7f0 <_vfprintf_r+0x324>
1001a7e4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
1001a7e6:	9806      	ldr	r0, [sp, #24]
1001a7e8:	1a0e      	subs	r6, r1, r0
1001a7ea:	2e00      	cmp	r6, #0
1001a7ec:	f300 80a7 	bgt.w	1001a93e <_vfprintf_r+0x472>
1001a7f0:	b182      	cbz	r2, 1001a814 <_vfprintf_r+0x348>
1001a7f2:	2201      	movs	r2, #1
1001a7f4:	f8c8 2004 	str.w	r2, [r8, #4]
1001a7f8:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
1001a7fa:	3201      	adds	r2, #1
1001a7fc:	3401      	adds	r4, #1
1001a7fe:	f10d 019f 	add.w	r1, sp, #159	@ 0x9f
1001a802:	2a07      	cmp	r2, #7
1001a804:	9434      	str	r4, [sp, #208]	@ 0xd0
1001a806:	9233      	str	r2, [sp, #204]	@ 0xcc
1001a808:	f8c8 1000 	str.w	r1, [r8]
1001a80c:	f300 83e1 	bgt.w	1001afd2 <_vfprintf_r+0xb06>
1001a810:	f108 0808 	add.w	r8, r8, #8
1001a814:	b183      	cbz	r3, 1001a838 <_vfprintf_r+0x36c>
1001a816:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a818:	aa28      	add	r2, sp, #160	@ 0xa0
1001a81a:	3301      	adds	r3, #1
1001a81c:	3402      	adds	r4, #2
1001a81e:	f8c8 2000 	str.w	r2, [r8]
1001a822:	2b07      	cmp	r3, #7
1001a824:	f04f 0202 	mov.w	r2, #2
1001a828:	9434      	str	r4, [sp, #208]	@ 0xd0
1001a82a:	9333      	str	r3, [sp, #204]	@ 0xcc
1001a82c:	f8c8 2004 	str.w	r2, [r8, #4]
1001a830:	f300 83dd 	bgt.w	1001afee <_vfprintf_r+0xb22>
1001a834:	f108 0808 	add.w	r8, r8, #8
1001a838:	2f80      	cmp	r7, #128	@ 0x80
1001a83a:	f000 82be 	beq.w	1001adba <_vfprintf_r+0x8ee>
1001a83e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001a840:	eba3 060b 	sub.w	r6, r3, fp
1001a844:	2e00      	cmp	r6, #0
1001a846:	f300 82fd 	bgt.w	1001ae44 <_vfprintf_r+0x978>
1001a84a:	f419 7f80 	tst.w	r9, #256	@ 0x100
1001a84e:	f040 8219 	bne.w	1001ac84 <_vfprintf_r+0x7b8>
1001a852:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a854:	f8c8 5000 	str.w	r5, [r8]
1001a858:	3301      	adds	r3, #1
1001a85a:	445c      	add	r4, fp
1001a85c:	2b07      	cmp	r3, #7
1001a85e:	f8c8 b004 	str.w	fp, [r8, #4]
1001a862:	9434      	str	r4, [sp, #208]	@ 0xd0
1001a864:	9333      	str	r3, [sp, #204]	@ 0xcc
1001a866:	f300 834d 	bgt.w	1001af04 <_vfprintf_r+0xa38>
1001a86a:	f108 0808 	add.w	r8, r8, #8
1001a86e:	f019 0f04 	tst.w	r9, #4
1001a872:	d005      	beq.n	1001a880 <_vfprintf_r+0x3b4>
1001a874:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001a876:	9a06      	ldr	r2, [sp, #24]
1001a878:	1a9d      	subs	r5, r3, r2
1001a87a:	2d00      	cmp	r5, #0
1001a87c:	f300 83c3 	bgt.w	1001b006 <_vfprintf_r+0xb3a>
1001a880:	e9dd 320a 	ldrd	r3, r2, [sp, #40]	@ 0x28
1001a884:	9906      	ldr	r1, [sp, #24]
1001a886:	428a      	cmp	r2, r1
1001a888:	bfac      	ite	ge
1001a88a:	189b      	addge	r3, r3, r2
1001a88c:	185b      	addlt	r3, r3, r1
1001a88e:	930a      	str	r3, [sp, #40]	@ 0x28
1001a890:	2c00      	cmp	r4, #0
1001a892:	f040 830f 	bne.w	1001aeb4 <_vfprintf_r+0x9e8>
1001a896:	2300      	movs	r3, #0
1001a898:	9333      	str	r3, [sp, #204]	@ 0xcc
1001a89a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001a89c:	b11b      	cbz	r3, 1001a8a6 <_vfprintf_r+0x3da>
1001a89e:	990c      	ldr	r1, [sp, #48]	@ 0x30
1001a8a0:	9808      	ldr	r0, [sp, #32]
1001a8a2:	f7fc fbf1 	bl	10017088 <_free_r>
1001a8a6:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a8aa:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
1001a8ac:	e65f      	b.n	1001a56e <_vfprintf_r+0xa2>
1001a8ae:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001a8b2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001a8b4:	3307      	adds	r3, #7
1001a8b6:	f023 0307 	bic.w	r3, r3, #7
1001a8ba:	e8f3 6702 	ldrd	r6, r7, [r3], #8
1001a8be:	930d      	str	r3, [sp, #52]	@ 0x34
1001a8c0:	f027 4300 	bic.w	r3, r7, #2147483648	@ 0x80000000
1001a8c4:	9323      	str	r3, [sp, #140]	@ 0x8c
1001a8c6:	9622      	str	r6, [sp, #136]	@ 0x88
1001a8c8:	e9dd ab22 	ldrd	sl, fp, [sp, #136]	@ 0x88
1001a8cc:	4ba8      	ldr	r3, [pc, #672]	@ (1001ab70 <_vfprintf_r+0x6a4>)
1001a8ce:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1001a8d2:	4650      	mov	r0, sl
1001a8d4:	4659      	mov	r1, fp
1001a8d6:	e9cd 6716 	strd	r6, r7, [sp, #88]	@ 0x58
1001a8da:	f005 fbe5 	bl	100200a8 <__aeabi_dcmpun>
1001a8de:	2800      	cmp	r0, #0
1001a8e0:	f040 8530 	bne.w	1001b344 <_vfprintf_r+0xe78>
1001a8e4:	4ba2      	ldr	r3, [pc, #648]	@ (1001ab70 <_vfprintf_r+0x6a4>)
1001a8e6:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1001a8ea:	4650      	mov	r0, sl
1001a8ec:	4659      	mov	r1, fp
1001a8ee:	f005 fbbd 	bl	1002006c <__aeabi_dcmple>
1001a8f2:	2800      	cmp	r0, #0
1001a8f4:	f040 8526 	bne.w	1001b344 <_vfprintf_r+0xe78>
1001a8f8:	2200      	movs	r2, #0
1001a8fa:	2300      	movs	r3, #0
1001a8fc:	4630      	mov	r0, r6
1001a8fe:	4639      	mov	r1, r7
1001a900:	f005 fbaa 	bl	10020058 <__aeabi_dcmplt>
1001a904:	2800      	cmp	r0, #0
1001a906:	f041 810f 	bne.w	1001bb28 <_vfprintf_r+0x165c>
1001a90a:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001a90e:	4d99      	ldr	r5, [pc, #612]	@ (1001ab74 <_vfprintf_r+0x6a8>)
1001a910:	4b99      	ldr	r3, [pc, #612]	@ (1001ab78 <_vfprintf_r+0x6ac>)
1001a912:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
1001a916:	990e      	ldr	r1, [sp, #56]	@ 0x38
1001a918:	2947      	cmp	r1, #71	@ 0x47
1001a91a:	bfc8      	it	gt
1001a91c:	461d      	movgt	r5, r3
1001a91e:	2300      	movs	r3, #0
1001a920:	2103      	movs	r1, #3
1001a922:	930c      	str	r3, [sp, #48]	@ 0x30
1001a924:	9106      	str	r1, [sp, #24]
1001a926:	468b      	mov	fp, r1
1001a928:	9309      	str	r3, [sp, #36]	@ 0x24
1001a92a:	9314      	str	r3, [sp, #80]	@ 0x50
1001a92c:	9310      	str	r3, [sp, #64]	@ 0x40
1001a92e:	9312      	str	r3, [sp, #72]	@ 0x48
1001a930:	2a00      	cmp	r2, #0
1001a932:	f43f af4d 	beq.w	1001a7d0 <_vfprintf_r+0x304>
1001a936:	9b06      	ldr	r3, [sp, #24]
1001a938:	3301      	adds	r3, #1
1001a93a:	9306      	str	r3, [sp, #24]
1001a93c:	e748      	b.n	1001a7d0 <_vfprintf_r+0x304>
1001a93e:	2e10      	cmp	r6, #16
1001a940:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
1001a942:	f341 823d 	ble.w	1001bdc0 <_vfprintf_r+0x18f4>
1001a946:	488d      	ldr	r0, [pc, #564]	@ (1001ab7c <_vfprintf_r+0x6b0>)
1001a948:	9521      	str	r5, [sp, #132]	@ 0x84
1001a94a:	e9cd 371f 	strd	r3, r7, [sp, #124]	@ 0x7c
1001a94e:	4621      	mov	r1, r4
1001a950:	9d07      	ldr	r5, [sp, #28]
1001a952:	9c08      	ldr	r4, [sp, #32]
1001a954:	9015      	str	r0, [sp, #84]	@ 0x54
1001a956:	f04f 0a10 	mov.w	sl, #16
1001a95a:	4607      	mov	r7, r0
1001a95c:	e004      	b.n	1001a968 <_vfprintf_r+0x49c>
1001a95e:	3e10      	subs	r6, #16
1001a960:	2e10      	cmp	r6, #16
1001a962:	f108 0808 	add.w	r8, r8, #8
1001a966:	dd16      	ble.n	1001a996 <_vfprintf_r+0x4ca>
1001a968:	3201      	adds	r2, #1
1001a96a:	3110      	adds	r1, #16
1001a96c:	2a07      	cmp	r2, #7
1001a96e:	e9c8 7a00 	strd	r7, sl, [r8]
1001a972:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
1001a976:	ddf2      	ble.n	1001a95e <_vfprintf_r+0x492>
1001a978:	aa32      	add	r2, sp, #200	@ 0xc8
1001a97a:	4629      	mov	r1, r5
1001a97c:	4620      	mov	r0, r4
1001a97e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a982:	f001 fc43 	bl	1001c20c <__sprint_r>
1001a986:	2800      	cmp	r0, #0
1001a988:	f040 8636 	bne.w	1001b5f8 <_vfprintf_r+0x112c>
1001a98c:	3e10      	subs	r6, #16
1001a98e:	2e10      	cmp	r6, #16
1001a990:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
1001a994:	dce8      	bgt.n	1001a968 <_vfprintf_r+0x49c>
1001a996:	e9dd 371f 	ldrd	r3, r7, [sp, #124]	@ 0x7c
1001a99a:	9d21      	ldr	r5, [sp, #132]	@ 0x84
1001a99c:	460c      	mov	r4, r1
1001a99e:	3201      	adds	r2, #1
1001a9a0:	9915      	ldr	r1, [sp, #84]	@ 0x54
1001a9a2:	f8c8 1000 	str.w	r1, [r8]
1001a9a6:	4434      	add	r4, r6
1001a9a8:	2a07      	cmp	r2, #7
1001a9aa:	e9cd 2433 	strd	r2, r4, [sp, #204]	@ 0xcc
1001a9ae:	f8c8 6004 	str.w	r6, [r8, #4]
1001a9b2:	f300 8610 	bgt.w	1001b5d6 <_vfprintf_r+0x110a>
1001a9b6:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001a9ba:	f108 0808 	add.w	r8, r8, #8
1001a9be:	e717      	b.n	1001a7f0 <_vfprintf_r+0x324>
1001a9c0:	0598      	lsls	r0, r3, #22
1001a9c2:	f53f aee9 	bmi.w	1001a798 <_vfprintf_r+0x2cc>
1001a9c6:	9c07      	ldr	r4, [sp, #28]
1001a9c8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001a9ca:	f7fa fb5d 	bl	10015088 <__retarget_lock_release_recursive>
1001a9ce:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001a9d2:	e6e1      	b.n	1001a798 <_vfprintf_r+0x2cc>
1001a9d4:	7823      	ldrb	r3, [r4, #0]
1001a9d6:	f049 0920 	orr.w	r9, r9, #32
1001a9da:	e5ef      	b.n	1001a5bc <_vfprintf_r+0xf0>
1001a9dc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
1001a9de:	2b43      	cmp	r3, #67	@ 0x43
1001a9e0:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001a9e4:	f102 0404 	add.w	r4, r2, #4
1001a9e8:	f000 8562 	beq.w	1001b4b0 <_vfprintf_r+0xfe4>
1001a9ec:	f019 0f10 	tst.w	r9, #16
1001a9f0:	f040 855e 	bne.w	1001b4b0 <_vfprintf_r+0xfe4>
1001a9f4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001a9f6:	681b      	ldr	r3, [r3, #0]
1001a9f8:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
1001a9fc:	2301      	movs	r3, #1
1001a9fe:	9306      	str	r3, [sp, #24]
1001aa00:	469b      	mov	fp, r3
1001aa02:	ad45      	add	r5, sp, #276	@ 0x114
1001aa04:	2200      	movs	r2, #0
1001aa06:	940d      	str	r4, [sp, #52]	@ 0x34
1001aa08:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001aa0c:	920c      	str	r2, [sp, #48]	@ 0x30
1001aa0e:	9209      	str	r2, [sp, #36]	@ 0x24
1001aa10:	9214      	str	r2, [sp, #80]	@ 0x50
1001aa12:	9210      	str	r2, [sp, #64]	@ 0x40
1001aa14:	9212      	str	r2, [sp, #72]	@ 0x48
1001aa16:	e6db      	b.n	1001a7d0 <_vfprintf_r+0x304>
1001aa18:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
1001aa1a:	f856 5b04 	ldr.w	r5, [r6], #4
1001aa1e:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001aa22:	2300      	movs	r3, #0
1001aa24:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
1001aa28:	2d00      	cmp	r5, #0
1001aa2a:	f000 8530 	beq.w	1001b48e <_vfprintf_r+0xfc2>
1001aa2e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001aa30:	2b53      	cmp	r3, #83	@ 0x53
1001aa32:	f000 8601 	beq.w	1001b638 <_vfprintf_r+0x116c>
1001aa36:	f019 0310 	ands.w	r3, r9, #16
1001aa3a:	9312      	str	r3, [sp, #72]	@ 0x48
1001aa3c:	f040 85fc 	bne.w	1001b638 <_vfprintf_r+0x116c>
1001aa40:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001aa42:	1c5a      	adds	r2, r3, #1
1001aa44:	f000 876a 	beq.w	1001b91c <_vfprintf_r+0x1450>
1001aa48:	9912      	ldr	r1, [sp, #72]	@ 0x48
1001aa4a:	461a      	mov	r2, r3
1001aa4c:	4628      	mov	r0, r5
1001aa4e:	f7fa ff87 	bl	10015960 <memchr>
1001aa52:	900c      	str	r0, [sp, #48]	@ 0x30
1001aa54:	2800      	cmp	r0, #0
1001aa56:	f001 82c5 	beq.w	1001bfe4 <_vfprintf_r+0x1b18>
1001aa5a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001aa5c:	960d      	str	r6, [sp, #52]	@ 0x34
1001aa5e:	eba3 0b05 	sub.w	fp, r3, r5
1001aa62:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001aa64:	9309      	str	r3, [sp, #36]	@ 0x24
1001aa66:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
1001aa6a:	9314      	str	r3, [sp, #80]	@ 0x50
1001aa6c:	9310      	str	r3, [sp, #64]	@ 0x40
1001aa6e:	930c      	str	r3, [sp, #48]	@ 0x30
1001aa70:	2373      	movs	r3, #115	@ 0x73
1001aa72:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001aa76:	9106      	str	r1, [sp, #24]
1001aa78:	930e      	str	r3, [sp, #56]	@ 0x38
1001aa7a:	e759      	b.n	1001a930 <_vfprintf_r+0x464>
1001aa7c:	f019 0f20 	tst.w	r9, #32
1001aa80:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001aa84:	f000 80cc 	beq.w	1001ac20 <_vfprintf_r+0x754>
1001aa88:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001aa8a:	3307      	adds	r3, #7
1001aa8c:	f023 0307 	bic.w	r3, r3, #7
1001aa90:	461a      	mov	r2, r3
1001aa92:	6859      	ldr	r1, [r3, #4]
1001aa94:	f852 3b08 	ldr.w	r3, [r2], #8
1001aa98:	920d      	str	r2, [sp, #52]	@ 0x34
1001aa9a:	460a      	mov	r2, r1
1001aa9c:	2900      	cmp	r1, #0
1001aa9e:	f2c0 8425 	blt.w	1001b2ec <_vfprintf_r+0xe20>
1001aaa2:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001aaa4:	3101      	adds	r1, #1
1001aaa6:	f000 8285 	beq.w	1001afb4 <_vfprintf_r+0xae8>
1001aaaa:	ea53 0102 	orrs.w	r1, r3, r2
1001aaae:	f029 0480 	bic.w	r4, r9, #128	@ 0x80
1001aab2:	f040 8280 	bne.w	1001afb6 <_vfprintf_r+0xaea>
1001aab6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001aab8:	2a00      	cmp	r2, #0
1001aaba:	f040 8281 	bne.w	1001afc0 <_vfprintf_r+0xaf4>
1001aabe:	46a1      	mov	r9, r4
1001aac0:	4693      	mov	fp, r2
1001aac2:	ad5e      	add	r5, sp, #376	@ 0x178
1001aac4:	e150      	b.n	1001ad68 <_vfprintf_r+0x89c>
1001aac6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001aac8:	f853 2b04 	ldr.w	r2, [r3], #4
1001aacc:	920b      	str	r2, [sp, #44]	@ 0x2c
1001aace:	2a00      	cmp	r2, #0
1001aad0:	f280 83ce 	bge.w	1001b270 <_vfprintf_r+0xda4>
1001aad4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
1001aad6:	930d      	str	r3, [sp, #52]	@ 0x34
1001aad8:	4252      	negs	r2, r2
1001aada:	920b      	str	r2, [sp, #44]	@ 0x2c
1001aadc:	7823      	ldrb	r3, [r4, #0]
1001aade:	f049 0904 	orr.w	r9, r9, #4
1001aae2:	e56b      	b.n	1001a5bc <_vfprintf_r+0xf0>
1001aae4:	7823      	ldrb	r3, [r4, #0]
1001aae6:	2b6c      	cmp	r3, #108	@ 0x6c
1001aae8:	bf03      	ittte	eq
1001aaea:	7863      	ldrbeq	r3, [r4, #1]
1001aaec:	f049 0920 	orreq.w	r9, r9, #32
1001aaf0:	3401      	addeq	r4, #1
1001aaf2:	f049 0910 	orrne.w	r9, r9, #16
1001aaf6:	e561      	b.n	1001a5bc <_vfprintf_r+0xf0>
1001aaf8:	7823      	ldrb	r3, [r4, #0]
1001aafa:	2b68      	cmp	r3, #104	@ 0x68
1001aafc:	bf03      	ittte	eq
1001aafe:	7863      	ldrbeq	r3, [r4, #1]
1001ab00:	f449 7900 	orreq.w	r9, r9, #512	@ 0x200
1001ab04:	3401      	addeq	r4, #1
1001ab06:	f049 0940 	orrne.w	r9, r9, #64	@ 0x40
1001ab0a:	e557      	b.n	1001a5bc <_vfprintf_r+0xf0>
1001ab0c:	232b      	movs	r3, #43	@ 0x2b
1001ab0e:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
1001ab12:	7823      	ldrb	r3, [r4, #0]
1001ab14:	e552      	b.n	1001a5bc <_vfprintf_r+0xf0>
1001ab16:	7823      	ldrb	r3, [r4, #0]
1001ab18:	f049 0980 	orr.w	r9, r9, #128	@ 0x80
1001ab1c:	e54e      	b.n	1001a5bc <_vfprintf_r+0xf0>
1001ab1e:	4621      	mov	r1, r4
1001ab20:	f811 3b01 	ldrb.w	r3, [r1], #1
1001ab24:	2b2a      	cmp	r3, #42	@ 0x2a
1001ab26:	f001 82db 	beq.w	1001c0e0 <_vfprintf_r+0x1c14>
1001ab2a:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
1001ab2e:	2a09      	cmp	r2, #9
1001ab30:	460c      	mov	r4, r1
1001ab32:	bf98      	it	ls
1001ab34:	2100      	movls	r1, #0
1001ab36:	f201 8172 	bhi.w	1001be1e <_vfprintf_r+0x1952>
1001ab3a:	f814 3b01 	ldrb.w	r3, [r4], #1
1001ab3e:	eb01 0181 	add.w	r1, r1, r1, lsl #2
1001ab42:	eb02 0141 	add.w	r1, r2, r1, lsl #1
1001ab46:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
1001ab4a:	2a09      	cmp	r2, #9
1001ab4c:	d9f5      	bls.n	1001ab3a <_vfprintf_r+0x66e>
1001ab4e:	9109      	str	r1, [sp, #36]	@ 0x24
1001ab50:	e535      	b.n	1001a5be <_vfprintf_r+0xf2>
1001ab52:	7823      	ldrb	r3, [r4, #0]
1001ab54:	f049 0901 	orr.w	r9, r9, #1
1001ab58:	e530      	b.n	1001a5bc <_vfprintf_r+0xf0>
1001ab5a:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001ab5e:	7823      	ldrb	r3, [r4, #0]
1001ab60:	2a00      	cmp	r2, #0
1001ab62:	f47f ad2b 	bne.w	1001a5bc <_vfprintf_r+0xf0>
1001ab66:	2220      	movs	r2, #32
1001ab68:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001ab6c:	e526      	b.n	1001a5bc <_vfprintf_r+0xf0>
1001ab6e:	bf00      	nop
1001ab70:	7fefffff 	.word	0x7fefffff
1001ab74:	100278a8 	.word	0x100278a8
1001ab78:	100278ac 	.word	0x100278ac
1001ab7c:	1002791c 	.word	0x1002791c
1001ab80:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001ab84:	f049 0910 	orr.w	r9, r9, #16
1001ab88:	f019 0220 	ands.w	r2, r9, #32
1001ab8c:	f000 8354 	beq.w	1001b238 <_vfprintf_r+0xd6c>
1001ab90:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001ab92:	3307      	adds	r3, #7
1001ab94:	f023 0307 	bic.w	r3, r3, #7
1001ab98:	4619      	mov	r1, r3
1001ab9a:	685a      	ldr	r2, [r3, #4]
1001ab9c:	f851 3b08 	ldr.w	r3, [r1], #8
1001aba0:	910d      	str	r1, [sp, #52]	@ 0x34
1001aba2:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
1001aba6:	2100      	movs	r1, #0
1001aba8:	2000      	movs	r0, #0
1001abaa:	9d09      	ldr	r5, [sp, #36]	@ 0x24
1001abac:	f88d 009f 	strb.w	r0, [sp, #159]	@ 0x9f
1001abb0:	1c6f      	adds	r7, r5, #1
1001abb2:	f000 80c2 	beq.w	1001ad3a <_vfprintf_r+0x86e>
1001abb6:	ea53 0002 	orrs.w	r0, r3, r2
1001abba:	f024 0980 	bic.w	r9, r4, #128	@ 0x80
1001abbe:	f040 80bb 	bne.w	1001ad38 <_vfprintf_r+0x86c>
1001abc2:	2d00      	cmp	r5, #0
1001abc4:	f040 8523 	bne.w	1001b60e <_vfprintf_r+0x1142>
1001abc8:	2900      	cmp	r1, #0
1001abca:	f040 8496 	bne.w	1001b4fa <_vfprintf_r+0x102e>
1001abce:	f014 0b01 	ands.w	fp, r4, #1
1001abd2:	f000 8351 	beq.w	1001b278 <_vfprintf_r+0xdac>
1001abd6:	2330      	movs	r3, #48	@ 0x30
1001abd8:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
1001abdc:	f20d 1577 	addw	r5, sp, #375	@ 0x177
1001abe0:	e0c2      	b.n	1001ad68 <_vfprintf_r+0x89c>
1001abe2:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001abe6:	f049 0410 	orr.w	r4, r9, #16
1001abea:	f014 0220 	ands.w	r2, r4, #32
1001abee:	f000 8315 	beq.w	1001b21c <_vfprintf_r+0xd50>
1001abf2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001abf4:	3307      	adds	r3, #7
1001abf6:	f023 0307 	bic.w	r3, r3, #7
1001abfa:	4619      	mov	r1, r3
1001abfc:	685a      	ldr	r2, [r3, #4]
1001abfe:	f851 3b08 	ldr.w	r3, [r1], #8
1001ac02:	910d      	str	r1, [sp, #52]	@ 0x34
1001ac04:	2101      	movs	r1, #1
1001ac06:	e7cf      	b.n	1001aba8 <_vfprintf_r+0x6dc>
1001ac08:	7823      	ldrb	r3, [r4, #0]
1001ac0a:	f049 0908 	orr.w	r9, r9, #8
1001ac0e:	e4d5      	b.n	1001a5bc <_vfprintf_r+0xf0>
1001ac10:	f049 0910 	orr.w	r9, r9, #16
1001ac14:	f019 0f20 	tst.w	r9, #32
1001ac18:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001ac1c:	f47f af34 	bne.w	1001aa88 <_vfprintf_r+0x5bc>
1001ac20:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
1001ac22:	f019 0f10 	tst.w	r9, #16
1001ac26:	f852 3b04 	ldr.w	r3, [r2], #4
1001ac2a:	920d      	str	r2, [sp, #52]	@ 0x34
1001ac2c:	f040 8359 	bne.w	1001b2e2 <_vfprintf_r+0xe16>
1001ac30:	f019 0f40 	tst.w	r9, #64	@ 0x40
1001ac34:	f000 8351 	beq.w	1001b2da <_vfprintf_r+0xe0e>
1001ac38:	f343 32c0 	sbfx	r2, r3, #15, #1
1001ac3c:	4611      	mov	r1, r2
1001ac3e:	b21b      	sxth	r3, r3
1001ac40:	e72c      	b.n	1001aa9c <_vfprintf_r+0x5d0>
1001ac42:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
1001ac44:	940f      	str	r4, [sp, #60]	@ 0x3c
1001ac46:	f852 3b04 	ldr.w	r3, [r2], #4
1001ac4a:	920d      	str	r2, [sp, #52]	@ 0x34
1001ac4c:	f647 0230 	movw	r2, #30768	@ 0x7830
1001ac50:	f8ad 20a0 	strh.w	r2, [sp, #160]	@ 0xa0
1001ac54:	2078      	movs	r0, #120	@ 0x78
1001ac56:	4ab1      	ldr	r2, [pc, #708]	@ (1001af1c <_vfprintf_r+0xa50>)
1001ac58:	921a      	str	r2, [sp, #104]	@ 0x68
1001ac5a:	f049 0402 	orr.w	r4, r9, #2
1001ac5e:	2200      	movs	r2, #0
1001ac60:	2102      	movs	r1, #2
1001ac62:	900e      	str	r0, [sp, #56]	@ 0x38
1001ac64:	e7a0      	b.n	1001aba8 <_vfprintf_r+0x6dc>
1001ac66:	f019 0f20 	tst.w	r9, #32
1001ac6a:	940f      	str	r4, [sp, #60]	@ 0x3c
1001ac6c:	f000 8359 	beq.w	1001b322 <_vfprintf_r+0xe56>
1001ac70:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001ac72:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001ac74:	681b      	ldr	r3, [r3, #0]
1001ac76:	601a      	str	r2, [r3, #0]
1001ac78:	17d2      	asrs	r2, r2, #31
1001ac7a:	605a      	str	r2, [r3, #4]
1001ac7c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001ac7e:	3304      	adds	r3, #4
1001ac80:	930d      	str	r3, [sp, #52]	@ 0x34
1001ac82:	e612      	b.n	1001a8aa <_vfprintf_r+0x3de>
1001ac84:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001ac86:	2b65      	cmp	r3, #101	@ 0x65
1001ac88:	f340 814e 	ble.w	1001af28 <_vfprintf_r+0xa5c>
1001ac8c:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
1001ac90:	2200      	movs	r2, #0
1001ac92:	2300      	movs	r3, #0
1001ac94:	f005 f9d6 	bl	10020044 <__aeabi_dcmpeq>
1001ac98:	2800      	cmp	r0, #0
1001ac9a:	f000 81ee 	beq.w	1001b07a <_vfprintf_r+0xbae>
1001ac9e:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001aca0:	4a9f      	ldr	r2, [pc, #636]	@ (1001af20 <_vfprintf_r+0xa54>)
1001aca2:	f8c8 2000 	str.w	r2, [r8]
1001aca6:	3301      	adds	r3, #1
1001aca8:	3401      	adds	r4, #1
1001acaa:	2201      	movs	r2, #1
1001acac:	2b07      	cmp	r3, #7
1001acae:	9434      	str	r4, [sp, #208]	@ 0xd0
1001acb0:	9333      	str	r3, [sp, #204]	@ 0xcc
1001acb2:	f8c8 2004 	str.w	r2, [r8, #4]
1001acb6:	f300 84af 	bgt.w	1001b618 <_vfprintf_r+0x114c>
1001acba:	f108 0808 	add.w	r8, r8, #8
1001acbe:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
1001acc0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
1001acc2:	4293      	cmp	r3, r2
1001acc4:	f280 82cf 	bge.w	1001b266 <_vfprintf_r+0xd9a>
1001acc8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001acca:	9a19      	ldr	r2, [sp, #100]	@ 0x64
1001accc:	441c      	add	r4, r3
1001acce:	e9c8 2300 	strd	r2, r3, [r8]
1001acd2:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001acd4:	9434      	str	r4, [sp, #208]	@ 0xd0
1001acd6:	3301      	adds	r3, #1
1001acd8:	2b07      	cmp	r3, #7
1001acda:	9333      	str	r3, [sp, #204]	@ 0xcc
1001acdc:	f300 83cb 	bgt.w	1001b476 <_vfprintf_r+0xfaa>
1001ace0:	f108 0808 	add.w	r8, r8, #8
1001ace4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001ace6:	1e5d      	subs	r5, r3, #1
1001ace8:	2d00      	cmp	r5, #0
1001acea:	f77f adc0 	ble.w	1001a86e <_vfprintf_r+0x3a2>
1001acee:	2d10      	cmp	r5, #16
1001acf0:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001acf2:	f340 84fa 	ble.w	1001b6ea <_vfprintf_r+0x121e>
1001acf6:	4f8b      	ldr	r7, [pc, #556]	@ (1001af24 <_vfprintf_r+0xa58>)
1001acf8:	9715      	str	r7, [sp, #84]	@ 0x54
1001acfa:	e9dd ab07 	ldrd	sl, fp, [sp, #28]
1001acfe:	2610      	movs	r6, #16
1001ad00:	e005      	b.n	1001ad0e <_vfprintf_r+0x842>
1001ad02:	f108 0808 	add.w	r8, r8, #8
1001ad06:	3d10      	subs	r5, #16
1001ad08:	2d10      	cmp	r5, #16
1001ad0a:	f340 84f0 	ble.w	1001b6ee <_vfprintf_r+0x1222>
1001ad0e:	3301      	adds	r3, #1
1001ad10:	3410      	adds	r4, #16
1001ad12:	2b07      	cmp	r3, #7
1001ad14:	e9c8 7600 	strd	r7, r6, [r8]
1001ad18:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001ad1c:	ddf1      	ble.n	1001ad02 <_vfprintf_r+0x836>
1001ad1e:	aa32      	add	r2, sp, #200	@ 0xc8
1001ad20:	4651      	mov	r1, sl
1001ad22:	4658      	mov	r0, fp
1001ad24:	f001 fa72 	bl	1001c20c <__sprint_r>
1001ad28:	2800      	cmp	r0, #0
1001ad2a:	f47f ad27 	bne.w	1001a77c <_vfprintf_r+0x2b0>
1001ad2e:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001ad32:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001ad36:	e7e6      	b.n	1001ad06 <_vfprintf_r+0x83a>
1001ad38:	464c      	mov	r4, r9
1001ad3a:	2901      	cmp	r1, #1
1001ad3c:	f000 813b 	beq.w	1001afb6 <_vfprintf_r+0xaea>
1001ad40:	2902      	cmp	r1, #2
1001ad42:	ad5e      	add	r5, sp, #376	@ 0x178
1001ad44:	d11e      	bne.n	1001ad84 <_vfprintf_r+0x8b8>
1001ad46:	981a      	ldr	r0, [sp, #104]	@ 0x68
1001ad48:	f003 010f 	and.w	r1, r3, #15
1001ad4c:	091b      	lsrs	r3, r3, #4
1001ad4e:	5c41      	ldrb	r1, [r0, r1]
1001ad50:	f805 1d01 	strb.w	r1, [r5, #-1]!
1001ad54:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
1001ad58:	0912      	lsrs	r2, r2, #4
1001ad5a:	ea53 0102 	orrs.w	r1, r3, r2
1001ad5e:	d1f3      	bne.n	1001ad48 <_vfprintf_r+0x87c>
1001ad60:	ab5e      	add	r3, sp, #376	@ 0x178
1001ad62:	46a1      	mov	r9, r4
1001ad64:	eba3 0b05 	sub.w	fp, r3, r5
1001ad68:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001ad6a:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001ad6e:	4559      	cmp	r1, fp
1001ad70:	f04f 0300 	mov.w	r3, #0
1001ad74:	bfb8      	it	lt
1001ad76:	4659      	movlt	r1, fp
1001ad78:	930c      	str	r3, [sp, #48]	@ 0x30
1001ad7a:	9106      	str	r1, [sp, #24]
1001ad7c:	9314      	str	r3, [sp, #80]	@ 0x50
1001ad7e:	9310      	str	r3, [sp, #64]	@ 0x40
1001ad80:	9312      	str	r3, [sp, #72]	@ 0x48
1001ad82:	e5d5      	b.n	1001a930 <_vfprintf_r+0x464>
1001ad84:	f003 0107 	and.w	r1, r3, #7
1001ad88:	08db      	lsrs	r3, r3, #3
1001ad8a:	ea43 7342 	orr.w	r3, r3, r2, lsl #29
1001ad8e:	08d2      	lsrs	r2, r2, #3
1001ad90:	3130      	adds	r1, #48	@ 0x30
1001ad92:	ea53 0602 	orrs.w	r6, r3, r2
1001ad96:	4628      	mov	r0, r5
1001ad98:	f805 1d01 	strb.w	r1, [r5, #-1]!
1001ad9c:	d1f2      	bne.n	1001ad84 <_vfprintf_r+0x8b8>
1001ad9e:	07e6      	lsls	r6, r4, #31
1001ada0:	d5de      	bpl.n	1001ad60 <_vfprintf_r+0x894>
1001ada2:	2930      	cmp	r1, #48	@ 0x30
1001ada4:	d0dc      	beq.n	1001ad60 <_vfprintf_r+0x894>
1001ada6:	2330      	movs	r3, #48	@ 0x30
1001ada8:	3802      	subs	r0, #2
1001adaa:	f805 3c01 	strb.w	r3, [r5, #-1]
1001adae:	ab5e      	add	r3, sp, #376	@ 0x178
1001adb0:	46a1      	mov	r9, r4
1001adb2:	eba3 0b00 	sub.w	fp, r3, r0
1001adb6:	4605      	mov	r5, r0
1001adb8:	e7d6      	b.n	1001ad68 <_vfprintf_r+0x89c>
1001adba:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001adbc:	9a06      	ldr	r2, [sp, #24]
1001adbe:	1a9e      	subs	r6, r3, r2
1001adc0:	2e00      	cmp	r6, #0
1001adc2:	f77f ad3c 	ble.w	1001a83e <_vfprintf_r+0x372>
1001adc6:	2e10      	cmp	r6, #16
1001adc8:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001adca:	f341 80ad 	ble.w	1001bf28 <_vfprintf_r+0x1a5c>
1001adce:	4855      	ldr	r0, [pc, #340]	@ (1001af24 <_vfprintf_r+0xa58>)
1001add0:	f8dd a020 	ldr.w	sl, [sp, #32]
1001add4:	9015      	str	r0, [sp, #84]	@ 0x54
1001add6:	4621      	mov	r1, r4
1001add8:	2710      	movs	r7, #16
1001adda:	461a      	mov	r2, r3
1001addc:	4604      	mov	r4, r0
1001adde:	e004      	b.n	1001adea <_vfprintf_r+0x91e>
1001ade0:	3e10      	subs	r6, #16
1001ade2:	2e10      	cmp	r6, #16
1001ade4:	f108 0808 	add.w	r8, r8, #8
1001ade8:	dd16      	ble.n	1001ae18 <_vfprintf_r+0x94c>
1001adea:	3201      	adds	r2, #1
1001adec:	3110      	adds	r1, #16
1001adee:	2a07      	cmp	r2, #7
1001adf0:	e9c8 4700 	strd	r4, r7, [r8]
1001adf4:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
1001adf8:	ddf2      	ble.n	1001ade0 <_vfprintf_r+0x914>
1001adfa:	9907      	ldr	r1, [sp, #28]
1001adfc:	aa32      	add	r2, sp, #200	@ 0xc8
1001adfe:	4650      	mov	r0, sl
1001ae00:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001ae04:	f001 fa02 	bl	1001c20c <__sprint_r>
1001ae08:	2800      	cmp	r0, #0
1001ae0a:	f040 83f8 	bne.w	1001b5fe <_vfprintf_r+0x1132>
1001ae0e:	3e10      	subs	r6, #16
1001ae10:	2e10      	cmp	r6, #16
1001ae12:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
1001ae16:	dce8      	bgt.n	1001adea <_vfprintf_r+0x91e>
1001ae18:	460c      	mov	r4, r1
1001ae1a:	4613      	mov	r3, r2
1001ae1c:	3301      	adds	r3, #1
1001ae1e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001ae20:	f8c8 2000 	str.w	r2, [r8]
1001ae24:	4434      	add	r4, r6
1001ae26:	2b07      	cmp	r3, #7
1001ae28:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001ae2c:	f8c8 6004 	str.w	r6, [r8, #4]
1001ae30:	f300 8314 	bgt.w	1001b45c <_vfprintf_r+0xf90>
1001ae34:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001ae36:	eba3 060b 	sub.w	r6, r3, fp
1001ae3a:	2e00      	cmp	r6, #0
1001ae3c:	f108 0808 	add.w	r8, r8, #8
1001ae40:	f77f ad03 	ble.w	1001a84a <_vfprintf_r+0x37e>
1001ae44:	4a37      	ldr	r2, [pc, #220]	@ (1001af24 <_vfprintf_r+0xa58>)
1001ae46:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001ae48:	9215      	str	r2, [sp, #84]	@ 0x54
1001ae4a:	2e10      	cmp	r6, #16
1001ae4c:	dd23      	ble.n	1001ae96 <_vfprintf_r+0x9ca>
1001ae4e:	4622      	mov	r2, r4
1001ae50:	f04f 0a10 	mov.w	sl, #16
1001ae54:	e9dd 4707 	ldrd	r4, r7, [sp, #28]
1001ae58:	e004      	b.n	1001ae64 <_vfprintf_r+0x998>
1001ae5a:	3e10      	subs	r6, #16
1001ae5c:	2e10      	cmp	r6, #16
1001ae5e:	f108 0808 	add.w	r8, r8, #8
1001ae62:	dd17      	ble.n	1001ae94 <_vfprintf_r+0x9c8>
1001ae64:	3301      	adds	r3, #1
1001ae66:	492f      	ldr	r1, [pc, #188]	@ (1001af24 <_vfprintf_r+0xa58>)
1001ae68:	3210      	adds	r2, #16
1001ae6a:	2b07      	cmp	r3, #7
1001ae6c:	e9c8 1a00 	strd	r1, sl, [r8]
1001ae70:	e9cd 3233 	strd	r3, r2, [sp, #204]	@ 0xcc
1001ae74:	ddf1      	ble.n	1001ae5a <_vfprintf_r+0x98e>
1001ae76:	aa32      	add	r2, sp, #200	@ 0xc8
1001ae78:	4621      	mov	r1, r4
1001ae7a:	4638      	mov	r0, r7
1001ae7c:	f001 f9c6 	bl	1001c20c <__sprint_r>
1001ae80:	2800      	cmp	r0, #0
1001ae82:	f47f ac7a 	bne.w	1001a77a <_vfprintf_r+0x2ae>
1001ae86:	3e10      	subs	r6, #16
1001ae88:	2e10      	cmp	r6, #16
1001ae8a:	e9dd 3233 	ldrd	r3, r2, [sp, #204]	@ 0xcc
1001ae8e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001ae92:	dce7      	bgt.n	1001ae64 <_vfprintf_r+0x998>
1001ae94:	4614      	mov	r4, r2
1001ae96:	3301      	adds	r3, #1
1001ae98:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001ae9a:	f8c8 2000 	str.w	r2, [r8]
1001ae9e:	4434      	add	r4, r6
1001aea0:	2b07      	cmp	r3, #7
1001aea2:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001aea6:	f8c8 6004 	str.w	r6, [r8, #4]
1001aeaa:	f300 81aa 	bgt.w	1001b202 <_vfprintf_r+0xd36>
1001aeae:	f108 0808 	add.w	r8, r8, #8
1001aeb2:	e4ca      	b.n	1001a84a <_vfprintf_r+0x37e>
1001aeb4:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001aeb8:	aa32      	add	r2, sp, #200	@ 0xc8
1001aeba:	f001 f9a7 	bl	1001c20c <__sprint_r>
1001aebe:	2800      	cmp	r0, #0
1001aec0:	f43f ace9 	beq.w	1001a896 <_vfprintf_r+0x3ca>
1001aec4:	f8dd b020 	ldr.w	fp, [sp, #32]
1001aec8:	e458      	b.n	1001a77c <_vfprintf_r+0x2b0>
1001aeca:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001aecc:	9919      	ldr	r1, [sp, #100]	@ 0x64
1001aece:	441c      	add	r4, r3
1001aed0:	e9c8 1300 	strd	r1, r3, [r8]
1001aed4:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001aed6:	9434      	str	r4, [sp, #208]	@ 0xd0
1001aed8:	3301      	adds	r3, #1
1001aeda:	2b07      	cmp	r3, #7
1001aedc:	9333      	str	r3, [sp, #204]	@ 0xcc
1001aede:	f300 85bf 	bgt.w	1001ba60 <_vfprintf_r+0x1594>
1001aee2:	f108 0808 	add.w	r8, r8, #8
1001aee6:	2a00      	cmp	r2, #0
1001aee8:	f2c0 87ae 	blt.w	1001be48 <_vfprintf_r+0x197c>
1001aeec:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
1001aeee:	f8c8 5000 	str.w	r5, [r8]
1001aef2:	3301      	adds	r3, #1
1001aef4:	4414      	add	r4, r2
1001aef6:	2b07      	cmp	r3, #7
1001aef8:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001aefc:	f8c8 2004 	str.w	r2, [r8, #4]
1001af00:	f77f acb3 	ble.w	1001a86a <_vfprintf_r+0x39e>
1001af04:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001af08:	aa32      	add	r2, sp, #200	@ 0xc8
1001af0a:	f001 f97f 	bl	1001c20c <__sprint_r>
1001af0e:	2800      	cmp	r0, #0
1001af10:	d1d8      	bne.n	1001aec4 <_vfprintf_r+0x9f8>
1001af12:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001af14:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001af18:	e4a9      	b.n	1001a86e <_vfprintf_r+0x3a2>
1001af1a:	bf00      	nop
1001af1c:	100278b8 	.word	0x100278b8
1001af20:	100278e8 	.word	0x100278e8
1001af24:	1002790c 	.word	0x1002790c
1001af28:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001af2a:	9e33      	ldr	r6, [sp, #204]	@ 0xcc
1001af2c:	2b01      	cmp	r3, #1
1001af2e:	f104 0401 	add.w	r4, r4, #1
1001af32:	f106 0601 	add.w	r6, r6, #1
1001af36:	f108 0708 	add.w	r7, r8, #8
1001af3a:	f340 811d 	ble.w	1001b178 <_vfprintf_r+0xcac>
1001af3e:	2301      	movs	r3, #1
1001af40:	2e07      	cmp	r6, #7
1001af42:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001af46:	f8c8 5000 	str.w	r5, [r8]
1001af4a:	f8c8 3004 	str.w	r3, [r8, #4]
1001af4e:	f300 82e4 	bgt.w	1001b51a <_vfprintf_r+0x104e>
1001af52:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001af54:	9a19      	ldr	r2, [sp, #100]	@ 0x64
1001af56:	3601      	adds	r6, #1
1001af58:	441c      	add	r4, r3
1001af5a:	2e07      	cmp	r6, #7
1001af5c:	e9c7 2300 	strd	r2, r3, [r7]
1001af60:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001af64:	f300 82cd 	bgt.w	1001b502 <_vfprintf_r+0x1036>
1001af68:	3708      	adds	r7, #8
1001af6a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001af6c:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
1001af70:	f103 38ff 	add.w	r8, r3, #4294967295	@ 0xffffffff
1001af74:	2200      	movs	r2, #0
1001af76:	2300      	movs	r3, #0
1001af78:	f005 f864 	bl	10020044 <__aeabi_dcmpeq>
1001af7c:	2800      	cmp	r0, #0
1001af7e:	f040 8115 	bne.w	1001b1ac <_vfprintf_r+0xce0>
1001af82:	3601      	adds	r6, #1
1001af84:	3501      	adds	r5, #1
1001af86:	4444      	add	r4, r8
1001af88:	2e07      	cmp	r6, #7
1001af8a:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001af8e:	603d      	str	r5, [r7, #0]
1001af90:	f8c7 8004 	str.w	r8, [r7, #4]
1001af94:	f300 80fe 	bgt.w	1001b194 <_vfprintf_r+0xcc8>
1001af98:	3708      	adds	r7, #8
1001af9a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
1001af9c:	607b      	str	r3, [r7, #4]
1001af9e:	3601      	adds	r6, #1
1001afa0:	441c      	add	r4, r3
1001afa2:	2e07      	cmp	r6, #7
1001afa4:	ab2c      	add	r3, sp, #176	@ 0xb0
1001afa6:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001afaa:	603b      	str	r3, [r7, #0]
1001afac:	dcaa      	bgt.n	1001af04 <_vfprintf_r+0xa38>
1001afae:	f107 0808 	add.w	r8, r7, #8
1001afb2:	e45c      	b.n	1001a86e <_vfprintf_r+0x3a2>
1001afb4:	464c      	mov	r4, r9
1001afb6:	2b0a      	cmp	r3, #10
1001afb8:	f172 0100 	sbcs.w	r1, r2, #0
1001afbc:	f080 82b9 	bcs.w	1001b532 <_vfprintf_r+0x1066>
1001afc0:	3330      	adds	r3, #48	@ 0x30
1001afc2:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
1001afc6:	46a1      	mov	r9, r4
1001afc8:	f04f 0b01 	mov.w	fp, #1
1001afcc:	f20d 1577 	addw	r5, sp, #375	@ 0x177
1001afd0:	e6ca      	b.n	1001ad68 <_vfprintf_r+0x89c>
1001afd2:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001afd6:	aa32      	add	r2, sp, #200	@ 0xc8
1001afd8:	9315      	str	r3, [sp, #84]	@ 0x54
1001afda:	f001 f917 	bl	1001c20c <__sprint_r>
1001afde:	2800      	cmp	r0, #0
1001afe0:	f47f af70 	bne.w	1001aec4 <_vfprintf_r+0x9f8>
1001afe4:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001afe6:	9b15      	ldr	r3, [sp, #84]	@ 0x54
1001afe8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001afec:	e412      	b.n	1001a814 <_vfprintf_r+0x348>
1001afee:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001aff2:	aa32      	add	r2, sp, #200	@ 0xc8
1001aff4:	f001 f90a 	bl	1001c20c <__sprint_r>
1001aff8:	2800      	cmp	r0, #0
1001affa:	f47f af63 	bne.w	1001aec4 <_vfprintf_r+0x9f8>
1001affe:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001b000:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001b004:	e418      	b.n	1001a838 <_vfprintf_r+0x36c>
1001b006:	2d10      	cmp	r5, #16
1001b008:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001b00a:	f340 8752 	ble.w	1001beb2 <_vfprintf_r+0x19e6>
1001b00e:	4fbb      	ldr	r7, [pc, #748]	@ (1001b2fc <_vfprintf_r+0xe30>)
1001b010:	9715      	str	r7, [sp, #84]	@ 0x54
1001b012:	e9dd a907 	ldrd	sl, r9, [sp, #28]
1001b016:	2610      	movs	r6, #16
1001b018:	e004      	b.n	1001b024 <_vfprintf_r+0xb58>
1001b01a:	3d10      	subs	r5, #16
1001b01c:	2d10      	cmp	r5, #16
1001b01e:	f108 0808 	add.w	r8, r8, #8
1001b022:	dd16      	ble.n	1001b052 <_vfprintf_r+0xb86>
1001b024:	3301      	adds	r3, #1
1001b026:	3410      	adds	r4, #16
1001b028:	2b07      	cmp	r3, #7
1001b02a:	e9c8 7600 	strd	r7, r6, [r8]
1001b02e:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001b032:	ddf2      	ble.n	1001b01a <_vfprintf_r+0xb4e>
1001b034:	aa32      	add	r2, sp, #200	@ 0xc8
1001b036:	4651      	mov	r1, sl
1001b038:	4648      	mov	r0, r9
1001b03a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001b03e:	f001 f8e5 	bl	1001c20c <__sprint_r>
1001b042:	2800      	cmp	r0, #0
1001b044:	f040 82f5 	bne.w	1001b632 <_vfprintf_r+0x1166>
1001b048:	3d10      	subs	r5, #16
1001b04a:	2d10      	cmp	r5, #16
1001b04c:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001b050:	dce8      	bgt.n	1001b024 <_vfprintf_r+0xb58>
1001b052:	3301      	adds	r3, #1
1001b054:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001b056:	442c      	add	r4, r5
1001b058:	2b07      	cmp	r3, #7
1001b05a:	e9c8 2500 	strd	r2, r5, [r8]
1001b05e:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001b062:	f77f ac0d 	ble.w	1001a880 <_vfprintf_r+0x3b4>
1001b066:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001b06a:	aa32      	add	r2, sp, #200	@ 0xc8
1001b06c:	f001 f8ce 	bl	1001c20c <__sprint_r>
1001b070:	2800      	cmp	r0, #0
1001b072:	f47f af27 	bne.w	1001aec4 <_vfprintf_r+0x9f8>
1001b076:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001b078:	e402      	b.n	1001a880 <_vfprintf_r+0x3b4>
1001b07a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001b07c:	2a00      	cmp	r2, #0
1001b07e:	f340 80fd 	ble.w	1001b27c <_vfprintf_r+0xdb0>
1001b082:	e9dd 7312 	ldrd	r7, r3, [sp, #72]	@ 0x48
1001b086:	429f      	cmp	r7, r3
1001b088:	bfa8      	it	ge
1001b08a:	461f      	movge	r7, r3
1001b08c:	2f00      	cmp	r7, #0
1001b08e:	eb05 0b03 	add.w	fp, r5, r3
1001b092:	dd0b      	ble.n	1001b0ac <_vfprintf_r+0xbe0>
1001b094:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001b096:	3301      	adds	r3, #1
1001b098:	443c      	add	r4, r7
1001b09a:	2b07      	cmp	r3, #7
1001b09c:	e9c8 5700 	strd	r5, r7, [r8]
1001b0a0:	9434      	str	r4, [sp, #208]	@ 0xd0
1001b0a2:	9333      	str	r3, [sp, #204]	@ 0xcc
1001b0a4:	f300 866f 	bgt.w	1001bd86 <_vfprintf_r+0x18ba>
1001b0a8:	f108 0808 	add.w	r8, r8, #8
1001b0ac:	9e12      	ldr	r6, [sp, #72]	@ 0x48
1001b0ae:	2f00      	cmp	r7, #0
1001b0b0:	bfa8      	it	ge
1001b0b2:	1bf6      	subge	r6, r6, r7
1001b0b4:	2e00      	cmp	r6, #0
1001b0b6:	f300 8347 	bgt.w	1001b748 <_vfprintf_r+0x127c>
1001b0ba:	f8dd a048 	ldr.w	sl, [sp, #72]	@ 0x48
1001b0be:	f419 6f80 	tst.w	r9, #1024	@ 0x400
1001b0c2:	44aa      	add	sl, r5
1001b0c4:	f040 857a 	bne.w	1001bbbc <_vfprintf_r+0x16f0>
1001b0c8:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
1001b0ca:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001b0cc:	429d      	cmp	r5, r3
1001b0ce:	db03      	blt.n	1001b0d8 <_vfprintf_r+0xc0c>
1001b0d0:	f019 0f01 	tst.w	r9, #1
1001b0d4:	f000 8404 	beq.w	1001b8e0 <_vfprintf_r+0x1414>
1001b0d8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001b0da:	9a19      	ldr	r2, [sp, #100]	@ 0x64
1001b0dc:	441c      	add	r4, r3
1001b0de:	e9c8 2300 	strd	r2, r3, [r8]
1001b0e2:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001b0e4:	9434      	str	r4, [sp, #208]	@ 0xd0
1001b0e6:	3301      	adds	r3, #1
1001b0e8:	2b07      	cmp	r3, #7
1001b0ea:	9333      	str	r3, [sp, #204]	@ 0xcc
1001b0ec:	f300 865a 	bgt.w	1001bda4 <_vfprintf_r+0x18d8>
1001b0f0:	f108 0808 	add.w	r8, r8, #8
1001b0f4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001b0f6:	ebab 060a 	sub.w	r6, fp, sl
1001b0fa:	1b5d      	subs	r5, r3, r5
1001b0fc:	42ae      	cmp	r6, r5
1001b0fe:	bfa8      	it	ge
1001b100:	462e      	movge	r6, r5
1001b102:	2e00      	cmp	r6, #0
1001b104:	dd0d      	ble.n	1001b122 <_vfprintf_r+0xc56>
1001b106:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001b108:	f8c8 a000 	str.w	sl, [r8]
1001b10c:	3301      	adds	r3, #1
1001b10e:	4434      	add	r4, r6
1001b110:	2b07      	cmp	r3, #7
1001b112:	f8c8 6004 	str.w	r6, [r8, #4]
1001b116:	9434      	str	r4, [sp, #208]	@ 0xd0
1001b118:	9333      	str	r3, [sp, #204]	@ 0xcc
1001b11a:	f300 8655 	bgt.w	1001bdc8 <_vfprintf_r+0x18fc>
1001b11e:	f108 0808 	add.w	r8, r8, #8
1001b122:	2e00      	cmp	r6, #0
1001b124:	bfa8      	it	ge
1001b126:	1bad      	subge	r5, r5, r6
1001b128:	2d00      	cmp	r5, #0
1001b12a:	f77f aba0 	ble.w	1001a86e <_vfprintf_r+0x3a2>
1001b12e:	2d10      	cmp	r5, #16
1001b130:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001b132:	f340 82da 	ble.w	1001b6ea <_vfprintf_r+0x121e>
1001b136:	4f72      	ldr	r7, [pc, #456]	@ (1001b300 <_vfprintf_r+0xe34>)
1001b138:	9715      	str	r7, [sp, #84]	@ 0x54
1001b13a:	e9dd ab07 	ldrd	sl, fp, [sp, #28]
1001b13e:	2610      	movs	r6, #16
1001b140:	e005      	b.n	1001b14e <_vfprintf_r+0xc82>
1001b142:	f108 0808 	add.w	r8, r8, #8
1001b146:	3d10      	subs	r5, #16
1001b148:	2d10      	cmp	r5, #16
1001b14a:	f340 82d0 	ble.w	1001b6ee <_vfprintf_r+0x1222>
1001b14e:	3301      	adds	r3, #1
1001b150:	3410      	adds	r4, #16
1001b152:	2b07      	cmp	r3, #7
1001b154:	e9c8 7600 	strd	r7, r6, [r8]
1001b158:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001b15c:	ddf1      	ble.n	1001b142 <_vfprintf_r+0xc76>
1001b15e:	aa32      	add	r2, sp, #200	@ 0xc8
1001b160:	4651      	mov	r1, sl
1001b162:	4658      	mov	r0, fp
1001b164:	f001 f852 	bl	1001c20c <__sprint_r>
1001b168:	2800      	cmp	r0, #0
1001b16a:	f47f ab07 	bne.w	1001a77c <_vfprintf_r+0x2b0>
1001b16e:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001b172:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001b176:	e7e6      	b.n	1001b146 <_vfprintf_r+0xc7a>
1001b178:	f019 0f01 	tst.w	r9, #1
1001b17c:	f47f aedf 	bne.w	1001af3e <_vfprintf_r+0xa72>
1001b180:	2301      	movs	r3, #1
1001b182:	2e07      	cmp	r6, #7
1001b184:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001b188:	f8c8 5000 	str.w	r5, [r8]
1001b18c:	f8c8 3004 	str.w	r3, [r8, #4]
1001b190:	f77f af03 	ble.w	1001af9a <_vfprintf_r+0xace>
1001b194:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001b198:	aa32      	add	r2, sp, #200	@ 0xc8
1001b19a:	f001 f837 	bl	1001c20c <__sprint_r>
1001b19e:	2800      	cmp	r0, #0
1001b1a0:	f47f ae90 	bne.w	1001aec4 <_vfprintf_r+0x9f8>
1001b1a4:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
1001b1a8:	af35      	add	r7, sp, #212	@ 0xd4
1001b1aa:	e6f6      	b.n	1001af9a <_vfprintf_r+0xace>
1001b1ac:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001b1ae:	2b01      	cmp	r3, #1
1001b1b0:	f77f aef3 	ble.w	1001af9a <_vfprintf_r+0xace>
1001b1b4:	2b11      	cmp	r3, #17
1001b1b6:	4b52      	ldr	r3, [pc, #328]	@ (1001b300 <_vfprintf_r+0xe34>)
1001b1b8:	9315      	str	r3, [sp, #84]	@ 0x54
1001b1ba:	f340 82b9 	ble.w	1001b730 <_vfprintf_r+0x1264>
1001b1be:	f8cd 9024 	str.w	r9, [sp, #36]	@ 0x24
1001b1c2:	e9dd ba07 	ldrd	fp, sl, [sp, #28]
1001b1c6:	2510      	movs	r5, #16
1001b1c8:	4699      	mov	r9, r3
1001b1ca:	e006      	b.n	1001b1da <_vfprintf_r+0xd0e>
1001b1cc:	3708      	adds	r7, #8
1001b1ce:	f1a8 0810 	sub.w	r8, r8, #16
1001b1d2:	f1b8 0f10 	cmp.w	r8, #16
1001b1d6:	f340 82a9 	ble.w	1001b72c <_vfprintf_r+0x1260>
1001b1da:	3601      	adds	r6, #1
1001b1dc:	3410      	adds	r4, #16
1001b1de:	2e07      	cmp	r6, #7
1001b1e0:	e9c7 9500 	strd	r9, r5, [r7]
1001b1e4:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001b1e8:	ddf0      	ble.n	1001b1cc <_vfprintf_r+0xd00>
1001b1ea:	aa32      	add	r2, sp, #200	@ 0xc8
1001b1ec:	4659      	mov	r1, fp
1001b1ee:	4650      	mov	r0, sl
1001b1f0:	f001 f80c 	bl	1001c20c <__sprint_r>
1001b1f4:	2800      	cmp	r0, #0
1001b1f6:	f040 8202 	bne.w	1001b5fe <_vfprintf_r+0x1132>
1001b1fa:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
1001b1fe:	af35      	add	r7, sp, #212	@ 0xd4
1001b200:	e7e5      	b.n	1001b1ce <_vfprintf_r+0xd02>
1001b202:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001b206:	aa32      	add	r2, sp, #200	@ 0xc8
1001b208:	f001 f800 	bl	1001c20c <__sprint_r>
1001b20c:	2800      	cmp	r0, #0
1001b20e:	f47f ae59 	bne.w	1001aec4 <_vfprintf_r+0x9f8>
1001b212:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001b214:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001b218:	f7ff bb17 	b.w	1001a84a <_vfprintf_r+0x37e>
1001b21c:	990d      	ldr	r1, [sp, #52]	@ 0x34
1001b21e:	f851 3b04 	ldr.w	r3, [r1], #4
1001b222:	910d      	str	r1, [sp, #52]	@ 0x34
1001b224:	f014 0110 	ands.w	r1, r4, #16
1001b228:	d155      	bne.n	1001b2d6 <_vfprintf_r+0xe0a>
1001b22a:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
1001b22e:	d04d      	beq.n	1001b2cc <_vfprintf_r+0xe00>
1001b230:	460a      	mov	r2, r1
1001b232:	b29b      	uxth	r3, r3
1001b234:	2101      	movs	r1, #1
1001b236:	e4b7      	b.n	1001aba8 <_vfprintf_r+0x6dc>
1001b238:	990d      	ldr	r1, [sp, #52]	@ 0x34
1001b23a:	f851 3b04 	ldr.w	r3, [r1], #4
1001b23e:	910d      	str	r1, [sp, #52]	@ 0x34
1001b240:	f019 0110 	ands.w	r1, r9, #16
1001b244:	f47f acad 	bne.w	1001aba2 <_vfprintf_r+0x6d6>
1001b248:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
1001b24c:	f000 82a9 	beq.w	1001b7a2 <_vfprintf_r+0x12d6>
1001b250:	b29b      	uxth	r3, r3
1001b252:	460a      	mov	r2, r1
1001b254:	e4a5      	b.n	1001aba2 <_vfprintf_r+0x6d6>
1001b256:	9d07      	ldr	r5, [sp, #28]
1001b258:	6da8      	ldr	r0, [r5, #88]	@ 0x58
1001b25a:	f7f9 ff13 	bl	10015084 <__retarget_lock_acquire_recursive>
1001b25e:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
1001b262:	f7ff b959 	b.w	1001a518 <_vfprintf_r+0x4c>
1001b266:	f019 0f01 	tst.w	r9, #1
1001b26a:	f43f ab00 	beq.w	1001a86e <_vfprintf_r+0x3a2>
1001b26e:	e52b      	b.n	1001acc8 <_vfprintf_r+0x7fc>
1001b270:	930d      	str	r3, [sp, #52]	@ 0x34
1001b272:	7823      	ldrb	r3, [r4, #0]
1001b274:	f7ff b9a2 	b.w	1001a5bc <_vfprintf_r+0xf0>
1001b278:	ad5e      	add	r5, sp, #376	@ 0x178
1001b27a:	e575      	b.n	1001ad68 <_vfprintf_r+0x89c>
1001b27c:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001b27e:	4921      	ldr	r1, [pc, #132]	@ (1001b304 <_vfprintf_r+0xe38>)
1001b280:	f8c8 1000 	str.w	r1, [r8]
1001b284:	3301      	adds	r3, #1
1001b286:	3401      	adds	r4, #1
1001b288:	2101      	movs	r1, #1
1001b28a:	2b07      	cmp	r3, #7
1001b28c:	9434      	str	r4, [sp, #208]	@ 0xd0
1001b28e:	9333      	str	r3, [sp, #204]	@ 0xcc
1001b290:	f8c8 1004 	str.w	r1, [r8, #4]
1001b294:	f300 8551 	bgt.w	1001bd3a <_vfprintf_r+0x186e>
1001b298:	f108 0808 	add.w	r8, r8, #8
1001b29c:	2a00      	cmp	r2, #0
1001b29e:	f47f ae14 	bne.w	1001aeca <_vfprintf_r+0x9fe>
1001b2a2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
1001b2a4:	f009 0301 	and.w	r3, r9, #1
1001b2a8:	4313      	orrs	r3, r2
1001b2aa:	f43f aae0 	beq.w	1001a86e <_vfprintf_r+0x3a2>
1001b2ae:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001b2b0:	9a19      	ldr	r2, [sp, #100]	@ 0x64
1001b2b2:	441c      	add	r4, r3
1001b2b4:	e9c8 2300 	strd	r2, r3, [r8]
1001b2b8:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001b2ba:	9434      	str	r4, [sp, #208]	@ 0xd0
1001b2bc:	3301      	adds	r3, #1
1001b2be:	2b07      	cmp	r3, #7
1001b2c0:	9333      	str	r3, [sp, #204]	@ 0xcc
1001b2c2:	f300 83cd 	bgt.w	1001ba60 <_vfprintf_r+0x1594>
1001b2c6:	f108 0808 	add.w	r8, r8, #8
1001b2ca:	e60f      	b.n	1001aeec <_vfprintf_r+0xa20>
1001b2cc:	f414 7200 	ands.w	r2, r4, #512	@ 0x200
1001b2d0:	bf1c      	itt	ne
1001b2d2:	b2db      	uxtbne	r3, r3
1001b2d4:	4602      	movne	r2, r0
1001b2d6:	2101      	movs	r1, #1
1001b2d8:	e466      	b.n	1001aba8 <_vfprintf_r+0x6dc>
1001b2da:	f419 7f00 	tst.w	r9, #512	@ 0x200
1001b2de:	f040 8307 	bne.w	1001b8f0 <_vfprintf_r+0x1424>
1001b2e2:	17da      	asrs	r2, r3, #31
1001b2e4:	4611      	mov	r1, r2
1001b2e6:	2900      	cmp	r1, #0
1001b2e8:	f6bf abdb 	bge.w	1001aaa2 <_vfprintf_r+0x5d6>
1001b2ec:	425b      	negs	r3, r3
1001b2ee:	eb62 0242 	sbc.w	r2, r2, r2, lsl #1
1001b2f2:	464c      	mov	r4, r9
1001b2f4:	202d      	movs	r0, #45	@ 0x2d
1001b2f6:	2101      	movs	r1, #1
1001b2f8:	e457      	b.n	1001abaa <_vfprintf_r+0x6de>
1001b2fa:	bf00      	nop
1001b2fc:	1002791c 	.word	0x1002791c
1001b300:	1002790c 	.word	0x1002790c
1001b304:	100278e8 	.word	0x100278e8
1001b308:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
1001b30a:	7823      	ldrb	r3, [r4, #0]
1001b30c:	2a00      	cmp	r2, #0
1001b30e:	f43f a955 	beq.w	1001a5bc <_vfprintf_r+0xf0>
1001b312:	7812      	ldrb	r2, [r2, #0]
1001b314:	2a00      	cmp	r2, #0
1001b316:	f43f a951 	beq.w	1001a5bc <_vfprintf_r+0xf0>
1001b31a:	f449 6980 	orr.w	r9, r9, #1024	@ 0x400
1001b31e:	f7ff b94d 	b.w	1001a5bc <_vfprintf_r+0xf0>
1001b322:	f019 0f10 	tst.w	r9, #16
1001b326:	f040 81fb 	bne.w	1001b720 <_vfprintf_r+0x1254>
1001b32a:	f019 0f40 	tst.w	r9, #64	@ 0x40
1001b32e:	f040 82e5 	bne.w	1001b8fc <_vfprintf_r+0x1430>
1001b332:	f419 7f00 	tst.w	r9, #512	@ 0x200
1001b336:	f000 81f3 	beq.w	1001b720 <_vfprintf_r+0x1254>
1001b33a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001b33c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001b33e:	681b      	ldr	r3, [r3, #0]
1001b340:	701a      	strb	r2, [r3, #0]
1001b342:	e49b      	b.n	1001ac7c <_vfprintf_r+0x7b0>
1001b344:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
1001b348:	4602      	mov	r2, r0
1001b34a:	460b      	mov	r3, r1
1001b34c:	f004 feac 	bl	100200a8 <__aeabi_dcmpun>
1001b350:	2800      	cmp	r0, #0
1001b352:	f040 8638 	bne.w	1001bfc6 <_vfprintf_r+0x1afa>
1001b356:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001b358:	2b61      	cmp	r3, #97	@ 0x61
1001b35a:	f000 8521 	beq.w	1001bda0 <_vfprintf_r+0x18d4>
1001b35e:	2b41      	cmp	r3, #65	@ 0x41
1001b360:	f000 82e3 	beq.w	1001b92a <_vfprintf_r+0x145e>
1001b364:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001b366:	3301      	adds	r3, #1
1001b368:	f000 8617 	beq.w	1001bf9a <_vfprintf_r+0x1ace>
1001b36c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001b36e:	f023 0320 	bic.w	r3, r3, #32
1001b372:	2b47      	cmp	r3, #71	@ 0x47
1001b374:	d104      	bne.n	1001b380 <_vfprintf_r+0xeb4>
1001b376:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001b378:	2b00      	cmp	r3, #0
1001b37a:	bf08      	it	eq
1001b37c:	2301      	moveq	r3, #1
1001b37e:	9309      	str	r3, [sp, #36]	@ 0x24
1001b380:	e9dd 1216 	ldrd	r1, r2, [sp, #88]	@ 0x58
1001b384:	f449 7080 	orr.w	r0, r9, #256	@ 0x100
1001b388:	2a00      	cmp	r2, #0
1001b38a:	9015      	str	r0, [sp, #84]	@ 0x54
1001b38c:	f8cd 9018 	str.w	r9, [sp, #24]
1001b390:	f04f 0300 	mov.w	r3, #0
1001b394:	f2c0 84df 	blt.w	1001bd56 <_vfprintf_r+0x188a>
1001b398:	e9cd 1224 	strd	r1, r2, [sp, #144]	@ 0x90
1001b39c:	931f      	str	r3, [sp, #124]	@ 0x7c
1001b39e:	930c      	str	r3, [sp, #48]	@ 0x30
1001b3a0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001b3a2:	3b41      	subs	r3, #65	@ 0x41
1001b3a4:	2b25      	cmp	r3, #37	@ 0x25
1001b3a6:	f200 8203 	bhi.w	1001b7b0 <_vfprintf_r+0x12e4>
1001b3aa:	e8df f013 	tbh	[pc, r3, lsl #1]
1001b3ae:	0374      	.short	0x0374
1001b3b0:	02010201 	.word	0x02010201
1001b3b4:	036d0201 	.word	0x036d0201
1001b3b8:	02010371 	.word	0x02010371
1001b3bc:	02010201 	.word	0x02010201
1001b3c0:	02010201 	.word	0x02010201
1001b3c4:	02010201 	.word	0x02010201
1001b3c8:	02010201 	.word	0x02010201
1001b3cc:	02010201 	.word	0x02010201
1001b3d0:	02010201 	.word	0x02010201
1001b3d4:	02010201 	.word	0x02010201
1001b3d8:	02010201 	.word	0x02010201
1001b3dc:	02010201 	.word	0x02010201
1001b3e0:	02010201 	.word	0x02010201
1001b3e4:	02010201 	.word	0x02010201
1001b3e8:	02010201 	.word	0x02010201
1001b3ec:	02010201 	.word	0x02010201
1001b3f0:	02010201 	.word	0x02010201
1001b3f4:	036d0201 	.word	0x036d0201
1001b3f8:	0371      	.short	0x0371
1001b3fa:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001b3fe:	4bc3      	ldr	r3, [pc, #780]	@ (1001b70c <_vfprintf_r+0x1240>)
1001b400:	931a      	str	r3, [sp, #104]	@ 0x68
1001b402:	f019 0220 	ands.w	r2, r9, #32
1001b406:	d06a      	beq.n	1001b4de <_vfprintf_r+0x1012>
1001b408:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001b40a:	3307      	adds	r3, #7
1001b40c:	f023 0307 	bic.w	r3, r3, #7
1001b410:	4619      	mov	r1, r3
1001b412:	685a      	ldr	r2, [r3, #4]
1001b414:	f851 3b08 	ldr.w	r3, [r1], #8
1001b418:	910d      	str	r1, [sp, #52]	@ 0x34
1001b41a:	f019 0f01 	tst.w	r9, #1
1001b41e:	d00a      	beq.n	1001b436 <_vfprintf_r+0xf6a>
1001b420:	ea53 0102 	orrs.w	r1, r3, r2
1001b424:	d007      	beq.n	1001b436 <_vfprintf_r+0xf6a>
1001b426:	990e      	ldr	r1, [sp, #56]	@ 0x38
1001b428:	f88d 10a1 	strb.w	r1, [sp, #161]	@ 0xa1
1001b42c:	2130      	movs	r1, #48	@ 0x30
1001b42e:	f049 0902 	orr.w	r9, r9, #2
1001b432:	f88d 10a0 	strb.w	r1, [sp, #160]	@ 0xa0
1001b436:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
1001b43a:	2102      	movs	r1, #2
1001b43c:	f7ff bbb4 	b.w	1001aba8 <_vfprintf_r+0x6dc>
1001b440:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001b444:	464c      	mov	r4, r9
1001b446:	f7ff bbd0 	b.w	1001abea <_vfprintf_r+0x71e>
1001b44a:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001b44e:	f7ff bb9b 	b.w	1001ab88 <_vfprintf_r+0x6bc>
1001b452:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001b456:	4bae      	ldr	r3, [pc, #696]	@ (1001b710 <_vfprintf_r+0x1244>)
1001b458:	931a      	str	r3, [sp, #104]	@ 0x68
1001b45a:	e7d2      	b.n	1001b402 <_vfprintf_r+0xf36>
1001b45c:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001b460:	aa32      	add	r2, sp, #200	@ 0xc8
1001b462:	f000 fed3 	bl	1001c20c <__sprint_r>
1001b466:	2800      	cmp	r0, #0
1001b468:	f47f ad2c 	bne.w	1001aec4 <_vfprintf_r+0x9f8>
1001b46c:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001b46e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001b472:	f7ff b9e4 	b.w	1001a83e <_vfprintf_r+0x372>
1001b476:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001b47a:	aa32      	add	r2, sp, #200	@ 0xc8
1001b47c:	f000 fec6 	bl	1001c20c <__sprint_r>
1001b480:	2800      	cmp	r0, #0
1001b482:	f47f ad1f 	bne.w	1001aec4 <_vfprintf_r+0x9f8>
1001b486:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001b488:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001b48c:	e42a      	b.n	1001ace4 <_vfprintf_r+0x818>
1001b48e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001b490:	950c      	str	r5, [sp, #48]	@ 0x30
1001b492:	2b06      	cmp	r3, #6
1001b494:	4629      	mov	r1, r5
1001b496:	bf28      	it	cs
1001b498:	2306      	movcs	r3, #6
1001b49a:	9509      	str	r5, [sp, #36]	@ 0x24
1001b49c:	462a      	mov	r2, r5
1001b49e:	9306      	str	r3, [sp, #24]
1001b4a0:	4d9c      	ldr	r5, [pc, #624]	@ (1001b714 <_vfprintf_r+0x1248>)
1001b4a2:	960d      	str	r6, [sp, #52]	@ 0x34
1001b4a4:	469b      	mov	fp, r3
1001b4a6:	9114      	str	r1, [sp, #80]	@ 0x50
1001b4a8:	9110      	str	r1, [sp, #64]	@ 0x40
1001b4aa:	9112      	str	r1, [sp, #72]	@ 0x48
1001b4ac:	f7ff ba40 	b.w	1001a930 <_vfprintf_r+0x464>
1001b4b0:	2208      	movs	r2, #8
1001b4b2:	2100      	movs	r1, #0
1001b4b4:	a830      	add	r0, sp, #192	@ 0xc0
1001b4b6:	f7f9 fd53 	bl	10014f60 <memset>
1001b4ba:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001b4bc:	9808      	ldr	r0, [sp, #32]
1001b4be:	681a      	ldr	r2, [r3, #0]
1001b4c0:	ad45      	add	r5, sp, #276	@ 0x114
1001b4c2:	ab30      	add	r3, sp, #192	@ 0xc0
1001b4c4:	4629      	mov	r1, r5
1001b4c6:	f001 ffb7 	bl	1001d438 <_wcrtomb_r>
1001b4ca:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
1001b4ce:	4683      	mov	fp, r0
1001b4d0:	f000 8544 	beq.w	1001bf5c <_vfprintf_r+0x1a90>
1001b4d4:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
1001b4d8:	9306      	str	r3, [sp, #24]
1001b4da:	f7ff ba93 	b.w	1001aa04 <_vfprintf_r+0x538>
1001b4de:	990d      	ldr	r1, [sp, #52]	@ 0x34
1001b4e0:	f851 3b04 	ldr.w	r3, [r1], #4
1001b4e4:	910d      	str	r1, [sp, #52]	@ 0x34
1001b4e6:	f019 0110 	ands.w	r1, r9, #16
1001b4ea:	d196      	bne.n	1001b41a <_vfprintf_r+0xf4e>
1001b4ec:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
1001b4f0:	f000 8151 	beq.w	1001b796 <_vfprintf_r+0x12ca>
1001b4f4:	b29b      	uxth	r3, r3
1001b4f6:	460a      	mov	r2, r1
1001b4f8:	e78f      	b.n	1001b41a <_vfprintf_r+0xf4e>
1001b4fa:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
1001b4fe:	ad5e      	add	r5, sp, #376	@ 0x178
1001b500:	e432      	b.n	1001ad68 <_vfprintf_r+0x89c>
1001b502:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001b506:	aa32      	add	r2, sp, #200	@ 0xc8
1001b508:	f000 fe80 	bl	1001c20c <__sprint_r>
1001b50c:	2800      	cmp	r0, #0
1001b50e:	f47f acd9 	bne.w	1001aec4 <_vfprintf_r+0x9f8>
1001b512:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
1001b516:	af35      	add	r7, sp, #212	@ 0xd4
1001b518:	e527      	b.n	1001af6a <_vfprintf_r+0xa9e>
1001b51a:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001b51e:	aa32      	add	r2, sp, #200	@ 0xc8
1001b520:	f000 fe74 	bl	1001c20c <__sprint_r>
1001b524:	2800      	cmp	r0, #0
1001b526:	f47f accd 	bne.w	1001aec4 <_vfprintf_r+0x9f8>
1001b52a:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
1001b52e:	af35      	add	r7, sp, #212	@ 0xd4
1001b530:	e50f      	b.n	1001af52 <_vfprintf_r+0xa86>
1001b532:	f404 6b80 	and.w	fp, r4, #1024	@ 0x400
1001b536:	2100      	movs	r1, #0
1001b538:	f8cd 8030 	str.w	r8, [sp, #48]	@ 0x30
1001b53c:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 1001b718 <_vfprintf_r+0x124c>
1001b540:	f8dd 806c 	ldr.w	r8, [sp, #108]	@ 0x6c
1001b544:	9406      	str	r4, [sp, #24]
1001b546:	ad5e      	add	r5, sp, #376	@ 0x178
1001b548:	f04f 3acc 	mov.w	sl, #3435973836	@ 0xcccccccc
1001b54c:	2705      	movs	r7, #5
1001b54e:	468c      	mov	ip, r1
1001b550:	465e      	mov	r6, fp
1001b552:	e005      	b.n	1001b560 <_vfprintf_r+0x1094>
1001b554:	2b0a      	cmp	r3, #10
1001b556:	f172 0200 	sbcs.w	r2, r2, #0
1001b55a:	d333      	bcc.n	1001b5c4 <_vfprintf_r+0x10f8>
1001b55c:	465b      	mov	r3, fp
1001b55e:	4622      	mov	r2, r4
1001b560:	1899      	adds	r1, r3, r2
1001b562:	f141 0100 	adc.w	r1, r1, #0
1001b566:	fba9 0401 	umull	r0, r4, r9, r1
1001b56a:	f024 0003 	bic.w	r0, r4, #3
1001b56e:	eb00 0094 	add.w	r0, r0, r4, lsr #2
1001b572:	1a09      	subs	r1, r1, r0
1001b574:	1a58      	subs	r0, r3, r1
1001b576:	f162 0e00 	sbc.w	lr, r2, #0
1001b57a:	fb0a f400 	mul.w	r4, sl, r0
1001b57e:	fba0 b009 	umull	fp, r0, r0, r9
1001b582:	fb09 440e 	mla	r4, r9, lr, r4
1001b586:	f00b 0e01 	and.w	lr, fp, #1
1001b58a:	4404      	add	r4, r0
1001b58c:	fbae 0e07 	umull	r0, lr, lr, r7
1001b590:	1840      	adds	r0, r0, r1
1001b592:	ea4f 0b5b 	mov.w	fp, fp, lsr #1
1001b596:	3030      	adds	r0, #48	@ 0x30
1001b598:	f805 0c01 	strb.w	r0, [r5, #-1]
1001b59c:	ea4b 7bc4 	orr.w	fp, fp, r4, lsl #31
1001b5a0:	f10c 0c01 	add.w	ip, ip, #1
1001b5a4:	3d01      	subs	r5, #1
1001b5a6:	0864      	lsrs	r4, r4, #1
1001b5a8:	2e00      	cmp	r6, #0
1001b5aa:	d0d3      	beq.n	1001b554 <_vfprintf_r+0x1088>
1001b5ac:	f898 1000 	ldrb.w	r1, [r8]
1001b5b0:	458c      	cmp	ip, r1
1001b5b2:	d1cf      	bne.n	1001b554 <_vfprintf_r+0x1088>
1001b5b4:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
1001b5b8:	d0cc      	beq.n	1001b554 <_vfprintf_r+0x1088>
1001b5ba:	2b0a      	cmp	r3, #10
1001b5bc:	f172 0200 	sbcs.w	r2, r2, #0
1001b5c0:	f080 82c5 	bcs.w	1001bb4e <_vfprintf_r+0x1682>
1001b5c4:	f8cd 806c 	str.w	r8, [sp, #108]	@ 0x6c
1001b5c8:	9c06      	ldr	r4, [sp, #24]
1001b5ca:	f8dd 8030 	ldr.w	r8, [sp, #48]	@ 0x30
1001b5ce:	f8cd c04c 	str.w	ip, [sp, #76]	@ 0x4c
1001b5d2:	f7ff bbc5 	b.w	1001ad60 <_vfprintf_r+0x894>
1001b5d6:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001b5da:	aa32      	add	r2, sp, #200	@ 0xc8
1001b5dc:	9315      	str	r3, [sp, #84]	@ 0x54
1001b5de:	f000 fe15 	bl	1001c20c <__sprint_r>
1001b5e2:	2800      	cmp	r0, #0
1001b5e4:	f47f ac6e 	bne.w	1001aec4 <_vfprintf_r+0x9f8>
1001b5e8:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001b5ec:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001b5ee:	9b15      	ldr	r3, [sp, #84]	@ 0x54
1001b5f0:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001b5f4:	f7ff b8fc 	b.w	1001a7f0 <_vfprintf_r+0x324>
1001b5f8:	46a3      	mov	fp, r4
1001b5fa:	f7ff b8bf 	b.w	1001a77c <_vfprintf_r+0x2b0>
1001b5fe:	46d3      	mov	fp, sl
1001b600:	f7ff b8bc 	b.w	1001a77c <_vfprintf_r+0x2b0>
1001b604:	4658      	mov	r0, fp
1001b606:	f7fa f97b 	bl	10015900 <__sinit>
1001b60a:	f7fe bf7c 	b.w	1001a506 <_vfprintf_r+0x3a>
1001b60e:	2901      	cmp	r1, #1
1001b610:	464c      	mov	r4, r9
1001b612:	f47f ab95 	bne.w	1001ad40 <_vfprintf_r+0x874>
1001b616:	e4d3      	b.n	1001afc0 <_vfprintf_r+0xaf4>
1001b618:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001b61c:	aa32      	add	r2, sp, #200	@ 0xc8
1001b61e:	f000 fdf5 	bl	1001c20c <__sprint_r>
1001b622:	2800      	cmp	r0, #0
1001b624:	f47f ac4e 	bne.w	1001aec4 <_vfprintf_r+0x9f8>
1001b628:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001b62a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001b62e:	f7ff bb46 	b.w	1001acbe <_vfprintf_r+0x7f2>
1001b632:	46cb      	mov	fp, r9
1001b634:	f7ff b8a2 	b.w	1001a77c <_vfprintf_r+0x2b0>
1001b638:	af30      	add	r7, sp, #192	@ 0xc0
1001b63a:	2208      	movs	r2, #8
1001b63c:	2100      	movs	r1, #0
1001b63e:	4638      	mov	r0, r7
1001b640:	952b      	str	r5, [sp, #172]	@ 0xac
1001b642:	f7f9 fc8d 	bl	10014f60 <memset>
1001b646:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
1001b64a:	f1ba 3fff 	cmp.w	sl, #4294967295	@ 0xffffffff
1001b64e:	f000 8270 	beq.w	1001bb32 <_vfprintf_r+0x1666>
1001b652:	2400      	movs	r4, #0
1001b654:	f8cd 9018 	str.w	r9, [sp, #24]
1001b658:	46a3      	mov	fp, r4
1001b65a:	f8dd 9020 	ldr.w	r9, [sp, #32]
1001b65e:	e00c      	b.n	1001b67a <_vfprintf_r+0x11ae>
1001b660:	a945      	add	r1, sp, #276	@ 0x114
1001b662:	4648      	mov	r0, r9
1001b664:	f001 fee8 	bl	1001d438 <_wcrtomb_r>
1001b668:	1c41      	adds	r1, r0, #1
1001b66a:	4458      	add	r0, fp
1001b66c:	f000 8476 	beq.w	1001bf5c <_vfprintf_r+0x1a90>
1001b670:	4550      	cmp	r0, sl
1001b672:	dc08      	bgt.n	1001b686 <_vfprintf_r+0x11ba>
1001b674:	f000 84c3 	beq.w	1001bffe <_vfprintf_r+0x1b32>
1001b678:	4683      	mov	fp, r0
1001b67a:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
1001b67c:	5912      	ldr	r2, [r2, r4]
1001b67e:	463b      	mov	r3, r7
1001b680:	3404      	adds	r4, #4
1001b682:	2a00      	cmp	r2, #0
1001b684:	d1ec      	bne.n	1001b660 <_vfprintf_r+0x1194>
1001b686:	f8dd 9018 	ldr.w	r9, [sp, #24]
1001b68a:	f1bb 0f00 	cmp.w	fp, #0
1001b68e:	f000 8343 	beq.w	1001bd18 <_vfprintf_r+0x184c>
1001b692:	f1bb 0f63 	cmp.w	fp, #99	@ 0x63
1001b696:	f340 83fa 	ble.w	1001be8e <_vfprintf_r+0x19c2>
1001b69a:	9808      	ldr	r0, [sp, #32]
1001b69c:	f10b 0101 	add.w	r1, fp, #1
1001b6a0:	f7f9 f970 	bl	10014984 <_malloc_r>
1001b6a4:	4605      	mov	r5, r0
1001b6a6:	2800      	cmp	r0, #0
1001b6a8:	f000 8458 	beq.w	1001bf5c <_vfprintf_r+0x1a90>
1001b6ac:	900c      	str	r0, [sp, #48]	@ 0x30
1001b6ae:	2208      	movs	r2, #8
1001b6b0:	2100      	movs	r1, #0
1001b6b2:	4638      	mov	r0, r7
1001b6b4:	f7f9 fc54 	bl	10014f60 <memset>
1001b6b8:	9808      	ldr	r0, [sp, #32]
1001b6ba:	9700      	str	r7, [sp, #0]
1001b6bc:	465b      	mov	r3, fp
1001b6be:	aa2b      	add	r2, sp, #172	@ 0xac
1001b6c0:	4629      	mov	r1, r5
1001b6c2:	f002 fdef 	bl	1001e2a4 <_wcsrtombs_r>
1001b6c6:	4583      	cmp	fp, r0
1001b6c8:	f040 8519 	bne.w	1001c0fe <_vfprintf_r+0x1c32>
1001b6cc:	2300      	movs	r3, #0
1001b6ce:	f805 300b 	strb.w	r3, [r5, fp]
1001b6d2:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
1001b6d6:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001b6da:	960d      	str	r6, [sp, #52]	@ 0x34
1001b6dc:	9309      	str	r3, [sp, #36]	@ 0x24
1001b6de:	9106      	str	r1, [sp, #24]
1001b6e0:	9314      	str	r3, [sp, #80]	@ 0x50
1001b6e2:	9310      	str	r3, [sp, #64]	@ 0x40
1001b6e4:	9312      	str	r3, [sp, #72]	@ 0x48
1001b6e6:	f7ff b923 	b.w	1001a930 <_vfprintf_r+0x464>
1001b6ea:	4a0c      	ldr	r2, [pc, #48]	@ (1001b71c <_vfprintf_r+0x1250>)
1001b6ec:	9215      	str	r2, [sp, #84]	@ 0x54
1001b6ee:	3301      	adds	r3, #1
1001b6f0:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001b6f2:	f8c8 2000 	str.w	r2, [r8]
1001b6f6:	442c      	add	r4, r5
1001b6f8:	2b07      	cmp	r3, #7
1001b6fa:	f8c8 5004 	str.w	r5, [r8, #4]
1001b6fe:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001b702:	f77f a8b2 	ble.w	1001a86a <_vfprintf_r+0x39e>
1001b706:	f7ff bbfd 	b.w	1001af04 <_vfprintf_r+0xa38>
1001b70a:	bf00      	nop
1001b70c:	100278cc 	.word	0x100278cc
1001b710:	100278b8 	.word	0x100278b8
1001b714:	100278e0 	.word	0x100278e0
1001b718:	cccccccd 	.word	0xcccccccd
1001b71c:	1002790c 	.word	0x1002790c
1001b720:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001b722:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001b724:	681b      	ldr	r3, [r3, #0]
1001b726:	601a      	str	r2, [r3, #0]
1001b728:	f7ff baa8 	b.w	1001ac7c <_vfprintf_r+0x7b0>
1001b72c:	f8dd 9024 	ldr.w	r9, [sp, #36]	@ 0x24
1001b730:	9b15      	ldr	r3, [sp, #84]	@ 0x54
1001b732:	603b      	str	r3, [r7, #0]
1001b734:	3601      	adds	r6, #1
1001b736:	4444      	add	r4, r8
1001b738:	2e07      	cmp	r6, #7
1001b73a:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001b73e:	f8c7 8004 	str.w	r8, [r7, #4]
1001b742:	f77f ac29 	ble.w	1001af98 <_vfprintf_r+0xacc>
1001b746:	e525      	b.n	1001b194 <_vfprintf_r+0xcc8>
1001b748:	2e10      	cmp	r6, #16
1001b74a:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001b74c:	f340 84ad 	ble.w	1001c0aa <_vfprintf_r+0x1bde>
1001b750:	4898      	ldr	r0, [pc, #608]	@ (1001b9b4 <_vfprintf_r+0x14e8>)
1001b752:	9015      	str	r0, [sp, #84]	@ 0x54
1001b754:	4642      	mov	r2, r8
1001b756:	4621      	mov	r1, r4
1001b758:	46a8      	mov	r8, r5
1001b75a:	e9dd 4a07 	ldrd	r4, sl, [sp, #28]
1001b75e:	2710      	movs	r7, #16
1001b760:	4605      	mov	r5, r0
1001b762:	e004      	b.n	1001b76e <_vfprintf_r+0x12a2>
1001b764:	3208      	adds	r2, #8
1001b766:	3e10      	subs	r6, #16
1001b768:	2e10      	cmp	r6, #16
1001b76a:	f340 81ca 	ble.w	1001bb02 <_vfprintf_r+0x1636>
1001b76e:	3301      	adds	r3, #1
1001b770:	3110      	adds	r1, #16
1001b772:	2b07      	cmp	r3, #7
1001b774:	e9c2 5700 	strd	r5, r7, [r2]
1001b778:	e9cd 3133 	strd	r3, r1, [sp, #204]	@ 0xcc
1001b77c:	ddf2      	ble.n	1001b764 <_vfprintf_r+0x1298>
1001b77e:	aa32      	add	r2, sp, #200	@ 0xc8
1001b780:	4621      	mov	r1, r4
1001b782:	4650      	mov	r0, sl
1001b784:	f000 fd42 	bl	1001c20c <__sprint_r>
1001b788:	2800      	cmp	r0, #0
1001b78a:	f47f af38 	bne.w	1001b5fe <_vfprintf_r+0x1132>
1001b78e:	e9dd 3133 	ldrd	r3, r1, [sp, #204]	@ 0xcc
1001b792:	aa35      	add	r2, sp, #212	@ 0xd4
1001b794:	e7e7      	b.n	1001b766 <_vfprintf_r+0x129a>
1001b796:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
1001b79a:	bf1c      	itt	ne
1001b79c:	b2db      	uxtbne	r3, r3
1001b79e:	4602      	movne	r2, r0
1001b7a0:	e63b      	b.n	1001b41a <_vfprintf_r+0xf4e>
1001b7a2:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
1001b7a6:	bf1c      	itt	ne
1001b7a8:	b2db      	uxtbne	r3, r3
1001b7aa:	4602      	movne	r2, r0
1001b7ac:	f7ff b9f9 	b.w	1001aba2 <_vfprintf_r+0x6d6>
1001b7b0:	9e09      	ldr	r6, [sp, #36]	@ 0x24
1001b7b2:	2302      	movs	r3, #2
1001b7b4:	e9cd 3600 	strd	r3, r6, [sp]
1001b7b8:	ab30      	add	r3, sp, #192	@ 0xc0
1001b7ba:	9304      	str	r3, [sp, #16]
1001b7bc:	ab2b      	add	r3, sp, #172	@ 0xac
1001b7be:	9303      	str	r3, [sp, #12]
1001b7c0:	ab29      	add	r3, sp, #164	@ 0xa4
1001b7c2:	9302      	str	r3, [sp, #8]
1001b7c4:	9808      	ldr	r0, [sp, #32]
1001b7c6:	e9dd 2324 	ldrd	r2, r3, [sp, #144]	@ 0x90
1001b7ca:	f002 fe11 	bl	1001e3f0 <_dtoa_r>
1001b7ce:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001b7d0:	2b67      	cmp	r3, #103	@ 0x67
1001b7d2:	4605      	mov	r5, r0
1001b7d4:	f000 8177 	beq.w	1001bac6 <_vfprintf_r+0x15fa>
1001b7d8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001b7da:	2b47      	cmp	r3, #71	@ 0x47
1001b7dc:	f000 8173 	beq.w	1001bac6 <_vfprintf_r+0x15fa>
1001b7e0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001b7e2:	f023 0720 	bic.w	r7, r3, #32
1001b7e6:	2f46      	cmp	r7, #70	@ 0x46
1001b7e8:	eb00 0406 	add.w	r4, r0, r6
1001b7ec:	d105      	bne.n	1001b7fa <_vfprintf_r+0x132e>
1001b7ee:	7803      	ldrb	r3, [r0, #0]
1001b7f0:	2b30      	cmp	r3, #48	@ 0x30
1001b7f2:	f000 83db 	beq.w	1001bfac <_vfprintf_r+0x1ae0>
1001b7f6:	9e29      	ldr	r6, [sp, #164]	@ 0xa4
1001b7f8:	4434      	add	r4, r6
1001b7fa:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001b7fe:	2200      	movs	r2, #0
1001b800:	2300      	movs	r3, #0
1001b802:	f004 fc1f 	bl	10020044 <__aeabi_dcmpeq>
1001b806:	2800      	cmp	r0, #0
1001b808:	f000 81cc 	beq.w	1001bba4 <_vfprintf_r+0x16d8>
1001b80c:	4623      	mov	r3, r4
1001b80e:	1b5b      	subs	r3, r3, r5
1001b810:	9313      	str	r3, [sp, #76]	@ 0x4c
1001b812:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001b814:	9212      	str	r2, [sp, #72]	@ 0x48
1001b816:	2f47      	cmp	r7, #71	@ 0x47
1001b818:	f000 815d 	beq.w	1001bad6 <_vfprintf_r+0x160a>
1001b81c:	2f46      	cmp	r7, #70	@ 0x46
1001b81e:	f000 82e3 	beq.w	1001bde8 <_vfprintf_r+0x191c>
1001b822:	990e      	ldr	r1, [sp, #56]	@ 0x38
1001b824:	1e53      	subs	r3, r2, #1
1001b826:	2961      	cmp	r1, #97	@ 0x61
1001b828:	9329      	str	r3, [sp, #164]	@ 0xa4
1001b82a:	f000 8441 	beq.w	1001c0b0 <_vfprintf_r+0x1be4>
1001b82e:	2941      	cmp	r1, #65	@ 0x41
1001b830:	f040 815c 	bne.w	1001baec <_vfprintf_r+0x1620>
1001b834:	2150      	movs	r1, #80	@ 0x50
1001b836:	2001      	movs	r0, #1
1001b838:	2b00      	cmp	r3, #0
1001b83a:	bfb6      	itet	lt
1001b83c:	f1c2 0301 	rsblt	r3, r2, #1
1001b840:	222b      	movge	r2, #43	@ 0x2b
1001b842:	222d      	movlt	r2, #45	@ 0x2d
1001b844:	2b09      	cmp	r3, #9
1001b846:	f88d 10b0 	strb.w	r1, [sp, #176]	@ 0xb0
1001b84a:	f88d 20b1 	strb.w	r2, [sp, #177]	@ 0xb1
1001b84e:	f340 8377 	ble.w	1001bf40 <_vfprintf_r+0x1a74>
1001b852:	f10d 04c7 	add.w	r4, sp, #199	@ 0xc7
1001b856:	4e58      	ldr	r6, [pc, #352]	@ (1001b9b8 <_vfprintf_r+0x14ec>)
1001b858:	4622      	mov	r2, r4
1001b85a:	4610      	mov	r0, r2
1001b85c:	fba6 1203 	umull	r1, r2, r6, r3
1001b860:	08d2      	lsrs	r2, r2, #3
1001b862:	eb02 0182 	add.w	r1, r2, r2, lsl #2
1001b866:	eba3 0141 	sub.w	r1, r3, r1, lsl #1
1001b86a:	3130      	adds	r1, #48	@ 0x30
1001b86c:	f800 1c01 	strb.w	r1, [r0, #-1]
1001b870:	4619      	mov	r1, r3
1001b872:	2963      	cmp	r1, #99	@ 0x63
1001b874:	4613      	mov	r3, r2
1001b876:	f100 32ff 	add.w	r2, r0, #4294967295	@ 0xffffffff
1001b87a:	dcee      	bgt.n	1001b85a <_vfprintf_r+0x138e>
1001b87c:	3330      	adds	r3, #48	@ 0x30
1001b87e:	f802 3c01 	strb.w	r3, [r2, #-1]
1001b882:	1e83      	subs	r3, r0, #2
1001b884:	42a3      	cmp	r3, r4
1001b886:	f080 840c 	bcs.w	1001c0a2 <_vfprintf_r+0x1bd6>
1001b88a:	f10d 02b1 	add.w	r2, sp, #177	@ 0xb1
1001b88e:	f813 1b01 	ldrb.w	r1, [r3], #1
1001b892:	f802 1f01 	strb.w	r1, [r2, #1]!
1001b896:	42a3      	cmp	r3, r4
1001b898:	d1f9      	bne.n	1001b88e <_vfprintf_r+0x13c2>
1001b89a:	ab5e      	add	r3, sp, #376	@ 0x178
1001b89c:	1a18      	subs	r0, r3, r0
1001b89e:	f1a0 03ad 	sub.w	r3, r0, #173	@ 0xad
1001b8a2:	931c      	str	r3, [sp, #112]	@ 0x70
1001b8a4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001b8a6:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
1001b8a8:	2b01      	cmp	r3, #1
1001b8aa:	eb03 0b02 	add.w	fp, r3, r2
1001b8ae:	f340 8378 	ble.w	1001bfa2 <_vfprintf_r+0x1ad6>
1001b8b2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001b8b4:	449b      	add	fp, r3
1001b8b6:	9b06      	ldr	r3, [sp, #24]
1001b8b8:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
1001b8bc:	f443 7980 	orr.w	r9, r3, #256	@ 0x100
1001b8c0:	ea2b 72eb 	bic.w	r2, fp, fp, asr #31
1001b8c4:	2300      	movs	r3, #0
1001b8c6:	9314      	str	r3, [sp, #80]	@ 0x50
1001b8c8:	9206      	str	r2, [sp, #24]
1001b8ca:	9310      	str	r3, [sp, #64]	@ 0x40
1001b8cc:	9312      	str	r3, [sp, #72]	@ 0x48
1001b8ce:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
1001b8d0:	2b00      	cmp	r3, #0
1001b8d2:	f040 810f 	bne.w	1001baf4 <_vfprintf_r+0x1628>
1001b8d6:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001b8da:	9309      	str	r3, [sp, #36]	@ 0x24
1001b8dc:	f7ff b828 	b.w	1001a930 <_vfprintf_r+0x464>
1001b8e0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001b8e2:	ebab 060a 	sub.w	r6, fp, sl
1001b8e6:	1b5d      	subs	r5, r3, r5
1001b8e8:	42ae      	cmp	r6, r5
1001b8ea:	bfa8      	it	ge
1001b8ec:	462e      	movge	r6, r5
1001b8ee:	e418      	b.n	1001b122 <_vfprintf_r+0xc56>
1001b8f0:	f343 12c0 	sbfx	r2, r3, #7, #1
1001b8f4:	4611      	mov	r1, r2
1001b8f6:	b25b      	sxtb	r3, r3
1001b8f8:	f7ff b8d0 	b.w	1001aa9c <_vfprintf_r+0x5d0>
1001b8fc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001b8fe:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001b900:	681b      	ldr	r3, [r3, #0]
1001b902:	801a      	strh	r2, [r3, #0]
1001b904:	f7ff b9ba 	b.w	1001ac7c <_vfprintf_r+0x7b0>
1001b908:	9907      	ldr	r1, [sp, #28]
1001b90a:	aa32      	add	r2, sp, #200	@ 0xc8
1001b90c:	4658      	mov	r0, fp
1001b90e:	f000 fc7d 	bl	1001c20c <__sprint_r>
1001b912:	2800      	cmp	r0, #0
1001b914:	f43e af22 	beq.w	1001a75c <_vfprintf_r+0x290>
1001b918:	f7fe bf36 	b.w	1001a788 <_vfprintf_r+0x2bc>
1001b91c:	4628      	mov	r0, r5
1001b91e:	960d      	str	r6, [sp, #52]	@ 0x34
1001b920:	f7fa f90e 	bl	10015b40 <strlen>
1001b924:	4683      	mov	fp, r0
1001b926:	f7ff b89c 	b.w	1001aa62 <_vfprintf_r+0x596>
1001b92a:	2358      	movs	r3, #88	@ 0x58
1001b92c:	f88d 30a1 	strb.w	r3, [sp, #161]	@ 0xa1
1001b930:	2330      	movs	r3, #48	@ 0x30
1001b932:	f88d 30a0 	strb.w	r3, [sp, #160]	@ 0xa0
1001b936:	f049 0302 	orr.w	r3, r9, #2
1001b93a:	9306      	str	r3, [sp, #24]
1001b93c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001b93e:	2b63      	cmp	r3, #99	@ 0x63
1001b940:	f300 82f6 	bgt.w	1001bf30 <_vfprintf_r+0x1a64>
1001b944:	2300      	movs	r3, #0
1001b946:	930c      	str	r3, [sp, #48]	@ 0x30
1001b948:	ad45      	add	r5, sp, #276	@ 0x114
1001b94a:	f449 7381 	orr.w	r3, r9, #258	@ 0x102
1001b94e:	9315      	str	r3, [sp, #84]	@ 0x54
1001b950:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
1001b952:	2b00      	cmp	r3, #0
1001b954:	f2c0 8200 	blt.w	1001bd58 <_vfprintf_r+0x188c>
1001b958:	2300      	movs	r3, #0
1001b95a:	931f      	str	r3, [sp, #124]	@ 0x7c
1001b95c:	e9dd 3416 	ldrd	r3, r4, [sp, #88]	@ 0x58
1001b960:	e9cd 3424 	strd	r3, r4, [sp, #144]	@ 0x90
1001b964:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001b966:	2b61      	cmp	r3, #97	@ 0x61
1001b968:	f47f ad1a 	bne.w	1001b3a0 <_vfprintf_r+0xed4>
1001b96c:	aa29      	add	r2, sp, #164	@ 0xa4
1001b96e:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001b972:	f003 fc67 	bl	1001f244 <frexp>
1001b976:	2200      	movs	r2, #0
1001b978:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
1001b97c:	f004 f8fa 	bl	1001fb74 <__aeabi_dmul>
1001b980:	4602      	mov	r2, r0
1001b982:	460b      	mov	r3, r1
1001b984:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
1001b988:	2200      	movs	r2, #0
1001b98a:	2300      	movs	r3, #0
1001b98c:	f004 fb5a 	bl	10020044 <__aeabi_dcmpeq>
1001b990:	2800      	cmp	r0, #0
1001b992:	f040 82f8 	bne.w	1001bf86 <_vfprintf_r+0x1aba>
1001b996:	4b09      	ldr	r3, [pc, #36]	@ (1001b9bc <_vfprintf_r+0x14f0>)
1001b998:	9312      	str	r3, [sp, #72]	@ 0x48
1001b99a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001b99c:	f8cd 804c 	str.w	r8, [sp, #76]	@ 0x4c
1001b9a0:	f103 39ff 	add.w	r9, r3, #4294967295	@ 0xffffffff
1001b9a4:	462e      	mov	r6, r5
1001b9a6:	9514      	str	r5, [sp, #80]	@ 0x50
1001b9a8:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
1001b9ac:	464d      	mov	r5, r9
1001b9ae:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
1001b9b2:	e00b      	b.n	1001b9cc <_vfprintf_r+0x1500>
1001b9b4:	1002790c 	.word	0x1002790c
1001b9b8:	cccccccd 	.word	0xcccccccd
1001b9bc:	100278b8 	.word	0x100278b8
1001b9c0:	2200      	movs	r2, #0
1001b9c2:	2300      	movs	r3, #0
1001b9c4:	f004 fb3e 	bl	10020044 <__aeabi_dcmpeq>
1001b9c8:	b9f0      	cbnz	r0, 1001ba08 <_vfprintf_r+0x153c>
1001b9ca:	463d      	mov	r5, r7
1001b9cc:	4ba9      	ldr	r3, [pc, #676]	@ (1001bc74 <_vfprintf_r+0x17a8>)
1001b9ce:	2200      	movs	r2, #0
1001b9d0:	4640      	mov	r0, r8
1001b9d2:	4649      	mov	r1, r9
1001b9d4:	f004 f8ce 	bl	1001fb74 <__aeabi_dmul>
1001b9d8:	4689      	mov	r9, r1
1001b9da:	4680      	mov	r8, r0
1001b9dc:	f004 fb7a 	bl	100200d4 <__aeabi_d2iz>
1001b9e0:	4604      	mov	r4, r0
1001b9e2:	f004 f85d 	bl	1001faa0 <__aeabi_i2d>
1001b9e6:	4602      	mov	r2, r0
1001b9e8:	460b      	mov	r3, r1
1001b9ea:	4640      	mov	r0, r8
1001b9ec:	4649      	mov	r1, r9
1001b9ee:	f003 ff09 	bl	1001f804 <__aeabi_dsub>
1001b9f2:	f81b 3004 	ldrb.w	r3, [fp, r4]
1001b9f6:	1c6a      	adds	r2, r5, #1
1001b9f8:	46b2      	mov	sl, r6
1001b9fa:	f105 37ff 	add.w	r7, r5, #4294967295	@ 0xffffffff
1001b9fe:	f806 3b01 	strb.w	r3, [r6], #1
1001ba02:	4680      	mov	r8, r0
1001ba04:	4689      	mov	r9, r1
1001ba06:	d1db      	bne.n	1001b9c0 <_vfprintf_r+0x14f4>
1001ba08:	46cb      	mov	fp, r9
1001ba0a:	4657      	mov	r7, sl
1001ba0c:	46c2      	mov	sl, r8
1001ba0e:	4b9a      	ldr	r3, [pc, #616]	@ (1001bc78 <_vfprintf_r+0x17ac>)
1001ba10:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
1001ba14:	2200      	movs	r2, #0
1001ba16:	4650      	mov	r0, sl
1001ba18:	4659      	mov	r1, fp
1001ba1a:	46a9      	mov	r9, r5
1001ba1c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
1001ba1e:	f004 fb39 	bl	10020094 <__aeabi_dcmpgt>
1001ba22:	2800      	cmp	r0, #0
1001ba24:	f040 8264 	bne.w	1001bef0 <_vfprintf_r+0x1a24>
1001ba28:	4b93      	ldr	r3, [pc, #588]	@ (1001bc78 <_vfprintf_r+0x17ac>)
1001ba2a:	4650      	mov	r0, sl
1001ba2c:	4659      	mov	r1, fp
1001ba2e:	2200      	movs	r2, #0
1001ba30:	f004 fb08 	bl	10020044 <__aeabi_dcmpeq>
1001ba34:	b110      	cbz	r0, 1001ba3c <_vfprintf_r+0x1570>
1001ba36:	07e3      	lsls	r3, r4, #31
1001ba38:	f100 825a 	bmi.w	1001bef0 <_vfprintf_r+0x1a24>
1001ba3c:	f1b9 0f00 	cmp.w	r9, #0
1001ba40:	f2c0 8270 	blt.w	1001bf24 <_vfprintf_r+0x1a58>
1001ba44:	f109 0301 	add.w	r3, r9, #1
1001ba48:	4433      	add	r3, r6
1001ba4a:	2230      	movs	r2, #48	@ 0x30
1001ba4c:	f806 2b01 	strb.w	r2, [r6], #1
1001ba50:	42b3      	cmp	r3, r6
1001ba52:	d1fb      	bne.n	1001ba4c <_vfprintf_r+0x1580>
1001ba54:	1b5b      	subs	r3, r3, r5
1001ba56:	9313      	str	r3, [sp, #76]	@ 0x4c
1001ba58:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001ba5a:	f023 0720 	bic.w	r7, r3, #32
1001ba5e:	e6d8      	b.n	1001b812 <_vfprintf_r+0x1346>
1001ba60:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001ba64:	aa32      	add	r2, sp, #200	@ 0xc8
1001ba66:	f000 fbd1 	bl	1001c20c <__sprint_r>
1001ba6a:	2800      	cmp	r0, #0
1001ba6c:	f47f aa2a 	bne.w	1001aec4 <_vfprintf_r+0x9f8>
1001ba70:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001ba74:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001ba76:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001ba7a:	f7ff ba34 	b.w	1001aee6 <_vfprintf_r+0xa1a>
1001ba7e:	6d88      	ldr	r0, [r1, #88]	@ 0x58
1001ba80:	f7f9 fb02 	bl	10015088 <__retarget_lock_release_recursive>
1001ba84:	f7fe be3c 	b.w	1001a700 <_vfprintf_r+0x234>
1001ba88:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001ba8a:	1c5e      	adds	r6, r3, #1
1001ba8c:	2302      	movs	r3, #2
1001ba8e:	e691      	b.n	1001b7b4 <_vfprintf_r+0x12e8>
1001ba90:	9e09      	ldr	r6, [sp, #36]	@ 0x24
1001ba92:	2303      	movs	r3, #3
1001ba94:	e68e      	b.n	1001b7b4 <_vfprintf_r+0x12e8>
1001ba96:	aa29      	add	r2, sp, #164	@ 0xa4
1001ba98:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001ba9c:	f003 fbd2 	bl	1001f244 <frexp>
1001baa0:	2200      	movs	r2, #0
1001baa2:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
1001baa6:	f004 f865 	bl	1001fb74 <__aeabi_dmul>
1001baaa:	4602      	mov	r2, r0
1001baac:	460b      	mov	r3, r1
1001baae:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
1001bab2:	2200      	movs	r2, #0
1001bab4:	2300      	movs	r3, #0
1001bab6:	f004 fac5 	bl	10020044 <__aeabi_dcmpeq>
1001baba:	2800      	cmp	r0, #0
1001babc:	f040 8263 	bne.w	1001bf86 <_vfprintf_r+0x1aba>
1001bac0:	4b6e      	ldr	r3, [pc, #440]	@ (1001bc7c <_vfprintf_r+0x17b0>)
1001bac2:	9312      	str	r3, [sp, #72]	@ 0x48
1001bac4:	e769      	b.n	1001b99a <_vfprintf_r+0x14ce>
1001bac6:	9b06      	ldr	r3, [sp, #24]
1001bac8:	07df      	lsls	r7, r3, #31
1001baca:	f100 81e4 	bmi.w	1001be96 <_vfprintf_r+0x19ca>
1001bace:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1001bad0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001bad2:	1b5b      	subs	r3, r3, r5
1001bad4:	9313      	str	r3, [sp, #76]	@ 0x4c
1001bad6:	1cd3      	adds	r3, r2, #3
1001bad8:	9212      	str	r2, [sp, #72]	@ 0x48
1001bada:	db02      	blt.n	1001bae2 <_vfprintf_r+0x1616>
1001badc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001bade:	4293      	cmp	r3, r2
1001bae0:	da44      	bge.n	1001bb6c <_vfprintf_r+0x16a0>
1001bae2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001bae4:	3b02      	subs	r3, #2
1001bae6:	930e      	str	r3, [sp, #56]	@ 0x38
1001bae8:	1e53      	subs	r3, r2, #1
1001baea:	9329      	str	r3, [sp, #164]	@ 0xa4
1001baec:	f89d 1038 	ldrb.w	r1, [sp, #56]	@ 0x38
1001baf0:	2000      	movs	r0, #0
1001baf2:	e6a1      	b.n	1001b838 <_vfprintf_r+0x136c>
1001baf4:	222d      	movs	r2, #45	@ 0x2d
1001baf6:	2300      	movs	r3, #0
1001baf8:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001bafc:	9309      	str	r3, [sp, #36]	@ 0x24
1001bafe:	f7fe bf1a 	b.w	1001a936 <_vfprintf_r+0x46a>
1001bb02:	4645      	mov	r5, r8
1001bb04:	460c      	mov	r4, r1
1001bb06:	4690      	mov	r8, r2
1001bb08:	3301      	adds	r3, #1
1001bb0a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001bb0c:	f8c8 2000 	str.w	r2, [r8]
1001bb10:	4434      	add	r4, r6
1001bb12:	2b07      	cmp	r3, #7
1001bb14:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001bb18:	f8c8 6004 	str.w	r6, [r8, #4]
1001bb1c:	f300 8226 	bgt.w	1001bf6c <_vfprintf_r+0x1aa0>
1001bb20:	f108 0808 	add.w	r8, r8, #8
1001bb24:	f7ff bac9 	b.w	1001b0ba <_vfprintf_r+0xbee>
1001bb28:	222d      	movs	r2, #45	@ 0x2d
1001bb2a:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001bb2e:	f7fe beee 	b.w	1001a90e <_vfprintf_r+0x442>
1001bb32:	2300      	movs	r3, #0
1001bb34:	9808      	ldr	r0, [sp, #32]
1001bb36:	9700      	str	r7, [sp, #0]
1001bb38:	aa2b      	add	r2, sp, #172	@ 0xac
1001bb3a:	4619      	mov	r1, r3
1001bb3c:	f002 fbb2 	bl	1001e2a4 <_wcsrtombs_r>
1001bb40:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
1001bb44:	4683      	mov	fp, r0
1001bb46:	f000 8209 	beq.w	1001bf5c <_vfprintf_r+0x1a90>
1001bb4a:	952b      	str	r5, [sp, #172]	@ 0xac
1001bb4c:	e59d      	b.n	1001b68a <_vfprintf_r+0x11be>
1001bb4e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
1001bb50:	991d      	ldr	r1, [sp, #116]	@ 0x74
1001bb52:	1aed      	subs	r5, r5, r3
1001bb54:	461a      	mov	r2, r3
1001bb56:	4628      	mov	r0, r5
1001bb58:	f7fc f9dc 	bl	10017f14 <strncpy>
1001bb5c:	f898 3001 	ldrb.w	r3, [r8, #1]
1001bb60:	b10b      	cbz	r3, 1001bb66 <_vfprintf_r+0x169a>
1001bb62:	f108 0801 	add.w	r8, r8, #1
1001bb66:	f04f 0c00 	mov.w	ip, #0
1001bb6a:	e4f7      	b.n	1001b55c <_vfprintf_r+0x1090>
1001bb6c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001bb6e:	4293      	cmp	r3, r2
1001bb70:	f300 8194 	bgt.w	1001be9c <_vfprintf_r+0x19d0>
1001bb74:	9b06      	ldr	r3, [sp, #24]
1001bb76:	07dc      	lsls	r4, r3, #31
1001bb78:	f140 824a 	bpl.w	1001c010 <_vfprintf_r+0x1b44>
1001bb7c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001bb7e:	eb02 0b03 	add.w	fp, r2, r3
1001bb82:	9b06      	ldr	r3, [sp, #24]
1001bb84:	0558      	lsls	r0, r3, #21
1001bb86:	d502      	bpl.n	1001bb8e <_vfprintf_r+0x16c2>
1001bb88:	2a00      	cmp	r2, #0
1001bb8a:	f300 824a 	bgt.w	1001c022 <_vfprintf_r+0x1b56>
1001bb8e:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001bb92:	9306      	str	r3, [sp, #24]
1001bb94:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001bb98:	2367      	movs	r3, #103	@ 0x67
1001bb9a:	930e      	str	r3, [sp, #56]	@ 0x38
1001bb9c:	2300      	movs	r3, #0
1001bb9e:	9314      	str	r3, [sp, #80]	@ 0x50
1001bba0:	9310      	str	r3, [sp, #64]	@ 0x40
1001bba2:	e694      	b.n	1001b8ce <_vfprintf_r+0x1402>
1001bba4:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1001bba6:	42a3      	cmp	r3, r4
1001bba8:	f4bf ae31 	bcs.w	1001b80e <_vfprintf_r+0x1342>
1001bbac:	2130      	movs	r1, #48	@ 0x30
1001bbae:	1c5a      	adds	r2, r3, #1
1001bbb0:	9230      	str	r2, [sp, #192]	@ 0xc0
1001bbb2:	7019      	strb	r1, [r3, #0]
1001bbb4:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1001bbb6:	429c      	cmp	r4, r3
1001bbb8:	d8f9      	bhi.n	1001bbae <_vfprintf_r+0x16e2>
1001bbba:	e628      	b.n	1001b80e <_vfprintf_r+0x1342>
1001bbbc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001bbbe:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
1001bbc2:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
1001bbc6:	4642      	mov	r2, r8
1001bbc8:	4621      	mov	r1, r4
1001bbca:	4f2d      	ldr	r7, [pc, #180]	@ (1001bc80 <_vfprintf_r+0x17b4>)
1001bbcc:	f8dd 9050 	ldr.w	r9, [sp, #80]	@ 0x50
1001bbd0:	f8dd 8078 	ldr.w	r8, [sp, #120]	@ 0x78
1001bbd4:	f8dd b020 	ldr.w	fp, [sp, #32]
1001bbd8:	4654      	mov	r4, sl
1001bbda:	f8dd a06c 	ldr.w	sl, [sp, #108]	@ 0x6c
1001bbde:	b37b      	cbz	r3, 1001bc40 <_vfprintf_r+0x1774>
1001bbe0:	f1b9 0f00 	cmp.w	r9, #0
1001bbe4:	f000 8085 	beq.w	1001bcf2 <_vfprintf_r+0x1826>
1001bbe8:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
1001bbec:	9833      	ldr	r0, [sp, #204]	@ 0xcc
1001bbee:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
1001bbf0:	3001      	adds	r0, #1
1001bbf2:	4441      	add	r1, r8
1001bbf4:	2807      	cmp	r0, #7
1001bbf6:	e9c2 3800 	strd	r3, r8, [r2]
1001bbfa:	9134      	str	r1, [sp, #208]	@ 0xd0
1001bbfc:	9033      	str	r0, [sp, #204]	@ 0xcc
1001bbfe:	dc6d      	bgt.n	1001bcdc <_vfprintf_r+0x1810>
1001bc00:	3208      	adds	r2, #8
1001bc02:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001bc04:	f89a 0000 	ldrb.w	r0, [sl]
1001bc08:	1b1e      	subs	r6, r3, r4
1001bc0a:	4286      	cmp	r6, r0
1001bc0c:	bfa8      	it	ge
1001bc0e:	4606      	movge	r6, r0
1001bc10:	2e00      	cmp	r6, #0
1001bc12:	dd0b      	ble.n	1001bc2c <_vfprintf_r+0x1760>
1001bc14:	9833      	ldr	r0, [sp, #204]	@ 0xcc
1001bc16:	3001      	adds	r0, #1
1001bc18:	4431      	add	r1, r6
1001bc1a:	2807      	cmp	r0, #7
1001bc1c:	e9c2 4600 	strd	r4, r6, [r2]
1001bc20:	9134      	str	r1, [sp, #208]	@ 0xd0
1001bc22:	9033      	str	r0, [sp, #204]	@ 0xcc
1001bc24:	dc6b      	bgt.n	1001bcfe <_vfprintf_r+0x1832>
1001bc26:	f89a 0000 	ldrb.w	r0, [sl]
1001bc2a:	3208      	adds	r2, #8
1001bc2c:	2e00      	cmp	r6, #0
1001bc2e:	bfac      	ite	ge
1001bc30:	1b85      	subge	r5, r0, r6
1001bc32:	4605      	movlt	r5, r0
1001bc34:	2d00      	cmp	r5, #0
1001bc36:	dc14      	bgt.n	1001bc62 <_vfprintf_r+0x1796>
1001bc38:	4404      	add	r4, r0
1001bc3a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001bc3c:	2b00      	cmp	r3, #0
1001bc3e:	d1cf      	bne.n	1001bbe0 <_vfprintf_r+0x1714>
1001bc40:	f1b9 0f00 	cmp.w	r9, #0
1001bc44:	d1d0      	bne.n	1001bbe8 <_vfprintf_r+0x171c>
1001bc46:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
1001bc4a:	f8cd a06c 	str.w	sl, [sp, #108]	@ 0x6c
1001bc4e:	46a2      	mov	sl, r4
1001bc50:	45da      	cmp	sl, fp
1001bc52:	f8dd 9038 	ldr.w	r9, [sp, #56]	@ 0x38
1001bc56:	4690      	mov	r8, r2
1001bc58:	460c      	mov	r4, r1
1001bc5a:	bf28      	it	cs
1001bc5c:	46da      	movcs	sl, fp
1001bc5e:	f7ff ba33 	b.w	1001b0c8 <_vfprintf_r+0xbfc>
1001bc62:	2d10      	cmp	r5, #16
1001bc64:	9833      	ldr	r0, [sp, #204]	@ 0xcc
1001bc66:	f340 821a 	ble.w	1001c09e <_vfprintf_r+0x1bd2>
1001bc6a:	4623      	mov	r3, r4
1001bc6c:	463e      	mov	r6, r7
1001bc6e:	462c      	mov	r4, r5
1001bc70:	461d      	mov	r5, r3
1001bc72:	e00c      	b.n	1001bc8e <_vfprintf_r+0x17c2>
1001bc74:	40300000 	.word	0x40300000
1001bc78:	3fe00000 	.word	0x3fe00000
1001bc7c:	100278cc 	.word	0x100278cc
1001bc80:	1002790c 	.word	0x1002790c
1001bc84:	3c10      	subs	r4, #16
1001bc86:	2c10      	cmp	r4, #16
1001bc88:	f102 0208 	add.w	r2, r2, #8
1001bc8c:	dd16      	ble.n	1001bcbc <_vfprintf_r+0x17f0>
1001bc8e:	3001      	adds	r0, #1
1001bc90:	3110      	adds	r1, #16
1001bc92:	2310      	movs	r3, #16
1001bc94:	2807      	cmp	r0, #7
1001bc96:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
1001bc9a:	6017      	str	r7, [r2, #0]
1001bc9c:	6053      	str	r3, [r2, #4]
1001bc9e:	ddf1      	ble.n	1001bc84 <_vfprintf_r+0x17b8>
1001bca0:	9907      	ldr	r1, [sp, #28]
1001bca2:	aa32      	add	r2, sp, #200	@ 0xc8
1001bca4:	4658      	mov	r0, fp
1001bca6:	f000 fab1 	bl	1001c20c <__sprint_r>
1001bcaa:	2800      	cmp	r0, #0
1001bcac:	f47e ad66 	bne.w	1001a77c <_vfprintf_r+0x2b0>
1001bcb0:	3c10      	subs	r4, #16
1001bcb2:	2c10      	cmp	r4, #16
1001bcb4:	e9dd 0133 	ldrd	r0, r1, [sp, #204]	@ 0xcc
1001bcb8:	aa35      	add	r2, sp, #212	@ 0xd4
1001bcba:	dce8      	bgt.n	1001bc8e <_vfprintf_r+0x17c2>
1001bcbc:	462b      	mov	r3, r5
1001bcbe:	4625      	mov	r5, r4
1001bcc0:	461c      	mov	r4, r3
1001bcc2:	3001      	adds	r0, #1
1001bcc4:	4429      	add	r1, r5
1001bcc6:	2807      	cmp	r0, #7
1001bcc8:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
1001bccc:	6016      	str	r6, [r2, #0]
1001bcce:	6055      	str	r5, [r2, #4]
1001bcd0:	dc4b      	bgt.n	1001bd6a <_vfprintf_r+0x189e>
1001bcd2:	f89a 0000 	ldrb.w	r0, [sl]
1001bcd6:	3208      	adds	r2, #8
1001bcd8:	4404      	add	r4, r0
1001bcda:	e7ae      	b.n	1001bc3a <_vfprintf_r+0x176e>
1001bcdc:	9907      	ldr	r1, [sp, #28]
1001bcde:	aa32      	add	r2, sp, #200	@ 0xc8
1001bce0:	4658      	mov	r0, fp
1001bce2:	f000 fa93 	bl	1001c20c <__sprint_r>
1001bce6:	2800      	cmp	r0, #0
1001bce8:	f47e ad48 	bne.w	1001a77c <_vfprintf_r+0x2b0>
1001bcec:	9934      	ldr	r1, [sp, #208]	@ 0xd0
1001bcee:	aa35      	add	r2, sp, #212	@ 0xd4
1001bcf0:	e787      	b.n	1001bc02 <_vfprintf_r+0x1736>
1001bcf2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001bcf4:	3b01      	subs	r3, #1
1001bcf6:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
1001bcfa:	9310      	str	r3, [sp, #64]	@ 0x40
1001bcfc:	e776      	b.n	1001bbec <_vfprintf_r+0x1720>
1001bcfe:	9907      	ldr	r1, [sp, #28]
1001bd00:	aa32      	add	r2, sp, #200	@ 0xc8
1001bd02:	4658      	mov	r0, fp
1001bd04:	f000 fa82 	bl	1001c20c <__sprint_r>
1001bd08:	2800      	cmp	r0, #0
1001bd0a:	f47e ad37 	bne.w	1001a77c <_vfprintf_r+0x2b0>
1001bd0e:	f89a 0000 	ldrb.w	r0, [sl]
1001bd12:	9934      	ldr	r1, [sp, #208]	@ 0xd0
1001bd14:	aa35      	add	r2, sp, #212	@ 0xd4
1001bd16:	e789      	b.n	1001bc2c <_vfprintf_r+0x1760>
1001bd18:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001bd1c:	960d      	str	r6, [sp, #52]	@ 0x34
1001bd1e:	f8cd b018 	str.w	fp, [sp, #24]
1001bd22:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
1001bd26:	f8cd b050 	str.w	fp, [sp, #80]	@ 0x50
1001bd2a:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
1001bd2e:	f8cd b048 	str.w	fp, [sp, #72]	@ 0x48
1001bd32:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
1001bd36:	f7fe bdfb 	b.w	1001a930 <_vfprintf_r+0x464>
1001bd3a:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001bd3e:	aa32      	add	r2, sp, #200	@ 0xc8
1001bd40:	f000 fa64 	bl	1001c20c <__sprint_r>
1001bd44:	2800      	cmp	r0, #0
1001bd46:	f47f a8bd 	bne.w	1001aec4 <_vfprintf_r+0x9f8>
1001bd4a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001bd4c:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001bd4e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001bd52:	f7ff baa3 	b.w	1001b29c <_vfprintf_r+0xdd0>
1001bd56:	930c      	str	r3, [sp, #48]	@ 0x30
1001bd58:	e9dd 3416 	ldrd	r3, r4, [sp, #88]	@ 0x58
1001bd5c:	9324      	str	r3, [sp, #144]	@ 0x90
1001bd5e:	f104 4300 	add.w	r3, r4, #2147483648	@ 0x80000000
1001bd62:	9325      	str	r3, [sp, #148]	@ 0x94
1001bd64:	232d      	movs	r3, #45	@ 0x2d
1001bd66:	931f      	str	r3, [sp, #124]	@ 0x7c
1001bd68:	e5fc      	b.n	1001b964 <_vfprintf_r+0x1498>
1001bd6a:	9907      	ldr	r1, [sp, #28]
1001bd6c:	aa32      	add	r2, sp, #200	@ 0xc8
1001bd6e:	4658      	mov	r0, fp
1001bd70:	f000 fa4c 	bl	1001c20c <__sprint_r>
1001bd74:	2800      	cmp	r0, #0
1001bd76:	f47e ad01 	bne.w	1001a77c <_vfprintf_r+0x2b0>
1001bd7a:	f89a 0000 	ldrb.w	r0, [sl]
1001bd7e:	9934      	ldr	r1, [sp, #208]	@ 0xd0
1001bd80:	aa35      	add	r2, sp, #212	@ 0xd4
1001bd82:	4404      	add	r4, r0
1001bd84:	e759      	b.n	1001bc3a <_vfprintf_r+0x176e>
1001bd86:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001bd8a:	aa32      	add	r2, sp, #200	@ 0xc8
1001bd8c:	f000 fa3e 	bl	1001c20c <__sprint_r>
1001bd90:	2800      	cmp	r0, #0
1001bd92:	f47f a897 	bne.w	1001aec4 <_vfprintf_r+0x9f8>
1001bd96:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001bd98:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001bd9c:	f7ff b986 	b.w	1001b0ac <_vfprintf_r+0xbe0>
1001bda0:	2378      	movs	r3, #120	@ 0x78
1001bda2:	e5c3      	b.n	1001b92c <_vfprintf_r+0x1460>
1001bda4:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001bda8:	aa32      	add	r2, sp, #200	@ 0xc8
1001bdaa:	f000 fa2f 	bl	1001c20c <__sprint_r>
1001bdae:	2800      	cmp	r0, #0
1001bdb0:	f47f a888 	bne.w	1001aec4 <_vfprintf_r+0x9f8>
1001bdb4:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
1001bdb6:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001bdb8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001bdbc:	f7ff b99a 	b.w	1001b0f4 <_vfprintf_r+0xc28>
1001bdc0:	49ab      	ldr	r1, [pc, #684]	@ (1001c070 <_vfprintf_r+0x1ba4>)
1001bdc2:	9115      	str	r1, [sp, #84]	@ 0x54
1001bdc4:	f7fe bdeb 	b.w	1001a99e <_vfprintf_r+0x4d2>
1001bdc8:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001bdcc:	aa32      	add	r2, sp, #200	@ 0xc8
1001bdce:	f000 fa1d 	bl	1001c20c <__sprint_r>
1001bdd2:	2800      	cmp	r0, #0
1001bdd4:	f47f a876 	bne.w	1001aec4 <_vfprintf_r+0x9f8>
1001bdd8:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
1001bdda:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001bddc:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001bdde:	1b5d      	subs	r5, r3, r5
1001bde0:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001bde4:	f7ff b99d 	b.w	1001b122 <_vfprintf_r+0xc56>
1001bde8:	9b06      	ldr	r3, [sp, #24]
1001bdea:	9912      	ldr	r1, [sp, #72]	@ 0x48
1001bdec:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001bdee:	f003 0301 	and.w	r3, r3, #1
1001bdf2:	2900      	cmp	r1, #0
1001bdf4:	ea43 0302 	orr.w	r3, r3, r2
1001bdf8:	f340 815d 	ble.w	1001c0b6 <_vfprintf_r+0x1bea>
1001bdfc:	2b00      	cmp	r3, #0
1001bdfe:	f040 8109 	bne.w	1001c014 <_vfprintf_r+0x1b48>
1001be02:	2366      	movs	r3, #102	@ 0x66
1001be04:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
1001be08:	930e      	str	r3, [sp, #56]	@ 0x38
1001be0a:	9b06      	ldr	r3, [sp, #24]
1001be0c:	055a      	lsls	r2, r3, #21
1001be0e:	f100 810a 	bmi.w	1001c026 <_vfprintf_r+0x1b5a>
1001be12:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001be16:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001be1a:	9306      	str	r3, [sp, #24]
1001be1c:	e6be      	b.n	1001bb9c <_vfprintf_r+0x16d0>
1001be1e:	2200      	movs	r2, #0
1001be20:	9209      	str	r2, [sp, #36]	@ 0x24
1001be22:	f7fe bbcc 	b.w	1001a5be <_vfprintf_r+0xf2>
1001be26:	9b07      	ldr	r3, [sp, #28]
1001be28:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
1001be2a:	07df      	lsls	r7, r3, #31
1001be2c:	d407      	bmi.n	1001be3e <_vfprintf_r+0x1972>
1001be2e:	9b07      	ldr	r3, [sp, #28]
1001be30:	899b      	ldrh	r3, [r3, #12]
1001be32:	059e      	lsls	r6, r3, #22
1001be34:	d403      	bmi.n	1001be3e <_vfprintf_r+0x1972>
1001be36:	9b07      	ldr	r3, [sp, #28]
1001be38:	6d98      	ldr	r0, [r3, #88]	@ 0x58
1001be3a:	f7f9 f925 	bl	10015088 <__retarget_lock_release_recursive>
1001be3e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001be42:	930a      	str	r3, [sp, #40]	@ 0x28
1001be44:	f7fe bcab 	b.w	1001a79e <_vfprintf_r+0x2d2>
1001be48:	4256      	negs	r6, r2
1001be4a:	3210      	adds	r2, #16
1001be4c:	4a89      	ldr	r2, [pc, #548]	@ (1001c074 <_vfprintf_r+0x1ba8>)
1001be4e:	9215      	str	r2, [sp, #84]	@ 0x54
1001be50:	da34      	bge.n	1001bebc <_vfprintf_r+0x19f0>
1001be52:	46aa      	mov	sl, r5
1001be54:	2710      	movs	r7, #16
1001be56:	4615      	mov	r5, r2
1001be58:	e004      	b.n	1001be64 <_vfprintf_r+0x1998>
1001be5a:	f108 0808 	add.w	r8, r8, #8
1001be5e:	3e10      	subs	r6, #16
1001be60:	2e10      	cmp	r6, #16
1001be62:	dd2a      	ble.n	1001beba <_vfprintf_r+0x19ee>
1001be64:	3301      	adds	r3, #1
1001be66:	3410      	adds	r4, #16
1001be68:	2b07      	cmp	r3, #7
1001be6a:	e9c8 5700 	strd	r5, r7, [r8]
1001be6e:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001be72:	ddf2      	ble.n	1001be5a <_vfprintf_r+0x198e>
1001be74:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001be78:	aa32      	add	r2, sp, #200	@ 0xc8
1001be7a:	f000 f9c7 	bl	1001c20c <__sprint_r>
1001be7e:	2800      	cmp	r0, #0
1001be80:	f47f a820 	bne.w	1001aec4 <_vfprintf_r+0x9f8>
1001be84:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001be88:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001be8c:	e7e7      	b.n	1001be5e <_vfprintf_r+0x1992>
1001be8e:	2300      	movs	r3, #0
1001be90:	930c      	str	r3, [sp, #48]	@ 0x30
1001be92:	ad45      	add	r5, sp, #276	@ 0x114
1001be94:	e40b      	b.n	1001b6ae <_vfprintf_r+0x11e2>
1001be96:	19ac      	adds	r4, r5, r6
1001be98:	2747      	movs	r7, #71	@ 0x47
1001be9a:	e4ae      	b.n	1001b7fa <_vfprintf_r+0x132e>
1001be9c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001be9e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
1001bea0:	eb03 0b02 	add.w	fp, r3, r2
1001bea4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001bea6:	2b00      	cmp	r3, #0
1001bea8:	f340 80ee 	ble.w	1001c088 <_vfprintf_r+0x1bbc>
1001beac:	2367      	movs	r3, #103	@ 0x67
1001beae:	930e      	str	r3, [sp, #56]	@ 0x38
1001beb0:	e7ab      	b.n	1001be0a <_vfprintf_r+0x193e>
1001beb2:	4a6f      	ldr	r2, [pc, #444]	@ (1001c070 <_vfprintf_r+0x1ba4>)
1001beb4:	9215      	str	r2, [sp, #84]	@ 0x54
1001beb6:	f7ff b8cc 	b.w	1001b052 <_vfprintf_r+0xb86>
1001beba:	4655      	mov	r5, sl
1001bebc:	3301      	adds	r3, #1
1001bebe:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001bec0:	f8c8 2000 	str.w	r2, [r8]
1001bec4:	4434      	add	r4, r6
1001bec6:	2b07      	cmp	r3, #7
1001bec8:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001becc:	f8c8 6004 	str.w	r6, [r8, #4]
1001bed0:	f77f a9f9 	ble.w	1001b2c6 <_vfprintf_r+0xdfa>
1001bed4:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001bed8:	aa32      	add	r2, sp, #200	@ 0xc8
1001beda:	f000 f997 	bl	1001c20c <__sprint_r>
1001bede:	2800      	cmp	r0, #0
1001bee0:	f47e aff0 	bne.w	1001aec4 <_vfprintf_r+0x9f8>
1001bee4:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001bee8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001beec:	f7fe bffe 	b.w	1001aeec <_vfprintf_r+0xa20>
1001bef0:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001bef2:	9730      	str	r7, [sp, #192]	@ 0xc0
1001bef4:	7bd9      	ldrb	r1, [r3, #15]
1001bef6:	f816 2c01 	ldrb.w	r2, [r6, #-1]
1001befa:	428a      	cmp	r2, r1
1001befc:	4633      	mov	r3, r6
1001befe:	d109      	bne.n	1001bf14 <_vfprintf_r+0x1a48>
1001bf00:	2030      	movs	r0, #48	@ 0x30
1001bf02:	f803 0c01 	strb.w	r0, [r3, #-1]
1001bf06:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1001bf08:	1e5a      	subs	r2, r3, #1
1001bf0a:	9230      	str	r2, [sp, #192]	@ 0xc0
1001bf0c:	f813 2c01 	ldrb.w	r2, [r3, #-1]
1001bf10:	4291      	cmp	r1, r2
1001bf12:	d0f6      	beq.n	1001bf02 <_vfprintf_r+0x1a36>
1001bf14:	2a39      	cmp	r2, #57	@ 0x39
1001bf16:	bf0b      	itete	eq
1001bf18:	9a12      	ldreq	r2, [sp, #72]	@ 0x48
1001bf1a:	3201      	addne	r2, #1
1001bf1c:	7a92      	ldrbeq	r2, [r2, #10]
1001bf1e:	b2d2      	uxtbne	r2, r2
1001bf20:	f803 2c01 	strb.w	r2, [r3, #-1]
1001bf24:	4633      	mov	r3, r6
1001bf26:	e595      	b.n	1001ba54 <_vfprintf_r+0x1588>
1001bf28:	4a52      	ldr	r2, [pc, #328]	@ (1001c074 <_vfprintf_r+0x1ba8>)
1001bf2a:	9215      	str	r2, [sp, #84]	@ 0x54
1001bf2c:	f7fe bf76 	b.w	1001ae1c <_vfprintf_r+0x950>
1001bf30:	9808      	ldr	r0, [sp, #32]
1001bf32:	1c59      	adds	r1, r3, #1
1001bf34:	f7f8 fd26 	bl	10014984 <_malloc_r>
1001bf38:	4605      	mov	r5, r0
1001bf3a:	b178      	cbz	r0, 1001bf5c <_vfprintf_r+0x1a90>
1001bf3c:	900c      	str	r0, [sp, #48]	@ 0x30
1001bf3e:	e504      	b.n	1001b94a <_vfprintf_r+0x147e>
1001bf40:	2800      	cmp	r0, #0
1001bf42:	d162      	bne.n	1001c00a <_vfprintf_r+0x1b3e>
1001bf44:	2230      	movs	r2, #48	@ 0x30
1001bf46:	f88d 20b2 	strb.w	r2, [sp, #178]	@ 0xb2
1001bf4a:	f10d 02b3 	add.w	r2, sp, #179	@ 0xb3
1001bf4e:	3330      	adds	r3, #48	@ 0x30
1001bf50:	f802 3b01 	strb.w	r3, [r2], #1
1001bf54:	ab2c      	add	r3, sp, #176	@ 0xb0
1001bf56:	1ad3      	subs	r3, r2, r3
1001bf58:	931c      	str	r3, [sp, #112]	@ 0x70
1001bf5a:	e4a3      	b.n	1001b8a4 <_vfprintf_r+0x13d8>
1001bf5c:	9a07      	ldr	r2, [sp, #28]
1001bf5e:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
1001bf62:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001bf66:	8193      	strh	r3, [r2, #12]
1001bf68:	f7fe bc11 	b.w	1001a78e <_vfprintf_r+0x2c2>
1001bf6c:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001bf70:	aa32      	add	r2, sp, #200	@ 0xc8
1001bf72:	f000 f94b 	bl	1001c20c <__sprint_r>
1001bf76:	2800      	cmp	r0, #0
1001bf78:	f47e afa4 	bne.w	1001aec4 <_vfprintf_r+0x9f8>
1001bf7c:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001bf7e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001bf82:	f7ff b89a 	b.w	1001b0ba <_vfprintf_r+0xbee>
1001bf86:	4b3c      	ldr	r3, [pc, #240]	@ (1001c078 <_vfprintf_r+0x1bac>)
1001bf88:	4a3c      	ldr	r2, [pc, #240]	@ (1001c07c <_vfprintf_r+0x1bb0>)
1001bf8a:	990e      	ldr	r1, [sp, #56]	@ 0x38
1001bf8c:	2961      	cmp	r1, #97	@ 0x61
1001bf8e:	bf18      	it	ne
1001bf90:	461a      	movne	r2, r3
1001bf92:	2301      	movs	r3, #1
1001bf94:	9212      	str	r2, [sp, #72]	@ 0x48
1001bf96:	9329      	str	r3, [sp, #164]	@ 0xa4
1001bf98:	e4ff      	b.n	1001b99a <_vfprintf_r+0x14ce>
1001bf9a:	2306      	movs	r3, #6
1001bf9c:	9309      	str	r3, [sp, #36]	@ 0x24
1001bf9e:	f7ff b9ef 	b.w	1001b380 <_vfprintf_r+0xeb4>
1001bfa2:	9b06      	ldr	r3, [sp, #24]
1001bfa4:	07de      	lsls	r6, r3, #31
1001bfa6:	f57f ac86 	bpl.w	1001b8b6 <_vfprintf_r+0x13ea>
1001bfaa:	e482      	b.n	1001b8b2 <_vfprintf_r+0x13e6>
1001bfac:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001bfb0:	2200      	movs	r2, #0
1001bfb2:	2300      	movs	r3, #0
1001bfb4:	f004 f846 	bl	10020044 <__aeabi_dcmpeq>
1001bfb8:	2800      	cmp	r0, #0
1001bfba:	f47f ac1c 	bne.w	1001b7f6 <_vfprintf_r+0x132a>
1001bfbe:	f1c6 0601 	rsb	r6, r6, #1
1001bfc2:	9629      	str	r6, [sp, #164]	@ 0xa4
1001bfc4:	e418      	b.n	1001b7f8 <_vfprintf_r+0x132c>
1001bfc6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
1001bfc8:	4d2d      	ldr	r5, [pc, #180]	@ (1001c080 <_vfprintf_r+0x1bb4>)
1001bfca:	2b00      	cmp	r3, #0
1001bfcc:	bfb4      	ite	lt
1001bfce:	222d      	movlt	r2, #45	@ 0x2d
1001bfd0:	f89d 209f 	ldrbge.w	r2, [sp, #159]	@ 0x9f
1001bfd4:	4b2b      	ldr	r3, [pc, #172]	@ (1001c084 <_vfprintf_r+0x1bb8>)
1001bfd6:	bfb8      	it	lt
1001bfd8:	f88d 209f 	strblt.w	r2, [sp, #159]	@ 0x9f
1001bfdc:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
1001bfe0:	f7fe bc99 	b.w	1001a916 <_vfprintf_r+0x44a>
1001bfe4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001bfe6:	9306      	str	r3, [sp, #24]
1001bfe8:	469b      	mov	fp, r3
1001bfea:	2373      	movs	r3, #115	@ 0x73
1001bfec:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001bff0:	960d      	str	r6, [sp, #52]	@ 0x34
1001bff2:	9009      	str	r0, [sp, #36]	@ 0x24
1001bff4:	9014      	str	r0, [sp, #80]	@ 0x50
1001bff6:	9010      	str	r0, [sp, #64]	@ 0x40
1001bff8:	930e      	str	r3, [sp, #56]	@ 0x38
1001bffa:	f7fe bc99 	b.w	1001a930 <_vfprintf_r+0x464>
1001bffe:	f8dd 9018 	ldr.w	r9, [sp, #24]
1001c002:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
1001c006:	f7ff bb40 	b.w	1001b68a <_vfprintf_r+0x11be>
1001c00a:	f10d 02b2 	add.w	r2, sp, #178	@ 0xb2
1001c00e:	e79e      	b.n	1001bf4e <_vfprintf_r+0x1a82>
1001c010:	4693      	mov	fp, r2
1001c012:	e5b6      	b.n	1001bb82 <_vfprintf_r+0x16b6>
1001c014:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001c016:	18cf      	adds	r7, r1, r3
1001c018:	443a      	add	r2, r7
1001c01a:	2366      	movs	r3, #102	@ 0x66
1001c01c:	4693      	mov	fp, r2
1001c01e:	930e      	str	r3, [sp, #56]	@ 0x38
1001c020:	e6f3      	b.n	1001be0a <_vfprintf_r+0x193e>
1001c022:	2367      	movs	r3, #103	@ 0x67
1001c024:	930e      	str	r3, [sp, #56]	@ 0x38
1001c026:	991b      	ldr	r1, [sp, #108]	@ 0x6c
1001c028:	780b      	ldrb	r3, [r1, #0]
1001c02a:	2bff      	cmp	r3, #255	@ 0xff
1001c02c:	d063      	beq.n	1001c0f6 <_vfprintf_r+0x1c2a>
1001c02e:	2400      	movs	r4, #0
1001c030:	9a12      	ldr	r2, [sp, #72]	@ 0x48
1001c032:	4620      	mov	r0, r4
1001c034:	e003      	b.n	1001c03e <_vfprintf_r+0x1b72>
1001c036:	3001      	adds	r0, #1
1001c038:	3101      	adds	r1, #1
1001c03a:	2bff      	cmp	r3, #255	@ 0xff
1001c03c:	d008      	beq.n	1001c050 <_vfprintf_r+0x1b84>
1001c03e:	4293      	cmp	r3, r2
1001c040:	da06      	bge.n	1001c050 <_vfprintf_r+0x1b84>
1001c042:	1ad2      	subs	r2, r2, r3
1001c044:	784b      	ldrb	r3, [r1, #1]
1001c046:	2b00      	cmp	r3, #0
1001c048:	d1f5      	bne.n	1001c036 <_vfprintf_r+0x1b6a>
1001c04a:	780b      	ldrb	r3, [r1, #0]
1001c04c:	3401      	adds	r4, #1
1001c04e:	e7f4      	b.n	1001c03a <_vfprintf_r+0x1b6e>
1001c050:	911b      	str	r1, [sp, #108]	@ 0x6c
1001c052:	9212      	str	r2, [sp, #72]	@ 0x48
1001c054:	9010      	str	r0, [sp, #64]	@ 0x40
1001c056:	9414      	str	r4, [sp, #80]	@ 0x50
1001c058:	e9dd 3914 	ldrd	r3, r9, [sp, #80]	@ 0x50
1001c05c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
1001c05e:	4413      	add	r3, r2
1001c060:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
1001c062:	fb02 bb03 	mla	fp, r2, r3, fp
1001c066:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001c06a:	9306      	str	r3, [sp, #24]
1001c06c:	e42f      	b.n	1001b8ce <_vfprintf_r+0x1402>
1001c06e:	bf00      	nop
1001c070:	1002791c 	.word	0x1002791c
1001c074:	1002790c 	.word	0x1002790c
1001c078:	100278cc 	.word	0x100278cc
1001c07c:	100278b8 	.word	0x100278b8
1001c080:	100278b0 	.word	0x100278b0
1001c084:	100278b4 	.word	0x100278b4
1001c088:	f1c3 0301 	rsb	r3, r3, #1
1001c08c:	449b      	add	fp, r3
1001c08e:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001c092:	9306      	str	r3, [sp, #24]
1001c094:	2367      	movs	r3, #103	@ 0x67
1001c096:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001c09a:	930e      	str	r3, [sp, #56]	@ 0x38
1001c09c:	e57e      	b.n	1001bb9c <_vfprintf_r+0x16d0>
1001c09e:	4e1c      	ldr	r6, [pc, #112]	@ (1001c110 <_vfprintf_r+0x1c44>)
1001c0a0:	e60f      	b.n	1001bcc2 <_vfprintf_r+0x17f6>
1001c0a2:	2302      	movs	r3, #2
1001c0a4:	931c      	str	r3, [sp, #112]	@ 0x70
1001c0a6:	f7ff bbfd 	b.w	1001b8a4 <_vfprintf_r+0x13d8>
1001c0aa:	4a19      	ldr	r2, [pc, #100]	@ (1001c110 <_vfprintf_r+0x1c44>)
1001c0ac:	9215      	str	r2, [sp, #84]	@ 0x54
1001c0ae:	e52b      	b.n	1001bb08 <_vfprintf_r+0x163c>
1001c0b0:	2170      	movs	r1, #112	@ 0x70
1001c0b2:	f7ff bbc0 	b.w	1001b836 <_vfprintf_r+0x136a>
1001c0b6:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001c0ba:	b933      	cbnz	r3, 1001c0ca <_vfprintf_r+0x1bfe>
1001c0bc:	f04f 0b01 	mov.w	fp, #1
1001c0c0:	2366      	movs	r3, #102	@ 0x66
1001c0c2:	f8cd b018 	str.w	fp, [sp, #24]
1001c0c6:	930e      	str	r3, [sp, #56]	@ 0x38
1001c0c8:	e568      	b.n	1001bb9c <_vfprintf_r+0x16d0>
1001c0ca:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001c0cc:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
1001c0d0:	1c5f      	adds	r7, r3, #1
1001c0d2:	44bb      	add	fp, r7
1001c0d4:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001c0d8:	9306      	str	r3, [sp, #24]
1001c0da:	2366      	movs	r3, #102	@ 0x66
1001c0dc:	930e      	str	r3, [sp, #56]	@ 0x38
1001c0de:	e55d      	b.n	1001bb9c <_vfprintf_r+0x16d0>
1001c0e0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
1001c0e2:	7863      	ldrb	r3, [r4, #1]
1001c0e4:	460c      	mov	r4, r1
1001c0e6:	f852 1b04 	ldr.w	r1, [r2], #4
1001c0ea:	920d      	str	r2, [sp, #52]	@ 0x34
1001c0ec:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
1001c0f0:	9109      	str	r1, [sp, #36]	@ 0x24
1001c0f2:	f7fe ba63 	b.w	1001a5bc <_vfprintf_r+0xf0>
1001c0f6:	2300      	movs	r3, #0
1001c0f8:	9314      	str	r3, [sp, #80]	@ 0x50
1001c0fa:	9310      	str	r3, [sp, #64]	@ 0x40
1001c0fc:	e7ac      	b.n	1001c058 <_vfprintf_r+0x1b8c>
1001c0fe:	e9dd 2b07 	ldrd	r2, fp, [sp, #28]
1001c102:	8993      	ldrh	r3, [r2, #12]
1001c104:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001c108:	8193      	strh	r3, [r2, #12]
1001c10a:	f7fe bb37 	b.w	1001a77c <_vfprintf_r+0x2b0>
1001c10e:	bf00      	nop
1001c110:	1002790c 	.word	0x1002790c

1001c114 <__sbprintf>:
1001c114:	b5f0      	push	{r4, r5, r6, r7, lr}
1001c116:	461f      	mov	r7, r3
1001c118:	898b      	ldrh	r3, [r1, #12]
1001c11a:	f2ad 4d6c 	subw	sp, sp, #1132	@ 0x46c
1001c11e:	f023 0302 	bic.w	r3, r3, #2
1001c122:	f8ad 300c 	strh.w	r3, [sp, #12]
1001c126:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
1001c128:	9319      	str	r3, [sp, #100]	@ 0x64
1001c12a:	89cb      	ldrh	r3, [r1, #14]
1001c12c:	f8ad 300e 	strh.w	r3, [sp, #14]
1001c130:	69cb      	ldr	r3, [r1, #28]
1001c132:	9307      	str	r3, [sp, #28]
1001c134:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
1001c136:	9309      	str	r3, [sp, #36]	@ 0x24
1001c138:	ab1a      	add	r3, sp, #104	@ 0x68
1001c13a:	9300      	str	r3, [sp, #0]
1001c13c:	9304      	str	r3, [sp, #16]
1001c13e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
1001c142:	4615      	mov	r5, r2
1001c144:	4606      	mov	r6, r0
1001c146:	9302      	str	r3, [sp, #8]
1001c148:	9305      	str	r3, [sp, #20]
1001c14a:	a816      	add	r0, sp, #88	@ 0x58
1001c14c:	2300      	movs	r3, #0
1001c14e:	460c      	mov	r4, r1
1001c150:	9306      	str	r3, [sp, #24]
1001c152:	f7f8 ff93 	bl	1001507c <__retarget_lock_init_recursive>
1001c156:	462a      	mov	r2, r5
1001c158:	463b      	mov	r3, r7
1001c15a:	4669      	mov	r1, sp
1001c15c:	4630      	mov	r0, r6
1001c15e:	f7fe f9b5 	bl	1001a4cc <_vfprintf_r>
1001c162:	1e05      	subs	r5, r0, #0
1001c164:	db07      	blt.n	1001c176 <__sbprintf+0x62>
1001c166:	4669      	mov	r1, sp
1001c168:	4630      	mov	r0, r6
1001c16a:	f7f9 fa45 	bl	100155f8 <_fflush_r>
1001c16e:	2800      	cmp	r0, #0
1001c170:	bf18      	it	ne
1001c172:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
1001c176:	f8bd 300c 	ldrh.w	r3, [sp, #12]
1001c17a:	065b      	lsls	r3, r3, #25
1001c17c:	d503      	bpl.n	1001c186 <__sbprintf+0x72>
1001c17e:	89a3      	ldrh	r3, [r4, #12]
1001c180:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001c184:	81a3      	strh	r3, [r4, #12]
1001c186:	9816      	ldr	r0, [sp, #88]	@ 0x58
1001c188:	f7f8 ff7a 	bl	10015080 <__retarget_lock_close_recursive>
1001c18c:	4628      	mov	r0, r5
1001c18e:	f20d 4d6c 	addw	sp, sp, #1132	@ 0x46c
1001c192:	bdf0      	pop	{r4, r5, r6, r7, pc}

1001c194 <__sprint_r.part.0>:
1001c194:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001c198:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
1001c19a:	049c      	lsls	r4, r3, #18
1001c19c:	4690      	mov	r8, r2
1001c19e:	d52e      	bpl.n	1001c1fe <__sprint_r.part.0+0x6a>
1001c1a0:	6893      	ldr	r3, [r2, #8]
1001c1a2:	6812      	ldr	r2, [r2, #0]
1001c1a4:	b34b      	cbz	r3, 1001c1fa <__sprint_r.part.0+0x66>
1001c1a6:	460d      	mov	r5, r1
1001c1a8:	4606      	mov	r6, r0
1001c1aa:	f102 0908 	add.w	r9, r2, #8
1001c1ae:	e959 2a02 	ldrd	r2, sl, [r9, #-8]
1001c1b2:	ea5f 079a 	movs.w	r7, sl, lsr #2
1001c1b6:	d016      	beq.n	1001c1e6 <__sprint_r.part.0+0x52>
1001c1b8:	f1a2 0b04 	sub.w	fp, r2, #4
1001c1bc:	2400      	movs	r4, #0
1001c1be:	e001      	b.n	1001c1c4 <__sprint_r.part.0+0x30>
1001c1c0:	42a7      	cmp	r7, r4
1001c1c2:	d00e      	beq.n	1001c1e2 <__sprint_r.part.0+0x4e>
1001c1c4:	f85b 1f04 	ldr.w	r1, [fp, #4]!
1001c1c8:	462a      	mov	r2, r5
1001c1ca:	4630      	mov	r0, r6
1001c1cc:	f003 f8ec 	bl	1001f3a8 <_fputwc_r>
1001c1d0:	1c43      	adds	r3, r0, #1
1001c1d2:	f104 0401 	add.w	r4, r4, #1
1001c1d6:	d1f3      	bne.n	1001c1c0 <__sprint_r.part.0+0x2c>
1001c1d8:	2300      	movs	r3, #0
1001c1da:	e9c8 3301 	strd	r3, r3, [r8, #4]
1001c1de:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001c1e2:	f8d8 3008 	ldr.w	r3, [r8, #8]
1001c1e6:	f02a 0a03 	bic.w	sl, sl, #3
1001c1ea:	eba3 030a 	sub.w	r3, r3, sl
1001c1ee:	f8c8 3008 	str.w	r3, [r8, #8]
1001c1f2:	f109 0908 	add.w	r9, r9, #8
1001c1f6:	2b00      	cmp	r3, #0
1001c1f8:	d1d9      	bne.n	1001c1ae <__sprint_r.part.0+0x1a>
1001c1fa:	2000      	movs	r0, #0
1001c1fc:	e7ec      	b.n	1001c1d8 <__sprint_r.part.0+0x44>
1001c1fe:	f7fc f87b 	bl	100182f8 <__sfvwrite_r>
1001c202:	2300      	movs	r3, #0
1001c204:	e9c8 3301 	strd	r3, r3, [r8, #4]
1001c208:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

1001c20c <__sprint_r>:
1001c20c:	b410      	push	{r4}
1001c20e:	6894      	ldr	r4, [r2, #8]
1001c210:	b114      	cbz	r4, 1001c218 <__sprint_r+0xc>
1001c212:	bc10      	pop	{r4}
1001c214:	f7ff bfbe 	b.w	1001c194 <__sprint_r.part.0>
1001c218:	4620      	mov	r0, r4
1001c21a:	6054      	str	r4, [r2, #4]
1001c21c:	bc10      	pop	{r4}
1001c21e:	4770      	bx	lr

1001c220 <_vfiprintf_r>:
1001c220:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001c224:	b0c7      	sub	sp, #284	@ 0x11c
1001c226:	af16      	add	r7, sp, #88	@ 0x58
1001c228:	4683      	mov	fp, r0
1001c22a:	9103      	str	r1, [sp, #12]
1001c22c:	9206      	str	r2, [sp, #24]
1001c22e:	2100      	movs	r1, #0
1001c230:	2208      	movs	r2, #8
1001c232:	4638      	mov	r0, r7
1001c234:	461c      	mov	r4, r3
1001c236:	930a      	str	r3, [sp, #40]	@ 0x28
1001c238:	f7f8 fe92 	bl	10014f60 <memset>
1001c23c:	f1bb 0f00 	cmp.w	fp, #0
1001c240:	d004      	beq.n	1001c24c <_vfiprintf_r+0x2c>
1001c242:	f8db 3034 	ldr.w	r3, [fp, #52]	@ 0x34
1001c246:	2b00      	cmp	r3, #0
1001c248:	f000 86bb 	beq.w	1001cfc2 <_vfiprintf_r+0xda2>
1001c24c:	9a03      	ldr	r2, [sp, #12]
1001c24e:	6e53      	ldr	r3, [r2, #100]	@ 0x64
1001c250:	f9b2 200c 	ldrsh.w	r2, [r2, #12]
1001c254:	07db      	lsls	r3, r3, #31
1001c256:	d402      	bmi.n	1001c25e <_vfiprintf_r+0x3e>
1001c258:	0596      	lsls	r6, r2, #22
1001c25a:	f140 859f 	bpl.w	1001cd9c <_vfiprintf_r+0xb7c>
1001c25e:	0495      	lsls	r5, r2, #18
1001c260:	d407      	bmi.n	1001c272 <_vfiprintf_r+0x52>
1001c262:	9903      	ldr	r1, [sp, #12]
1001c264:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
1001c266:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
1001c26a:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
1001c26e:	818a      	strh	r2, [r1, #12]
1001c270:	664b      	str	r3, [r1, #100]	@ 0x64
1001c272:	0710      	lsls	r0, r2, #28
1001c274:	f140 80c9 	bpl.w	1001c40a <_vfiprintf_r+0x1ea>
1001c278:	9b03      	ldr	r3, [sp, #12]
1001c27a:	691b      	ldr	r3, [r3, #16]
1001c27c:	2b00      	cmp	r3, #0
1001c27e:	f000 80c4 	beq.w	1001c40a <_vfiprintf_r+0x1ea>
1001c282:	f002 031a 	and.w	r3, r2, #26
1001c286:	2b0a      	cmp	r3, #10
1001c288:	f000 80ce 	beq.w	1001c428 <_vfiprintf_r+0x208>
1001c28c:	2300      	movs	r3, #0
1001c28e:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
1001c292:	e9cd 330e 	strd	r3, r3, [sp, #56]	@ 0x38
1001c296:	aa1d      	add	r2, sp, #116	@ 0x74
1001c298:	f8df a260 	ldr.w	sl, [pc, #608]	@ 1001c4fc <_vfiprintf_r+0x2dc>
1001c29c:	930d      	str	r3, [sp, #52]	@ 0x34
1001c29e:	921a      	str	r2, [sp, #104]	@ 0x68
1001c2a0:	4691      	mov	r9, r2
1001c2a2:	9310      	str	r3, [sp, #64]	@ 0x40
1001c2a4:	9307      	str	r3, [sp, #28]
1001c2a6:	9d06      	ldr	r5, [sp, #24]
1001c2a8:	f8da 40e4 	ldr.w	r4, [sl, #228]	@ 0xe4
1001c2ac:	f7f8 feee 	bl	1001508c <__locale_mb_cur_max>
1001c2b0:	462a      	mov	r2, r5
1001c2b2:	4603      	mov	r3, r0
1001c2b4:	a914      	add	r1, sp, #80	@ 0x50
1001c2b6:	9700      	str	r7, [sp, #0]
1001c2b8:	4658      	mov	r0, fp
1001c2ba:	47a0      	blx	r4
1001c2bc:	2800      	cmp	r0, #0
1001c2be:	f000 80d2 	beq.w	1001c466 <_vfiprintf_r+0x246>
1001c2c2:	f2c0 80c8 	blt.w	1001c456 <_vfiprintf_r+0x236>
1001c2c6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
1001c2c8:	2a25      	cmp	r2, #37	@ 0x25
1001c2ca:	4603      	mov	r3, r0
1001c2cc:	d001      	beq.n	1001c2d2 <_vfiprintf_r+0xb2>
1001c2ce:	441d      	add	r5, r3
1001c2d0:	e7ea      	b.n	1001c2a8 <_vfiprintf_r+0x88>
1001c2d2:	9b06      	ldr	r3, [sp, #24]
1001c2d4:	1aee      	subs	r6, r5, r3
1001c2d6:	4604      	mov	r4, r0
1001c2d8:	f040 80c9 	bne.w	1001c46e <_vfiprintf_r+0x24e>
1001c2dc:	2300      	movs	r3, #0
1001c2de:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
1001c2e2:	786a      	ldrb	r2, [r5, #1]
1001c2e4:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
1001c2e8:	9308      	str	r3, [sp, #32]
1001c2ea:	1c6c      	adds	r4, r5, #1
1001c2ec:	9105      	str	r1, [sp, #20]
1001c2ee:	9302      	str	r3, [sp, #8]
1001c2f0:	3401      	adds	r4, #1
1001c2f2:	f1a2 0320 	sub.w	r3, r2, #32
1001c2f6:	2b5a      	cmp	r3, #90	@ 0x5a
1001c2f8:	f200 8102 	bhi.w	1001c500 <_vfiprintf_r+0x2e0>
1001c2fc:	e8df f013 	tbh	[pc, r3, lsl #1]
1001c300:	01000303 	.word	0x01000303
1001c304:	02fd0100 	.word	0x02fd0100
1001c308:	01000100 	.word	0x01000100
1001c30c:	006b0100 	.word	0x006b0100
1001c310:	01000100 	.word	0x01000100
1001c314:	032d0218 	.word	0x032d0218
1001c318:	02230100 	.word	0x02230100
1001c31c:	01000313 	.word	0x01000313
1001c320:	005b030d 	.word	0x005b030d
1001c324:	005b005b 	.word	0x005b005b
1001c328:	005b005b 	.word	0x005b005b
1001c32c:	005b005b 	.word	0x005b005b
1001c330:	005b005b 	.word	0x005b005b
1001c334:	01000100 	.word	0x01000100
1001c338:	01000100 	.word	0x01000100
1001c33c:	01000100 	.word	0x01000100
1001c340:	01000100 	.word	0x01000100
1001c344:	01ce0100 	.word	0x01ce0100
1001c348:	0100025d 	.word	0x0100025d
1001c34c:	01000100 	.word	0x01000100
1001c350:	01000100 	.word	0x01000100
1001c354:	01000100 	.word	0x01000100
1001c358:	01000100 	.word	0x01000100
1001c35c:	02290100 	.word	0x02290100
1001c360:	01000100 	.word	0x01000100
1001c364:	01a60100 	.word	0x01a60100
1001c368:	02760100 	.word	0x02760100
1001c36c:	01000100 	.word	0x01000100
1001c370:	0100058e 	.word	0x0100058e
1001c374:	01000100 	.word	0x01000100
1001c378:	01000100 	.word	0x01000100
1001c37c:	01000100 	.word	0x01000100
1001c380:	01000100 	.word	0x01000100
1001c384:	01ce0100 	.word	0x01ce0100
1001c388:	010001f3 	.word	0x010001f3
1001c38c:	01000100 	.word	0x01000100
1001c390:	01f302c4 	.word	0x01f302c4
1001c394:	0100007f 	.word	0x0100007f
1001c398:	01000332 	.word	0x01000332
1001c39c:	058b02ee 	.word	0x058b02ee
1001c3a0:	007f02cd 	.word	0x007f02cd
1001c3a4:	01a60100 	.word	0x01a60100
1001c3a8:	0588007d 	.word	0x0588007d
1001c3ac:	01000100 	.word	0x01000100
1001c3b0:	010005b1 	.word	0x010005b1
1001c3b4:	007d      	.short	0x007d
1001c3b6:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
1001c3ba:	2200      	movs	r2, #0
1001c3bc:	4611      	mov	r1, r2
1001c3be:	f814 2b01 	ldrb.w	r2, [r4], #1
1001c3c2:	eb01 0181 	add.w	r1, r1, r1, lsl #2
1001c3c6:	eb03 0141 	add.w	r1, r3, r1, lsl #1
1001c3ca:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
1001c3ce:	2b09      	cmp	r3, #9
1001c3d0:	d9f5      	bls.n	1001c3be <_vfiprintf_r+0x19e>
1001c3d2:	9108      	str	r1, [sp, #32]
1001c3d4:	e78d      	b.n	1001c2f2 <_vfiprintf_r+0xd2>
1001c3d6:	4658      	mov	r0, fp
1001c3d8:	f7f8 fe5e 	bl	10015098 <_localeconv_r>
1001c3dc:	6843      	ldr	r3, [r0, #4]
1001c3de:	9310      	str	r3, [sp, #64]	@ 0x40
1001c3e0:	4618      	mov	r0, r3
1001c3e2:	f7f9 fbad 	bl	10015b40 <strlen>
1001c3e6:	900f      	str	r0, [sp, #60]	@ 0x3c
1001c3e8:	4605      	mov	r5, r0
1001c3ea:	4658      	mov	r0, fp
1001c3ec:	f7f8 fe54 	bl	10015098 <_localeconv_r>
1001c3f0:	6883      	ldr	r3, [r0, #8]
1001c3f2:	930e      	str	r3, [sp, #56]	@ 0x38
1001c3f4:	2d00      	cmp	r5, #0
1001c3f6:	f040 84e5 	bne.w	1001cdc4 <_vfiprintf_r+0xba4>
1001c3fa:	7822      	ldrb	r2, [r4, #0]
1001c3fc:	e778      	b.n	1001c2f0 <_vfiprintf_r+0xd0>
1001c3fe:	9b02      	ldr	r3, [sp, #8]
1001c400:	7822      	ldrb	r2, [r4, #0]
1001c402:	f043 0320 	orr.w	r3, r3, #32
1001c406:	9302      	str	r3, [sp, #8]
1001c408:	e772      	b.n	1001c2f0 <_vfiprintf_r+0xd0>
1001c40a:	9d03      	ldr	r5, [sp, #12]
1001c40c:	4658      	mov	r0, fp
1001c40e:	4629      	mov	r1, r5
1001c410:	f001 f898 	bl	1001d544 <__swsetup_r>
1001c414:	2800      	cmp	r0, #0
1001c416:	f040 86a6 	bne.w	1001d166 <_vfiprintf_r+0xf46>
1001c41a:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
1001c41e:	f002 031a 	and.w	r3, r2, #26
1001c422:	2b0a      	cmp	r3, #10
1001c424:	f47f af32 	bne.w	1001c28c <_vfiprintf_r+0x6c>
1001c428:	9903      	ldr	r1, [sp, #12]
1001c42a:	f9b1 300e 	ldrsh.w	r3, [r1, #14]
1001c42e:	2b00      	cmp	r3, #0
1001c430:	f6ff af2c 	blt.w	1001c28c <_vfiprintf_r+0x6c>
1001c434:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
1001c436:	07db      	lsls	r3, r3, #31
1001c438:	d402      	bmi.n	1001c440 <_vfiprintf_r+0x220>
1001c43a:	0597      	lsls	r7, r2, #22
1001c43c:	f140 865e 	bpl.w	1001d0fc <_vfiprintf_r+0xedc>
1001c440:	9a06      	ldr	r2, [sp, #24]
1001c442:	9903      	ldr	r1, [sp, #12]
1001c444:	4623      	mov	r3, r4
1001c446:	4658      	mov	r0, fp
1001c448:	f000 fec0 	bl	1001d1cc <__sbprintf>
1001c44c:	9007      	str	r0, [sp, #28]
1001c44e:	9807      	ldr	r0, [sp, #28]
1001c450:	b047      	add	sp, #284	@ 0x11c
1001c452:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001c456:	2208      	movs	r2, #8
1001c458:	2100      	movs	r1, #0
1001c45a:	4638      	mov	r0, r7
1001c45c:	f7f8 fd80 	bl	10014f60 <memset>
1001c460:	2301      	movs	r3, #1
1001c462:	441d      	add	r5, r3
1001c464:	e720      	b.n	1001c2a8 <_vfiprintf_r+0x88>
1001c466:	9b06      	ldr	r3, [sp, #24]
1001c468:	1aee      	subs	r6, r5, r3
1001c46a:	4604      	mov	r4, r0
1001c46c:	d012      	beq.n	1001c494 <_vfiprintf_r+0x274>
1001c46e:	9b06      	ldr	r3, [sp, #24]
1001c470:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
1001c472:	e9c9 3600 	strd	r3, r6, [r9]
1001c476:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
1001c478:	3301      	adds	r3, #1
1001c47a:	4432      	add	r2, r6
1001c47c:	2b07      	cmp	r3, #7
1001c47e:	921c      	str	r2, [sp, #112]	@ 0x70
1001c480:	931b      	str	r3, [sp, #108]	@ 0x6c
1001c482:	dc11      	bgt.n	1001c4a8 <_vfiprintf_r+0x288>
1001c484:	f109 0908 	add.w	r9, r9, #8
1001c488:	9b07      	ldr	r3, [sp, #28]
1001c48a:	4433      	add	r3, r6
1001c48c:	9307      	str	r3, [sp, #28]
1001c48e:	2c00      	cmp	r4, #0
1001c490:	f47f af24 	bne.w	1001c2dc <_vfiprintf_r+0xbc>
1001c494:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
1001c496:	2b00      	cmp	r3, #0
1001c498:	f040 8650 	bne.w	1001d13c <_vfiprintf_r+0xf1c>
1001c49c:	9b03      	ldr	r3, [sp, #12]
1001c49e:	2200      	movs	r2, #0
1001c4a0:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
1001c4a4:	921b      	str	r2, [sp, #108]	@ 0x6c
1001c4a6:	e01c      	b.n	1001c4e2 <_vfiprintf_r+0x2c2>
1001c4a8:	2a00      	cmp	r2, #0
1001c4aa:	f000 842f 	beq.w	1001cd0c <_vfiprintf_r+0xaec>
1001c4ae:	9903      	ldr	r1, [sp, #12]
1001c4b0:	aa1a      	add	r2, sp, #104	@ 0x68
1001c4b2:	4658      	mov	r0, fp
1001c4b4:	f7ff fe6e 	bl	1001c194 <__sprint_r.part.0>
1001c4b8:	b980      	cbnz	r0, 1001c4dc <_vfiprintf_r+0x2bc>
1001c4ba:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001c4be:	e7e3      	b.n	1001c488 <_vfiprintf_r+0x268>
1001c4c0:	9903      	ldr	r1, [sp, #12]
1001c4c2:	aa1a      	add	r2, sp, #104	@ 0x68
1001c4c4:	4658      	mov	r0, fp
1001c4c6:	f7ff fe65 	bl	1001c194 <__sprint_r.part.0>
1001c4ca:	2800      	cmp	r0, #0
1001c4cc:	f000 80a9 	beq.w	1001c622 <_vfiprintf_r+0x402>
1001c4d0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001c4d2:	b11b      	cbz	r3, 1001c4dc <_vfiprintf_r+0x2bc>
1001c4d4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
1001c4d6:	4658      	mov	r0, fp
1001c4d8:	f7fa fdd6 	bl	10017088 <_free_r>
1001c4dc:	9b03      	ldr	r3, [sp, #12]
1001c4de:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
1001c4e2:	9a03      	ldr	r2, [sp, #12]
1001c4e4:	6e52      	ldr	r2, [r2, #100]	@ 0x64
1001c4e6:	07d1      	lsls	r1, r2, #31
1001c4e8:	f140 80a6 	bpl.w	1001c638 <_vfiprintf_r+0x418>
1001c4ec:	065b      	lsls	r3, r3, #25
1001c4ee:	f100 8646 	bmi.w	1001d17e <_vfiprintf_r+0xf5e>
1001c4f2:	9807      	ldr	r0, [sp, #28]
1001c4f4:	b047      	add	sp, #284	@ 0x11c
1001c4f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001c4fa:	bf00      	nop
1001c4fc:	20000424 	.word	0x20000424
1001c500:	9406      	str	r4, [sp, #24]
1001c502:	2a00      	cmp	r2, #0
1001c504:	d0c6      	beq.n	1001c494 <_vfiprintf_r+0x274>
1001c506:	2300      	movs	r3, #0
1001c508:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
1001c50c:	2301      	movs	r3, #1
1001c50e:	f88d 20b4 	strb.w	r2, [sp, #180]	@ 0xb4
1001c512:	9304      	str	r3, [sp, #16]
1001c514:	9309      	str	r3, [sp, #36]	@ 0x24
1001c516:	ac2d      	add	r4, sp, #180	@ 0xb4
1001c518:	2300      	movs	r3, #0
1001c51a:	930b      	str	r3, [sp, #44]	@ 0x2c
1001c51c:	9305      	str	r3, [sp, #20]
1001c51e:	9b02      	ldr	r3, [sp, #8]
1001c520:	f013 0302 	ands.w	r3, r3, #2
1001c524:	d002      	beq.n	1001c52c <_vfiprintf_r+0x30c>
1001c526:	9a04      	ldr	r2, [sp, #16]
1001c528:	3202      	adds	r2, #2
1001c52a:	9204      	str	r2, [sp, #16]
1001c52c:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
1001c530:	9d02      	ldr	r5, [sp, #8]
1001c532:	1c50      	adds	r0, r2, #1
1001c534:	f015 0584 	ands.w	r5, r5, #132	@ 0x84
1001c538:	4601      	mov	r1, r0
1001c53a:	950c      	str	r5, [sp, #48]	@ 0x30
1001c53c:	d105      	bne.n	1001c54a <_vfiprintf_r+0x32a>
1001c53e:	9d08      	ldr	r5, [sp, #32]
1001c540:	9e04      	ldr	r6, [sp, #16]
1001c542:	1bad      	subs	r5, r5, r6
1001c544:	2d00      	cmp	r5, #0
1001c546:	f300 8331 	bgt.w	1001cbac <_vfiprintf_r+0x98c>
1001c54a:	f89d 004b 	ldrb.w	r0, [sp, #75]	@ 0x4b
1001c54e:	b188      	cbz	r0, 1001c574 <_vfiprintf_r+0x354>
1001c550:	2201      	movs	r2, #1
1001c552:	f10c 0c01 	add.w	ip, ip, #1
1001c556:	f8c9 2004 	str.w	r2, [r9, #4]
1001c55a:	2907      	cmp	r1, #7
1001c55c:	f10d 024b 	add.w	r2, sp, #75	@ 0x4b
1001c560:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
1001c564:	f8c9 2000 	str.w	r2, [r9]
1001c568:	f300 82e1 	bgt.w	1001cb2e <_vfiprintf_r+0x90e>
1001c56c:	460a      	mov	r2, r1
1001c56e:	f109 0908 	add.w	r9, r9, #8
1001c572:	3101      	adds	r1, #1
1001c574:	b1eb      	cbz	r3, 1001c5b2 <_vfiprintf_r+0x392>
1001c576:	ab13      	add	r3, sp, #76	@ 0x4c
1001c578:	f10c 0c02 	add.w	ip, ip, #2
1001c57c:	f8c9 3000 	str.w	r3, [r9]
1001c580:	2907      	cmp	r1, #7
1001c582:	f04f 0302 	mov.w	r3, #2
1001c586:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
1001c58a:	f8c9 3004 	str.w	r3, [r9, #4]
1001c58e:	f340 82ec 	ble.w	1001cb6a <_vfiprintf_r+0x94a>
1001c592:	f1bc 0f00 	cmp.w	ip, #0
1001c596:	f000 83da 	beq.w	1001cd4e <_vfiprintf_r+0xb2e>
1001c59a:	9903      	ldr	r1, [sp, #12]
1001c59c:	aa1a      	add	r2, sp, #104	@ 0x68
1001c59e:	4658      	mov	r0, fp
1001c5a0:	f7ff fdf8 	bl	1001c194 <__sprint_r.part.0>
1001c5a4:	2800      	cmp	r0, #0
1001c5a6:	d193      	bne.n	1001c4d0 <_vfiprintf_r+0x2b0>
1001c5a8:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
1001c5ac:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001c5b0:	1c51      	adds	r1, r2, #1
1001c5b2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001c5b4:	2b80      	cmp	r3, #128	@ 0x80
1001c5b6:	f000 8213 	beq.w	1001c9e0 <_vfiprintf_r+0x7c0>
1001c5ba:	9b05      	ldr	r3, [sp, #20]
1001c5bc:	9809      	ldr	r0, [sp, #36]	@ 0x24
1001c5be:	1a1d      	subs	r5, r3, r0
1001c5c0:	2d00      	cmp	r5, #0
1001c5c2:	f300 8268 	bgt.w	1001ca96 <_vfiprintf_r+0x876>
1001c5c6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001c5c8:	f8c9 4000 	str.w	r4, [r9]
1001c5cc:	eb02 030c 	add.w	r3, r2, ip
1001c5d0:	2907      	cmp	r1, #7
1001c5d2:	e9cd 131b 	strd	r1, r3, [sp, #108]	@ 0x6c
1001c5d6:	f8c9 2004 	str.w	r2, [r9, #4]
1001c5da:	f340 81fe 	ble.w	1001c9da <_vfiprintf_r+0x7ba>
1001c5de:	2b00      	cmp	r3, #0
1001c5e0:	f000 832b 	beq.w	1001cc3a <_vfiprintf_r+0xa1a>
1001c5e4:	9903      	ldr	r1, [sp, #12]
1001c5e6:	aa1a      	add	r2, sp, #104	@ 0x68
1001c5e8:	4658      	mov	r0, fp
1001c5ea:	f7ff fdd3 	bl	1001c194 <__sprint_r.part.0>
1001c5ee:	2800      	cmp	r0, #0
1001c5f0:	f47f af6e 	bne.w	1001c4d0 <_vfiprintf_r+0x2b0>
1001c5f4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
1001c5f6:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001c5fa:	9a02      	ldr	r2, [sp, #8]
1001c5fc:	0750      	lsls	r0, r2, #29
1001c5fe:	d505      	bpl.n	1001c60c <_vfiprintf_r+0x3ec>
1001c600:	9a08      	ldr	r2, [sp, #32]
1001c602:	9904      	ldr	r1, [sp, #16]
1001c604:	1a54      	subs	r4, r2, r1
1001c606:	2c00      	cmp	r4, #0
1001c608:	f300 8322 	bgt.w	1001cc50 <_vfiprintf_r+0xa30>
1001c60c:	e9dd 2107 	ldrd	r2, r1, [sp, #28]
1001c610:	9804      	ldr	r0, [sp, #16]
1001c612:	4281      	cmp	r1, r0
1001c614:	bfac      	ite	ge
1001c616:	1852      	addge	r2, r2, r1
1001c618:	1812      	addlt	r2, r2, r0
1001c61a:	9207      	str	r2, [sp, #28]
1001c61c:	2b00      	cmp	r3, #0
1001c61e:	f47f af4f 	bne.w	1001c4c0 <_vfiprintf_r+0x2a0>
1001c622:	2300      	movs	r3, #0
1001c624:	931b      	str	r3, [sp, #108]	@ 0x6c
1001c626:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001c628:	b11b      	cbz	r3, 1001c632 <_vfiprintf_r+0x412>
1001c62a:	4619      	mov	r1, r3
1001c62c:	4658      	mov	r0, fp
1001c62e:	f7fa fd2b 	bl	10017088 <_free_r>
1001c632:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001c636:	e636      	b.n	1001c2a6 <_vfiprintf_r+0x86>
1001c638:	059a      	lsls	r2, r3, #22
1001c63a:	f53f af57 	bmi.w	1001c4ec <_vfiprintf_r+0x2cc>
1001c63e:	9c03      	ldr	r4, [sp, #12]
1001c640:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001c642:	f7f8 fd21 	bl	10015088 <__retarget_lock_release_recursive>
1001c646:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001c64a:	e74f      	b.n	1001c4ec <_vfiprintf_r+0x2cc>
1001c64c:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
1001c64e:	9406      	str	r4, [sp, #24]
1001c650:	f856 4b04 	ldr.w	r4, [r6], #4
1001c654:	2300      	movs	r3, #0
1001c656:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
1001c65a:	2c00      	cmp	r4, #0
1001c65c:	f000 84c9 	beq.w	1001cff2 <_vfiprintf_r+0xdd2>
1001c660:	2a53      	cmp	r2, #83	@ 0x53
1001c662:	f000 8421 	beq.w	1001cea8 <_vfiprintf_r+0xc88>
1001c666:	9b02      	ldr	r3, [sp, #8]
1001c668:	f013 0510 	ands.w	r5, r3, #16
1001c66c:	f040 841c 	bne.w	1001cea8 <_vfiprintf_r+0xc88>
1001c670:	9b05      	ldr	r3, [sp, #20]
1001c672:	1c5a      	adds	r2, r3, #1
1001c674:	f000 854e 	beq.w	1001d114 <_vfiprintf_r+0xef4>
1001c678:	461a      	mov	r2, r3
1001c67a:	4629      	mov	r1, r5
1001c67c:	4620      	mov	r0, r4
1001c67e:	f7f9 f96f 	bl	10015960 <memchr>
1001c682:	900b      	str	r0, [sp, #44]	@ 0x2c
1001c684:	2800      	cmp	r0, #0
1001c686:	f000 853e 	beq.w	1001d106 <_vfiprintf_r+0xee6>
1001c68a:	1b03      	subs	r3, r0, r4
1001c68c:	9309      	str	r3, [sp, #36]	@ 0x24
1001c68e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
1001c692:	9505      	str	r5, [sp, #20]
1001c694:	960a      	str	r6, [sp, #40]	@ 0x28
1001c696:	9304      	str	r3, [sp, #16]
1001c698:	950b      	str	r5, [sp, #44]	@ 0x2c
1001c69a:	e18d      	b.n	1001c9b8 <_vfiprintf_r+0x798>
1001c69c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001c69e:	9406      	str	r4, [sp, #24]
1001c6a0:	2a43      	cmp	r2, #67	@ 0x43
1001c6a2:	f103 0504 	add.w	r5, r3, #4
1001c6a6:	d003      	beq.n	1001c6b0 <_vfiprintf_r+0x490>
1001c6a8:	9b02      	ldr	r3, [sp, #8]
1001c6aa:	06de      	lsls	r6, r3, #27
1001c6ac:	f140 83e4 	bpl.w	1001ce78 <_vfiprintf_r+0xc58>
1001c6b0:	2208      	movs	r2, #8
1001c6b2:	2100      	movs	r1, #0
1001c6b4:	a818      	add	r0, sp, #96	@ 0x60
1001c6b6:	f7f8 fc53 	bl	10014f60 <memset>
1001c6ba:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001c6bc:	ac2d      	add	r4, sp, #180	@ 0xb4
1001c6be:	681a      	ldr	r2, [r3, #0]
1001c6c0:	4621      	mov	r1, r4
1001c6c2:	ab18      	add	r3, sp, #96	@ 0x60
1001c6c4:	4658      	mov	r0, fp
1001c6c6:	f000 feb7 	bl	1001d438 <_wcrtomb_r>
1001c6ca:	4603      	mov	r3, r0
1001c6cc:	3301      	adds	r3, #1
1001c6ce:	9009      	str	r0, [sp, #36]	@ 0x24
1001c6d0:	f000 8541 	beq.w	1001d156 <_vfiprintf_r+0xf36>
1001c6d4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001c6d6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
1001c6da:	9304      	str	r3, [sp, #16]
1001c6dc:	2300      	movs	r3, #0
1001c6de:	950a      	str	r5, [sp, #40]	@ 0x28
1001c6e0:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
1001c6e4:	e718      	b.n	1001c518 <_vfiprintf_r+0x2f8>
1001c6e6:	9b02      	ldr	r3, [sp, #8]
1001c6e8:	9406      	str	r4, [sp, #24]
1001c6ea:	069c      	lsls	r4, r3, #26
1001c6ec:	d56d      	bpl.n	1001c7ca <_vfiprintf_r+0x5aa>
1001c6ee:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001c6f0:	3307      	adds	r3, #7
1001c6f2:	f023 0307 	bic.w	r3, r3, #7
1001c6f6:	4619      	mov	r1, r3
1001c6f8:	685a      	ldr	r2, [r3, #4]
1001c6fa:	f851 3b08 	ldr.w	r3, [r1], #8
1001c6fe:	910a      	str	r1, [sp, #40]	@ 0x28
1001c700:	4611      	mov	r1, r2
1001c702:	2a00      	cmp	r2, #0
1001c704:	f2c0 8137 	blt.w	1001c976 <_vfiprintf_r+0x756>
1001c708:	9a05      	ldr	r2, [sp, #20]
1001c70a:	3201      	adds	r2, #1
1001c70c:	f000 8140 	beq.w	1001c990 <_vfiprintf_r+0x770>
1001c710:	9a02      	ldr	r2, [sp, #8]
1001c712:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
1001c716:	9202      	str	r2, [sp, #8]
1001c718:	ea53 0201 	orrs.w	r2, r3, r1
1001c71c:	f040 8138 	bne.w	1001c990 <_vfiprintf_r+0x770>
1001c720:	9b05      	ldr	r3, [sp, #20]
1001c722:	2b00      	cmp	r3, #0
1001c724:	f040 8508 	bne.w	1001d138 <_vfiprintf_r+0xf18>
1001c728:	9304      	str	r3, [sp, #16]
1001c72a:	9309      	str	r3, [sp, #36]	@ 0x24
1001c72c:	ac46      	add	r4, sp, #280	@ 0x118
1001c72e:	e141      	b.n	1001c9b4 <_vfiprintf_r+0x794>
1001c730:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001c732:	f853 2b04 	ldr.w	r2, [r3], #4
1001c736:	9208      	str	r2, [sp, #32]
1001c738:	2a00      	cmp	r2, #0
1001c73a:	f280 8327 	bge.w	1001cd8c <_vfiprintf_r+0xb6c>
1001c73e:	9a08      	ldr	r2, [sp, #32]
1001c740:	930a      	str	r3, [sp, #40]	@ 0x28
1001c742:	4252      	negs	r2, r2
1001c744:	9208      	str	r2, [sp, #32]
1001c746:	9b02      	ldr	r3, [sp, #8]
1001c748:	7822      	ldrb	r2, [r4, #0]
1001c74a:	f043 0304 	orr.w	r3, r3, #4
1001c74e:	9302      	str	r3, [sp, #8]
1001c750:	e5ce      	b.n	1001c2f0 <_vfiprintf_r+0xd0>
1001c752:	9b02      	ldr	r3, [sp, #8]
1001c754:	9406      	str	r4, [sp, #24]
1001c756:	f043 0210 	orr.w	r2, r3, #16
1001c75a:	f012 0120 	ands.w	r1, r2, #32
1001c75e:	f000 82e7 	beq.w	1001cd30 <_vfiprintf_r+0xb10>
1001c762:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001c764:	3307      	adds	r3, #7
1001c766:	f023 0307 	bic.w	r3, r3, #7
1001c76a:	4618      	mov	r0, r3
1001c76c:	6859      	ldr	r1, [r3, #4]
1001c76e:	f850 3b08 	ldr.w	r3, [r0], #8
1001c772:	900a      	str	r0, [sp, #40]	@ 0x28
1001c774:	f422 6480 	bic.w	r4, r2, #1024	@ 0x400
1001c778:	9402      	str	r4, [sp, #8]
1001c77a:	9c05      	ldr	r4, [sp, #20]
1001c77c:	2000      	movs	r0, #0
1001c77e:	3401      	adds	r4, #1
1001c780:	f88d 004b 	strb.w	r0, [sp, #75]	@ 0x4b
1001c784:	d05d      	beq.n	1001c842 <_vfiprintf_r+0x622>
1001c786:	ea53 0401 	orrs.w	r4, r3, r1
1001c78a:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
1001c78e:	f040 8414 	bne.w	1001cfba <_vfiprintf_r+0xd9a>
1001c792:	9c02      	ldr	r4, [sp, #8]
1001c794:	9202      	str	r2, [sp, #8]
1001c796:	9b05      	ldr	r3, [sp, #20]
1001c798:	2b00      	cmp	r3, #0
1001c79a:	d14a      	bne.n	1001c832 <_vfiprintf_r+0x612>
1001c79c:	2800      	cmp	r0, #0
1001c79e:	f040 82f0 	bne.w	1001cd82 <_vfiprintf_r+0xb62>
1001c7a2:	f014 0201 	ands.w	r2, r4, #1
1001c7a6:	9209      	str	r2, [sp, #36]	@ 0x24
1001c7a8:	f000 82f4 	beq.w	1001cd94 <_vfiprintf_r+0xb74>
1001c7ac:	2330      	movs	r3, #48	@ 0x30
1001c7ae:	f88d 3117 	strb.w	r3, [sp, #279]	@ 0x117
1001c7b2:	9204      	str	r2, [sp, #16]
1001c7b4:	f20d 1417 	addw	r4, sp, #279	@ 0x117
1001c7b8:	e0fc      	b.n	1001c9b4 <_vfiprintf_r+0x794>
1001c7ba:	9b02      	ldr	r3, [sp, #8]
1001c7bc:	9406      	str	r4, [sp, #24]
1001c7be:	f043 0310 	orr.w	r3, r3, #16
1001c7c2:	9302      	str	r3, [sp, #8]
1001c7c4:	9b02      	ldr	r3, [sp, #8]
1001c7c6:	069c      	lsls	r4, r3, #26
1001c7c8:	d491      	bmi.n	1001c6ee <_vfiprintf_r+0x4ce>
1001c7ca:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001c7cc:	f852 3b04 	ldr.w	r3, [r2], #4
1001c7d0:	920a      	str	r2, [sp, #40]	@ 0x28
1001c7d2:	9a02      	ldr	r2, [sp, #8]
1001c7d4:	06d0      	lsls	r0, r2, #27
1001c7d6:	f100 82f2 	bmi.w	1001cdbe <_vfiprintf_r+0xb9e>
1001c7da:	9a02      	ldr	r2, [sp, #8]
1001c7dc:	0651      	lsls	r1, r2, #25
1001c7de:	f140 82ea 	bpl.w	1001cdb6 <_vfiprintf_r+0xb96>
1001c7e2:	f343 31c0 	sbfx	r1, r3, #15, #1
1001c7e6:	460a      	mov	r2, r1
1001c7e8:	b21b      	sxth	r3, r3
1001c7ea:	e78a      	b.n	1001c702 <_vfiprintf_r+0x4e2>
1001c7ec:	9b02      	ldr	r3, [sp, #8]
1001c7ee:	9406      	str	r4, [sp, #24]
1001c7f0:	f043 0410 	orr.w	r4, r3, #16
1001c7f4:	f014 0120 	ands.w	r1, r4, #32
1001c7f8:	f000 828b 	beq.w	1001cd12 <_vfiprintf_r+0xaf2>
1001c7fc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001c7fe:	3307      	adds	r3, #7
1001c800:	f023 0307 	bic.w	r3, r3, #7
1001c804:	461a      	mov	r2, r3
1001c806:	6859      	ldr	r1, [r3, #4]
1001c808:	f852 3b08 	ldr.w	r3, [r2], #8
1001c80c:	920a      	str	r2, [sp, #40]	@ 0x28
1001c80e:	2200      	movs	r2, #0
1001c810:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
1001c814:	9a05      	ldr	r2, [sp, #20]
1001c816:	3201      	adds	r2, #1
1001c818:	f000 83d1 	beq.w	1001cfbe <_vfiprintf_r+0xd9e>
1001c81c:	f024 0280 	bic.w	r2, r4, #128	@ 0x80
1001c820:	9202      	str	r2, [sp, #8]
1001c822:	ea53 0201 	orrs.w	r2, r3, r1
1001c826:	f040 80b3 	bne.w	1001c990 <_vfiprintf_r+0x770>
1001c82a:	9b05      	ldr	r3, [sp, #20]
1001c82c:	2001      	movs	r0, #1
1001c82e:	2b00      	cmp	r3, #0
1001c830:	d0b4      	beq.n	1001c79c <_vfiprintf_r+0x57c>
1001c832:	2801      	cmp	r0, #1
1001c834:	f000 8480 	beq.w	1001d138 <_vfiprintf_r+0xf18>
1001c838:	2300      	movs	r3, #0
1001c83a:	2802      	cmp	r0, #2
1001c83c:	4619      	mov	r1, r3
1001c83e:	f000 8199 	beq.w	1001cb74 <_vfiprintf_r+0x954>
1001c842:	ac46      	add	r4, sp, #280	@ 0x118
1001c844:	f003 0207 	and.w	r2, r3, #7
1001c848:	08db      	lsrs	r3, r3, #3
1001c84a:	ea43 7341 	orr.w	r3, r3, r1, lsl #29
1001c84e:	08c9      	lsrs	r1, r1, #3
1001c850:	3230      	adds	r2, #48	@ 0x30
1001c852:	ea53 0501 	orrs.w	r5, r3, r1
1001c856:	4620      	mov	r0, r4
1001c858:	f804 2d01 	strb.w	r2, [r4, #-1]!
1001c85c:	d1f2      	bne.n	1001c844 <_vfiprintf_r+0x624>
1001c85e:	9b02      	ldr	r3, [sp, #8]
1001c860:	07dd      	lsls	r5, r3, #31
1001c862:	f140 8195 	bpl.w	1001cb90 <_vfiprintf_r+0x970>
1001c866:	2a30      	cmp	r2, #48	@ 0x30
1001c868:	f000 8192 	beq.w	1001cb90 <_vfiprintf_r+0x970>
1001c86c:	2330      	movs	r3, #48	@ 0x30
1001c86e:	9a05      	ldr	r2, [sp, #20]
1001c870:	f804 3c01 	strb.w	r3, [r4, #-1]
1001c874:	3802      	subs	r0, #2
1001c876:	ab46      	add	r3, sp, #280	@ 0x118
1001c878:	1a1b      	subs	r3, r3, r0
1001c87a:	429a      	cmp	r2, r3
1001c87c:	bfb8      	it	lt
1001c87e:	461a      	movlt	r2, r3
1001c880:	9309      	str	r3, [sp, #36]	@ 0x24
1001c882:	4604      	mov	r4, r0
1001c884:	9204      	str	r2, [sp, #16]
1001c886:	e095      	b.n	1001c9b4 <_vfiprintf_r+0x794>
1001c888:	7822      	ldrb	r2, [r4, #0]
1001c88a:	9b02      	ldr	r3, [sp, #8]
1001c88c:	2a68      	cmp	r2, #104	@ 0x68
1001c88e:	f000 839d 	beq.w	1001cfcc <_vfiprintf_r+0xdac>
1001c892:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001c896:	9302      	str	r3, [sp, #8]
1001c898:	e52a      	b.n	1001c2f0 <_vfiprintf_r+0xd0>
1001c89a:	9b02      	ldr	r3, [sp, #8]
1001c89c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001c89e:	9406      	str	r4, [sp, #24]
1001c8a0:	f043 0302 	orr.w	r3, r3, #2
1001c8a4:	9302      	str	r3, [sp, #8]
1001c8a6:	f852 3b04 	ldr.w	r3, [r2], #4
1001c8aa:	920a      	str	r2, [sp, #40]	@ 0x28
1001c8ac:	f647 0230 	movw	r2, #30768	@ 0x7830
1001c8b0:	f8ad 204c 	strh.w	r2, [sp, #76]	@ 0x4c
1001c8b4:	4abb      	ldr	r2, [pc, #748]	@ (1001cba4 <_vfiprintf_r+0x984>)
1001c8b6:	920d      	str	r2, [sp, #52]	@ 0x34
1001c8b8:	2100      	movs	r1, #0
1001c8ba:	2200      	movs	r2, #0
1001c8bc:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
1001c8c0:	9a05      	ldr	r2, [sp, #20]
1001c8c2:	3201      	adds	r2, #1
1001c8c4:	f000 8156 	beq.w	1001cb74 <_vfiprintf_r+0x954>
1001c8c8:	9c02      	ldr	r4, [sp, #8]
1001c8ca:	ea53 0001 	orrs.w	r0, r3, r1
1001c8ce:	f024 0280 	bic.w	r2, r4, #128	@ 0x80
1001c8d2:	9202      	str	r2, [sp, #8]
1001c8d4:	f040 814e 	bne.w	1001cb74 <_vfiprintf_r+0x954>
1001c8d8:	2002      	movs	r0, #2
1001c8da:	e75c      	b.n	1001c796 <_vfiprintf_r+0x576>
1001c8dc:	9b02      	ldr	r3, [sp, #8]
1001c8de:	9406      	str	r4, [sp, #24]
1001c8e0:	069e      	lsls	r6, r3, #26
1001c8e2:	f140 827e 	bpl.w	1001cde2 <_vfiprintf_r+0xbc2>
1001c8e6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001c8e8:	9a07      	ldr	r2, [sp, #28]
1001c8ea:	681b      	ldr	r3, [r3, #0]
1001c8ec:	601a      	str	r2, [r3, #0]
1001c8ee:	17d2      	asrs	r2, r2, #31
1001c8f0:	605a      	str	r2, [r3, #4]
1001c8f2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001c8f4:	3304      	adds	r3, #4
1001c8f6:	930a      	str	r3, [sp, #40]	@ 0x28
1001c8f8:	e4d5      	b.n	1001c2a6 <_vfiprintf_r+0x86>
1001c8fa:	9b02      	ldr	r3, [sp, #8]
1001c8fc:	7822      	ldrb	r2, [r4, #0]
1001c8fe:	f043 0301 	orr.w	r3, r3, #1
1001c902:	9302      	str	r3, [sp, #8]
1001c904:	e4f4      	b.n	1001c2f0 <_vfiprintf_r+0xd0>
1001c906:	f89d 304b 	ldrb.w	r3, [sp, #75]	@ 0x4b
1001c90a:	7822      	ldrb	r2, [r4, #0]
1001c90c:	2b00      	cmp	r3, #0
1001c90e:	f47f acef 	bne.w	1001c2f0 <_vfiprintf_r+0xd0>
1001c912:	2320      	movs	r3, #32
1001c914:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
1001c918:	e4ea      	b.n	1001c2f0 <_vfiprintf_r+0xd0>
1001c91a:	9b02      	ldr	r3, [sp, #8]
1001c91c:	7822      	ldrb	r2, [r4, #0]
1001c91e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
1001c922:	9302      	str	r3, [sp, #8]
1001c924:	e4e4      	b.n	1001c2f0 <_vfiprintf_r+0xd0>
1001c926:	4621      	mov	r1, r4
1001c928:	f811 2b01 	ldrb.w	r2, [r1], #1
1001c92c:	2a2a      	cmp	r2, #42	@ 0x2a
1001c92e:	f000 8433 	beq.w	1001d198 <_vfiprintf_r+0xf78>
1001c932:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
1001c936:	2b09      	cmp	r3, #9
1001c938:	460c      	mov	r4, r1
1001c93a:	f200 83f6 	bhi.w	1001d12a <_vfiprintf_r+0xf0a>
1001c93e:	2200      	movs	r2, #0
1001c940:	4611      	mov	r1, r2
1001c942:	f814 2b01 	ldrb.w	r2, [r4], #1
1001c946:	eb01 0181 	add.w	r1, r1, r1, lsl #2
1001c94a:	eb03 0141 	add.w	r1, r3, r1, lsl #1
1001c94e:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
1001c952:	2b09      	cmp	r3, #9
1001c954:	d9f5      	bls.n	1001c942 <_vfiprintf_r+0x722>
1001c956:	9105      	str	r1, [sp, #20]
1001c958:	e4cb      	b.n	1001c2f2 <_vfiprintf_r+0xd2>
1001c95a:	232b      	movs	r3, #43	@ 0x2b
1001c95c:	7822      	ldrb	r2, [r4, #0]
1001c95e:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
1001c962:	e4c5      	b.n	1001c2f0 <_vfiprintf_r+0xd0>
1001c964:	7822      	ldrb	r2, [r4, #0]
1001c966:	9b02      	ldr	r3, [sp, #8]
1001c968:	2a6c      	cmp	r2, #108	@ 0x6c
1001c96a:	f000 8336 	beq.w	1001cfda <_vfiprintf_r+0xdba>
1001c96e:	f043 0310 	orr.w	r3, r3, #16
1001c972:	9302      	str	r3, [sp, #8]
1001c974:	e4bc      	b.n	1001c2f0 <_vfiprintf_r+0xd0>
1001c976:	222d      	movs	r2, #45	@ 0x2d
1001c978:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
1001c97c:	9a05      	ldr	r2, [sp, #20]
1001c97e:	425b      	negs	r3, r3
1001c980:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1001c984:	3201      	adds	r2, #1
1001c986:	d003      	beq.n	1001c990 <_vfiprintf_r+0x770>
1001c988:	9a02      	ldr	r2, [sp, #8]
1001c98a:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
1001c98e:	9202      	str	r2, [sp, #8]
1001c990:	2b0a      	cmp	r3, #10
1001c992:	f171 0200 	sbcs.w	r2, r1, #0
1001c996:	f080 82bd 	bcs.w	1001cf14 <_vfiprintf_r+0xcf4>
1001c99a:	3330      	adds	r3, #48	@ 0x30
1001c99c:	b2db      	uxtb	r3, r3
1001c99e:	f88d 3117 	strb.w	r3, [sp, #279]	@ 0x117
1001c9a2:	9b05      	ldr	r3, [sp, #20]
1001c9a4:	2b01      	cmp	r3, #1
1001c9a6:	bfb8      	it	lt
1001c9a8:	2301      	movlt	r3, #1
1001c9aa:	9304      	str	r3, [sp, #16]
1001c9ac:	2301      	movs	r3, #1
1001c9ae:	9309      	str	r3, [sp, #36]	@ 0x24
1001c9b0:	f20d 1417 	addw	r4, sp, #279	@ 0x117
1001c9b4:	2300      	movs	r3, #0
1001c9b6:	930b      	str	r3, [sp, #44]	@ 0x2c
1001c9b8:	f89d 304b 	ldrb.w	r3, [sp, #75]	@ 0x4b
1001c9bc:	2b00      	cmp	r3, #0
1001c9be:	f43f adae 	beq.w	1001c51e <_vfiprintf_r+0x2fe>
1001c9c2:	9b04      	ldr	r3, [sp, #16]
1001c9c4:	3301      	adds	r3, #1
1001c9c6:	9304      	str	r3, [sp, #16]
1001c9c8:	e5a9      	b.n	1001c51e <_vfiprintf_r+0x2fe>
1001c9ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001c9cc:	941d      	str	r4, [sp, #116]	@ 0x74
1001c9ce:	2201      	movs	r2, #1
1001c9d0:	931e      	str	r3, [sp, #120]	@ 0x78
1001c9d2:	931c      	str	r3, [sp, #112]	@ 0x70
1001c9d4:	921b      	str	r2, [sp, #108]	@ 0x6c
1001c9d6:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001c9da:	f109 0908 	add.w	r9, r9, #8
1001c9de:	e60c      	b.n	1001c5fa <_vfiprintf_r+0x3da>
1001c9e0:	9b08      	ldr	r3, [sp, #32]
1001c9e2:	9804      	ldr	r0, [sp, #16]
1001c9e4:	1a1d      	subs	r5, r3, r0
1001c9e6:	2d00      	cmp	r5, #0
1001c9e8:	f77f ade7 	ble.w	1001c5ba <_vfiprintf_r+0x39a>
1001c9ec:	2d10      	cmp	r5, #16
1001c9ee:	f340 83cb 	ble.w	1001d188 <_vfiprintf_r+0xf68>
1001c9f2:	f8df 81b4 	ldr.w	r8, [pc, #436]	@ 1001cba8 <_vfiprintf_r+0x988>
1001c9f6:	4643      	mov	r3, r8
1001c9f8:	2610      	movs	r6, #16
1001c9fa:	46a0      	mov	r8, r4
1001c9fc:	4661      	mov	r1, ip
1001c9fe:	461c      	mov	r4, r3
1001ca00:	e007      	b.n	1001ca12 <_vfiprintf_r+0x7f2>
1001ca02:	f102 0c02 	add.w	ip, r2, #2
1001ca06:	f109 0908 	add.w	r9, r9, #8
1001ca0a:	4602      	mov	r2, r0
1001ca0c:	3d10      	subs	r5, #16
1001ca0e:	2d10      	cmp	r5, #16
1001ca10:	dd1a      	ble.n	1001ca48 <_vfiprintf_r+0x828>
1001ca12:	1c50      	adds	r0, r2, #1
1001ca14:	3110      	adds	r1, #16
1001ca16:	2807      	cmp	r0, #7
1001ca18:	e9c9 4600 	strd	r4, r6, [r9]
1001ca1c:	e9cd 011b 	strd	r0, r1, [sp, #108]	@ 0x6c
1001ca20:	ddef      	ble.n	1001ca02 <_vfiprintf_r+0x7e2>
1001ca22:	aa1a      	add	r2, sp, #104	@ 0x68
1001ca24:	2900      	cmp	r1, #0
1001ca26:	d07c      	beq.n	1001cb22 <_vfiprintf_r+0x902>
1001ca28:	9903      	ldr	r1, [sp, #12]
1001ca2a:	4658      	mov	r0, fp
1001ca2c:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001ca30:	f7ff fbb0 	bl	1001c194 <__sprint_r.part.0>
1001ca34:	2800      	cmp	r0, #0
1001ca36:	f47f ad4b 	bne.w	1001c4d0 <_vfiprintf_r+0x2b0>
1001ca3a:	e9dd 211b 	ldrd	r2, r1, [sp, #108]	@ 0x6c
1001ca3e:	3d10      	subs	r5, #16
1001ca40:	2d10      	cmp	r5, #16
1001ca42:	f102 0c01 	add.w	ip, r2, #1
1001ca46:	dce4      	bgt.n	1001ca12 <_vfiprintf_r+0x7f2>
1001ca48:	4623      	mov	r3, r4
1001ca4a:	4660      	mov	r0, ip
1001ca4c:	4644      	mov	r4, r8
1001ca4e:	468c      	mov	ip, r1
1001ca50:	4698      	mov	r8, r3
1001ca52:	44ac      	add	ip, r5
1001ca54:	2807      	cmp	r0, #7
1001ca56:	e9cd 0c1b 	strd	r0, ip, [sp, #108]	@ 0x6c
1001ca5a:	f8c9 8000 	str.w	r8, [r9]
1001ca5e:	f8c9 5004 	str.w	r5, [r9, #4]
1001ca62:	f340 81a3 	ble.w	1001cdac <_vfiprintf_r+0xb8c>
1001ca66:	f1bc 0f00 	cmp.w	ip, #0
1001ca6a:	f000 8327 	beq.w	1001d0bc <_vfiprintf_r+0xe9c>
1001ca6e:	9903      	ldr	r1, [sp, #12]
1001ca70:	aa1a      	add	r2, sp, #104	@ 0x68
1001ca72:	4658      	mov	r0, fp
1001ca74:	f7ff fb8e 	bl	1001c194 <__sprint_r.part.0>
1001ca78:	2800      	cmp	r0, #0
1001ca7a:	f47f ad29 	bne.w	1001c4d0 <_vfiprintf_r+0x2b0>
1001ca7e:	9b05      	ldr	r3, [sp, #20]
1001ca80:	9809      	ldr	r0, [sp, #36]	@ 0x24
1001ca82:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
1001ca86:	1a1d      	subs	r5, r3, r0
1001ca88:	2d00      	cmp	r5, #0
1001ca8a:	f102 0101 	add.w	r1, r2, #1
1001ca8e:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001ca92:	f77f ad98 	ble.w	1001c5c6 <_vfiprintf_r+0x3a6>
1001ca96:	2d10      	cmp	r5, #16
1001ca98:	f8df 810c 	ldr.w	r8, [pc, #268]	@ 1001cba8 <_vfiprintf_r+0x988>
1001ca9c:	dd2d      	ble.n	1001cafa <_vfiprintf_r+0x8da>
1001ca9e:	462b      	mov	r3, r5
1001caa0:	2610      	movs	r6, #16
1001caa2:	4625      	mov	r5, r4
1001caa4:	4660      	mov	r0, ip
1001caa6:	461c      	mov	r4, r3
1001caa8:	e007      	b.n	1001caba <_vfiprintf_r+0x89a>
1001caaa:	f102 0c02 	add.w	ip, r2, #2
1001caae:	f109 0908 	add.w	r9, r9, #8
1001cab2:	460a      	mov	r2, r1
1001cab4:	3c10      	subs	r4, #16
1001cab6:	2c10      	cmp	r4, #16
1001cab8:	dd1a      	ble.n	1001caf0 <_vfiprintf_r+0x8d0>
1001caba:	1c51      	adds	r1, r2, #1
1001cabc:	4b3a      	ldr	r3, [pc, #232]	@ (1001cba8 <_vfiprintf_r+0x988>)
1001cabe:	3010      	adds	r0, #16
1001cac0:	2907      	cmp	r1, #7
1001cac2:	e9c9 3600 	strd	r3, r6, [r9]
1001cac6:	e9cd 101b 	strd	r1, r0, [sp, #108]	@ 0x6c
1001caca:	ddee      	ble.n	1001caaa <_vfiprintf_r+0x88a>
1001cacc:	aa1a      	add	r2, sp, #104	@ 0x68
1001cace:	b310      	cbz	r0, 1001cb16 <_vfiprintf_r+0x8f6>
1001cad0:	9903      	ldr	r1, [sp, #12]
1001cad2:	4658      	mov	r0, fp
1001cad4:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001cad8:	f7ff fb5c 	bl	1001c194 <__sprint_r.part.0>
1001cadc:	2800      	cmp	r0, #0
1001cade:	f47f acf7 	bne.w	1001c4d0 <_vfiprintf_r+0x2b0>
1001cae2:	e9dd 201b 	ldrd	r2, r0, [sp, #108]	@ 0x6c
1001cae6:	3c10      	subs	r4, #16
1001cae8:	2c10      	cmp	r4, #16
1001caea:	f102 0c01 	add.w	ip, r2, #1
1001caee:	dce4      	bgt.n	1001caba <_vfiprintf_r+0x89a>
1001caf0:	4623      	mov	r3, r4
1001caf2:	4661      	mov	r1, ip
1001caf4:	462c      	mov	r4, r5
1001caf6:	4684      	mov	ip, r0
1001caf8:	461d      	mov	r5, r3
1001cafa:	44ac      	add	ip, r5
1001cafc:	2907      	cmp	r1, #7
1001cafe:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
1001cb02:	f8c9 8000 	str.w	r8, [r9]
1001cb06:	f8c9 5004 	str.w	r5, [r9, #4]
1001cb0a:	f300 80ec 	bgt.w	1001cce6 <_vfiprintf_r+0xac6>
1001cb0e:	f109 0908 	add.w	r9, r9, #8
1001cb12:	3101      	adds	r1, #1
1001cb14:	e557      	b.n	1001c5c6 <_vfiprintf_r+0x3a6>
1001cb16:	f04f 0c01 	mov.w	ip, #1
1001cb1a:	4602      	mov	r2, r0
1001cb1c:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001cb20:	e7c8      	b.n	1001cab4 <_vfiprintf_r+0x894>
1001cb22:	f04f 0c01 	mov.w	ip, #1
1001cb26:	460a      	mov	r2, r1
1001cb28:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001cb2c:	e76e      	b.n	1001ca0c <_vfiprintf_r+0x7ec>
1001cb2e:	f1bc 0f00 	cmp.w	ip, #0
1001cb32:	d00f      	beq.n	1001cb54 <_vfiprintf_r+0x934>
1001cb34:	9903      	ldr	r1, [sp, #12]
1001cb36:	9311      	str	r3, [sp, #68]	@ 0x44
1001cb38:	aa1a      	add	r2, sp, #104	@ 0x68
1001cb3a:	4658      	mov	r0, fp
1001cb3c:	f7ff fb2a 	bl	1001c194 <__sprint_r.part.0>
1001cb40:	2800      	cmp	r0, #0
1001cb42:	f47f acc5 	bne.w	1001c4d0 <_vfiprintf_r+0x2b0>
1001cb46:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
1001cb4a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
1001cb4c:	1c51      	adds	r1, r2, #1
1001cb4e:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001cb52:	e50f      	b.n	1001c574 <_vfiprintf_r+0x354>
1001cb54:	2b00      	cmp	r3, #0
1001cb56:	f000 8155 	beq.w	1001ce04 <_vfiprintf_r+0xbe4>
1001cb5a:	2302      	movs	r3, #2
1001cb5c:	931e      	str	r3, [sp, #120]	@ 0x78
1001cb5e:	469c      	mov	ip, r3
1001cb60:	ab13      	add	r3, sp, #76	@ 0x4c
1001cb62:	931d      	str	r3, [sp, #116]	@ 0x74
1001cb64:	2101      	movs	r1, #1
1001cb66:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001cb6a:	460a      	mov	r2, r1
1001cb6c:	f109 0908 	add.w	r9, r9, #8
1001cb70:	3101      	adds	r1, #1
1001cb72:	e51e      	b.n	1001c5b2 <_vfiprintf_r+0x392>
1001cb74:	980d      	ldr	r0, [sp, #52]	@ 0x34
1001cb76:	ac46      	add	r4, sp, #280	@ 0x118
1001cb78:	f003 020f 	and.w	r2, r3, #15
1001cb7c:	091b      	lsrs	r3, r3, #4
1001cb7e:	5c82      	ldrb	r2, [r0, r2]
1001cb80:	f804 2d01 	strb.w	r2, [r4, #-1]!
1001cb84:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
1001cb88:	0909      	lsrs	r1, r1, #4
1001cb8a:	ea53 0201 	orrs.w	r2, r3, r1
1001cb8e:	d1f3      	bne.n	1001cb78 <_vfiprintf_r+0x958>
1001cb90:	9a05      	ldr	r2, [sp, #20]
1001cb92:	ab46      	add	r3, sp, #280	@ 0x118
1001cb94:	1b1b      	subs	r3, r3, r4
1001cb96:	429a      	cmp	r2, r3
1001cb98:	bfb8      	it	lt
1001cb9a:	461a      	movlt	r2, r3
1001cb9c:	9309      	str	r3, [sp, #36]	@ 0x24
1001cb9e:	9204      	str	r2, [sp, #16]
1001cba0:	e708      	b.n	1001c9b4 <_vfiprintf_r+0x794>
1001cba2:	bf00      	nop
1001cba4:	100278b8 	.word	0x100278b8
1001cba8:	1002792c 	.word	0x1002792c
1001cbac:	2d10      	cmp	r5, #16
1001cbae:	f340 82c0 	ble.w	1001d132 <_vfiprintf_r+0xf12>
1001cbb2:	4eae      	ldr	r6, [pc, #696]	@ (1001ce6c <_vfiprintf_r+0xc4c>)
1001cbb4:	9311      	str	r3, [sp, #68]	@ 0x44
1001cbb6:	4649      	mov	r1, r9
1001cbb8:	f04f 0810 	mov.w	r8, #16
1001cbbc:	46a1      	mov	r9, r4
1001cbbe:	4634      	mov	r4, r6
1001cbc0:	4666      	mov	r6, ip
1001cbc2:	e007      	b.n	1001cbd4 <_vfiprintf_r+0x9b4>
1001cbc4:	f102 0e02 	add.w	lr, r2, #2
1001cbc8:	3108      	adds	r1, #8
1001cbca:	4602      	mov	r2, r0
1001cbcc:	3d10      	subs	r5, #16
1001cbce:	2d10      	cmp	r5, #16
1001cbd0:	dd18      	ble.n	1001cc04 <_vfiprintf_r+0x9e4>
1001cbd2:	1c50      	adds	r0, r2, #1
1001cbd4:	3610      	adds	r6, #16
1001cbd6:	2807      	cmp	r0, #7
1001cbd8:	e9c1 4800 	strd	r4, r8, [r1]
1001cbdc:	e9cd 061b 	strd	r0, r6, [sp, #108]	@ 0x6c
1001cbe0:	ddf0      	ble.n	1001cbc4 <_vfiprintf_r+0x9a4>
1001cbe2:	9903      	ldr	r1, [sp, #12]
1001cbe4:	aa1a      	add	r2, sp, #104	@ 0x68
1001cbe6:	4658      	mov	r0, fp
1001cbe8:	b316      	cbz	r6, 1001cc30 <_vfiprintf_r+0xa10>
1001cbea:	f7ff fad3 	bl	1001c194 <__sprint_r.part.0>
1001cbee:	2800      	cmp	r0, #0
1001cbf0:	f47f ac6e 	bne.w	1001c4d0 <_vfiprintf_r+0x2b0>
1001cbf4:	e9dd 261b 	ldrd	r2, r6, [sp, #108]	@ 0x6c
1001cbf8:	3d10      	subs	r5, #16
1001cbfa:	2d10      	cmp	r5, #16
1001cbfc:	f102 0e01 	add.w	lr, r2, #1
1001cc00:	a91d      	add	r1, sp, #116	@ 0x74
1001cc02:	dce6      	bgt.n	1001cbd2 <_vfiprintf_r+0x9b2>
1001cc04:	9b11      	ldr	r3, [sp, #68]	@ 0x44
1001cc06:	46b4      	mov	ip, r6
1001cc08:	4626      	mov	r6, r4
1001cc0a:	464c      	mov	r4, r9
1001cc0c:	4689      	mov	r9, r1
1001cc0e:	44ac      	add	ip, r5
1001cc10:	f1be 0f07 	cmp.w	lr, #7
1001cc14:	e9cd ec1b 	strd	lr, ip, [sp, #108]	@ 0x6c
1001cc18:	f8c9 6000 	str.w	r6, [r9]
1001cc1c:	f8c9 5004 	str.w	r5, [r9, #4]
1001cc20:	f300 809a 	bgt.w	1001cd58 <_vfiprintf_r+0xb38>
1001cc24:	f109 0908 	add.w	r9, r9, #8
1001cc28:	f10e 0101 	add.w	r1, lr, #1
1001cc2c:	4672      	mov	r2, lr
1001cc2e:	e48c      	b.n	1001c54a <_vfiprintf_r+0x32a>
1001cc30:	4632      	mov	r2, r6
1001cc32:	f04f 0e01 	mov.w	lr, #1
1001cc36:	a91d      	add	r1, sp, #116	@ 0x74
1001cc38:	e7c8      	b.n	1001cbcc <_vfiprintf_r+0x9ac>
1001cc3a:	9a02      	ldr	r2, [sp, #8]
1001cc3c:	931b      	str	r3, [sp, #108]	@ 0x6c
1001cc3e:	0754      	lsls	r4, r2, #29
1001cc40:	d548      	bpl.n	1001ccd4 <_vfiprintf_r+0xab4>
1001cc42:	9a08      	ldr	r2, [sp, #32]
1001cc44:	9904      	ldr	r1, [sp, #16]
1001cc46:	1a54      	subs	r4, r2, r1
1001cc48:	2c00      	cmp	r4, #0
1001cc4a:	dd43      	ble.n	1001ccd4 <_vfiprintf_r+0xab4>
1001cc4c:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001cc50:	2c10      	cmp	r4, #16
1001cc52:	991b      	ldr	r1, [sp, #108]	@ 0x6c
1001cc54:	f340 827c 	ble.w	1001d150 <_vfiprintf_r+0xf30>
1001cc58:	4e84      	ldr	r6, [pc, #528]	@ (1001ce6c <_vfiprintf_r+0xc4c>)
1001cc5a:	f8dd 800c 	ldr.w	r8, [sp, #12]
1001cc5e:	2510      	movs	r5, #16
1001cc60:	e006      	b.n	1001cc70 <_vfiprintf_r+0xa50>
1001cc62:	1c88      	adds	r0, r1, #2
1001cc64:	f109 0908 	add.w	r9, r9, #8
1001cc68:	4611      	mov	r1, r2
1001cc6a:	3c10      	subs	r4, #16
1001cc6c:	2c10      	cmp	r4, #16
1001cc6e:	dd19      	ble.n	1001cca4 <_vfiprintf_r+0xa84>
1001cc70:	1c4a      	adds	r2, r1, #1
1001cc72:	3310      	adds	r3, #16
1001cc74:	2a07      	cmp	r2, #7
1001cc76:	e9c9 6500 	strd	r6, r5, [r9]
1001cc7a:	e9cd 231b 	strd	r2, r3, [sp, #108]	@ 0x6c
1001cc7e:	ddf0      	ble.n	1001cc62 <_vfiprintf_r+0xa42>
1001cc80:	aa1a      	add	r2, sp, #104	@ 0x68
1001cc82:	b313      	cbz	r3, 1001ccca <_vfiprintf_r+0xaaa>
1001cc84:	4641      	mov	r1, r8
1001cc86:	4658      	mov	r0, fp
1001cc88:	f7ff fa84 	bl	1001c194 <__sprint_r.part.0>
1001cc8c:	2800      	cmp	r0, #0
1001cc8e:	f47f ac1f 	bne.w	1001c4d0 <_vfiprintf_r+0x2b0>
1001cc92:	e9dd 131b 	ldrd	r1, r3, [sp, #108]	@ 0x6c
1001cc96:	3c10      	subs	r4, #16
1001cc98:	2c10      	cmp	r4, #16
1001cc9a:	f101 0001 	add.w	r0, r1, #1
1001cc9e:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001cca2:	dce5      	bgt.n	1001cc70 <_vfiprintf_r+0xa50>
1001cca4:	4423      	add	r3, r4
1001cca6:	2807      	cmp	r0, #7
1001cca8:	e9c9 6400 	strd	r6, r4, [r9]
1001ccac:	e9cd 031b 	strd	r0, r3, [sp, #108]	@ 0x6c
1001ccb0:	f77f acac 	ble.w	1001c60c <_vfiprintf_r+0x3ec>
1001ccb4:	b173      	cbz	r3, 1001ccd4 <_vfiprintf_r+0xab4>
1001ccb6:	9903      	ldr	r1, [sp, #12]
1001ccb8:	aa1a      	add	r2, sp, #104	@ 0x68
1001ccba:	4658      	mov	r0, fp
1001ccbc:	f7ff fa6a 	bl	1001c194 <__sprint_r.part.0>
1001ccc0:	2800      	cmp	r0, #0
1001ccc2:	f47f ac05 	bne.w	1001c4d0 <_vfiprintf_r+0x2b0>
1001ccc6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
1001ccc8:	e4a0      	b.n	1001c60c <_vfiprintf_r+0x3ec>
1001ccca:	2001      	movs	r0, #1
1001cccc:	4619      	mov	r1, r3
1001ccce:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001ccd2:	e7ca      	b.n	1001cc6a <_vfiprintf_r+0xa4a>
1001ccd4:	e9dd 3207 	ldrd	r3, r2, [sp, #28]
1001ccd8:	9904      	ldr	r1, [sp, #16]
1001ccda:	428a      	cmp	r2, r1
1001ccdc:	bfac      	ite	ge
1001ccde:	189b      	addge	r3, r3, r2
1001cce0:	185b      	addlt	r3, r3, r1
1001cce2:	9307      	str	r3, [sp, #28]
1001cce4:	e49d      	b.n	1001c622 <_vfiprintf_r+0x402>
1001cce6:	f1bc 0f00 	cmp.w	ip, #0
1001ccea:	f43f ae6e 	beq.w	1001c9ca <_vfiprintf_r+0x7aa>
1001ccee:	9903      	ldr	r1, [sp, #12]
1001ccf0:	aa1a      	add	r2, sp, #104	@ 0x68
1001ccf2:	4658      	mov	r0, fp
1001ccf4:	f7ff fa4e 	bl	1001c194 <__sprint_r.part.0>
1001ccf8:	2800      	cmp	r0, #0
1001ccfa:	f47f abe9 	bne.w	1001c4d0 <_vfiprintf_r+0x2b0>
1001ccfe:	991b      	ldr	r1, [sp, #108]	@ 0x6c
1001cd00:	f8dd c070 	ldr.w	ip, [sp, #112]	@ 0x70
1001cd04:	3101      	adds	r1, #1
1001cd06:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001cd0a:	e45c      	b.n	1001c5c6 <_vfiprintf_r+0x3a6>
1001cd0c:	921b      	str	r2, [sp, #108]	@ 0x6c
1001cd0e:	f7ff bbd4 	b.w	1001c4ba <_vfiprintf_r+0x29a>
1001cd12:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001cd14:	f852 3b04 	ldr.w	r3, [r2], #4
1001cd18:	920a      	str	r2, [sp, #40]	@ 0x28
1001cd1a:	f014 0210 	ands.w	r2, r4, #16
1001cd1e:	f47f ad76 	bne.w	1001c80e <_vfiprintf_r+0x5ee>
1001cd22:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
1001cd26:	f000 816e 	beq.w	1001d006 <_vfiprintf_r+0xde6>
1001cd2a:	b29b      	uxth	r3, r3
1001cd2c:	4611      	mov	r1, r2
1001cd2e:	e56e      	b.n	1001c80e <_vfiprintf_r+0x5ee>
1001cd30:	980a      	ldr	r0, [sp, #40]	@ 0x28
1001cd32:	f850 3b04 	ldr.w	r3, [r0], #4
1001cd36:	900a      	str	r0, [sp, #40]	@ 0x28
1001cd38:	f012 0010 	ands.w	r0, r2, #16
1001cd3c:	f47f ad1a 	bne.w	1001c774 <_vfiprintf_r+0x554>
1001cd40:	f012 0440 	ands.w	r4, r2, #64	@ 0x40
1001cd44:	f000 8167 	beq.w	1001d016 <_vfiprintf_r+0xdf6>
1001cd48:	b29b      	uxth	r3, r3
1001cd4a:	4601      	mov	r1, r0
1001cd4c:	e512      	b.n	1001c774 <_vfiprintf_r+0x554>
1001cd4e:	2101      	movs	r1, #1
1001cd50:	4662      	mov	r2, ip
1001cd52:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001cd56:	e42c      	b.n	1001c5b2 <_vfiprintf_r+0x392>
1001cd58:	f1bc 0f00 	cmp.w	ip, #0
1001cd5c:	f000 8095 	beq.w	1001ce8a <_vfiprintf_r+0xc6a>
1001cd60:	9903      	ldr	r1, [sp, #12]
1001cd62:	9311      	str	r3, [sp, #68]	@ 0x44
1001cd64:	aa1a      	add	r2, sp, #104	@ 0x68
1001cd66:	4658      	mov	r0, fp
1001cd68:	f7ff fa14 	bl	1001c194 <__sprint_r.part.0>
1001cd6c:	2800      	cmp	r0, #0
1001cd6e:	f47f abaf 	bne.w	1001c4d0 <_vfiprintf_r+0x2b0>
1001cd72:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
1001cd76:	9b11      	ldr	r3, [sp, #68]	@ 0x44
1001cd78:	1c51      	adds	r1, r2, #1
1001cd7a:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001cd7e:	f7ff bbe4 	b.w	1001c54a <_vfiprintf_r+0x32a>
1001cd82:	9b05      	ldr	r3, [sp, #20]
1001cd84:	9304      	str	r3, [sp, #16]
1001cd86:	9309      	str	r3, [sp, #36]	@ 0x24
1001cd88:	ac46      	add	r4, sp, #280	@ 0x118
1001cd8a:	e613      	b.n	1001c9b4 <_vfiprintf_r+0x794>
1001cd8c:	7822      	ldrb	r2, [r4, #0]
1001cd8e:	930a      	str	r3, [sp, #40]	@ 0x28
1001cd90:	f7ff baae 	b.w	1001c2f0 <_vfiprintf_r+0xd0>
1001cd94:	9b05      	ldr	r3, [sp, #20]
1001cd96:	9304      	str	r3, [sp, #16]
1001cd98:	ac46      	add	r4, sp, #280	@ 0x118
1001cd9a:	e60b      	b.n	1001c9b4 <_vfiprintf_r+0x794>
1001cd9c:	9d03      	ldr	r5, [sp, #12]
1001cd9e:	6da8      	ldr	r0, [r5, #88]	@ 0x58
1001cda0:	f7f8 f970 	bl	10015084 <__retarget_lock_acquire_recursive>
1001cda4:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
1001cda8:	f7ff ba59 	b.w	1001c25e <_vfiprintf_r+0x3e>
1001cdac:	f109 0908 	add.w	r9, r9, #8
1001cdb0:	1c41      	adds	r1, r0, #1
1001cdb2:	4602      	mov	r2, r0
1001cdb4:	e401      	b.n	1001c5ba <_vfiprintf_r+0x39a>
1001cdb6:	9a02      	ldr	r2, [sp, #8]
1001cdb8:	0592      	lsls	r2, r2, #22
1001cdba:	f100 8185 	bmi.w	1001d0c8 <_vfiprintf_r+0xea8>
1001cdbe:	17d9      	asrs	r1, r3, #31
1001cdc0:	460a      	mov	r2, r1
1001cdc2:	e49e      	b.n	1001c702 <_vfiprintf_r+0x4e2>
1001cdc4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001cdc6:	7822      	ldrb	r2, [r4, #0]
1001cdc8:	2b00      	cmp	r3, #0
1001cdca:	f43f aa91 	beq.w	1001c2f0 <_vfiprintf_r+0xd0>
1001cdce:	781b      	ldrb	r3, [r3, #0]
1001cdd0:	2b00      	cmp	r3, #0
1001cdd2:	f43f aa8d 	beq.w	1001c2f0 <_vfiprintf_r+0xd0>
1001cdd6:	9b02      	ldr	r3, [sp, #8]
1001cdd8:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
1001cddc:	9302      	str	r3, [sp, #8]
1001cdde:	f7ff ba87 	b.w	1001c2f0 <_vfiprintf_r+0xd0>
1001cde2:	9b02      	ldr	r3, [sp, #8]
1001cde4:	06dd      	lsls	r5, r3, #27
1001cde6:	f100 80ff 	bmi.w	1001cfe8 <_vfiprintf_r+0xdc8>
1001cdea:	9b02      	ldr	r3, [sp, #8]
1001cdec:	065c      	lsls	r4, r3, #25
1001cdee:	f100 8177 	bmi.w	1001d0e0 <_vfiprintf_r+0xec0>
1001cdf2:	9b02      	ldr	r3, [sp, #8]
1001cdf4:	0598      	lsls	r0, r3, #22
1001cdf6:	f140 80f7 	bpl.w	1001cfe8 <_vfiprintf_r+0xdc8>
1001cdfa:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001cdfc:	9a07      	ldr	r2, [sp, #28]
1001cdfe:	681b      	ldr	r3, [r3, #0]
1001ce00:	701a      	strb	r2, [r3, #0]
1001ce02:	e576      	b.n	1001c8f2 <_vfiprintf_r+0x6d2>
1001ce04:	4662      	mov	r2, ip
1001ce06:	2101      	movs	r1, #1
1001ce08:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001ce0c:	f7ff bbd1 	b.w	1001c5b2 <_vfiprintf_r+0x392>
1001ce10:	9406      	str	r4, [sp, #24]
1001ce12:	9c02      	ldr	r4, [sp, #8]
1001ce14:	e4ee      	b.n	1001c7f4 <_vfiprintf_r+0x5d4>
1001ce16:	9a02      	ldr	r2, [sp, #8]
1001ce18:	9406      	str	r4, [sp, #24]
1001ce1a:	e49e      	b.n	1001c75a <_vfiprintf_r+0x53a>
1001ce1c:	4b14      	ldr	r3, [pc, #80]	@ (1001ce70 <_vfiprintf_r+0xc50>)
1001ce1e:	9406      	str	r4, [sp, #24]
1001ce20:	930d      	str	r3, [sp, #52]	@ 0x34
1001ce22:	9b02      	ldr	r3, [sp, #8]
1001ce24:	f013 0120 	ands.w	r1, r3, #32
1001ce28:	d064      	beq.n	1001cef4 <_vfiprintf_r+0xcd4>
1001ce2a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001ce2c:	3307      	adds	r3, #7
1001ce2e:	f023 0307 	bic.w	r3, r3, #7
1001ce32:	4618      	mov	r0, r3
1001ce34:	6859      	ldr	r1, [r3, #4]
1001ce36:	f850 3b08 	ldr.w	r3, [r0], #8
1001ce3a:	900a      	str	r0, [sp, #40]	@ 0x28
1001ce3c:	9c02      	ldr	r4, [sp, #8]
1001ce3e:	07e6      	lsls	r6, r4, #31
1001ce40:	d50a      	bpl.n	1001ce58 <_vfiprintf_r+0xc38>
1001ce42:	ea53 0001 	orrs.w	r0, r3, r1
1001ce46:	d007      	beq.n	1001ce58 <_vfiprintf_r+0xc38>
1001ce48:	f88d 204d 	strb.w	r2, [sp, #77]	@ 0x4d
1001ce4c:	f044 0202 	orr.w	r2, r4, #2
1001ce50:	9202      	str	r2, [sp, #8]
1001ce52:	2230      	movs	r2, #48	@ 0x30
1001ce54:	f88d 204c 	strb.w	r2, [sp, #76]	@ 0x4c
1001ce58:	9a02      	ldr	r2, [sp, #8]
1001ce5a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
1001ce5e:	9202      	str	r2, [sp, #8]
1001ce60:	e52b      	b.n	1001c8ba <_vfiprintf_r+0x69a>
1001ce62:	4b04      	ldr	r3, [pc, #16]	@ (1001ce74 <_vfiprintf_r+0xc54>)
1001ce64:	9406      	str	r4, [sp, #24]
1001ce66:	930d      	str	r3, [sp, #52]	@ 0x34
1001ce68:	e7db      	b.n	1001ce22 <_vfiprintf_r+0xc02>
1001ce6a:	bf00      	nop
1001ce6c:	1002793c 	.word	0x1002793c
1001ce70:	100278cc 	.word	0x100278cc
1001ce74:	100278b8 	.word	0x100278b8
1001ce78:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001ce7a:	681b      	ldr	r3, [r3, #0]
1001ce7c:	f88d 30b4 	strb.w	r3, [sp, #180]	@ 0xb4
1001ce80:	2301      	movs	r3, #1
1001ce82:	9304      	str	r3, [sp, #16]
1001ce84:	9309      	str	r3, [sp, #36]	@ 0x24
1001ce86:	ac2d      	add	r4, sp, #180	@ 0xb4
1001ce88:	e428      	b.n	1001c6dc <_vfiprintf_r+0x4bc>
1001ce8a:	f89d 204b 	ldrb.w	r2, [sp, #75]	@ 0x4b
1001ce8e:	2a00      	cmp	r2, #0
1001ce90:	f000 8120 	beq.w	1001d0d4 <_vfiprintf_r+0xeb4>
1001ce94:	2101      	movs	r1, #1
1001ce96:	f10d 024b 	add.w	r2, sp, #75	@ 0x4b
1001ce9a:	911e      	str	r1, [sp, #120]	@ 0x78
1001ce9c:	921d      	str	r2, [sp, #116]	@ 0x74
1001ce9e:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001cea2:	468c      	mov	ip, r1
1001cea4:	f7ff bb62 	b.w	1001c56c <_vfiprintf_r+0x34c>
1001cea8:	2208      	movs	r2, #8
1001ceaa:	2100      	movs	r1, #0
1001ceac:	a818      	add	r0, sp, #96	@ 0x60
1001ceae:	9415      	str	r4, [sp, #84]	@ 0x54
1001ceb0:	f7f8 f856 	bl	10014f60 <memset>
1001ceb4:	f8dd 8014 	ldr.w	r8, [sp, #20]
1001ceb8:	f1b8 3fff 	cmp.w	r8, #4294967295	@ 0xffffffff
1001cebc:	f000 80b9 	beq.w	1001d032 <_vfiprintf_r+0xe12>
1001cec0:	2500      	movs	r5, #0
1001cec2:	9404      	str	r4, [sp, #16]
1001cec4:	462c      	mov	r4, r5
1001cec6:	e00c      	b.n	1001cee2 <_vfiprintf_r+0xcc2>
1001cec8:	a92d      	add	r1, sp, #180	@ 0xb4
1001ceca:	4658      	mov	r0, fp
1001cecc:	f000 fab4 	bl	1001d438 <_wcrtomb_r>
1001ced0:	1c41      	adds	r1, r0, #1
1001ced2:	4420      	add	r0, r4
1001ced4:	f000 813f 	beq.w	1001d156 <_vfiprintf_r+0xf36>
1001ced8:	4540      	cmp	r0, r8
1001ceda:	dc08      	bgt.n	1001ceee <_vfiprintf_r+0xcce>
1001cedc:	f000 8158 	beq.w	1001d190 <_vfiprintf_r+0xf70>
1001cee0:	4604      	mov	r4, r0
1001cee2:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001cee4:	5952      	ldr	r2, [r2, r5]
1001cee6:	ab18      	add	r3, sp, #96	@ 0x60
1001cee8:	3504      	adds	r5, #4
1001ceea:	2a00      	cmp	r2, #0
1001ceec:	d1ec      	bne.n	1001cec8 <_vfiprintf_r+0xca8>
1001ceee:	9409      	str	r4, [sp, #36]	@ 0x24
1001cef0:	9c04      	ldr	r4, [sp, #16]
1001cef2:	e0ac      	b.n	1001d04e <_vfiprintf_r+0xe2e>
1001cef4:	980a      	ldr	r0, [sp, #40]	@ 0x28
1001cef6:	f850 3b04 	ldr.w	r3, [r0], #4
1001cefa:	900a      	str	r0, [sp, #40]	@ 0x28
1001cefc:	9802      	ldr	r0, [sp, #8]
1001cefe:	f010 0010 	ands.w	r0, r0, #16
1001cf02:	d19b      	bne.n	1001ce3c <_vfiprintf_r+0xc1c>
1001cf04:	9902      	ldr	r1, [sp, #8]
1001cf06:	f011 0440 	ands.w	r4, r1, #64	@ 0x40
1001cf0a:	f000 808b 	beq.w	1001d024 <_vfiprintf_r+0xe04>
1001cf0e:	b29b      	uxth	r3, r3
1001cf10:	4601      	mov	r1, r0
1001cf12:	e793      	b.n	1001ce3c <_vfiprintf_r+0xc1c>
1001cf14:	9a02      	ldr	r2, [sp, #8]
1001cf16:	f8cd 9010 	str.w	r9, [sp, #16]
1001cf1a:	ac46      	add	r4, sp, #280	@ 0x118
1001cf1c:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
1001cf20:	46a1      	mov	r9, r4
1001cf22:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
1001cf26:	4ea5      	ldr	r6, [pc, #660]	@ (1001d1bc <_vfiprintf_r+0xf9c>)
1001cf28:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
1001cf2c:	f04f 0c00 	mov.w	ip, #0
1001cf30:	4614      	mov	r4, r2
1001cf32:	e005      	b.n	1001cf40 <_vfiprintf_r+0xd20>
1001cf34:	2b0a      	cmp	r3, #10
1001cf36:	f171 0100 	sbcs.w	r1, r1, #0
1001cf3a:	d336      	bcc.n	1001cfaa <_vfiprintf_r+0xd8a>
1001cf3c:	4643      	mov	r3, r8
1001cf3e:	4629      	mov	r1, r5
1001cf40:	185a      	adds	r2, r3, r1
1001cf42:	f142 0200 	adc.w	r2, r2, #0
1001cf46:	fba6 0502 	umull	r0, r5, r6, r2
1001cf4a:	f025 0003 	bic.w	r0, r5, #3
1001cf4e:	eb00 0095 	add.w	r0, r0, r5, lsr #2
1001cf52:	1a12      	subs	r2, r2, r0
1001cf54:	1a98      	subs	r0, r3, r2
1001cf56:	f04f 35cc 	mov.w	r5, #3435973836	@ 0xcccccccc
1001cf5a:	f161 0e00 	sbc.w	lr, r1, #0
1001cf5e:	fb05 f500 	mul.w	r5, r5, r0
1001cf62:	fb06 550e 	mla	r5, r6, lr, r5
1001cf66:	fba0 8006 	umull	r8, r0, r0, r6
1001cf6a:	4405      	add	r5, r0
1001cf6c:	f008 0e01 	and.w	lr, r8, #1
1001cf70:	2005      	movs	r0, #5
1001cf72:	fbae 0e00 	umull	r0, lr, lr, r0
1001cf76:	1880      	adds	r0, r0, r2
1001cf78:	ea4f 0858 	mov.w	r8, r8, lsr #1
1001cf7c:	3030      	adds	r0, #48	@ 0x30
1001cf7e:	f809 0c01 	strb.w	r0, [r9, #-1]
1001cf82:	ea48 78c5 	orr.w	r8, r8, r5, lsl #31
1001cf86:	f10c 0c01 	add.w	ip, ip, #1
1001cf8a:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
1001cf8e:	086d      	lsrs	r5, r5, #1
1001cf90:	2c00      	cmp	r4, #0
1001cf92:	d0cf      	beq.n	1001cf34 <_vfiprintf_r+0xd14>
1001cf94:	f89b 2000 	ldrb.w	r2, [fp]
1001cf98:	4562      	cmp	r2, ip
1001cf9a:	d1cb      	bne.n	1001cf34 <_vfiprintf_r+0xd14>
1001cf9c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
1001cfa0:	d0c8      	beq.n	1001cf34 <_vfiprintf_r+0xd14>
1001cfa2:	2b0a      	cmp	r3, #10
1001cfa4:	f171 0100 	sbcs.w	r1, r1, #0
1001cfa8:	d272      	bcs.n	1001d090 <_vfiprintf_r+0xe70>
1001cfaa:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
1001cfae:	464c      	mov	r4, r9
1001cfb0:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
1001cfb4:	f8dd 9010 	ldr.w	r9, [sp, #16]
1001cfb8:	e5ea      	b.n	1001cb90 <_vfiprintf_r+0x970>
1001cfba:	9202      	str	r2, [sp, #8]
1001cfbc:	e441      	b.n	1001c842 <_vfiprintf_r+0x622>
1001cfbe:	9402      	str	r4, [sp, #8]
1001cfc0:	e4e6      	b.n	1001c990 <_vfiprintf_r+0x770>
1001cfc2:	4658      	mov	r0, fp
1001cfc4:	f7f8 fc9c 	bl	10015900 <__sinit>
1001cfc8:	f7ff b940 	b.w	1001c24c <_vfiprintf_r+0x2c>
1001cfcc:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
1001cfd0:	7862      	ldrb	r2, [r4, #1]
1001cfd2:	9302      	str	r3, [sp, #8]
1001cfd4:	3401      	adds	r4, #1
1001cfd6:	f7ff b98b 	b.w	1001c2f0 <_vfiprintf_r+0xd0>
1001cfda:	f043 0320 	orr.w	r3, r3, #32
1001cfde:	7862      	ldrb	r2, [r4, #1]
1001cfe0:	9302      	str	r3, [sp, #8]
1001cfe2:	3401      	adds	r4, #1
1001cfe4:	f7ff b984 	b.w	1001c2f0 <_vfiprintf_r+0xd0>
1001cfe8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001cfea:	9a07      	ldr	r2, [sp, #28]
1001cfec:	681b      	ldr	r3, [r3, #0]
1001cfee:	601a      	str	r2, [r3, #0]
1001cff0:	e47f      	b.n	1001c8f2 <_vfiprintf_r+0x6d2>
1001cff2:	9b05      	ldr	r3, [sp, #20]
1001cff4:	4c72      	ldr	r4, [pc, #456]	@ (1001d1c0 <_vfiprintf_r+0xfa0>)
1001cff6:	2b06      	cmp	r3, #6
1001cff8:	bf28      	it	cs
1001cffa:	2306      	movcs	r3, #6
1001cffc:	e9cd 3609 	strd	r3, r6, [sp, #36]	@ 0x24
1001d000:	9304      	str	r3, [sp, #16]
1001d002:	f7ff ba89 	b.w	1001c518 <_vfiprintf_r+0x2f8>
1001d006:	f414 7100 	ands.w	r1, r4, #512	@ 0x200
1001d00a:	f43f ac00 	beq.w	1001c80e <_vfiprintf_r+0x5ee>
1001d00e:	b2db      	uxtb	r3, r3
1001d010:	4601      	mov	r1, r0
1001d012:	f7ff bbfc 	b.w	1001c80e <_vfiprintf_r+0x5ee>
1001d016:	f412 7100 	ands.w	r1, r2, #512	@ 0x200
1001d01a:	bf1c      	itt	ne
1001d01c:	b2db      	uxtbne	r3, r3
1001d01e:	4621      	movne	r1, r4
1001d020:	f7ff bba8 	b.w	1001c774 <_vfiprintf_r+0x554>
1001d024:	9902      	ldr	r1, [sp, #8]
1001d026:	f411 7100 	ands.w	r1, r1, #512	@ 0x200
1001d02a:	bf1c      	itt	ne
1001d02c:	b2db      	uxtbne	r3, r3
1001d02e:	4621      	movne	r1, r4
1001d030:	e704      	b.n	1001ce3c <_vfiprintf_r+0xc1c>
1001d032:	ab18      	add	r3, sp, #96	@ 0x60
1001d034:	9300      	str	r3, [sp, #0]
1001d036:	2300      	movs	r3, #0
1001d038:	4619      	mov	r1, r3
1001d03a:	aa15      	add	r2, sp, #84	@ 0x54
1001d03c:	4658      	mov	r0, fp
1001d03e:	f001 f931 	bl	1001e2a4 <_wcsrtombs_r>
1001d042:	4603      	mov	r3, r0
1001d044:	3301      	adds	r3, #1
1001d046:	9009      	str	r0, [sp, #36]	@ 0x24
1001d048:	f000 8085 	beq.w	1001d156 <_vfiprintf_r+0xf36>
1001d04c:	9415      	str	r4, [sp, #84]	@ 0x54
1001d04e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001d050:	b373      	cbz	r3, 1001d0b0 <_vfiprintf_r+0xe90>
1001d052:	2b63      	cmp	r3, #99	@ 0x63
1001d054:	dc49      	bgt.n	1001d0ea <_vfiprintf_r+0xeca>
1001d056:	2300      	movs	r3, #0
1001d058:	930b      	str	r3, [sp, #44]	@ 0x2c
1001d05a:	ac2d      	add	r4, sp, #180	@ 0xb4
1001d05c:	2208      	movs	r2, #8
1001d05e:	2100      	movs	r1, #0
1001d060:	a818      	add	r0, sp, #96	@ 0x60
1001d062:	f7f7 ff7d 	bl	10014f60 <memset>
1001d066:	9d09      	ldr	r5, [sp, #36]	@ 0x24
1001d068:	ab18      	add	r3, sp, #96	@ 0x60
1001d06a:	9300      	str	r3, [sp, #0]
1001d06c:	aa15      	add	r2, sp, #84	@ 0x54
1001d06e:	462b      	mov	r3, r5
1001d070:	4621      	mov	r1, r4
1001d072:	4658      	mov	r0, fp
1001d074:	f001 f916 	bl	1001e2a4 <_wcsrtombs_r>
1001d078:	4285      	cmp	r5, r0
1001d07a:	f040 8098 	bne.w	1001d1ae <_vfiprintf_r+0xf8e>
1001d07e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001d080:	960a      	str	r6, [sp, #40]	@ 0x28
1001d082:	2300      	movs	r3, #0
1001d084:	54a3      	strb	r3, [r4, r2]
1001d086:	9305      	str	r3, [sp, #20]
1001d088:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
1001d08c:	9304      	str	r3, [sp, #16]
1001d08e:	e493      	b.n	1001c9b8 <_vfiprintf_r+0x798>
1001d090:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001d092:	9910      	ldr	r1, [sp, #64]	@ 0x40
1001d094:	eba9 0903 	sub.w	r9, r9, r3
1001d098:	461a      	mov	r2, r3
1001d09a:	4648      	mov	r0, r9
1001d09c:	f7fa ff3a 	bl	10017f14 <strncpy>
1001d0a0:	f89b 3001 	ldrb.w	r3, [fp, #1]
1001d0a4:	b10b      	cbz	r3, 1001d0aa <_vfiprintf_r+0xe8a>
1001d0a6:	f10b 0b01 	add.w	fp, fp, #1
1001d0aa:	f04f 0c00 	mov.w	ip, #0
1001d0ae:	e745      	b.n	1001cf3c <_vfiprintf_r+0xd1c>
1001d0b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001d0b2:	960a      	str	r6, [sp, #40]	@ 0x28
1001d0b4:	e9cd 3304 	strd	r3, r3, [sp, #16]
1001d0b8:	930b      	str	r3, [sp, #44]	@ 0x2c
1001d0ba:	e47d      	b.n	1001c9b8 <_vfiprintf_r+0x798>
1001d0bc:	2101      	movs	r1, #1
1001d0be:	4662      	mov	r2, ip
1001d0c0:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001d0c4:	f7ff ba79 	b.w	1001c5ba <_vfiprintf_r+0x39a>
1001d0c8:	f343 11c0 	sbfx	r1, r3, #7, #1
1001d0cc:	460a      	mov	r2, r1
1001d0ce:	b25b      	sxtb	r3, r3
1001d0d0:	f7ff bb17 	b.w	1001c702 <_vfiprintf_r+0x4e2>
1001d0d4:	4662      	mov	r2, ip
1001d0d6:	2101      	movs	r1, #1
1001d0d8:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001d0dc:	f7ff ba4a 	b.w	1001c574 <_vfiprintf_r+0x354>
1001d0e0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001d0e2:	9a07      	ldr	r2, [sp, #28]
1001d0e4:	681b      	ldr	r3, [r3, #0]
1001d0e6:	801a      	strh	r2, [r3, #0]
1001d0e8:	e403      	b.n	1001c8f2 <_vfiprintf_r+0x6d2>
1001d0ea:	1c59      	adds	r1, r3, #1
1001d0ec:	4658      	mov	r0, fp
1001d0ee:	f7f7 fc49 	bl	10014984 <_malloc_r>
1001d0f2:	4604      	mov	r4, r0
1001d0f4:	2800      	cmp	r0, #0
1001d0f6:	d02e      	beq.n	1001d156 <_vfiprintf_r+0xf36>
1001d0f8:	900b      	str	r0, [sp, #44]	@ 0x2c
1001d0fa:	e7af      	b.n	1001d05c <_vfiprintf_r+0xe3c>
1001d0fc:	6d88      	ldr	r0, [r1, #88]	@ 0x58
1001d0fe:	f7f7 ffc3 	bl	10015088 <__retarget_lock_release_recursive>
1001d102:	f7ff b99d 	b.w	1001c440 <_vfiprintf_r+0x220>
1001d106:	9b05      	ldr	r3, [sp, #20]
1001d108:	9304      	str	r3, [sp, #16]
1001d10a:	9309      	str	r3, [sp, #36]	@ 0x24
1001d10c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001d10e:	960a      	str	r6, [sp, #40]	@ 0x28
1001d110:	9305      	str	r3, [sp, #20]
1001d112:	e451      	b.n	1001c9b8 <_vfiprintf_r+0x798>
1001d114:	4620      	mov	r0, r4
1001d116:	9505      	str	r5, [sp, #20]
1001d118:	960a      	str	r6, [sp, #40]	@ 0x28
1001d11a:	f7f8 fd11 	bl	10015b40 <strlen>
1001d11e:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
1001d122:	9009      	str	r0, [sp, #36]	@ 0x24
1001d124:	9304      	str	r3, [sp, #16]
1001d126:	950b      	str	r5, [sp, #44]	@ 0x2c
1001d128:	e446      	b.n	1001c9b8 <_vfiprintf_r+0x798>
1001d12a:	2300      	movs	r3, #0
1001d12c:	9305      	str	r3, [sp, #20]
1001d12e:	f7ff b8e0 	b.w	1001c2f2 <_vfiprintf_r+0xd2>
1001d132:	4e24      	ldr	r6, [pc, #144]	@ (1001d1c4 <_vfiprintf_r+0xfa4>)
1001d134:	4686      	mov	lr, r0
1001d136:	e56a      	b.n	1001cc0e <_vfiprintf_r+0x9ee>
1001d138:	2330      	movs	r3, #48	@ 0x30
1001d13a:	e430      	b.n	1001c99e <_vfiprintf_r+0x77e>
1001d13c:	9903      	ldr	r1, [sp, #12]
1001d13e:	aa1a      	add	r2, sp, #104	@ 0x68
1001d140:	4658      	mov	r0, fp
1001d142:	f7ff f827 	bl	1001c194 <__sprint_r.part.0>
1001d146:	2800      	cmp	r0, #0
1001d148:	f43f a9a8 	beq.w	1001c49c <_vfiprintf_r+0x27c>
1001d14c:	f7ff b9c6 	b.w	1001c4dc <_vfiprintf_r+0x2bc>
1001d150:	4e1c      	ldr	r6, [pc, #112]	@ (1001d1c4 <_vfiprintf_r+0xfa4>)
1001d152:	1c48      	adds	r0, r1, #1
1001d154:	e5a6      	b.n	1001cca4 <_vfiprintf_r+0xa84>
1001d156:	9a03      	ldr	r2, [sp, #12]
1001d158:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
1001d15c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001d160:	8193      	strh	r3, [r2, #12]
1001d162:	f7ff b9be 	b.w	1001c4e2 <_vfiprintf_r+0x2c2>
1001d166:	9b03      	ldr	r3, [sp, #12]
1001d168:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
1001d16a:	07d9      	lsls	r1, r3, #31
1001d16c:	d407      	bmi.n	1001d17e <_vfiprintf_r+0xf5e>
1001d16e:	9b03      	ldr	r3, [sp, #12]
1001d170:	899b      	ldrh	r3, [r3, #12]
1001d172:	059a      	lsls	r2, r3, #22
1001d174:	d403      	bmi.n	1001d17e <_vfiprintf_r+0xf5e>
1001d176:	9b03      	ldr	r3, [sp, #12]
1001d178:	6d98      	ldr	r0, [r3, #88]	@ 0x58
1001d17a:	f7f7 ff85 	bl	10015088 <__retarget_lock_release_recursive>
1001d17e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001d182:	9307      	str	r3, [sp, #28]
1001d184:	f7ff b9b5 	b.w	1001c4f2 <_vfiprintf_r+0x2d2>
1001d188:	f8df 803c 	ldr.w	r8, [pc, #60]	@ 1001d1c8 <_vfiprintf_r+0xfa8>
1001d18c:	4608      	mov	r0, r1
1001d18e:	e460      	b.n	1001ca52 <_vfiprintf_r+0x832>
1001d190:	e9dd 4304 	ldrd	r4, r3, [sp, #16]
1001d194:	9309      	str	r3, [sp, #36]	@ 0x24
1001d196:	e75a      	b.n	1001d04e <_vfiprintf_r+0xe2e>
1001d198:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001d19a:	7862      	ldrb	r2, [r4, #1]
1001d19c:	460c      	mov	r4, r1
1001d19e:	f853 1b04 	ldr.w	r1, [r3], #4
1001d1a2:	930a      	str	r3, [sp, #40]	@ 0x28
1001d1a4:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
1001d1a8:	9105      	str	r1, [sp, #20]
1001d1aa:	f7ff b8a1 	b.w	1001c2f0 <_vfiprintf_r+0xd0>
1001d1ae:	9a03      	ldr	r2, [sp, #12]
1001d1b0:	8993      	ldrh	r3, [r2, #12]
1001d1b2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001d1b6:	8193      	strh	r3, [r2, #12]
1001d1b8:	f7ff b98a 	b.w	1001c4d0 <_vfiprintf_r+0x2b0>
1001d1bc:	cccccccd 	.word	0xcccccccd
1001d1c0:	100278e0 	.word	0x100278e0
1001d1c4:	1002793c 	.word	0x1002793c
1001d1c8:	1002792c 	.word	0x1002792c

1001d1cc <__sbprintf>:
1001d1cc:	b5f0      	push	{r4, r5, r6, r7, lr}
1001d1ce:	461f      	mov	r7, r3
1001d1d0:	898b      	ldrh	r3, [r1, #12]
1001d1d2:	f2ad 4d6c 	subw	sp, sp, #1132	@ 0x46c
1001d1d6:	f023 0302 	bic.w	r3, r3, #2
1001d1da:	f8ad 300c 	strh.w	r3, [sp, #12]
1001d1de:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
1001d1e0:	9319      	str	r3, [sp, #100]	@ 0x64
1001d1e2:	89cb      	ldrh	r3, [r1, #14]
1001d1e4:	f8ad 300e 	strh.w	r3, [sp, #14]
1001d1e8:	69cb      	ldr	r3, [r1, #28]
1001d1ea:	9307      	str	r3, [sp, #28]
1001d1ec:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
1001d1ee:	9309      	str	r3, [sp, #36]	@ 0x24
1001d1f0:	ab1a      	add	r3, sp, #104	@ 0x68
1001d1f2:	9300      	str	r3, [sp, #0]
1001d1f4:	9304      	str	r3, [sp, #16]
1001d1f6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
1001d1fa:	4615      	mov	r5, r2
1001d1fc:	4606      	mov	r6, r0
1001d1fe:	9302      	str	r3, [sp, #8]
1001d200:	9305      	str	r3, [sp, #20]
1001d202:	a816      	add	r0, sp, #88	@ 0x58
1001d204:	2300      	movs	r3, #0
1001d206:	460c      	mov	r4, r1
1001d208:	9306      	str	r3, [sp, #24]
1001d20a:	f7f7 ff37 	bl	1001507c <__retarget_lock_init_recursive>
1001d20e:	462a      	mov	r2, r5
1001d210:	463b      	mov	r3, r7
1001d212:	4669      	mov	r1, sp
1001d214:	4630      	mov	r0, r6
1001d216:	f7ff f803 	bl	1001c220 <_vfiprintf_r>
1001d21a:	1e05      	subs	r5, r0, #0
1001d21c:	db07      	blt.n	1001d22e <__sbprintf+0x62>
1001d21e:	4669      	mov	r1, sp
1001d220:	4630      	mov	r0, r6
1001d222:	f7f8 f9e9 	bl	100155f8 <_fflush_r>
1001d226:	2800      	cmp	r0, #0
1001d228:	bf18      	it	ne
1001d22a:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
1001d22e:	f8bd 300c 	ldrh.w	r3, [sp, #12]
1001d232:	065b      	lsls	r3, r3, #25
1001d234:	d503      	bpl.n	1001d23e <__sbprintf+0x72>
1001d236:	89a3      	ldrh	r3, [r4, #12]
1001d238:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001d23c:	81a3      	strh	r3, [r4, #12]
1001d23e:	9816      	ldr	r0, [sp, #88]	@ 0x58
1001d240:	f7f7 ff1e 	bl	10015080 <__retarget_lock_close_recursive>
1001d244:	4628      	mov	r0, r5
1001d246:	f20d 4d6c 	addw	sp, sp, #1132	@ 0x46c
1001d24a:	bdf0      	pop	{r4, r5, r6, r7, pc}

1001d24c <__register_exitproc>:
1001d24c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1001d250:	4d1b      	ldr	r5, [pc, #108]	@ (1001d2c0 <__register_exitproc+0x74>)
1001d252:	4606      	mov	r6, r0
1001d254:	6828      	ldr	r0, [r5, #0]
1001d256:	4698      	mov	r8, r3
1001d258:	460f      	mov	r7, r1
1001d25a:	4691      	mov	r9, r2
1001d25c:	f7f7 ff12 	bl	10015084 <__retarget_lock_acquire_recursive>
1001d260:	4b18      	ldr	r3, [pc, #96]	@ (1001d2c4 <__register_exitproc+0x78>)
1001d262:	681c      	ldr	r4, [r3, #0]
1001d264:	b31c      	cbz	r4, 1001d2ae <__register_exitproc+0x62>
1001d266:	6828      	ldr	r0, [r5, #0]
1001d268:	6865      	ldr	r5, [r4, #4]
1001d26a:	2d1f      	cmp	r5, #31
1001d26c:	dc22      	bgt.n	1001d2b4 <__register_exitproc+0x68>
1001d26e:	b94e      	cbnz	r6, 1001d284 <__register_exitproc+0x38>
1001d270:	1c6b      	adds	r3, r5, #1
1001d272:	3502      	adds	r5, #2
1001d274:	6063      	str	r3, [r4, #4]
1001d276:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
1001d27a:	f7f7 ff05 	bl	10015088 <__retarget_lock_release_recursive>
1001d27e:	2000      	movs	r0, #0
1001d280:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1001d284:	eb04 0185 	add.w	r1, r4, r5, lsl #2
1001d288:	2301      	movs	r3, #1
1001d28a:	f8c1 9088 	str.w	r9, [r1, #136]	@ 0x88
1001d28e:	f8d4 2188 	ldr.w	r2, [r4, #392]	@ 0x188
1001d292:	40ab      	lsls	r3, r5
1001d294:	431a      	orrs	r2, r3
1001d296:	2e02      	cmp	r6, #2
1001d298:	f8c4 2188 	str.w	r2, [r4, #392]	@ 0x188
1001d29c:	f8c1 8108 	str.w	r8, [r1, #264]	@ 0x108
1001d2a0:	d1e6      	bne.n	1001d270 <__register_exitproc+0x24>
1001d2a2:	f8d4 218c 	ldr.w	r2, [r4, #396]	@ 0x18c
1001d2a6:	431a      	orrs	r2, r3
1001d2a8:	f8c4 218c 	str.w	r2, [r4, #396]	@ 0x18c
1001d2ac:	e7e0      	b.n	1001d270 <__register_exitproc+0x24>
1001d2ae:	4c06      	ldr	r4, [pc, #24]	@ (1001d2c8 <__register_exitproc+0x7c>)
1001d2b0:	601c      	str	r4, [r3, #0]
1001d2b2:	e7d8      	b.n	1001d266 <__register_exitproc+0x1a>
1001d2b4:	f7f7 fee8 	bl	10015088 <__retarget_lock_release_recursive>
1001d2b8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001d2bc:	e7e0      	b.n	1001d280 <__register_exitproc+0x34>
1001d2be:	bf00      	nop
1001d2c0:	20000420 	.word	0x20000420
1001d2c4:	20001488 	.word	0x20001488
1001d2c8:	200015d8 	.word	0x200015d8

1001d2cc <__ascii_mbtowc>:
1001d2cc:	b082      	sub	sp, #8
1001d2ce:	b149      	cbz	r1, 1001d2e4 <__ascii_mbtowc+0x18>
1001d2d0:	b15a      	cbz	r2, 1001d2ea <__ascii_mbtowc+0x1e>
1001d2d2:	b16b      	cbz	r3, 1001d2f0 <__ascii_mbtowc+0x24>
1001d2d4:	7813      	ldrb	r3, [r2, #0]
1001d2d6:	600b      	str	r3, [r1, #0]
1001d2d8:	7812      	ldrb	r2, [r2, #0]
1001d2da:	1e10      	subs	r0, r2, #0
1001d2dc:	bf18      	it	ne
1001d2de:	2001      	movne	r0, #1
1001d2e0:	b002      	add	sp, #8
1001d2e2:	4770      	bx	lr
1001d2e4:	a901      	add	r1, sp, #4
1001d2e6:	2a00      	cmp	r2, #0
1001d2e8:	d1f3      	bne.n	1001d2d2 <__ascii_mbtowc+0x6>
1001d2ea:	4610      	mov	r0, r2
1001d2ec:	b002      	add	sp, #8
1001d2ee:	4770      	bx	lr
1001d2f0:	f06f 0001 	mvn.w	r0, #1
1001d2f4:	e7f4      	b.n	1001d2e0 <__ascii_mbtowc+0x14>
1001d2f6:	bf00      	nop

1001d2f8 <memmove>:
1001d2f8:	4288      	cmp	r0, r1
1001d2fa:	d90e      	bls.n	1001d31a <memmove+0x22>
1001d2fc:	188b      	adds	r3, r1, r2
1001d2fe:	4283      	cmp	r3, r0
1001d300:	d90b      	bls.n	1001d31a <memmove+0x22>
1001d302:	eb00 0c02 	add.w	ip, r0, r2
1001d306:	2a00      	cmp	r2, #0
1001d308:	d06e      	beq.n	1001d3e8 <memmove+0xf0>
1001d30a:	4662      	mov	r2, ip
1001d30c:	f813 cd01 	ldrb.w	ip, [r3, #-1]!
1001d310:	f802 cd01 	strb.w	ip, [r2, #-1]!
1001d314:	4299      	cmp	r1, r3
1001d316:	d1f9      	bne.n	1001d30c <memmove+0x14>
1001d318:	4770      	bx	lr
1001d31a:	2a0f      	cmp	r2, #15
1001d31c:	d80f      	bhi.n	1001d33e <memmove+0x46>
1001d31e:	4603      	mov	r3, r0
1001d320:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
1001d324:	2a00      	cmp	r2, #0
1001d326:	d05f      	beq.n	1001d3e8 <memmove+0xf0>
1001d328:	f10c 0c01 	add.w	ip, ip, #1
1001d32c:	3b01      	subs	r3, #1
1001d32e:	448c      	add	ip, r1
1001d330:	f811 2b01 	ldrb.w	r2, [r1], #1
1001d334:	f803 2f01 	strb.w	r2, [r3, #1]!
1001d338:	4561      	cmp	r1, ip
1001d33a:	d1f9      	bne.n	1001d330 <memmove+0x38>
1001d33c:	4770      	bx	lr
1001d33e:	ea40 0301 	orr.w	r3, r0, r1
1001d342:	079b      	lsls	r3, r3, #30
1001d344:	d151      	bne.n	1001d3ea <memmove+0xf2>
1001d346:	f1a2 0310 	sub.w	r3, r2, #16
1001d34a:	b570      	push	{r4, r5, r6, lr}
1001d34c:	f101 0c20 	add.w	ip, r1, #32
1001d350:	f023 050f 	bic.w	r5, r3, #15
1001d354:	f101 0e10 	add.w	lr, r1, #16
1001d358:	f100 0410 	add.w	r4, r0, #16
1001d35c:	44ac      	add	ip, r5
1001d35e:	091b      	lsrs	r3, r3, #4
1001d360:	f85e 5c10 	ldr.w	r5, [lr, #-16]
1001d364:	f844 5c10 	str.w	r5, [r4, #-16]
1001d368:	f85e 5c0c 	ldr.w	r5, [lr, #-12]
1001d36c:	f844 5c0c 	str.w	r5, [r4, #-12]
1001d370:	f85e 5c08 	ldr.w	r5, [lr, #-8]
1001d374:	f844 5c08 	str.w	r5, [r4, #-8]
1001d378:	f85e 5c04 	ldr.w	r5, [lr, #-4]
1001d37c:	f844 5c04 	str.w	r5, [r4, #-4]
1001d380:	f10e 0e10 	add.w	lr, lr, #16
1001d384:	45e6      	cmp	lr, ip
1001d386:	f104 0410 	add.w	r4, r4, #16
1001d38a:	d1e9      	bne.n	1001d360 <memmove+0x68>
1001d38c:	3301      	adds	r3, #1
1001d38e:	f012 0f0c 	tst.w	r2, #12
1001d392:	eb01 1103 	add.w	r1, r1, r3, lsl #4
1001d396:	f002 040f 	and.w	r4, r2, #15
1001d39a:	eb00 1303 	add.w	r3, r0, r3, lsl #4
1001d39e:	d028      	beq.n	1001d3f2 <memmove+0xfa>
1001d3a0:	3c04      	subs	r4, #4
1001d3a2:	f024 0603 	bic.w	r6, r4, #3
1001d3a6:	ea4f 0c94 	mov.w	ip, r4, lsr #2
1001d3aa:	441e      	add	r6, r3
1001d3ac:	1f1c      	subs	r4, r3, #4
1001d3ae:	468e      	mov	lr, r1
1001d3b0:	f85e 5b04 	ldr.w	r5, [lr], #4
1001d3b4:	f844 5f04 	str.w	r5, [r4, #4]!
1001d3b8:	42b4      	cmp	r4, r6
1001d3ba:	d1f9      	bne.n	1001d3b0 <memmove+0xb8>
1001d3bc:	f10c 0401 	add.w	r4, ip, #1
1001d3c0:	f002 0203 	and.w	r2, r2, #3
1001d3c4:	eb03 0384 	add.w	r3, r3, r4, lsl #2
1001d3c8:	eb01 0184 	add.w	r1, r1, r4, lsl #2
1001d3cc:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
1001d3d0:	b14a      	cbz	r2, 1001d3e6 <memmove+0xee>
1001d3d2:	f10c 0c01 	add.w	ip, ip, #1
1001d3d6:	3b01      	subs	r3, #1
1001d3d8:	448c      	add	ip, r1
1001d3da:	f811 2b01 	ldrb.w	r2, [r1], #1
1001d3de:	f803 2f01 	strb.w	r2, [r3, #1]!
1001d3e2:	4561      	cmp	r1, ip
1001d3e4:	d1f9      	bne.n	1001d3da <memmove+0xe2>
1001d3e6:	bd70      	pop	{r4, r5, r6, pc}
1001d3e8:	4770      	bx	lr
1001d3ea:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
1001d3ee:	4603      	mov	r3, r0
1001d3f0:	e79a      	b.n	1001d328 <memmove+0x30>
1001d3f2:	4622      	mov	r2, r4
1001d3f4:	e7ea      	b.n	1001d3cc <memmove+0xd4>
1001d3f6:	bf00      	nop

1001d3f8 <__assert_func>:
1001d3f8:	b500      	push	{lr}
1001d3fa:	4c0b      	ldr	r4, [pc, #44]	@ (1001d428 <__assert_func+0x30>)
1001d3fc:	6825      	ldr	r5, [r4, #0]
1001d3fe:	4614      	mov	r4, r2
1001d400:	68ee      	ldr	r6, [r5, #12]
1001d402:	461a      	mov	r2, r3
1001d404:	b085      	sub	sp, #20
1001d406:	4603      	mov	r3, r0
1001d408:	460d      	mov	r5, r1
1001d40a:	b14c      	cbz	r4, 1001d420 <__assert_func+0x28>
1001d40c:	4907      	ldr	r1, [pc, #28]	@ (1001d42c <__assert_func+0x34>)
1001d40e:	9500      	str	r5, [sp, #0]
1001d410:	e9cd 1401 	strd	r1, r4, [sp, #4]
1001d414:	4630      	mov	r0, r6
1001d416:	4906      	ldr	r1, [pc, #24]	@ (1001d430 <__assert_func+0x38>)
1001d418:	f001 ff74 	bl	1001f304 <fiprintf>
1001d41c:	f002 f908 	bl	1001f630 <abort>
1001d420:	4904      	ldr	r1, [pc, #16]	@ (1001d434 <__assert_func+0x3c>)
1001d422:	460c      	mov	r4, r1
1001d424:	e7f3      	b.n	1001d40e <__assert_func+0x16>
1001d426:	bf00      	nop
1001d428:	20000590 	.word	0x20000590
1001d42c:	1002794c 	.word	0x1002794c
1001d430:	1002795c 	.word	0x1002795c
1001d434:	100207e8 	.word	0x100207e8

1001d438 <_wcrtomb_r>:
1001d438:	b570      	push	{r4, r5, r6, lr}
1001d43a:	4605      	mov	r5, r0
1001d43c:	b084      	sub	sp, #16
1001d43e:	b15b      	cbz	r3, 1001d458 <_wcrtomb_r+0x20>
1001d440:	461c      	mov	r4, r3
1001d442:	4b0f      	ldr	r3, [pc, #60]	@ (1001d480 <_wcrtomb_r+0x48>)
1001d444:	f8d3 60e0 	ldr.w	r6, [r3, #224]	@ 0xe0
1001d448:	4623      	mov	r3, r4
1001d44a:	b169      	cbz	r1, 1001d468 <_wcrtomb_r+0x30>
1001d44c:	4628      	mov	r0, r5
1001d44e:	47b0      	blx	r6
1001d450:	1c43      	adds	r3, r0, #1
1001d452:	d00f      	beq.n	1001d474 <_wcrtomb_r+0x3c>
1001d454:	b004      	add	sp, #16
1001d456:	bd70      	pop	{r4, r5, r6, pc}
1001d458:	4b09      	ldr	r3, [pc, #36]	@ (1001d480 <_wcrtomb_r+0x48>)
1001d45a:	f500 7482 	add.w	r4, r0, #260	@ 0x104
1001d45e:	f8d3 60e0 	ldr.w	r6, [r3, #224]	@ 0xe0
1001d462:	4623      	mov	r3, r4
1001d464:	2900      	cmp	r1, #0
1001d466:	d1f1      	bne.n	1001d44c <_wcrtomb_r+0x14>
1001d468:	460a      	mov	r2, r1
1001d46a:	4628      	mov	r0, r5
1001d46c:	a901      	add	r1, sp, #4
1001d46e:	47b0      	blx	r6
1001d470:	1c43      	adds	r3, r0, #1
1001d472:	d1ef      	bne.n	1001d454 <_wcrtomb_r+0x1c>
1001d474:	2200      	movs	r2, #0
1001d476:	238a      	movs	r3, #138	@ 0x8a
1001d478:	6022      	str	r2, [r4, #0]
1001d47a:	602b      	str	r3, [r5, #0]
1001d47c:	b004      	add	sp, #16
1001d47e:	bd70      	pop	{r4, r5, r6, pc}
1001d480:	20000424 	.word	0x20000424

1001d484 <_fclose_r>:
1001d484:	b570      	push	{r4, r5, r6, lr}
1001d486:	2900      	cmp	r1, #0
1001d488:	d03f      	beq.n	1001d50a <_fclose_r+0x86>
1001d48a:	4605      	mov	r5, r0
1001d48c:	460c      	mov	r4, r1
1001d48e:	b110      	cbz	r0, 1001d496 <_fclose_r+0x12>
1001d490:	6b43      	ldr	r3, [r0, #52]	@ 0x34
1001d492:	2b00      	cmp	r3, #0
1001d494:	d03c      	beq.n	1001d510 <_fclose_r+0x8c>
1001d496:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1001d498:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1001d49c:	07de      	lsls	r6, r3, #31
1001d49e:	d432      	bmi.n	1001d506 <_fclose_r+0x82>
1001d4a0:	0590      	lsls	r0, r2, #22
1001d4a2:	d538      	bpl.n	1001d516 <_fclose_r+0x92>
1001d4a4:	4621      	mov	r1, r4
1001d4a6:	4628      	mov	r0, r5
1001d4a8:	f7f8 f812 	bl	100154d0 <__sflush_r>
1001d4ac:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
1001d4ae:	4606      	mov	r6, r0
1001d4b0:	b133      	cbz	r3, 1001d4c0 <_fclose_r+0x3c>
1001d4b2:	69e1      	ldr	r1, [r4, #28]
1001d4b4:	4628      	mov	r0, r5
1001d4b6:	4798      	blx	r3
1001d4b8:	2800      	cmp	r0, #0
1001d4ba:	bfb8      	it	lt
1001d4bc:	f04f 36ff 	movlt.w	r6, #4294967295	@ 0xffffffff
1001d4c0:	89a3      	ldrh	r3, [r4, #12]
1001d4c2:	061a      	lsls	r2, r3, #24
1001d4c4:	d439      	bmi.n	1001d53a <_fclose_r+0xb6>
1001d4c6:	6b21      	ldr	r1, [r4, #48]	@ 0x30
1001d4c8:	b141      	cbz	r1, 1001d4dc <_fclose_r+0x58>
1001d4ca:	f104 0340 	add.w	r3, r4, #64	@ 0x40
1001d4ce:	4299      	cmp	r1, r3
1001d4d0:	d002      	beq.n	1001d4d8 <_fclose_r+0x54>
1001d4d2:	4628      	mov	r0, r5
1001d4d4:	f7f9 fdd8 	bl	10017088 <_free_r>
1001d4d8:	2300      	movs	r3, #0
1001d4da:	6323      	str	r3, [r4, #48]	@ 0x30
1001d4dc:	6c61      	ldr	r1, [r4, #68]	@ 0x44
1001d4de:	b121      	cbz	r1, 1001d4ea <_fclose_r+0x66>
1001d4e0:	4628      	mov	r0, r5
1001d4e2:	f7f9 fdd1 	bl	10017088 <_free_r>
1001d4e6:	2300      	movs	r3, #0
1001d4e8:	6463      	str	r3, [r4, #68]	@ 0x44
1001d4ea:	f7f8 fa27 	bl	1001593c <__sfp_lock_acquire>
1001d4ee:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1001d4f0:	2200      	movs	r2, #0
1001d4f2:	07db      	lsls	r3, r3, #31
1001d4f4:	81a2      	strh	r2, [r4, #12]
1001d4f6:	d51c      	bpl.n	1001d532 <_fclose_r+0xae>
1001d4f8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001d4fa:	f7f7 fdc1 	bl	10015080 <__retarget_lock_close_recursive>
1001d4fe:	f7f8 fa23 	bl	10015948 <__sfp_lock_release>
1001d502:	4630      	mov	r0, r6
1001d504:	bd70      	pop	{r4, r5, r6, pc}
1001d506:	2a00      	cmp	r2, #0
1001d508:	d1cc      	bne.n	1001d4a4 <_fclose_r+0x20>
1001d50a:	2600      	movs	r6, #0
1001d50c:	4630      	mov	r0, r6
1001d50e:	bd70      	pop	{r4, r5, r6, pc}
1001d510:	f7f8 f9f6 	bl	10015900 <__sinit>
1001d514:	e7bf      	b.n	1001d496 <_fclose_r+0x12>
1001d516:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001d518:	f7f7 fdb4 	bl	10015084 <__retarget_lock_acquire_recursive>
1001d51c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001d520:	2b00      	cmp	r3, #0
1001d522:	d1bf      	bne.n	1001d4a4 <_fclose_r+0x20>
1001d524:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1001d526:	07d9      	lsls	r1, r3, #31
1001d528:	d4ef      	bmi.n	1001d50a <_fclose_r+0x86>
1001d52a:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001d52c:	f7f7 fdac 	bl	10015088 <__retarget_lock_release_recursive>
1001d530:	e7eb      	b.n	1001d50a <_fclose_r+0x86>
1001d532:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001d534:	f7f7 fda8 	bl	10015088 <__retarget_lock_release_recursive>
1001d538:	e7de      	b.n	1001d4f8 <_fclose_r+0x74>
1001d53a:	6921      	ldr	r1, [r4, #16]
1001d53c:	4628      	mov	r0, r5
1001d53e:	f7f9 fda3 	bl	10017088 <_free_r>
1001d542:	e7c0      	b.n	1001d4c6 <_fclose_r+0x42>

1001d544 <__swsetup_r>:
1001d544:	b538      	push	{r3, r4, r5, lr}
1001d546:	4b2e      	ldr	r3, [pc, #184]	@ (1001d600 <__swsetup_r+0xbc>)
1001d548:	681b      	ldr	r3, [r3, #0]
1001d54a:	4605      	mov	r5, r0
1001d54c:	460c      	mov	r4, r1
1001d54e:	b113      	cbz	r3, 1001d556 <__swsetup_r+0x12>
1001d550:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
1001d552:	2a00      	cmp	r2, #0
1001d554:	d04b      	beq.n	1001d5ee <__swsetup_r+0xaa>
1001d556:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001d55a:	0718      	lsls	r0, r3, #28
1001d55c:	d51c      	bpl.n	1001d598 <__swsetup_r+0x54>
1001d55e:	6922      	ldr	r2, [r4, #16]
1001d560:	b322      	cbz	r2, 1001d5ac <__swsetup_r+0x68>
1001d562:	f013 0101 	ands.w	r1, r3, #1
1001d566:	d007      	beq.n	1001d578 <__swsetup_r+0x34>
1001d568:	6961      	ldr	r1, [r4, #20]
1001d56a:	2000      	movs	r0, #0
1001d56c:	4249      	negs	r1, r1
1001d56e:	60a0      	str	r0, [r4, #8]
1001d570:	61a1      	str	r1, [r4, #24]
1001d572:	b13a      	cbz	r2, 1001d584 <__swsetup_r+0x40>
1001d574:	2000      	movs	r0, #0
1001d576:	bd38      	pop	{r3, r4, r5, pc}
1001d578:	0798      	lsls	r0, r3, #30
1001d57a:	bf58      	it	pl
1001d57c:	6961      	ldrpl	r1, [r4, #20]
1001d57e:	60a1      	str	r1, [r4, #8]
1001d580:	2a00      	cmp	r2, #0
1001d582:	d1f7      	bne.n	1001d574 <__swsetup_r+0x30>
1001d584:	0619      	lsls	r1, r3, #24
1001d586:	bf58      	it	pl
1001d588:	4610      	movpl	r0, r2
1001d58a:	d5f4      	bpl.n	1001d576 <__swsetup_r+0x32>
1001d58c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001d590:	81a3      	strh	r3, [r4, #12]
1001d592:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001d596:	bd38      	pop	{r3, r4, r5, pc}
1001d598:	06d9      	lsls	r1, r3, #27
1001d59a:	d52c      	bpl.n	1001d5f6 <__swsetup_r+0xb2>
1001d59c:	075a      	lsls	r2, r3, #29
1001d59e:	d412      	bmi.n	1001d5c6 <__swsetup_r+0x82>
1001d5a0:	6922      	ldr	r2, [r4, #16]
1001d5a2:	f043 0308 	orr.w	r3, r3, #8
1001d5a6:	81a3      	strh	r3, [r4, #12]
1001d5a8:	2a00      	cmp	r2, #0
1001d5aa:	d1da      	bne.n	1001d562 <__swsetup_r+0x1e>
1001d5ac:	f403 7120 	and.w	r1, r3, #640	@ 0x280
1001d5b0:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
1001d5b4:	d0d5      	beq.n	1001d562 <__swsetup_r+0x1e>
1001d5b6:	4621      	mov	r1, r4
1001d5b8:	4628      	mov	r0, r5
1001d5ba:	f000 f823 	bl	1001d604 <__smakebuf_r>
1001d5be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001d5c2:	6922      	ldr	r2, [r4, #16]
1001d5c4:	e7cd      	b.n	1001d562 <__swsetup_r+0x1e>
1001d5c6:	6b21      	ldr	r1, [r4, #48]	@ 0x30
1001d5c8:	b151      	cbz	r1, 1001d5e0 <__swsetup_r+0x9c>
1001d5ca:	f104 0240 	add.w	r2, r4, #64	@ 0x40
1001d5ce:	4291      	cmp	r1, r2
1001d5d0:	d004      	beq.n	1001d5dc <__swsetup_r+0x98>
1001d5d2:	4628      	mov	r0, r5
1001d5d4:	f7f9 fd58 	bl	10017088 <_free_r>
1001d5d8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001d5dc:	2200      	movs	r2, #0
1001d5de:	6322      	str	r2, [r4, #48]	@ 0x30
1001d5e0:	6922      	ldr	r2, [r4, #16]
1001d5e2:	2100      	movs	r1, #0
1001d5e4:	e9c4 2100 	strd	r2, r1, [r4]
1001d5e8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
1001d5ec:	e7d9      	b.n	1001d5a2 <__swsetup_r+0x5e>
1001d5ee:	4618      	mov	r0, r3
1001d5f0:	f7f8 f986 	bl	10015900 <__sinit>
1001d5f4:	e7af      	b.n	1001d556 <__swsetup_r+0x12>
1001d5f6:	2209      	movs	r2, #9
1001d5f8:	602a      	str	r2, [r5, #0]
1001d5fa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001d5fe:	e7c7      	b.n	1001d590 <__swsetup_r+0x4c>
1001d600:	20000590 	.word	0x20000590

1001d604 <__smakebuf_r>:
1001d604:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1001d608:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
1001d60c:	460c      	mov	r4, r1
1001d60e:	0799      	lsls	r1, r3, #30
1001d610:	b096      	sub	sp, #88	@ 0x58
1001d612:	d508      	bpl.n	1001d626 <__smakebuf_r+0x22>
1001d614:	f104 0343 	add.w	r3, r4, #67	@ 0x43
1001d618:	2201      	movs	r2, #1
1001d61a:	e9c4 3204 	strd	r3, r2, [r4, #16]
1001d61e:	6023      	str	r3, [r4, #0]
1001d620:	b016      	add	sp, #88	@ 0x58
1001d622:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001d626:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
1001d62a:	2900      	cmp	r1, #0
1001d62c:	4606      	mov	r6, r0
1001d62e:	db26      	blt.n	1001d67e <__smakebuf_r+0x7a>
1001d630:	466a      	mov	r2, sp
1001d632:	f001 fe3f 	bl	1001f2b4 <_fstat_r>
1001d636:	2800      	cmp	r0, #0
1001d638:	db1f      	blt.n	1001d67a <__smakebuf_r+0x76>
1001d63a:	9d01      	ldr	r5, [sp, #4]
1001d63c:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
1001d640:	f5a5 5500 	sub.w	r5, r5, #8192	@ 0x2000
1001d644:	fab5 f585 	clz	r5, r5
1001d648:	f44f 6880 	mov.w	r8, #1024	@ 0x400
1001d64c:	096d      	lsrs	r5, r5, #5
1001d64e:	f44f 6700 	mov.w	r7, #2048	@ 0x800
1001d652:	4641      	mov	r1, r8
1001d654:	4630      	mov	r0, r6
1001d656:	f7f7 f995 	bl	10014984 <_malloc_r>
1001d65a:	b1e8      	cbz	r0, 1001d698 <__smakebuf_r+0x94>
1001d65c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001d660:	f8c4 8014 	str.w	r8, [r4, #20]
1001d664:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
1001d668:	6020      	str	r0, [r4, #0]
1001d66a:	6120      	str	r0, [r4, #16]
1001d66c:	81a3      	strh	r3, [r4, #12]
1001d66e:	bb3d      	cbnz	r5, 1001d6c0 <__smakebuf_r+0xbc>
1001d670:	433b      	orrs	r3, r7
1001d672:	81a3      	strh	r3, [r4, #12]
1001d674:	b016      	add	sp, #88	@ 0x58
1001d676:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001d67a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001d67e:	f013 0580 	ands.w	r5, r3, #128	@ 0x80
1001d682:	d019      	beq.n	1001d6b8 <__smakebuf_r+0xb4>
1001d684:	f04f 0840 	mov.w	r8, #64	@ 0x40
1001d688:	2500      	movs	r5, #0
1001d68a:	4641      	mov	r1, r8
1001d68c:	4630      	mov	r0, r6
1001d68e:	462f      	mov	r7, r5
1001d690:	f7f7 f978 	bl	10014984 <_malloc_r>
1001d694:	2800      	cmp	r0, #0
1001d696:	d1e1      	bne.n	1001d65c <__smakebuf_r+0x58>
1001d698:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001d69c:	059a      	lsls	r2, r3, #22
1001d69e:	d4bf      	bmi.n	1001d620 <__smakebuf_r+0x1c>
1001d6a0:	f023 0303 	bic.w	r3, r3, #3
1001d6a4:	f104 0243 	add.w	r2, r4, #67	@ 0x43
1001d6a8:	f043 0302 	orr.w	r3, r3, #2
1001d6ac:	2101      	movs	r1, #1
1001d6ae:	e9c4 2104 	strd	r2, r1, [r4, #16]
1001d6b2:	81a3      	strh	r3, [r4, #12]
1001d6b4:	6022      	str	r2, [r4, #0]
1001d6b6:	e7b3      	b.n	1001d620 <__smakebuf_r+0x1c>
1001d6b8:	f44f 6880 	mov.w	r8, #1024	@ 0x400
1001d6bc:	462f      	mov	r7, r5
1001d6be:	e7c8      	b.n	1001d652 <__smakebuf_r+0x4e>
1001d6c0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
1001d6c4:	4630      	mov	r0, r6
1001d6c6:	f001 fe0b 	bl	1001f2e0 <_isatty_r>
1001d6ca:	b910      	cbnz	r0, 1001d6d2 <__smakebuf_r+0xce>
1001d6cc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001d6d0:	e7ce      	b.n	1001d670 <__smakebuf_r+0x6c>
1001d6d2:	89a3      	ldrh	r3, [r4, #12]
1001d6d4:	f023 0303 	bic.w	r3, r3, #3
1001d6d8:	f043 0301 	orr.w	r3, r3, #1
1001d6dc:	b21b      	sxth	r3, r3
1001d6de:	e7c7      	b.n	1001d670 <__smakebuf_r+0x6c>

1001d6e0 <lflush>:
1001d6e0:	898b      	ldrh	r3, [r1, #12]
1001d6e2:	f003 0309 	and.w	r3, r3, #9
1001d6e6:	2b09      	cmp	r3, #9
1001d6e8:	d001      	beq.n	1001d6ee <lflush+0xe>
1001d6ea:	2000      	movs	r0, #0
1001d6ec:	4770      	bx	lr
1001d6ee:	4b02      	ldr	r3, [pc, #8]	@ (1001d6f8 <lflush+0x18>)
1001d6f0:	6818      	ldr	r0, [r3, #0]
1001d6f2:	f7f7 bf81 	b.w	100155f8 <_fflush_r>
1001d6f6:	bf00      	nop
1001d6f8:	20000590 	.word	0x20000590

1001d6fc <__srefill_r>:
1001d6fc:	b570      	push	{r4, r5, r6, lr}
1001d6fe:	460c      	mov	r4, r1
1001d700:	4605      	mov	r5, r0
1001d702:	b110      	cbz	r0, 1001d70a <__srefill_r+0xe>
1001d704:	6b43      	ldr	r3, [r0, #52]	@ 0x34
1001d706:	2b00      	cmp	r3, #0
1001d708:	d05f      	beq.n	1001d7ca <__srefill_r+0xce>
1001d70a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001d70e:	049a      	lsls	r2, r3, #18
1001d710:	d406      	bmi.n	1001d720 <__srefill_r+0x24>
1001d712:	6e62      	ldr	r2, [r4, #100]	@ 0x64
1001d714:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
1001d718:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
1001d71c:	81a3      	strh	r3, [r4, #12]
1001d71e:	6662      	str	r2, [r4, #100]	@ 0x64
1001d720:	2200      	movs	r2, #0
1001d722:	069e      	lsls	r6, r3, #26
1001d724:	6062      	str	r2, [r4, #4]
1001d726:	d45d      	bmi.n	1001d7e4 <__srefill_r+0xe8>
1001d728:	0758      	lsls	r0, r3, #29
1001d72a:	d419      	bmi.n	1001d760 <__srefill_r+0x64>
1001d72c:	06d9      	lsls	r1, r3, #27
1001d72e:	d55c      	bpl.n	1001d7ea <__srefill_r+0xee>
1001d730:	071a      	lsls	r2, r3, #28
1001d732:	d439      	bmi.n	1001d7a8 <__srefill_r+0xac>
1001d734:	f043 0304 	orr.w	r3, r3, #4
1001d738:	81a3      	strh	r3, [r4, #12]
1001d73a:	6923      	ldr	r3, [r4, #16]
1001d73c:	2b00      	cmp	r3, #0
1001d73e:	d03f      	beq.n	1001d7c0 <__srefill_r+0xc4>
1001d740:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
1001d744:	07b3      	lsls	r3, r6, #30
1001d746:	d11e      	bne.n	1001d786 <__srefill_r+0x8a>
1001d748:	6922      	ldr	r2, [r4, #16]
1001d74a:	6a26      	ldr	r6, [r4, #32]
1001d74c:	6963      	ldr	r3, [r4, #20]
1001d74e:	69e1      	ldr	r1, [r4, #28]
1001d750:	6022      	str	r2, [r4, #0]
1001d752:	4628      	mov	r0, r5
1001d754:	47b0      	blx	r6
1001d756:	2800      	cmp	r0, #0
1001d758:	6060      	str	r0, [r4, #4]
1001d75a:	dd39      	ble.n	1001d7d0 <__srefill_r+0xd4>
1001d75c:	2000      	movs	r0, #0
1001d75e:	bd70      	pop	{r4, r5, r6, pc}
1001d760:	6b21      	ldr	r1, [r4, #48]	@ 0x30
1001d762:	2900      	cmp	r1, #0
1001d764:	d0e9      	beq.n	1001d73a <__srefill_r+0x3e>
1001d766:	f104 0340 	add.w	r3, r4, #64	@ 0x40
1001d76a:	4299      	cmp	r1, r3
1001d76c:	d002      	beq.n	1001d774 <__srefill_r+0x78>
1001d76e:	4628      	mov	r0, r5
1001d770:	f7f9 fc8a 	bl	10017088 <_free_r>
1001d774:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
1001d776:	6063      	str	r3, [r4, #4]
1001d778:	2200      	movs	r2, #0
1001d77a:	6322      	str	r2, [r4, #48]	@ 0x30
1001d77c:	2b00      	cmp	r3, #0
1001d77e:	d0dc      	beq.n	1001d73a <__srefill_r+0x3e>
1001d780:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
1001d782:	6023      	str	r3, [r4, #0]
1001d784:	e7ea      	b.n	1001d75c <__srefill_r+0x60>
1001d786:	2301      	movs	r3, #1
1001d788:	81a3      	strh	r3, [r4, #12]
1001d78a:	4a1b      	ldr	r2, [pc, #108]	@ (1001d7f8 <__srefill_r+0xfc>)
1001d78c:	491b      	ldr	r1, [pc, #108]	@ (1001d7fc <__srefill_r+0x100>)
1001d78e:	481c      	ldr	r0, [pc, #112]	@ (1001d800 <__srefill_r+0x104>)
1001d790:	f7fa ff2e 	bl	100185f0 <_fwalk_sglue>
1001d794:	f006 0309 	and.w	r3, r6, #9
1001d798:	2b09      	cmp	r3, #9
1001d79a:	81a6      	strh	r6, [r4, #12]
1001d79c:	d1d4      	bne.n	1001d748 <__srefill_r+0x4c>
1001d79e:	4621      	mov	r1, r4
1001d7a0:	4628      	mov	r0, r5
1001d7a2:	f7f7 fe95 	bl	100154d0 <__sflush_r>
1001d7a6:	e7cf      	b.n	1001d748 <__srefill_r+0x4c>
1001d7a8:	4621      	mov	r1, r4
1001d7aa:	4628      	mov	r0, r5
1001d7ac:	f7f7 ff24 	bl	100155f8 <_fflush_r>
1001d7b0:	b9c0      	cbnz	r0, 1001d7e4 <__srefill_r+0xe8>
1001d7b2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001d7b6:	60a0      	str	r0, [r4, #8]
1001d7b8:	f023 0308 	bic.w	r3, r3, #8
1001d7bc:	61a0      	str	r0, [r4, #24]
1001d7be:	e7b9      	b.n	1001d734 <__srefill_r+0x38>
1001d7c0:	4621      	mov	r1, r4
1001d7c2:	4628      	mov	r0, r5
1001d7c4:	f7ff ff1e 	bl	1001d604 <__smakebuf_r>
1001d7c8:	e7ba      	b.n	1001d740 <__srefill_r+0x44>
1001d7ca:	f7f8 f899 	bl	10015900 <__sinit>
1001d7ce:	e79c      	b.n	1001d70a <__srefill_r+0xe>
1001d7d0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001d7d4:	bf17      	itett	ne
1001d7d6:	2200      	movne	r2, #0
1001d7d8:	f043 0320 	orreq.w	r3, r3, #32
1001d7dc:	f043 0340 	orrne.w	r3, r3, #64	@ 0x40
1001d7e0:	6062      	strne	r2, [r4, #4]
1001d7e2:	81a3      	strh	r3, [r4, #12]
1001d7e4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001d7e8:	bd70      	pop	{r4, r5, r6, pc}
1001d7ea:	2209      	movs	r2, #9
1001d7ec:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001d7f0:	602a      	str	r2, [r5, #0]
1001d7f2:	81a3      	strh	r3, [r4, #12]
1001d7f4:	e7f6      	b.n	1001d7e4 <__srefill_r+0xe8>
1001d7f6:	bf00      	nop
1001d7f8:	200006b8 	.word	0x200006b8
1001d7fc:	1001d6e1 	.word	0x1001d6e1
1001d800:	20000598 	.word	0x20000598

1001d804 <_Balloc>:
1001d804:	6c43      	ldr	r3, [r0, #68]	@ 0x44
1001d806:	b570      	push	{r4, r5, r6, lr}
1001d808:	4605      	mov	r5, r0
1001d80a:	460c      	mov	r4, r1
1001d80c:	b14b      	cbz	r3, 1001d822 <_Balloc+0x1e>
1001d80e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
1001d812:	b180      	cbz	r0, 1001d836 <_Balloc+0x32>
1001d814:	6802      	ldr	r2, [r0, #0]
1001d816:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
1001d81a:	2300      	movs	r3, #0
1001d81c:	60c3      	str	r3, [r0, #12]
1001d81e:	6103      	str	r3, [r0, #16]
1001d820:	bd70      	pop	{r4, r5, r6, pc}
1001d822:	2221      	movs	r2, #33	@ 0x21
1001d824:	2104      	movs	r1, #4
1001d826:	f000 fd07 	bl	1001e238 <_calloc_r>
1001d82a:	4603      	mov	r3, r0
1001d82c:	6468      	str	r0, [r5, #68]	@ 0x44
1001d82e:	2800      	cmp	r0, #0
1001d830:	d1ed      	bne.n	1001d80e <_Balloc+0xa>
1001d832:	2000      	movs	r0, #0
1001d834:	bd70      	pop	{r4, r5, r6, pc}
1001d836:	2101      	movs	r1, #1
1001d838:	fa01 f604 	lsl.w	r6, r1, r4
1001d83c:	1d72      	adds	r2, r6, #5
1001d83e:	0092      	lsls	r2, r2, #2
1001d840:	4628      	mov	r0, r5
1001d842:	f000 fcf9 	bl	1001e238 <_calloc_r>
1001d846:	2800      	cmp	r0, #0
1001d848:	d0f3      	beq.n	1001d832 <_Balloc+0x2e>
1001d84a:	e9c0 4601 	strd	r4, r6, [r0, #4]
1001d84e:	e7e4      	b.n	1001d81a <_Balloc+0x16>

1001d850 <_Bfree>:
1001d850:	b131      	cbz	r1, 1001d860 <_Bfree+0x10>
1001d852:	6c43      	ldr	r3, [r0, #68]	@ 0x44
1001d854:	684a      	ldr	r2, [r1, #4]
1001d856:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
1001d85a:	6008      	str	r0, [r1, #0]
1001d85c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
1001d860:	4770      	bx	lr
1001d862:	bf00      	nop

1001d864 <__multadd>:
1001d864:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1001d868:	690d      	ldr	r5, [r1, #16]
1001d86a:	4607      	mov	r7, r0
1001d86c:	460e      	mov	r6, r1
1001d86e:	461c      	mov	r4, r3
1001d870:	f101 0e14 	add.w	lr, r1, #20
1001d874:	2000      	movs	r0, #0
1001d876:	f8de 1000 	ldr.w	r1, [lr]
1001d87a:	b28b      	uxth	r3, r1
1001d87c:	fb02 4303 	mla	r3, r2, r3, r4
1001d880:	ea4f 4c13 	mov.w	ip, r3, lsr #16
1001d884:	0c09      	lsrs	r1, r1, #16
1001d886:	fb02 cc01 	mla	ip, r2, r1, ip
1001d88a:	3001      	adds	r0, #1
1001d88c:	b29b      	uxth	r3, r3
1001d88e:	eb03 430c 	add.w	r3, r3, ip, lsl #16
1001d892:	4285      	cmp	r5, r0
1001d894:	f84e 3b04 	str.w	r3, [lr], #4
1001d898:	ea4f 441c 	mov.w	r4, ip, lsr #16
1001d89c:	dceb      	bgt.n	1001d876 <__multadd+0x12>
1001d89e:	b13c      	cbz	r4, 1001d8b0 <__multadd+0x4c>
1001d8a0:	68b3      	ldr	r3, [r6, #8]
1001d8a2:	42ab      	cmp	r3, r5
1001d8a4:	dd07      	ble.n	1001d8b6 <__multadd+0x52>
1001d8a6:	eb06 0385 	add.w	r3, r6, r5, lsl #2
1001d8aa:	3501      	adds	r5, #1
1001d8ac:	615c      	str	r4, [r3, #20]
1001d8ae:	6135      	str	r5, [r6, #16]
1001d8b0:	4630      	mov	r0, r6
1001d8b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001d8b6:	6871      	ldr	r1, [r6, #4]
1001d8b8:	4638      	mov	r0, r7
1001d8ba:	3101      	adds	r1, #1
1001d8bc:	f7ff ffa2 	bl	1001d804 <_Balloc>
1001d8c0:	4680      	mov	r8, r0
1001d8c2:	b1a8      	cbz	r0, 1001d8f0 <__multadd+0x8c>
1001d8c4:	6932      	ldr	r2, [r6, #16]
1001d8c6:	3202      	adds	r2, #2
1001d8c8:	f106 010c 	add.w	r1, r6, #12
1001d8cc:	0092      	lsls	r2, r2, #2
1001d8ce:	300c      	adds	r0, #12
1001d8d0:	f7f8 f896 	bl	10015a00 <memcpy>
1001d8d4:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001d8d6:	6872      	ldr	r2, [r6, #4]
1001d8d8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1001d8dc:	6031      	str	r1, [r6, #0]
1001d8de:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
1001d8e2:	4646      	mov	r6, r8
1001d8e4:	eb06 0385 	add.w	r3, r6, r5, lsl #2
1001d8e8:	3501      	adds	r5, #1
1001d8ea:	615c      	str	r4, [r3, #20]
1001d8ec:	6135      	str	r5, [r6, #16]
1001d8ee:	e7df      	b.n	1001d8b0 <__multadd+0x4c>
1001d8f0:	4b02      	ldr	r3, [pc, #8]	@ (1001d8fc <__multadd+0x98>)
1001d8f2:	4803      	ldr	r0, [pc, #12]	@ (1001d900 <__multadd+0x9c>)
1001d8f4:	4642      	mov	r2, r8
1001d8f6:	21ba      	movs	r1, #186	@ 0xba
1001d8f8:	f7ff fd7e 	bl	1001d3f8 <__assert_func>
1001d8fc:	10020c70 	.word	0x10020c70
1001d900:	1002798c 	.word	0x1002798c

1001d904 <__s2b>:
1001d904:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1001d908:	4617      	mov	r7, r2
1001d90a:	4a27      	ldr	r2, [pc, #156]	@ (1001d9a8 <__s2b+0xa4>)
1001d90c:	461e      	mov	r6, r3
1001d90e:	3308      	adds	r3, #8
1001d910:	460c      	mov	r4, r1
1001d912:	2e09      	cmp	r6, #9
1001d914:	fb82 1203 	smull	r1, r2, r2, r3
1001d918:	ea4f 73e3 	mov.w	r3, r3, asr #31
1001d91c:	4605      	mov	r5, r0
1001d91e:	ebc3 0362 	rsb	r3, r3, r2, asr #1
1001d922:	dd39      	ble.n	1001d998 <__s2b+0x94>
1001d924:	f04f 0c01 	mov.w	ip, #1
1001d928:	2100      	movs	r1, #0
1001d92a:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
1001d92e:	4563      	cmp	r3, ip
1001d930:	f101 0101 	add.w	r1, r1, #1
1001d934:	dcf9      	bgt.n	1001d92a <__s2b+0x26>
1001d936:	4628      	mov	r0, r5
1001d938:	f7ff ff64 	bl	1001d804 <_Balloc>
1001d93c:	4601      	mov	r1, r0
1001d93e:	b368      	cbz	r0, 1001d99c <__s2b+0x98>
1001d940:	9b08      	ldr	r3, [sp, #32]
1001d942:	6143      	str	r3, [r0, #20]
1001d944:	2f09      	cmp	r7, #9
1001d946:	f04f 0301 	mov.w	r3, #1
1001d94a:	6103      	str	r3, [r0, #16]
1001d94c:	dc12      	bgt.n	1001d974 <__s2b+0x70>
1001d94e:	340a      	adds	r4, #10
1001d950:	2709      	movs	r7, #9
1001d952:	42be      	cmp	r6, r7
1001d954:	dd0b      	ble.n	1001d96e <__s2b+0x6a>
1001d956:	1bf6      	subs	r6, r6, r7
1001d958:	4426      	add	r6, r4
1001d95a:	f814 3b01 	ldrb.w	r3, [r4], #1
1001d95e:	220a      	movs	r2, #10
1001d960:	3b30      	subs	r3, #48	@ 0x30
1001d962:	4628      	mov	r0, r5
1001d964:	f7ff ff7e 	bl	1001d864 <__multadd>
1001d968:	42a6      	cmp	r6, r4
1001d96a:	4601      	mov	r1, r0
1001d96c:	d1f5      	bne.n	1001d95a <__s2b+0x56>
1001d96e:	4608      	mov	r0, r1
1001d970:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1001d974:	f104 0909 	add.w	r9, r4, #9
1001d978:	46c8      	mov	r8, r9
1001d97a:	443c      	add	r4, r7
1001d97c:	f818 3b01 	ldrb.w	r3, [r8], #1
1001d980:	220a      	movs	r2, #10
1001d982:	3b30      	subs	r3, #48	@ 0x30
1001d984:	4628      	mov	r0, r5
1001d986:	f7ff ff6d 	bl	1001d864 <__multadd>
1001d98a:	45a0      	cmp	r8, r4
1001d98c:	4601      	mov	r1, r0
1001d98e:	d1f5      	bne.n	1001d97c <__s2b+0x78>
1001d990:	f1a7 0408 	sub.w	r4, r7, #8
1001d994:	444c      	add	r4, r9
1001d996:	e7dc      	b.n	1001d952 <__s2b+0x4e>
1001d998:	2100      	movs	r1, #0
1001d99a:	e7cc      	b.n	1001d936 <__s2b+0x32>
1001d99c:	460a      	mov	r2, r1
1001d99e:	4b03      	ldr	r3, [pc, #12]	@ (1001d9ac <__s2b+0xa8>)
1001d9a0:	4803      	ldr	r0, [pc, #12]	@ (1001d9b0 <__s2b+0xac>)
1001d9a2:	21d3      	movs	r1, #211	@ 0xd3
1001d9a4:	f7ff fd28 	bl	1001d3f8 <__assert_func>
1001d9a8:	38e38e39 	.word	0x38e38e39
1001d9ac:	10020c70 	.word	0x10020c70
1001d9b0:	1002798c 	.word	0x1002798c

1001d9b4 <__hi0bits>:
1001d9b4:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
1001d9b8:	4603      	mov	r3, r0
1001d9ba:	bf36      	itet	cc
1001d9bc:	0403      	lslcc	r3, r0, #16
1001d9be:	2000      	movcs	r0, #0
1001d9c0:	2010      	movcc	r0, #16
1001d9c2:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
1001d9c6:	bf3c      	itt	cc
1001d9c8:	021b      	lslcc	r3, r3, #8
1001d9ca:	3008      	addcc	r0, #8
1001d9cc:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
1001d9d0:	bf3c      	itt	cc
1001d9d2:	011b      	lslcc	r3, r3, #4
1001d9d4:	3004      	addcc	r0, #4
1001d9d6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
1001d9da:	d303      	bcc.n	1001d9e4 <__hi0bits+0x30>
1001d9dc:	2b00      	cmp	r3, #0
1001d9de:	db06      	blt.n	1001d9ee <__hi0bits+0x3a>
1001d9e0:	3001      	adds	r0, #1
1001d9e2:	4770      	bx	lr
1001d9e4:	009b      	lsls	r3, r3, #2
1001d9e6:	d403      	bmi.n	1001d9f0 <__hi0bits+0x3c>
1001d9e8:	005b      	lsls	r3, r3, #1
1001d9ea:	d403      	bmi.n	1001d9f4 <__hi0bits+0x40>
1001d9ec:	2020      	movs	r0, #32
1001d9ee:	4770      	bx	lr
1001d9f0:	3002      	adds	r0, #2
1001d9f2:	4770      	bx	lr
1001d9f4:	3003      	adds	r0, #3
1001d9f6:	4770      	bx	lr

1001d9f8 <__lo0bits>:
1001d9f8:	6803      	ldr	r3, [r0, #0]
1001d9fa:	f013 0207 	ands.w	r2, r3, #7
1001d9fe:	4601      	mov	r1, r0
1001da00:	d007      	beq.n	1001da12 <__lo0bits+0x1a>
1001da02:	07da      	lsls	r2, r3, #31
1001da04:	d41f      	bmi.n	1001da46 <__lo0bits+0x4e>
1001da06:	0798      	lsls	r0, r3, #30
1001da08:	d521      	bpl.n	1001da4e <__lo0bits+0x56>
1001da0a:	085b      	lsrs	r3, r3, #1
1001da0c:	600b      	str	r3, [r1, #0]
1001da0e:	2001      	movs	r0, #1
1001da10:	4770      	bx	lr
1001da12:	b298      	uxth	r0, r3
1001da14:	b1a0      	cbz	r0, 1001da40 <__lo0bits+0x48>
1001da16:	4610      	mov	r0, r2
1001da18:	b2da      	uxtb	r2, r3
1001da1a:	b90a      	cbnz	r2, 1001da20 <__lo0bits+0x28>
1001da1c:	3008      	adds	r0, #8
1001da1e:	0a1b      	lsrs	r3, r3, #8
1001da20:	071a      	lsls	r2, r3, #28
1001da22:	bf04      	itt	eq
1001da24:	091b      	lsreq	r3, r3, #4
1001da26:	3004      	addeq	r0, #4
1001da28:	079a      	lsls	r2, r3, #30
1001da2a:	bf04      	itt	eq
1001da2c:	089b      	lsreq	r3, r3, #2
1001da2e:	3002      	addeq	r0, #2
1001da30:	07da      	lsls	r2, r3, #31
1001da32:	d403      	bmi.n	1001da3c <__lo0bits+0x44>
1001da34:	085b      	lsrs	r3, r3, #1
1001da36:	f100 0001 	add.w	r0, r0, #1
1001da3a:	d006      	beq.n	1001da4a <__lo0bits+0x52>
1001da3c:	600b      	str	r3, [r1, #0]
1001da3e:	4770      	bx	lr
1001da40:	0c1b      	lsrs	r3, r3, #16
1001da42:	2010      	movs	r0, #16
1001da44:	e7e8      	b.n	1001da18 <__lo0bits+0x20>
1001da46:	2000      	movs	r0, #0
1001da48:	4770      	bx	lr
1001da4a:	2020      	movs	r0, #32
1001da4c:	4770      	bx	lr
1001da4e:	089b      	lsrs	r3, r3, #2
1001da50:	600b      	str	r3, [r1, #0]
1001da52:	2002      	movs	r0, #2
1001da54:	4770      	bx	lr
1001da56:	bf00      	nop

1001da58 <__i2b>:
1001da58:	b538      	push	{r3, r4, r5, lr}
1001da5a:	6c43      	ldr	r3, [r0, #68]	@ 0x44
1001da5c:	4604      	mov	r4, r0
1001da5e:	460d      	mov	r5, r1
1001da60:	b14b      	cbz	r3, 1001da76 <__i2b+0x1e>
1001da62:	6858      	ldr	r0, [r3, #4]
1001da64:	b1b0      	cbz	r0, 1001da94 <__i2b+0x3c>
1001da66:	6802      	ldr	r2, [r0, #0]
1001da68:	605a      	str	r2, [r3, #4]
1001da6a:	2200      	movs	r2, #0
1001da6c:	2301      	movs	r3, #1
1001da6e:	6145      	str	r5, [r0, #20]
1001da70:	60c2      	str	r2, [r0, #12]
1001da72:	6103      	str	r3, [r0, #16]
1001da74:	bd38      	pop	{r3, r4, r5, pc}
1001da76:	2221      	movs	r2, #33	@ 0x21
1001da78:	2104      	movs	r1, #4
1001da7a:	f000 fbdd 	bl	1001e238 <_calloc_r>
1001da7e:	4603      	mov	r3, r0
1001da80:	6460      	str	r0, [r4, #68]	@ 0x44
1001da82:	2800      	cmp	r0, #0
1001da84:	d1ed      	bne.n	1001da62 <__i2b+0xa>
1001da86:	4b09      	ldr	r3, [pc, #36]	@ (1001daac <__i2b+0x54>)
1001da88:	4809      	ldr	r0, [pc, #36]	@ (1001dab0 <__i2b+0x58>)
1001da8a:	2200      	movs	r2, #0
1001da8c:	f240 1145 	movw	r1, #325	@ 0x145
1001da90:	f7ff fcb2 	bl	1001d3f8 <__assert_func>
1001da94:	221c      	movs	r2, #28
1001da96:	2101      	movs	r1, #1
1001da98:	4620      	mov	r0, r4
1001da9a:	f000 fbcd 	bl	1001e238 <_calloc_r>
1001da9e:	2800      	cmp	r0, #0
1001daa0:	d0f1      	beq.n	1001da86 <__i2b+0x2e>
1001daa2:	2201      	movs	r2, #1
1001daa4:	2302      	movs	r3, #2
1001daa6:	6042      	str	r2, [r0, #4]
1001daa8:	6083      	str	r3, [r0, #8]
1001daaa:	e7de      	b.n	1001da6a <__i2b+0x12>
1001daac:	10020c70 	.word	0x10020c70
1001dab0:	1002798c 	.word	0x1002798c

1001dab4 <__multiply>:
1001dab4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001dab8:	f8d1 8010 	ldr.w	r8, [r1, #16]
1001dabc:	6915      	ldr	r5, [r2, #16]
1001dabe:	45a8      	cmp	r8, r5
1001dac0:	b085      	sub	sp, #20
1001dac2:	460e      	mov	r6, r1
1001dac4:	4692      	mov	sl, r2
1001dac6:	db05      	blt.n	1001dad4 <__multiply+0x20>
1001dac8:	462a      	mov	r2, r5
1001daca:	4653      	mov	r3, sl
1001dacc:	4645      	mov	r5, r8
1001dace:	468a      	mov	sl, r1
1001dad0:	4690      	mov	r8, r2
1001dad2:	461e      	mov	r6, r3
1001dad4:	f8da 3008 	ldr.w	r3, [sl, #8]
1001dad8:	f8da 1004 	ldr.w	r1, [sl, #4]
1001dadc:	eb05 0408 	add.w	r4, r5, r8
1001dae0:	42a3      	cmp	r3, r4
1001dae2:	bfb8      	it	lt
1001dae4:	3101      	addlt	r1, #1
1001dae6:	f7ff fe8d 	bl	1001d804 <_Balloc>
1001daea:	4684      	mov	ip, r0
1001daec:	2800      	cmp	r0, #0
1001daee:	f000 808b 	beq.w	1001dc08 <__multiply+0x154>
1001daf2:	f100 0714 	add.w	r7, r0, #20
1001daf6:	eb07 0e84 	add.w	lr, r7, r4, lsl #2
1001dafa:	4577      	cmp	r7, lr
1001dafc:	d205      	bcs.n	1001db0a <__multiply+0x56>
1001dafe:	463b      	mov	r3, r7
1001db00:	2200      	movs	r2, #0
1001db02:	f843 2b04 	str.w	r2, [r3], #4
1001db06:	459e      	cmp	lr, r3
1001db08:	d8fb      	bhi.n	1001db02 <__multiply+0x4e>
1001db0a:	3614      	adds	r6, #20
1001db0c:	eb06 0888 	add.w	r8, r6, r8, lsl #2
1001db10:	f10a 0914 	add.w	r9, sl, #20
1001db14:	4546      	cmp	r6, r8
1001db16:	eb09 0585 	add.w	r5, r9, r5, lsl #2
1001db1a:	d266      	bcs.n	1001dbea <__multiply+0x136>
1001db1c:	eba5 030a 	sub.w	r3, r5, sl
1001db20:	3b15      	subs	r3, #21
1001db22:	f023 0303 	bic.w	r3, r3, #3
1001db26:	f10a 0a15 	add.w	sl, sl, #21
1001db2a:	3304      	adds	r3, #4
1001db2c:	4555      	cmp	r5, sl
1001db2e:	bf2c      	ite	cs
1001db30:	469b      	movcs	fp, r3
1001db32:	f04f 0b04 	movcc.w	fp, #4
1001db36:	f8cd e008 	str.w	lr, [sp, #8]
1001db3a:	9403      	str	r4, [sp, #12]
1001db3c:	46ae      	mov	lr, r5
1001db3e:	46e2      	mov	sl, ip
1001db40:	e005      	b.n	1001db4e <__multiply+0x9a>
1001db42:	0c09      	lsrs	r1, r1, #16
1001db44:	d12a      	bne.n	1001db9c <__multiply+0xe8>
1001db46:	45b0      	cmp	r8, r6
1001db48:	f107 0704 	add.w	r7, r7, #4
1001db4c:	d94a      	bls.n	1001dbe4 <__multiply+0x130>
1001db4e:	f856 1b04 	ldr.w	r1, [r6], #4
1001db52:	b28d      	uxth	r5, r1
1001db54:	2d00      	cmp	r5, #0
1001db56:	d0f4      	beq.n	1001db42 <__multiply+0x8e>
1001db58:	46cc      	mov	ip, r9
1001db5a:	463c      	mov	r4, r7
1001db5c:	2300      	movs	r3, #0
1001db5e:	9601      	str	r6, [sp, #4]
1001db60:	f85c 0b04 	ldr.w	r0, [ip], #4
1001db64:	6821      	ldr	r1, [r4, #0]
1001db66:	b286      	uxth	r6, r0
1001db68:	b28a      	uxth	r2, r1
1001db6a:	0c00      	lsrs	r0, r0, #16
1001db6c:	fb05 2206 	mla	r2, r5, r6, r2
1001db70:	0c09      	lsrs	r1, r1, #16
1001db72:	441a      	add	r2, r3
1001db74:	fb05 1100 	mla	r1, r5, r0, r1
1001db78:	eb01 4112 	add.w	r1, r1, r2, lsr #16
1001db7c:	b292      	uxth	r2, r2
1001db7e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
1001db82:	45e6      	cmp	lr, ip
1001db84:	f844 2b04 	str.w	r2, [r4], #4
1001db88:	ea4f 4311 	mov.w	r3, r1, lsr #16
1001db8c:	d8e8      	bhi.n	1001db60 <__multiply+0xac>
1001db8e:	9e01      	ldr	r6, [sp, #4]
1001db90:	f847 300b 	str.w	r3, [r7, fp]
1001db94:	f856 1c04 	ldr.w	r1, [r6, #-4]
1001db98:	0c09      	lsrs	r1, r1, #16
1001db9a:	d0d4      	beq.n	1001db46 <__multiply+0x92>
1001db9c:	683b      	ldr	r3, [r7, #0]
1001db9e:	2200      	movs	r2, #0
1001dba0:	4648      	mov	r0, r9
1001dba2:	461d      	mov	r5, r3
1001dba4:	463c      	mov	r4, r7
1001dba6:	4694      	mov	ip, r2
1001dba8:	8802      	ldrh	r2, [r0, #0]
1001dbaa:	fb01 c202 	mla	r2, r1, r2, ip
1001dbae:	eb02 4215 	add.w	r2, r2, r5, lsr #16
1001dbb2:	b29b      	uxth	r3, r3
1001dbb4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1001dbb8:	f844 3b04 	str.w	r3, [r4], #4
1001dbbc:	f850 3b04 	ldr.w	r3, [r0], #4
1001dbc0:	6825      	ldr	r5, [r4, #0]
1001dbc2:	ea4f 4c13 	mov.w	ip, r3, lsr #16
1001dbc6:	b2ab      	uxth	r3, r5
1001dbc8:	fb01 330c 	mla	r3, r1, ip, r3
1001dbcc:	eb03 4312 	add.w	r3, r3, r2, lsr #16
1001dbd0:	4586      	cmp	lr, r0
1001dbd2:	ea4f 4c13 	mov.w	ip, r3, lsr #16
1001dbd6:	d8e7      	bhi.n	1001dba8 <__multiply+0xf4>
1001dbd8:	45b0      	cmp	r8, r6
1001dbda:	f847 300b 	str.w	r3, [r7, fp]
1001dbde:	f107 0704 	add.w	r7, r7, #4
1001dbe2:	d8b4      	bhi.n	1001db4e <__multiply+0x9a>
1001dbe4:	e9dd e402 	ldrd	lr, r4, [sp, #8]
1001dbe8:	46d4      	mov	ip, sl
1001dbea:	2c00      	cmp	r4, #0
1001dbec:	dc02      	bgt.n	1001dbf4 <__multiply+0x140>
1001dbee:	e005      	b.n	1001dbfc <__multiply+0x148>
1001dbf0:	3c01      	subs	r4, #1
1001dbf2:	d003      	beq.n	1001dbfc <__multiply+0x148>
1001dbf4:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
1001dbf8:	2b00      	cmp	r3, #0
1001dbfa:	d0f9      	beq.n	1001dbf0 <__multiply+0x13c>
1001dbfc:	4660      	mov	r0, ip
1001dbfe:	f8cc 4010 	str.w	r4, [ip, #16]
1001dc02:	b005      	add	sp, #20
1001dc04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001dc08:	4b03      	ldr	r3, [pc, #12]	@ (1001dc18 <__multiply+0x164>)
1001dc0a:	4804      	ldr	r0, [pc, #16]	@ (1001dc1c <__multiply+0x168>)
1001dc0c:	4662      	mov	r2, ip
1001dc0e:	f44f 71b1 	mov.w	r1, #354	@ 0x162
1001dc12:	f7ff fbf1 	bl	1001d3f8 <__assert_func>
1001dc16:	bf00      	nop
1001dc18:	10020c70 	.word	0x10020c70
1001dc1c:	1002798c 	.word	0x1002798c

1001dc20 <__pow5mult>:
1001dc20:	f012 0303 	ands.w	r3, r2, #3
1001dc24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1001dc28:	4614      	mov	r4, r2
1001dc2a:	4607      	mov	r7, r0
1001dc2c:	d12c      	bne.n	1001dc88 <__pow5mult+0x68>
1001dc2e:	460d      	mov	r5, r1
1001dc30:	10a4      	asrs	r4, r4, #2
1001dc32:	d01c      	beq.n	1001dc6e <__pow5mult+0x4e>
1001dc34:	6c3e      	ldr	r6, [r7, #64]	@ 0x40
1001dc36:	b386      	cbz	r6, 1001dc9a <__pow5mult+0x7a>
1001dc38:	07e3      	lsls	r3, r4, #31
1001dc3a:	f04f 0800 	mov.w	r8, #0
1001dc3e:	d406      	bmi.n	1001dc4e <__pow5mult+0x2e>
1001dc40:	1064      	asrs	r4, r4, #1
1001dc42:	d014      	beq.n	1001dc6e <__pow5mult+0x4e>
1001dc44:	6830      	ldr	r0, [r6, #0]
1001dc46:	b1a8      	cbz	r0, 1001dc74 <__pow5mult+0x54>
1001dc48:	4606      	mov	r6, r0
1001dc4a:	07e3      	lsls	r3, r4, #31
1001dc4c:	d5f8      	bpl.n	1001dc40 <__pow5mult+0x20>
1001dc4e:	4632      	mov	r2, r6
1001dc50:	4629      	mov	r1, r5
1001dc52:	4638      	mov	r0, r7
1001dc54:	f7ff ff2e 	bl	1001dab4 <__multiply>
1001dc58:	b135      	cbz	r5, 1001dc68 <__pow5mult+0x48>
1001dc5a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001dc5c:	6869      	ldr	r1, [r5, #4]
1001dc5e:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
1001dc62:	602a      	str	r2, [r5, #0]
1001dc64:	f843 5021 	str.w	r5, [r3, r1, lsl #2]
1001dc68:	1064      	asrs	r4, r4, #1
1001dc6a:	4605      	mov	r5, r0
1001dc6c:	d1ea      	bne.n	1001dc44 <__pow5mult+0x24>
1001dc6e:	4628      	mov	r0, r5
1001dc70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001dc74:	4632      	mov	r2, r6
1001dc76:	4631      	mov	r1, r6
1001dc78:	4638      	mov	r0, r7
1001dc7a:	f7ff ff1b 	bl	1001dab4 <__multiply>
1001dc7e:	6030      	str	r0, [r6, #0]
1001dc80:	f8c0 8000 	str.w	r8, [r0]
1001dc84:	4606      	mov	r6, r0
1001dc86:	e7e0      	b.n	1001dc4a <__pow5mult+0x2a>
1001dc88:	3b01      	subs	r3, #1
1001dc8a:	4a0f      	ldr	r2, [pc, #60]	@ (1001dcc8 <__pow5mult+0xa8>)
1001dc8c:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
1001dc90:	2300      	movs	r3, #0
1001dc92:	f7ff fde7 	bl	1001d864 <__multadd>
1001dc96:	4605      	mov	r5, r0
1001dc98:	e7ca      	b.n	1001dc30 <__pow5mult+0x10>
1001dc9a:	2101      	movs	r1, #1
1001dc9c:	4638      	mov	r0, r7
1001dc9e:	f7ff fdb1 	bl	1001d804 <_Balloc>
1001dca2:	4606      	mov	r6, r0
1001dca4:	b140      	cbz	r0, 1001dcb8 <__pow5mult+0x98>
1001dca6:	2301      	movs	r3, #1
1001dca8:	f240 2271 	movw	r2, #625	@ 0x271
1001dcac:	e9c0 3204 	strd	r3, r2, [r0, #16]
1001dcb0:	2300      	movs	r3, #0
1001dcb2:	6438      	str	r0, [r7, #64]	@ 0x40
1001dcb4:	6003      	str	r3, [r0, #0]
1001dcb6:	e7bf      	b.n	1001dc38 <__pow5mult+0x18>
1001dcb8:	4b04      	ldr	r3, [pc, #16]	@ (1001dccc <__pow5mult+0xac>)
1001dcba:	4805      	ldr	r0, [pc, #20]	@ (1001dcd0 <__pow5mult+0xb0>)
1001dcbc:	4632      	mov	r2, r6
1001dcbe:	f240 1145 	movw	r1, #325	@ 0x145
1001dcc2:	f7ff fb99 	bl	1001d3f8 <__assert_func>
1001dcc6:	bf00      	nop
1001dcc8:	100279e8 	.word	0x100279e8
1001dccc:	10020c70 	.word	0x10020c70
1001dcd0:	1002798c 	.word	0x1002798c

1001dcd4 <__lshift>:
1001dcd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1001dcd8:	460c      	mov	r4, r1
1001dcda:	4690      	mov	r8, r2
1001dcdc:	6927      	ldr	r7, [r4, #16]
1001dcde:	68a3      	ldr	r3, [r4, #8]
1001dce0:	6849      	ldr	r1, [r1, #4]
1001dce2:	eb07 1762 	add.w	r7, r7, r2, asr #5
1001dce6:	1c7d      	adds	r5, r7, #1
1001dce8:	429d      	cmp	r5, r3
1001dcea:	4606      	mov	r6, r0
1001dcec:	ea4f 1962 	mov.w	r9, r2, asr #5
1001dcf0:	dd04      	ble.n	1001dcfc <__lshift+0x28>
1001dcf2:	005b      	lsls	r3, r3, #1
1001dcf4:	429d      	cmp	r5, r3
1001dcf6:	f101 0101 	add.w	r1, r1, #1
1001dcfa:	dcfa      	bgt.n	1001dcf2 <__lshift+0x1e>
1001dcfc:	4630      	mov	r0, r6
1001dcfe:	f7ff fd81 	bl	1001d804 <_Balloc>
1001dd02:	4684      	mov	ip, r0
1001dd04:	2800      	cmp	r0, #0
1001dd06:	d051      	beq.n	1001ddac <__lshift+0xd8>
1001dd08:	f1b9 0f00 	cmp.w	r9, #0
1001dd0c:	f100 0014 	add.w	r0, r0, #20
1001dd10:	dd0e      	ble.n	1001dd30 <__lshift+0x5c>
1001dd12:	f109 0205 	add.w	r2, r9, #5
1001dd16:	ea4f 0e82 	mov.w	lr, r2, lsl #2
1001dd1a:	4603      	mov	r3, r0
1001dd1c:	eb0c 0282 	add.w	r2, ip, r2, lsl #2
1001dd20:	2100      	movs	r1, #0
1001dd22:	f843 1b04 	str.w	r1, [r3], #4
1001dd26:	4293      	cmp	r3, r2
1001dd28:	d1fb      	bne.n	1001dd22 <__lshift+0x4e>
1001dd2a:	f1ae 0314 	sub.w	r3, lr, #20
1001dd2e:	4418      	add	r0, r3
1001dd30:	6921      	ldr	r1, [r4, #16]
1001dd32:	f104 0314 	add.w	r3, r4, #20
1001dd36:	f018 081f 	ands.w	r8, r8, #31
1001dd3a:	eb03 0181 	add.w	r1, r3, r1, lsl #2
1001dd3e:	d02d      	beq.n	1001dd9c <__lshift+0xc8>
1001dd40:	f1c8 0920 	rsb	r9, r8, #32
1001dd44:	4686      	mov	lr, r0
1001dd46:	f04f 0a00 	mov.w	sl, #0
1001dd4a:	681a      	ldr	r2, [r3, #0]
1001dd4c:	fa02 f208 	lsl.w	r2, r2, r8
1001dd50:	ea42 020a 	orr.w	r2, r2, sl
1001dd54:	f84e 2b04 	str.w	r2, [lr], #4
1001dd58:	f853 2b04 	ldr.w	r2, [r3], #4
1001dd5c:	4299      	cmp	r1, r3
1001dd5e:	fa22 fa09 	lsr.w	sl, r2, r9
1001dd62:	d8f2      	bhi.n	1001dd4a <__lshift+0x76>
1001dd64:	1b0b      	subs	r3, r1, r4
1001dd66:	3b15      	subs	r3, #21
1001dd68:	f023 0303 	bic.w	r3, r3, #3
1001dd6c:	3304      	adds	r3, #4
1001dd6e:	f104 0215 	add.w	r2, r4, #21
1001dd72:	4291      	cmp	r1, r2
1001dd74:	bf38      	it	cc
1001dd76:	2304      	movcc	r3, #4
1001dd78:	f840 a003 	str.w	sl, [r0, r3]
1001dd7c:	f1ba 0f00 	cmp.w	sl, #0
1001dd80:	d100      	bne.n	1001dd84 <__lshift+0xb0>
1001dd82:	463d      	mov	r5, r7
1001dd84:	6c73      	ldr	r3, [r6, #68]	@ 0x44
1001dd86:	6862      	ldr	r2, [r4, #4]
1001dd88:	f8cc 5010 	str.w	r5, [ip, #16]
1001dd8c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1001dd90:	6021      	str	r1, [r4, #0]
1001dd92:	4660      	mov	r0, ip
1001dd94:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
1001dd98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1001dd9c:	3804      	subs	r0, #4
1001dd9e:	f853 2b04 	ldr.w	r2, [r3], #4
1001dda2:	f840 2f04 	str.w	r2, [r0, #4]!
1001dda6:	4299      	cmp	r1, r3
1001dda8:	d8f9      	bhi.n	1001dd9e <__lshift+0xca>
1001ddaa:	e7ea      	b.n	1001dd82 <__lshift+0xae>
1001ddac:	4b03      	ldr	r3, [pc, #12]	@ (1001ddbc <__lshift+0xe8>)
1001ddae:	4804      	ldr	r0, [pc, #16]	@ (1001ddc0 <__lshift+0xec>)
1001ddb0:	4662      	mov	r2, ip
1001ddb2:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
1001ddb6:	f7ff fb1f 	bl	1001d3f8 <__assert_func>
1001ddba:	bf00      	nop
1001ddbc:	10020c70 	.word	0x10020c70
1001ddc0:	1002798c 	.word	0x1002798c

1001ddc4 <__mcmp>:
1001ddc4:	690b      	ldr	r3, [r1, #16]
1001ddc6:	4684      	mov	ip, r0
1001ddc8:	6900      	ldr	r0, [r0, #16]
1001ddca:	1ac0      	subs	r0, r0, r3
1001ddcc:	d115      	bne.n	1001ddfa <__mcmp+0x36>
1001ddce:	f10c 0c14 	add.w	ip, ip, #20
1001ddd2:	3114      	adds	r1, #20
1001ddd4:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
1001ddd8:	b410      	push	{r4}
1001ddda:	eb01 0383 	add.w	r3, r1, r3, lsl #2
1001ddde:	e001      	b.n	1001dde4 <__mcmp+0x20>
1001dde0:	4594      	cmp	ip, r2
1001dde2:	d208      	bcs.n	1001ddf6 <__mcmp+0x32>
1001dde4:	f852 4d04 	ldr.w	r4, [r2, #-4]!
1001dde8:	f853 1d04 	ldr.w	r1, [r3, #-4]!
1001ddec:	428c      	cmp	r4, r1
1001ddee:	d0f7      	beq.n	1001dde0 <__mcmp+0x1c>
1001ddf0:	d204      	bcs.n	1001ddfc <__mcmp+0x38>
1001ddf2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001ddf6:	bc10      	pop	{r4}
1001ddf8:	4770      	bx	lr
1001ddfa:	4770      	bx	lr
1001ddfc:	2001      	movs	r0, #1
1001ddfe:	bc10      	pop	{r4}
1001de00:	4770      	bx	lr
1001de02:	bf00      	nop

1001de04 <__mdiff>:
1001de04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001de08:	6913      	ldr	r3, [r2, #16]
1001de0a:	690f      	ldr	r7, [r1, #16]
1001de0c:	1aff      	subs	r7, r7, r3
1001de0e:	2f00      	cmp	r7, #0
1001de10:	b083      	sub	sp, #12
1001de12:	460d      	mov	r5, r1
1001de14:	4690      	mov	r8, r2
1001de16:	d115      	bne.n	1001de44 <__mdiff+0x40>
1001de18:	f101 0614 	add.w	r6, r1, #20
1001de1c:	3214      	adds	r2, #20
1001de1e:	eb02 0283 	add.w	r2, r2, r3, lsl #2
1001de22:	eb06 0383 	add.w	r3, r6, r3, lsl #2
1001de26:	e001      	b.n	1001de2c <__mdiff+0x28>
1001de28:	429e      	cmp	r6, r3
1001de2a:	d276      	bcs.n	1001df1a <__mdiff+0x116>
1001de2c:	f853 4d04 	ldr.w	r4, [r3, #-4]!
1001de30:	f852 1d04 	ldr.w	r1, [r2, #-4]!
1001de34:	428c      	cmp	r4, r1
1001de36:	d0f7      	beq.n	1001de28 <__mdiff+0x24>
1001de38:	d206      	bcs.n	1001de48 <__mdiff+0x44>
1001de3a:	462b      	mov	r3, r5
1001de3c:	2701      	movs	r7, #1
1001de3e:	4645      	mov	r5, r8
1001de40:	4698      	mov	r8, r3
1001de42:	e001      	b.n	1001de48 <__mdiff+0x44>
1001de44:	dbf9      	blt.n	1001de3a <__mdiff+0x36>
1001de46:	2700      	movs	r7, #0
1001de48:	6869      	ldr	r1, [r5, #4]
1001de4a:	f7ff fcdb 	bl	1001d804 <_Balloc>
1001de4e:	4681      	mov	r9, r0
1001de50:	2800      	cmp	r0, #0
1001de52:	d076      	beq.n	1001df42 <__mdiff+0x13e>
1001de54:	692e      	ldr	r6, [r5, #16]
1001de56:	60c7      	str	r7, [r0, #12]
1001de58:	f8d8 0010 	ldr.w	r0, [r8, #16]
1001de5c:	f105 0b14 	add.w	fp, r5, #20
1001de60:	f108 0e14 	add.w	lr, r8, #20
1001de64:	f109 0a14 	add.w	sl, r9, #20
1001de68:	f105 0110 	add.w	r1, r5, #16
1001de6c:	eb0e 0080 	add.w	r0, lr, r0, lsl #2
1001de70:	eb0b 0286 	add.w	r2, fp, r6, lsl #2
1001de74:	4657      	mov	r7, sl
1001de76:	f04f 0c00 	mov.w	ip, #0
1001de7a:	f8cd b004 	str.w	fp, [sp, #4]
1001de7e:	f85e 4b04 	ldr.w	r4, [lr], #4
1001de82:	f851 5f04 	ldr.w	r5, [r1, #4]!
1001de86:	fa1f fb84 	uxth.w	fp, r4
1001de8a:	b2ab      	uxth	r3, r5
1001de8c:	eba3 030b 	sub.w	r3, r3, fp
1001de90:	0c24      	lsrs	r4, r4, #16
1001de92:	4463      	add	r3, ip
1001de94:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
1001de98:	eb04 4423 	add.w	r4, r4, r3, asr #16
1001de9c:	b29b      	uxth	r3, r3
1001de9e:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
1001dea2:	4570      	cmp	r0, lr
1001dea4:	f847 3b04 	str.w	r3, [r7], #4
1001dea8:	ea4f 4c24 	mov.w	ip, r4, asr #16
1001deac:	d8e7      	bhi.n	1001de7e <__mdiff+0x7a>
1001deae:	eba0 0108 	sub.w	r1, r0, r8
1001deb2:	3915      	subs	r1, #21
1001deb4:	0889      	lsrs	r1, r1, #2
1001deb6:	1c4c      	adds	r4, r1, #1
1001deb8:	f8dd b004 	ldr.w	fp, [sp, #4]
1001debc:	f108 0815 	add.w	r8, r8, #21
1001dec0:	00a4      	lsls	r4, r4, #2
1001dec2:	4540      	cmp	r0, r8
1001dec4:	bf38      	it	cc
1001dec6:	2404      	movcc	r4, #4
1001dec8:	eb0b 0504 	add.w	r5, fp, r4
1001decc:	42aa      	cmp	r2, r5
1001dece:	4454      	add	r4, sl
1001ded0:	d930      	bls.n	1001df34 <__mdiff+0x130>
1001ded2:	4627      	mov	r7, r4
1001ded4:	4628      	mov	r0, r5
1001ded6:	f850 3b04 	ldr.w	r3, [r0], #4
1001deda:	fa1c fe83 	uxtah	lr, ip, r3
1001dede:	0c19      	lsrs	r1, r3, #16
1001dee0:	4463      	add	r3, ip
1001dee2:	eb01 412e 	add.w	r1, r1, lr, asr #16
1001dee6:	b29b      	uxth	r3, r3
1001dee8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
1001deec:	4282      	cmp	r2, r0
1001deee:	f847 3b04 	str.w	r3, [r7], #4
1001def2:	ea4f 4c21 	mov.w	ip, r1, asr #16
1001def6:	d8ee      	bhi.n	1001ded6 <__mdiff+0xd2>
1001def8:	3a01      	subs	r2, #1
1001defa:	1b52      	subs	r2, r2, r5
1001defc:	f022 0203 	bic.w	r2, r2, #3
1001df00:	4414      	add	r4, r2
1001df02:	b923      	cbnz	r3, 1001df0e <__mdiff+0x10a>
1001df04:	f854 3d04 	ldr.w	r3, [r4, #-4]!
1001df08:	3e01      	subs	r6, #1
1001df0a:	2b00      	cmp	r3, #0
1001df0c:	d0fa      	beq.n	1001df04 <__mdiff+0x100>
1001df0e:	4648      	mov	r0, r9
1001df10:	f8c9 6010 	str.w	r6, [r9, #16]
1001df14:	b003      	add	sp, #12
1001df16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001df1a:	2100      	movs	r1, #0
1001df1c:	f7ff fc72 	bl	1001d804 <_Balloc>
1001df20:	4681      	mov	r9, r0
1001df22:	b1a8      	cbz	r0, 1001df50 <__mdiff+0x14c>
1001df24:	2201      	movs	r2, #1
1001df26:	2300      	movs	r3, #0
1001df28:	e9c0 2304 	strd	r2, r3, [r0, #16]
1001df2c:	4648      	mov	r0, r9
1001df2e:	b003      	add	sp, #12
1001df30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001df34:	0089      	lsls	r1, r1, #2
1001df36:	4540      	cmp	r0, r8
1001df38:	bf38      	it	cc
1001df3a:	2100      	movcc	r1, #0
1001df3c:	eb0a 0401 	add.w	r4, sl, r1
1001df40:	e7df      	b.n	1001df02 <__mdiff+0xfe>
1001df42:	4b07      	ldr	r3, [pc, #28]	@ (1001df60 <__mdiff+0x15c>)
1001df44:	4807      	ldr	r0, [pc, #28]	@ (1001df64 <__mdiff+0x160>)
1001df46:	464a      	mov	r2, r9
1001df48:	f240 2145 	movw	r1, #581	@ 0x245
1001df4c:	f7ff fa54 	bl	1001d3f8 <__assert_func>
1001df50:	4b03      	ldr	r3, [pc, #12]	@ (1001df60 <__mdiff+0x15c>)
1001df52:	4804      	ldr	r0, [pc, #16]	@ (1001df64 <__mdiff+0x160>)
1001df54:	464a      	mov	r2, r9
1001df56:	f240 2137 	movw	r1, #567	@ 0x237
1001df5a:	f7ff fa4d 	bl	1001d3f8 <__assert_func>
1001df5e:	bf00      	nop
1001df60:	10020c70 	.word	0x10020c70
1001df64:	1002798c 	.word	0x1002798c

1001df68 <__ulp>:
1001df68:	4b11      	ldr	r3, [pc, #68]	@ (1001dfb0 <__ulp+0x48>)
1001df6a:	400b      	ands	r3, r1
1001df6c:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
1001df70:	2b00      	cmp	r3, #0
1001df72:	dd03      	ble.n	1001df7c <__ulp+0x14>
1001df74:	2200      	movs	r2, #0
1001df76:	4619      	mov	r1, r3
1001df78:	4610      	mov	r0, r2
1001df7a:	4770      	bx	lr
1001df7c:	425b      	negs	r3, r3
1001df7e:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
1001df82:	ea4f 5223 	mov.w	r2, r3, asr #20
1001df86:	da06      	bge.n	1001df96 <__ulp+0x2e>
1001df88:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
1001df8c:	4113      	asrs	r3, r2
1001df8e:	2200      	movs	r2, #0
1001df90:	4619      	mov	r1, r3
1001df92:	4610      	mov	r0, r2
1001df94:	4770      	bx	lr
1001df96:	f1a2 0314 	sub.w	r3, r2, #20
1001df9a:	2b1e      	cmp	r3, #30
1001df9c:	bfda      	itte	le
1001df9e:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
1001dfa2:	40da      	lsrle	r2, r3
1001dfa4:	2201      	movgt	r2, #1
1001dfa6:	2300      	movs	r3, #0
1001dfa8:	4619      	mov	r1, r3
1001dfaa:	4610      	mov	r0, r2
1001dfac:	4770      	bx	lr
1001dfae:	bf00      	nop
1001dfb0:	7ff00000 	.word	0x7ff00000

1001dfb4 <__b2d>:
1001dfb4:	6902      	ldr	r2, [r0, #16]
1001dfb6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1001dfba:	f100 0714 	add.w	r7, r0, #20
1001dfbe:	eb07 0282 	add.w	r2, r7, r2, lsl #2
1001dfc2:	f1a2 0804 	sub.w	r8, r2, #4
1001dfc6:	f852 6c04 	ldr.w	r6, [r2, #-4]
1001dfca:	4630      	mov	r0, r6
1001dfcc:	f7ff fcf2 	bl	1001d9b4 <__hi0bits>
1001dfd0:	f1c0 0320 	rsb	r3, r0, #32
1001dfd4:	280a      	cmp	r0, #10
1001dfd6:	600b      	str	r3, [r1, #0]
1001dfd8:	dd33      	ble.n	1001e042 <__b2d+0x8e>
1001dfda:	4547      	cmp	r7, r8
1001dfdc:	f1a0 010b 	sub.w	r1, r0, #11
1001dfe0:	d219      	bcs.n	1001e016 <__b2d+0x62>
1001dfe2:	f852 3c08 	ldr.w	r3, [r2, #-8]
1001dfe6:	b321      	cbz	r1, 1001e032 <__b2d+0x7e>
1001dfe8:	f1c1 0020 	rsb	r0, r1, #32
1001dfec:	408e      	lsls	r6, r1
1001dfee:	fa23 f400 	lsr.w	r4, r3, r0
1001dff2:	4326      	orrs	r6, r4
1001dff4:	408b      	lsls	r3, r1
1001dff6:	f1a2 0108 	sub.w	r1, r2, #8
1001dffa:	f046 557f 	orr.w	r5, r6, #1069547520	@ 0x3fc00000
1001dffe:	428f      	cmp	r7, r1
1001e000:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
1001e004:	d219      	bcs.n	1001e03a <__b2d+0x86>
1001e006:	f852 2c0c 	ldr.w	r2, [r2, #-12]
1001e00a:	40c2      	lsrs	r2, r0
1001e00c:	4313      	orrs	r3, r2
1001e00e:	4618      	mov	r0, r3
1001e010:	4629      	mov	r1, r5
1001e012:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001e016:	280b      	cmp	r0, #11
1001e018:	d00a      	beq.n	1001e030 <__b2d+0x7c>
1001e01a:	fa06 f101 	lsl.w	r1, r6, r1
1001e01e:	f041 557f 	orr.w	r5, r1, #1069547520	@ 0x3fc00000
1001e022:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
1001e026:	2300      	movs	r3, #0
1001e028:	4618      	mov	r0, r3
1001e02a:	4629      	mov	r1, r5
1001e02c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001e030:	2300      	movs	r3, #0
1001e032:	f046 557f 	orr.w	r5, r6, #1069547520	@ 0x3fc00000
1001e036:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
1001e03a:	4618      	mov	r0, r3
1001e03c:	4629      	mov	r1, r5
1001e03e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001e042:	4547      	cmp	r7, r8
1001e044:	bf38      	it	cc
1001e046:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
1001e04a:	f1c0 030b 	rsb	r3, r0, #11
1001e04e:	fa26 f103 	lsr.w	r1, r6, r3
1001e052:	bf38      	it	cc
1001e054:	40da      	lsrcc	r2, r3
1001e056:	f100 0315 	add.w	r3, r0, #21
1001e05a:	f041 557f 	orr.w	r5, r1, #1069547520	@ 0x3fc00000
1001e05e:	bf28      	it	cs
1001e060:	2200      	movcs	r2, #0
1001e062:	fa06 f303 	lsl.w	r3, r6, r3
1001e066:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
1001e06a:	4313      	orrs	r3, r2
1001e06c:	4618      	mov	r0, r3
1001e06e:	4629      	mov	r1, r5
1001e070:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

1001e074 <__d2b>:
1001e074:	b5f0      	push	{r4, r5, r6, r7, lr}
1001e076:	2101      	movs	r1, #1
1001e078:	b083      	sub	sp, #12
1001e07a:	4616      	mov	r6, r2
1001e07c:	461f      	mov	r7, r3
1001e07e:	f7ff fbc1 	bl	1001d804 <_Balloc>
1001e082:	4605      	mov	r5, r0
1001e084:	2800      	cmp	r0, #0
1001e086:	d047      	beq.n	1001e118 <__d2b+0xa4>
1001e088:	f3c7 540a 	ubfx	r4, r7, #20, #11
1001e08c:	f3c7 0313 	ubfx	r3, r7, #0, #20
1001e090:	b10c      	cbz	r4, 1001e096 <__d2b+0x22>
1001e092:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
1001e096:	2e00      	cmp	r6, #0
1001e098:	9301      	str	r3, [sp, #4]
1001e09a:	d114      	bne.n	1001e0c6 <__d2b+0x52>
1001e09c:	a801      	add	r0, sp, #4
1001e09e:	f7ff fcab 	bl	1001d9f8 <__lo0bits>
1001e0a2:	9b01      	ldr	r3, [sp, #4]
1001e0a4:	616b      	str	r3, [r5, #20]
1001e0a6:	2201      	movs	r2, #1
1001e0a8:	3020      	adds	r0, #32
1001e0aa:	612a      	str	r2, [r5, #16]
1001e0ac:	b314      	cbz	r4, 1001e0f4 <__d2b+0x80>
1001e0ae:	9b08      	ldr	r3, [sp, #32]
1001e0b0:	f2a4 4433 	subw	r4, r4, #1075	@ 0x433
1001e0b4:	4404      	add	r4, r0
1001e0b6:	601c      	str	r4, [r3, #0]
1001e0b8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001e0ba:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
1001e0be:	6018      	str	r0, [r3, #0]
1001e0c0:	4628      	mov	r0, r5
1001e0c2:	b003      	add	sp, #12
1001e0c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
1001e0c6:	4668      	mov	r0, sp
1001e0c8:	9600      	str	r6, [sp, #0]
1001e0ca:	f7ff fc95 	bl	1001d9f8 <__lo0bits>
1001e0ce:	9b01      	ldr	r3, [sp, #4]
1001e0d0:	b300      	cbz	r0, 1001e114 <__d2b+0xa0>
1001e0d2:	9900      	ldr	r1, [sp, #0]
1001e0d4:	f1c0 0220 	rsb	r2, r0, #32
1001e0d8:	fa03 f202 	lsl.w	r2, r3, r2
1001e0dc:	40c3      	lsrs	r3, r0
1001e0de:	9301      	str	r3, [sp, #4]
1001e0e0:	430a      	orrs	r2, r1
1001e0e2:	2b00      	cmp	r3, #0
1001e0e4:	e9c5 2305 	strd	r2, r3, [r5, #20]
1001e0e8:	bf0c      	ite	eq
1001e0ea:	2201      	moveq	r2, #1
1001e0ec:	2202      	movne	r2, #2
1001e0ee:	612a      	str	r2, [r5, #16]
1001e0f0:	2c00      	cmp	r4, #0
1001e0f2:	d1dc      	bne.n	1001e0ae <__d2b+0x3a>
1001e0f4:	eb05 0182 	add.w	r1, r5, r2, lsl #2
1001e0f8:	f2a0 4332 	subw	r3, r0, #1074	@ 0x432
1001e0fc:	6908      	ldr	r0, [r1, #16]
1001e0fe:	9908      	ldr	r1, [sp, #32]
1001e100:	600b      	str	r3, [r1, #0]
1001e102:	f7ff fc57 	bl	1001d9b4 <__hi0bits>
1001e106:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001e108:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
1001e10c:	6018      	str	r0, [r3, #0]
1001e10e:	4628      	mov	r0, r5
1001e110:	b003      	add	sp, #12
1001e112:	bdf0      	pop	{r4, r5, r6, r7, pc}
1001e114:	9a00      	ldr	r2, [sp, #0]
1001e116:	e7e4      	b.n	1001e0e2 <__d2b+0x6e>
1001e118:	4b03      	ldr	r3, [pc, #12]	@ (1001e128 <__d2b+0xb4>)
1001e11a:	4804      	ldr	r0, [pc, #16]	@ (1001e12c <__d2b+0xb8>)
1001e11c:	462a      	mov	r2, r5
1001e11e:	f240 310f 	movw	r1, #783	@ 0x30f
1001e122:	f7ff f969 	bl	1001d3f8 <__assert_func>
1001e126:	bf00      	nop
1001e128:	10020c70 	.word	0x10020c70
1001e12c:	1002798c 	.word	0x1002798c

1001e130 <__ratio>:
1001e130:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
1001e134:	b083      	sub	sp, #12
1001e136:	460e      	mov	r6, r1
1001e138:	4669      	mov	r1, sp
1001e13a:	4607      	mov	r7, r0
1001e13c:	f7ff ff3a 	bl	1001dfb4 <__b2d>
1001e140:	4604      	mov	r4, r0
1001e142:	460d      	mov	r5, r1
1001e144:	4630      	mov	r0, r6
1001e146:	a901      	add	r1, sp, #4
1001e148:	f7ff ff34 	bl	1001dfb4 <__b2d>
1001e14c:	6933      	ldr	r3, [r6, #16]
1001e14e:	693a      	ldr	r2, [r7, #16]
1001e150:	1ad2      	subs	r2, r2, r3
1001e152:	e9dd 3600 	ldrd	r3, r6, [sp]
1001e156:	1b9b      	subs	r3, r3, r6
1001e158:	eb03 1342 	add.w	r3, r3, r2, lsl #5
1001e15c:	2b00      	cmp	r3, #0
1001e15e:	dd0b      	ble.n	1001e178 <__ratio+0x48>
1001e160:	eb05 5903 	add.w	r9, r5, r3, lsl #20
1001e164:	464d      	mov	r5, r9
1001e166:	4602      	mov	r2, r0
1001e168:	460b      	mov	r3, r1
1001e16a:	4620      	mov	r0, r4
1001e16c:	4629      	mov	r1, r5
1001e16e:	f001 fe2b 	bl	1001fdc8 <__aeabi_ddiv>
1001e172:	b003      	add	sp, #12
1001e174:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1001e178:	ebc3 3303 	rsb	r3, r3, r3, lsl #12
1001e17c:	eb01 5703 	add.w	r7, r1, r3, lsl #20
1001e180:	4639      	mov	r1, r7
1001e182:	e7f0      	b.n	1001e166 <__ratio+0x36>

1001e184 <__copybits>:
1001e184:	3901      	subs	r1, #1
1001e186:	1149      	asrs	r1, r1, #5
1001e188:	f101 0c01 	add.w	ip, r1, #1
1001e18c:	6911      	ldr	r1, [r2, #16]
1001e18e:	f102 0314 	add.w	r3, r2, #20
1001e192:	eb03 0181 	add.w	r1, r3, r1, lsl #2
1001e196:	428b      	cmp	r3, r1
1001e198:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
1001e19c:	d216      	bcs.n	1001e1cc <__copybits+0x48>
1001e19e:	b510      	push	{r4, lr}
1001e1a0:	f1a0 0e04 	sub.w	lr, r0, #4
1001e1a4:	f853 4b04 	ldr.w	r4, [r3], #4
1001e1a8:	f84e 4f04 	str.w	r4, [lr, #4]!
1001e1ac:	4299      	cmp	r1, r3
1001e1ae:	d8f9      	bhi.n	1001e1a4 <__copybits+0x20>
1001e1b0:	1a8b      	subs	r3, r1, r2
1001e1b2:	3b15      	subs	r3, #21
1001e1b4:	f023 0303 	bic.w	r3, r3, #3
1001e1b8:	3304      	adds	r3, #4
1001e1ba:	4418      	add	r0, r3
1001e1bc:	4584      	cmp	ip, r0
1001e1be:	d904      	bls.n	1001e1ca <__copybits+0x46>
1001e1c0:	2300      	movs	r3, #0
1001e1c2:	f840 3b04 	str.w	r3, [r0], #4
1001e1c6:	4584      	cmp	ip, r0
1001e1c8:	d8fb      	bhi.n	1001e1c2 <__copybits+0x3e>
1001e1ca:	bd10      	pop	{r4, pc}
1001e1cc:	4584      	cmp	ip, r0
1001e1ce:	d905      	bls.n	1001e1dc <__copybits+0x58>
1001e1d0:	2300      	movs	r3, #0
1001e1d2:	f840 3b04 	str.w	r3, [r0], #4
1001e1d6:	4584      	cmp	ip, r0
1001e1d8:	d8fb      	bhi.n	1001e1d2 <__copybits+0x4e>
1001e1da:	4770      	bx	lr
1001e1dc:	4770      	bx	lr
1001e1de:	bf00      	nop

1001e1e0 <__any_on>:
1001e1e0:	6903      	ldr	r3, [r0, #16]
1001e1e2:	114a      	asrs	r2, r1, #5
1001e1e4:	4293      	cmp	r3, r2
1001e1e6:	f100 0014 	add.w	r0, r0, #20
1001e1ea:	da09      	bge.n	1001e200 <__any_on+0x20>
1001e1ec:	eb00 0383 	add.w	r3, r0, r3, lsl #2
1001e1f0:	e002      	b.n	1001e1f8 <__any_on+0x18>
1001e1f2:	f853 2d04 	ldr.w	r2, [r3, #-4]!
1001e1f6:	b9a2      	cbnz	r2, 1001e222 <__any_on+0x42>
1001e1f8:	4283      	cmp	r3, r0
1001e1fa:	d8fa      	bhi.n	1001e1f2 <__any_on+0x12>
1001e1fc:	2000      	movs	r0, #0
1001e1fe:	4770      	bx	lr
1001e200:	eb00 0382 	add.w	r3, r0, r2, lsl #2
1001e204:	ddf8      	ble.n	1001e1f8 <__any_on+0x18>
1001e206:	f011 011f 	ands.w	r1, r1, #31
1001e20a:	d0f5      	beq.n	1001e1f8 <__any_on+0x18>
1001e20c:	b410      	push	{r4}
1001e20e:	f850 4022 	ldr.w	r4, [r0, r2, lsl #2]
1001e212:	fa24 f201 	lsr.w	r2, r4, r1
1001e216:	408a      	lsls	r2, r1
1001e218:	4294      	cmp	r4, r2
1001e21a:	d008      	beq.n	1001e22e <__any_on+0x4e>
1001e21c:	2001      	movs	r0, #1
1001e21e:	bc10      	pop	{r4}
1001e220:	4770      	bx	lr
1001e222:	2001      	movs	r0, #1
1001e224:	4770      	bx	lr
1001e226:	f853 2d04 	ldr.w	r2, [r3, #-4]!
1001e22a:	2a00      	cmp	r2, #0
1001e22c:	d1f6      	bne.n	1001e21c <__any_on+0x3c>
1001e22e:	4283      	cmp	r3, r0
1001e230:	d8f9      	bhi.n	1001e226 <__any_on+0x46>
1001e232:	2000      	movs	r0, #0
1001e234:	bc10      	pop	{r4}
1001e236:	4770      	bx	lr

1001e238 <_calloc_r>:
1001e238:	b538      	push	{r3, r4, r5, lr}
1001e23a:	fba1 1402 	umull	r1, r4, r1, r2
1001e23e:	bb54      	cbnz	r4, 1001e296 <_calloc_r+0x5e>
1001e240:	f7f6 fba0 	bl	10014984 <_malloc_r>
1001e244:	4605      	mov	r5, r0
1001e246:	b350      	cbz	r0, 1001e29e <_calloc_r+0x66>
1001e248:	f850 2c04 	ldr.w	r2, [r0, #-4]
1001e24c:	f022 0203 	bic.w	r2, r2, #3
1001e250:	3a04      	subs	r2, #4
1001e252:	2a24      	cmp	r2, #36	@ 0x24
1001e254:	d810      	bhi.n	1001e278 <_calloc_r+0x40>
1001e256:	2a13      	cmp	r2, #19
1001e258:	d913      	bls.n	1001e282 <_calloc_r+0x4a>
1001e25a:	2a1b      	cmp	r2, #27
1001e25c:	6004      	str	r4, [r0, #0]
1001e25e:	6044      	str	r4, [r0, #4]
1001e260:	d916      	bls.n	1001e290 <_calloc_r+0x58>
1001e262:	2a24      	cmp	r2, #36	@ 0x24
1001e264:	6084      	str	r4, [r0, #8]
1001e266:	60c4      	str	r4, [r0, #12]
1001e268:	bf11      	iteee	ne
1001e26a:	f100 0210 	addne.w	r2, r0, #16
1001e26e:	f100 0218 	addeq.w	r2, r0, #24
1001e272:	6104      	streq	r4, [r0, #16]
1001e274:	6144      	streq	r4, [r0, #20]
1001e276:	e005      	b.n	1001e284 <_calloc_r+0x4c>
1001e278:	4621      	mov	r1, r4
1001e27a:	f7f6 fe71 	bl	10014f60 <memset>
1001e27e:	4628      	mov	r0, r5
1001e280:	bd38      	pop	{r3, r4, r5, pc}
1001e282:	4602      	mov	r2, r0
1001e284:	2300      	movs	r3, #0
1001e286:	6013      	str	r3, [r2, #0]
1001e288:	6053      	str	r3, [r2, #4]
1001e28a:	6093      	str	r3, [r2, #8]
1001e28c:	4628      	mov	r0, r5
1001e28e:	bd38      	pop	{r3, r4, r5, pc}
1001e290:	f100 0208 	add.w	r2, r0, #8
1001e294:	e7f6      	b.n	1001e284 <_calloc_r+0x4c>
1001e296:	f7f4 ff1d 	bl	100130d4 <__errno>
1001e29a:	230c      	movs	r3, #12
1001e29c:	6003      	str	r3, [r0, #0]
1001e29e:	2500      	movs	r5, #0
1001e2a0:	4628      	mov	r0, r5
1001e2a2:	bd38      	pop	{r3, r4, r5, pc}

1001e2a4 <_wcsrtombs_r>:
1001e2a4:	b500      	push	{lr}
1001e2a6:	b083      	sub	sp, #12
1001e2a8:	f8dd c010 	ldr.w	ip, [sp, #16]
1001e2ac:	e9cd 3c00 	strd	r3, ip, [sp]
1001e2b0:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001e2b4:	f001 fa3a 	bl	1001f72c <_wcsnrtombs_r>
1001e2b8:	b003      	add	sp, #12
1001e2ba:	f85d fb04 	ldr.w	pc, [sp], #4
1001e2be:	bf00      	nop

1001e2c0 <quorem>:
1001e2c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001e2c4:	6903      	ldr	r3, [r0, #16]
1001e2c6:	690c      	ldr	r4, [r1, #16]
1001e2c8:	42a3      	cmp	r3, r4
1001e2ca:	b083      	sub	sp, #12
1001e2cc:	f2c0 808a 	blt.w	1001e3e4 <quorem+0x124>
1001e2d0:	3c01      	subs	r4, #1
1001e2d2:	f101 0514 	add.w	r5, r1, #20
1001e2d6:	f100 0814 	add.w	r8, r0, #20
1001e2da:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
1001e2de:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
1001e2e2:	3301      	adds	r3, #1
1001e2e4:	429a      	cmp	r2, r3
1001e2e6:	468e      	mov	lr, r1
1001e2e8:	4681      	mov	r9, r0
1001e2ea:	ea4f 0184 	mov.w	r1, r4, lsl #2
1001e2ee:	eb05 0784 	add.w	r7, r5, r4, lsl #2
1001e2f2:	eb08 0a84 	add.w	sl, r8, r4, lsl #2
1001e2f6:	fbb2 f6f3 	udiv	r6, r2, r3
1001e2fa:	d33a      	bcc.n	1001e372 <quorem+0xb2>
1001e2fc:	e9cd 1500 	strd	r1, r5, [sp]
1001e300:	2200      	movs	r2, #0
1001e302:	46ac      	mov	ip, r5
1001e304:	4640      	mov	r0, r8
1001e306:	4613      	mov	r3, r2
1001e308:	f85c 1b04 	ldr.w	r1, [ip], #4
1001e30c:	6805      	ldr	r5, [r0, #0]
1001e30e:	fa1f fb81 	uxth.w	fp, r1
1001e312:	fb06 220b 	mla	r2, r6, fp, r2
1001e316:	0c09      	lsrs	r1, r1, #16
1001e318:	ea4f 4b12 	mov.w	fp, r2, lsr #16
1001e31c:	fb06 bb01 	mla	fp, r6, r1, fp
1001e320:	b292      	uxth	r2, r2
1001e322:	b2a9      	uxth	r1, r5
1001e324:	1a89      	subs	r1, r1, r2
1001e326:	4419      	add	r1, r3
1001e328:	fa1f f38b 	uxth.w	r3, fp
1001e32c:	ebc3 4321 	rsb	r3, r3, r1, asr #16
1001e330:	eb03 4315 	add.w	r3, r3, r5, lsr #16
1001e334:	b289      	uxth	r1, r1
1001e336:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
1001e33a:	4567      	cmp	r7, ip
1001e33c:	f840 1b04 	str.w	r1, [r0], #4
1001e340:	ea4f 421b 	mov.w	r2, fp, lsr #16
1001e344:	ea4f 4323 	mov.w	r3, r3, asr #16
1001e348:	d2de      	bcs.n	1001e308 <quorem+0x48>
1001e34a:	e9dd 1500 	ldrd	r1, r5, [sp]
1001e34e:	f858 3001 	ldr.w	r3, [r8, r1]
1001e352:	b973      	cbnz	r3, 1001e372 <quorem+0xb2>
1001e354:	f1aa 0a04 	sub.w	sl, sl, #4
1001e358:	45d0      	cmp	r8, sl
1001e35a:	d304      	bcc.n	1001e366 <quorem+0xa6>
1001e35c:	e007      	b.n	1001e36e <quorem+0xae>
1001e35e:	45d0      	cmp	r8, sl
1001e360:	f104 34ff 	add.w	r4, r4, #4294967295	@ 0xffffffff
1001e364:	d203      	bcs.n	1001e36e <quorem+0xae>
1001e366:	f85a 3904 	ldr.w	r3, [sl], #-4
1001e36a:	2b00      	cmp	r3, #0
1001e36c:	d0f7      	beq.n	1001e35e <quorem+0x9e>
1001e36e:	f8c9 4010 	str.w	r4, [r9, #16]
1001e372:	4671      	mov	r1, lr
1001e374:	4648      	mov	r0, r9
1001e376:	f7ff fd25 	bl	1001ddc4 <__mcmp>
1001e37a:	2800      	cmp	r0, #0
1001e37c:	db2e      	blt.n	1001e3dc <quorem+0x11c>
1001e37e:	4641      	mov	r1, r8
1001e380:	2200      	movs	r2, #0
1001e382:	f855 0b04 	ldr.w	r0, [r5], #4
1001e386:	f8d1 c000 	ldr.w	ip, [r1]
1001e38a:	fa1f fe80 	uxth.w	lr, r0
1001e38e:	fa1f f38c 	uxth.w	r3, ip
1001e392:	eba3 030e 	sub.w	r3, r3, lr
1001e396:	4413      	add	r3, r2
1001e398:	0c02      	lsrs	r2, r0, #16
1001e39a:	ebc2 4223 	rsb	r2, r2, r3, asr #16
1001e39e:	eb02 421c 	add.w	r2, r2, ip, lsr #16
1001e3a2:	b29b      	uxth	r3, r3
1001e3a4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1001e3a8:	42af      	cmp	r7, r5
1001e3aa:	f841 3b04 	str.w	r3, [r1], #4
1001e3ae:	ea4f 4222 	mov.w	r2, r2, asr #16
1001e3b2:	d2e6      	bcs.n	1001e382 <quorem+0xc2>
1001e3b4:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
1001e3b8:	eb08 0384 	add.w	r3, r8, r4, lsl #2
1001e3bc:	b96a      	cbnz	r2, 1001e3da <quorem+0x11a>
1001e3be:	3b04      	subs	r3, #4
1001e3c0:	4598      	cmp	r8, r3
1001e3c2:	d304      	bcc.n	1001e3ce <quorem+0x10e>
1001e3c4:	e007      	b.n	1001e3d6 <quorem+0x116>
1001e3c6:	4598      	cmp	r8, r3
1001e3c8:	f104 34ff 	add.w	r4, r4, #4294967295	@ 0xffffffff
1001e3cc:	d203      	bcs.n	1001e3d6 <quorem+0x116>
1001e3ce:	f853 2904 	ldr.w	r2, [r3], #-4
1001e3d2:	2a00      	cmp	r2, #0
1001e3d4:	d0f7      	beq.n	1001e3c6 <quorem+0x106>
1001e3d6:	f8c9 4010 	str.w	r4, [r9, #16]
1001e3da:	3601      	adds	r6, #1
1001e3dc:	4630      	mov	r0, r6
1001e3de:	b003      	add	sp, #12
1001e3e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001e3e4:	2000      	movs	r0, #0
1001e3e6:	b003      	add	sp, #12
1001e3e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001e3ec:	0000      	movs	r0, r0
	...

1001e3f0 <_dtoa_r>:
1001e3f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001e3f4:	6b81      	ldr	r1, [r0, #56]	@ 0x38
1001e3f6:	b09f      	sub	sp, #124	@ 0x7c
1001e3f8:	4616      	mov	r6, r2
1001e3fa:	461f      	mov	r7, r3
1001e3fc:	e9cd 6704 	strd	r6, r7, [sp, #16]
1001e400:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
1001e402:	9003      	str	r0, [sp, #12]
1001e404:	b149      	cbz	r1, 1001e41a <_dtoa_r+0x2a>
1001e406:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
1001e408:	604a      	str	r2, [r1, #4]
1001e40a:	2301      	movs	r3, #1
1001e40c:	4093      	lsls	r3, r2
1001e40e:	4604      	mov	r4, r0
1001e410:	608b      	str	r3, [r1, #8]
1001e412:	f7ff fa1d 	bl	1001d850 <_Bfree>
1001e416:	2300      	movs	r3, #0
1001e418:	63a3      	str	r3, [r4, #56]	@ 0x38
1001e41a:	f1b7 0900 	subs.w	r9, r7, #0
1001e41e:	bfb4      	ite	lt
1001e420:	2301      	movlt	r3, #1
1001e422:	2300      	movge	r3, #0
1001e424:	602b      	str	r3, [r5, #0]
1001e426:	4b76      	ldr	r3, [pc, #472]	@ (1001e600 <_dtoa_r+0x210>)
1001e428:	bfbc      	itt	lt
1001e42a:	f029 4900 	biclt.w	r9, r9, #2147483648	@ 0x80000000
1001e42e:	f8cd 9014 	strlt.w	r9, [sp, #20]
1001e432:	ea33 0309 	bics.w	r3, r3, r9
1001e436:	f000 80aa 	beq.w	1001e58e <_dtoa_r+0x19e>
1001e43a:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
1001e43e:	2200      	movs	r2, #0
1001e440:	4618      	mov	r0, r3
1001e442:	4621      	mov	r1, r4
1001e444:	2300      	movs	r3, #0
1001e446:	e9cd 0108 	strd	r0, r1, [sp, #32]
1001e44a:	f001 fdfb 	bl	10020044 <__aeabi_dcmpeq>
1001e44e:	4680      	mov	r8, r0
1001e450:	b168      	cbz	r0, 1001e46e <_dtoa_r+0x7e>
1001e452:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
1001e454:	2301      	movs	r3, #1
1001e456:	6013      	str	r3, [r2, #0]
1001e458:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
1001e45a:	b113      	cbz	r3, 1001e462 <_dtoa_r+0x72>
1001e45c:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
1001e45e:	4b69      	ldr	r3, [pc, #420]	@ (1001e604 <_dtoa_r+0x214>)
1001e460:	6013      	str	r3, [r2, #0]
1001e462:	4b69      	ldr	r3, [pc, #420]	@ (1001e608 <_dtoa_r+0x218>)
1001e464:	930a      	str	r3, [sp, #40]	@ 0x28
1001e466:	980a      	ldr	r0, [sp, #40]	@ 0x28
1001e468:	b01f      	add	sp, #124	@ 0x7c
1001e46a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001e46e:	ab1c      	add	r3, sp, #112	@ 0x70
1001e470:	9301      	str	r3, [sp, #4]
1001e472:	ab1d      	add	r3, sp, #116	@ 0x74
1001e474:	9300      	str	r3, [sp, #0]
1001e476:	9803      	ldr	r0, [sp, #12]
1001e478:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
1001e47c:	f7ff fdfa 	bl	1001e074 <__d2b>
1001e480:	ea5f 5519 	movs.w	r5, r9, lsr #20
1001e484:	4682      	mov	sl, r0
1001e486:	f040 8098 	bne.w	1001e5ba <_dtoa_r+0x1ca>
1001e48a:	e9dd 851c 	ldrd	r8, r5, [sp, #112]	@ 0x70
1001e48e:	4445      	add	r5, r8
1001e490:	f205 4332 	addw	r3, r5, #1074	@ 0x432
1001e494:	2b20      	cmp	r3, #32
1001e496:	f340 8383 	ble.w	1001eba0 <_dtoa_r+0x7b0>
1001e49a:	f1c3 0340 	rsb	r3, r3, #64	@ 0x40
1001e49e:	fa09 f903 	lsl.w	r9, r9, r3
1001e4a2:	f205 4312 	addw	r3, r5, #1042	@ 0x412
1001e4a6:	fa26 f303 	lsr.w	r3, r6, r3
1001e4aa:	ea49 0003 	orr.w	r0, r9, r3
1001e4ae:	f001 fae7 	bl	1001fa80 <__aeabi_ui2d>
1001e4b2:	2301      	movs	r3, #1
1001e4b4:	3d01      	subs	r5, #1
1001e4b6:	f1a1 71f8 	sub.w	r1, r1, #32505856	@ 0x1f00000
1001e4ba:	9311      	str	r3, [sp, #68]	@ 0x44
1001e4bc:	4b53      	ldr	r3, [pc, #332]	@ (1001e60c <_dtoa_r+0x21c>)
1001e4be:	2200      	movs	r2, #0
1001e4c0:	f001 f9a0 	bl	1001f804 <__aeabi_dsub>
1001e4c4:	a348      	add	r3, pc, #288	@ (adr r3, 1001e5e8 <_dtoa_r+0x1f8>)
1001e4c6:	e9d3 2300 	ldrd	r2, r3, [r3]
1001e4ca:	f001 fb53 	bl	1001fb74 <__aeabi_dmul>
1001e4ce:	a348      	add	r3, pc, #288	@ (adr r3, 1001e5f0 <_dtoa_r+0x200>)
1001e4d0:	e9d3 2300 	ldrd	r2, r3, [r3]
1001e4d4:	f001 f998 	bl	1001f808 <__adddf3>
1001e4d8:	4606      	mov	r6, r0
1001e4da:	4628      	mov	r0, r5
1001e4dc:	460f      	mov	r7, r1
1001e4de:	f001 fadf 	bl	1001faa0 <__aeabi_i2d>
1001e4e2:	a345      	add	r3, pc, #276	@ (adr r3, 1001e5f8 <_dtoa_r+0x208>)
1001e4e4:	e9d3 2300 	ldrd	r2, r3, [r3]
1001e4e8:	f001 fb44 	bl	1001fb74 <__aeabi_dmul>
1001e4ec:	4602      	mov	r2, r0
1001e4ee:	460b      	mov	r3, r1
1001e4f0:	4630      	mov	r0, r6
1001e4f2:	4639      	mov	r1, r7
1001e4f4:	f001 f988 	bl	1001f808 <__adddf3>
1001e4f8:	4606      	mov	r6, r0
1001e4fa:	460f      	mov	r7, r1
1001e4fc:	f001 fdea 	bl	100200d4 <__aeabi_d2iz>
1001e500:	2200      	movs	r2, #0
1001e502:	4683      	mov	fp, r0
1001e504:	2300      	movs	r3, #0
1001e506:	4630      	mov	r0, r6
1001e508:	4639      	mov	r1, r7
1001e50a:	f001 fda5 	bl	10020058 <__aeabi_dcmplt>
1001e50e:	2800      	cmp	r0, #0
1001e510:	f040 831a 	bne.w	1001eb48 <_dtoa_r+0x758>
1001e514:	eba8 0805 	sub.w	r8, r8, r5
1001e518:	f1bb 0f16 	cmp.w	fp, #22
1001e51c:	f108 34ff 	add.w	r4, r8, #4294967295	@ 0xffffffff
1001e520:	f200 818b 	bhi.w	1001e83a <_dtoa_r+0x44a>
1001e524:	4d3a      	ldr	r5, [pc, #232]	@ (1001e610 <_dtoa_r+0x220>)
1001e526:	eb05 05cb 	add.w	r5, r5, fp, lsl #3
1001e52a:	e9d5 2300 	ldrd	r2, r3, [r5]
1001e52e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
1001e532:	f001 fd91 	bl	10020058 <__aeabi_dcmplt>
1001e536:	2800      	cmp	r0, #0
1001e538:	d070      	beq.n	1001e61c <_dtoa_r+0x22c>
1001e53a:	2300      	movs	r3, #0
1001e53c:	2c00      	cmp	r4, #0
1001e53e:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
1001e542:	9310      	str	r3, [sp, #64]	@ 0x40
1001e544:	f2c0 817e 	blt.w	1001e844 <_dtoa_r+0x454>
1001e548:	2300      	movs	r3, #0
1001e54a:	930b      	str	r3, [sp, #44]	@ 0x2c
1001e54c:	f1bb 0f00 	cmp.w	fp, #0
1001e550:	da6a      	bge.n	1001e628 <_dtoa_r+0x238>
1001e552:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001e554:	eba3 030b 	sub.w	r3, r3, fp
1001e558:	930b      	str	r3, [sp, #44]	@ 0x2c
1001e55a:	f1cb 0300 	rsb	r3, fp, #0
1001e55e:	e9cd b30e 	strd	fp, r3, [sp, #56]	@ 0x38
1001e562:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
1001e564:	2b09      	cmp	r3, #9
1001e566:	f04f 0b00 	mov.w	fp, #0
1001e56a:	d865      	bhi.n	1001e638 <_dtoa_r+0x248>
1001e56c:	2b05      	cmp	r3, #5
1001e56e:	f340 831c 	ble.w	1001ebaa <_dtoa_r+0x7ba>
1001e572:	3b04      	subs	r3, #4
1001e574:	9328      	str	r3, [sp, #160]	@ 0xa0
1001e576:	2500      	movs	r5, #0
1001e578:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
1001e57a:	3b02      	subs	r3, #2
1001e57c:	2b03      	cmp	r3, #3
1001e57e:	f200 8623 	bhi.w	1001f1c8 <_dtoa_r+0xdd8>
1001e582:	e8df f013 	tbh	[pc, r3, lsl #1]
1001e586:	0460      	.short	0x0460
1001e588:	0454045d 	.word	0x0454045d
1001e58c:	0438      	.short	0x0438
1001e58e:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
1001e590:	f3c9 0913 	ubfx	r9, r9, #0, #20
1001e594:	f242 730f 	movw	r3, #9999	@ 0x270f
1001e598:	ea59 0906 	orrs.w	r9, r9, r6
1001e59c:	6013      	str	r3, [r2, #0]
1001e59e:	d11c      	bne.n	1001e5da <_dtoa_r+0x1ea>
1001e5a0:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
1001e5a2:	2b00      	cmp	r3, #0
1001e5a4:	f000 862b 	beq.w	1001f1fe <_dtoa_r+0xe0e>
1001e5a8:	4b1a      	ldr	r3, [pc, #104]	@ (1001e614 <_dtoa_r+0x224>)
1001e5aa:	930a      	str	r3, [sp, #40]	@ 0x28
1001e5ac:	3308      	adds	r3, #8
1001e5ae:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
1001e5b0:	980a      	ldr	r0, [sp, #40]	@ 0x28
1001e5b2:	6013      	str	r3, [r2, #0]
1001e5b4:	b01f      	add	sp, #124	@ 0x7c
1001e5b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001e5ba:	e9dd 1208 	ldrd	r1, r2, [sp, #32]
1001e5be:	f3c2 0313 	ubfx	r3, r2, #0, #20
1001e5c2:	4608      	mov	r0, r1
1001e5c4:	f043 517f 	orr.w	r1, r3, #1069547520	@ 0x3fc00000
1001e5c8:	f8cd 8044 	str.w	r8, [sp, #68]	@ 0x44
1001e5cc:	f2a5 35ff 	subw	r5, r5, #1023	@ 0x3ff
1001e5d0:	f8dd 8070 	ldr.w	r8, [sp, #112]	@ 0x70
1001e5d4:	f441 1140 	orr.w	r1, r1, #3145728	@ 0x300000
1001e5d8:	e770      	b.n	1001e4bc <_dtoa_r+0xcc>
1001e5da:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
1001e5dc:	2b00      	cmp	r3, #0
1001e5de:	f040 83e7 	bne.w	1001edb0 <_dtoa_r+0x9c0>
1001e5e2:	4b0d      	ldr	r3, [pc, #52]	@ (1001e618 <_dtoa_r+0x228>)
1001e5e4:	930a      	str	r3, [sp, #40]	@ 0x28
1001e5e6:	e73e      	b.n	1001e466 <_dtoa_r+0x76>
1001e5e8:	636f4361 	.word	0x636f4361
1001e5ec:	3fd287a7 	.word	0x3fd287a7
1001e5f0:	8b60c8b3 	.word	0x8b60c8b3
1001e5f4:	3fc68a28 	.word	0x3fc68a28
1001e5f8:	509f79fb 	.word	0x509f79fb
1001e5fc:	3fd34413 	.word	0x3fd34413
1001e600:	7ff00000 	.word	0x7ff00000
1001e604:	100278e9 	.word	0x100278e9
1001e608:	100278e8 	.word	0x100278e8
1001e60c:	3ff80000 	.word	0x3ff80000
1001e610:	10027a20 	.word	0x10027a20
1001e614:	10027ae8 	.word	0x10027ae8
1001e618:	10027af4 	.word	0x10027af4
1001e61c:	f1b8 0f00 	cmp.w	r8, #0
1001e620:	f340 8460 	ble.w	1001eee4 <_dtoa_r+0xaf4>
1001e624:	9010      	str	r0, [sp, #64]	@ 0x40
1001e626:	900b      	str	r0, [sp, #44]	@ 0x2c
1001e628:	2300      	movs	r3, #0
1001e62a:	930f      	str	r3, [sp, #60]	@ 0x3c
1001e62c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
1001e62e:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
1001e632:	2b09      	cmp	r3, #9
1001e634:	445c      	add	r4, fp
1001e636:	d999      	bls.n	1001e56c <_dtoa_r+0x17c>
1001e638:	2300      	movs	r3, #0
1001e63a:	e9cd 3328 	strd	r3, r3, [sp, #160]	@ 0xa0
1001e63e:	2501      	movs	r5, #1
1001e640:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001e644:	950c      	str	r5, [sp, #48]	@ 0x30
1001e646:	9306      	str	r3, [sp, #24]
1001e648:	9b03      	ldr	r3, [sp, #12]
1001e64a:	2100      	movs	r1, #0
1001e64c:	63d9      	str	r1, [r3, #60]	@ 0x3c
1001e64e:	9b06      	ldr	r3, [sp, #24]
1001e650:	9318      	str	r3, [sp, #96]	@ 0x60
1001e652:	9803      	ldr	r0, [sp, #12]
1001e654:	f7ff f8d6 	bl	1001d804 <_Balloc>
1001e658:	900a      	str	r0, [sp, #40]	@ 0x28
1001e65a:	2800      	cmp	r0, #0
1001e65c:	f000 85bd 	beq.w	1001f1da <_dtoa_r+0xdea>
1001e660:	9b03      	ldr	r3, [sp, #12]
1001e662:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001e664:	639a      	str	r2, [r3, #56]	@ 0x38
1001e666:	9b06      	ldr	r3, [sp, #24]
1001e668:	2b0e      	cmp	r3, #14
1001e66a:	f200 8115 	bhi.w	1001e898 <_dtoa_r+0x4a8>
1001e66e:	2d00      	cmp	r5, #0
1001e670:	f000 8112 	beq.w	1001e898 <_dtoa_r+0x4a8>
1001e674:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
1001e676:	2a00      	cmp	r2, #0
1001e678:	f340 843b 	ble.w	1001eef2 <_dtoa_r+0xb02>
1001e67c:	4db2      	ldr	r5, [pc, #712]	@ (1001e948 <_dtoa_r+0x558>)
1001e67e:	f002 030f 	and.w	r3, r2, #15
1001e682:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
1001e686:	e9d3 8900 	ldrd	r8, r9, [r3]
1001e68a:	4613      	mov	r3, r2
1001e68c:	1115      	asrs	r5, r2, #4
1001e68e:	05da      	lsls	r2, r3, #23
1001e690:	f140 83fa 	bpl.w	1001ee88 <_dtoa_r+0xa98>
1001e694:	4bad      	ldr	r3, [pc, #692]	@ (1001e94c <_dtoa_r+0x55c>)
1001e696:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
1001e69a:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
1001e69e:	f001 fb93 	bl	1001fdc8 <__aeabi_ddiv>
1001e6a2:	e9cd 0112 	strd	r0, r1, [sp, #72]	@ 0x48
1001e6a6:	f005 050f 	and.w	r5, r5, #15
1001e6aa:	2703      	movs	r7, #3
1001e6ac:	b17d      	cbz	r5, 1001e6ce <_dtoa_r+0x2de>
1001e6ae:	4ea7      	ldr	r6, [pc, #668]	@ (1001e94c <_dtoa_r+0x55c>)
1001e6b0:	07eb      	lsls	r3, r5, #31
1001e6b2:	d508      	bpl.n	1001e6c6 <_dtoa_r+0x2d6>
1001e6b4:	4640      	mov	r0, r8
1001e6b6:	4649      	mov	r1, r9
1001e6b8:	e9d6 2300 	ldrd	r2, r3, [r6]
1001e6bc:	f001 fa5a 	bl	1001fb74 <__aeabi_dmul>
1001e6c0:	3701      	adds	r7, #1
1001e6c2:	4680      	mov	r8, r0
1001e6c4:	4689      	mov	r9, r1
1001e6c6:	106d      	asrs	r5, r5, #1
1001e6c8:	f106 0608 	add.w	r6, r6, #8
1001e6cc:	d1f0      	bne.n	1001e6b0 <_dtoa_r+0x2c0>
1001e6ce:	4642      	mov	r2, r8
1001e6d0:	464b      	mov	r3, r9
1001e6d2:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	@ 0x48
1001e6d6:	f001 fb77 	bl	1001fdc8 <__aeabi_ddiv>
1001e6da:	4680      	mov	r8, r0
1001e6dc:	4689      	mov	r9, r1
1001e6de:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001e6e0:	b143      	cbz	r3, 1001e6f4 <_dtoa_r+0x304>
1001e6e2:	4b9b      	ldr	r3, [pc, #620]	@ (1001e950 <_dtoa_r+0x560>)
1001e6e4:	2200      	movs	r2, #0
1001e6e6:	4640      	mov	r0, r8
1001e6e8:	4649      	mov	r1, r9
1001e6ea:	f001 fcb5 	bl	10020058 <__aeabi_dcmplt>
1001e6ee:	2800      	cmp	r0, #0
1001e6f0:	f040 84f1 	bne.w	1001f0d6 <_dtoa_r+0xce6>
1001e6f4:	4638      	mov	r0, r7
1001e6f6:	f001 f9d3 	bl	1001faa0 <__aeabi_i2d>
1001e6fa:	4642      	mov	r2, r8
1001e6fc:	464b      	mov	r3, r9
1001e6fe:	f001 fa39 	bl	1001fb74 <__aeabi_dmul>
1001e702:	4b94      	ldr	r3, [pc, #592]	@ (1001e954 <_dtoa_r+0x564>)
1001e704:	2200      	movs	r2, #0
1001e706:	f001 f87f 	bl	1001f808 <__adddf3>
1001e70a:	9b06      	ldr	r3, [sp, #24]
1001e70c:	4606      	mov	r6, r0
1001e70e:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
1001e712:	2b00      	cmp	r3, #0
1001e714:	f000 80a9 	beq.w	1001e86a <_dtoa_r+0x47a>
1001e718:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001e71a:	9319      	str	r3, [sp, #100]	@ 0x64
1001e71c:	9b06      	ldr	r3, [sp, #24]
1001e71e:	9312      	str	r3, [sp, #72]	@ 0x48
1001e720:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001e722:	4d89      	ldr	r5, [pc, #548]	@ (1001e948 <_dtoa_r+0x558>)
1001e724:	4649      	mov	r1, r9
1001e726:	4640      	mov	r0, r8
1001e728:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
1001e72c:	1c5e      	adds	r6, r3, #1
1001e72e:	f001 fcd1 	bl	100200d4 <__aeabi_d2iz>
1001e732:	9912      	ldr	r1, [sp, #72]	@ 0x48
1001e734:	eb05 03c1 	add.w	r3, r5, r1, lsl #3
1001e738:	e953 1202 	ldrd	r1, r2, [r3, #-8]
1001e73c:	4607      	mov	r7, r0
1001e73e:	e9cd 1216 	strd	r1, r2, [sp, #88]	@ 0x58
1001e742:	f001 f9ad 	bl	1001faa0 <__aeabi_i2d>
1001e746:	4602      	mov	r2, r0
1001e748:	460b      	mov	r3, r1
1001e74a:	4640      	mov	r0, r8
1001e74c:	4649      	mov	r1, r9
1001e74e:	f001 f859 	bl	1001f804 <__aeabi_dsub>
1001e752:	4689      	mov	r9, r1
1001e754:	990c      	ldr	r1, [sp, #48]	@ 0x30
1001e756:	3730      	adds	r7, #48	@ 0x30
1001e758:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	@ 0x58
1001e75c:	4680      	mov	r8, r0
1001e75e:	b2ff      	uxtb	r7, r7
1001e760:	2900      	cmp	r1, #0
1001e762:	f000 8453 	beq.w	1001f00c <_dtoa_r+0xc1c>
1001e766:	497c      	ldr	r1, [pc, #496]	@ (1001e958 <_dtoa_r+0x568>)
1001e768:	2000      	movs	r0, #0
1001e76a:	f001 fb2d 	bl	1001fdc8 <__aeabi_ddiv>
1001e76e:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
1001e772:	f001 f847 	bl	1001f804 <__aeabi_dsub>
1001e776:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
1001e778:	4602      	mov	r2, r0
1001e77a:	460b      	mov	r3, r1
1001e77c:	e9cd 2314 	strd	r2, r3, [sp, #80]	@ 0x50
1001e780:	702f      	strb	r7, [r5, #0]
1001e782:	4642      	mov	r2, r8
1001e784:	464b      	mov	r3, r9
1001e786:	f001 fc85 	bl	10020094 <__aeabi_dcmpgt>
1001e78a:	2800      	cmp	r0, #0
1001e78c:	f040 8497 	bne.w	1001f0be <_dtoa_r+0xcce>
1001e790:	e9cd b41a 	strd	fp, r4, [sp, #104]	@ 0x68
1001e794:	f8cd a058 	str.w	sl, [sp, #88]	@ 0x58
1001e798:	9d12      	ldr	r5, [sp, #72]	@ 0x48
1001e79a:	e9dd ab14 	ldrd	sl, fp, [sp, #80]	@ 0x50
1001e79e:	2700      	movs	r7, #0
1001e7a0:	e02a      	b.n	1001e7f8 <_dtoa_r+0x408>
1001e7a2:	3701      	adds	r7, #1
1001e7a4:	42af      	cmp	r7, r5
1001e7a6:	f280 84de 	bge.w	1001f166 <_dtoa_r+0xd76>
1001e7aa:	4b6c      	ldr	r3, [pc, #432]	@ (1001e95c <_dtoa_r+0x56c>)
1001e7ac:	4650      	mov	r0, sl
1001e7ae:	4659      	mov	r1, fp
1001e7b0:	2200      	movs	r2, #0
1001e7b2:	f001 f9df 	bl	1001fb74 <__aeabi_dmul>
1001e7b6:	4b69      	ldr	r3, [pc, #420]	@ (1001e95c <_dtoa_r+0x56c>)
1001e7b8:	2200      	movs	r2, #0
1001e7ba:	4682      	mov	sl, r0
1001e7bc:	468b      	mov	fp, r1
1001e7be:	4640      	mov	r0, r8
1001e7c0:	4649      	mov	r1, r9
1001e7c2:	f001 f9d7 	bl	1001fb74 <__aeabi_dmul>
1001e7c6:	4689      	mov	r9, r1
1001e7c8:	4680      	mov	r8, r0
1001e7ca:	f001 fc83 	bl	100200d4 <__aeabi_d2iz>
1001e7ce:	4604      	mov	r4, r0
1001e7d0:	f001 f966 	bl	1001faa0 <__aeabi_i2d>
1001e7d4:	4602      	mov	r2, r0
1001e7d6:	460b      	mov	r3, r1
1001e7d8:	4640      	mov	r0, r8
1001e7da:	4649      	mov	r1, r9
1001e7dc:	f001 f812 	bl	1001f804 <__aeabi_dsub>
1001e7e0:	3430      	adds	r4, #48	@ 0x30
1001e7e2:	f806 4b01 	strb.w	r4, [r6], #1
1001e7e6:	4652      	mov	r2, sl
1001e7e8:	465b      	mov	r3, fp
1001e7ea:	4680      	mov	r8, r0
1001e7ec:	4689      	mov	r9, r1
1001e7ee:	f001 fc33 	bl	10020058 <__aeabi_dcmplt>
1001e7f2:	2800      	cmp	r0, #0
1001e7f4:	f040 84b4 	bne.w	1001f160 <_dtoa_r+0xd70>
1001e7f8:	4642      	mov	r2, r8
1001e7fa:	464b      	mov	r3, r9
1001e7fc:	4954      	ldr	r1, [pc, #336]	@ (1001e950 <_dtoa_r+0x560>)
1001e7fe:	2000      	movs	r0, #0
1001e800:	f001 f800 	bl	1001f804 <__aeabi_dsub>
1001e804:	4652      	mov	r2, sl
1001e806:	465b      	mov	r3, fp
1001e808:	f001 fc26 	bl	10020058 <__aeabi_dcmplt>
1001e80c:	2800      	cmp	r0, #0
1001e80e:	d0c8      	beq.n	1001e7a2 <_dtoa_r+0x3b2>
1001e810:	9b19      	ldr	r3, [sp, #100]	@ 0x64
1001e812:	f8dd a058 	ldr.w	sl, [sp, #88]	@ 0x58
1001e816:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001e818:	4637      	mov	r7, r6
1001e81a:	f103 0801 	add.w	r8, r3, #1
1001e81e:	e002      	b.n	1001e826 <_dtoa_r+0x436>
1001e820:	4297      	cmp	r7, r2
1001e822:	f000 847c 	beq.w	1001f11e <_dtoa_r+0xd2e>
1001e826:	463e      	mov	r6, r7
1001e828:	f817 3d01 	ldrb.w	r3, [r7, #-1]!
1001e82c:	2b39      	cmp	r3, #57	@ 0x39
1001e82e:	d0f7      	beq.n	1001e820 <_dtoa_r+0x430>
1001e830:	3301      	adds	r3, #1
1001e832:	b2db      	uxtb	r3, r3
1001e834:	703b      	strb	r3, [r7, #0]
1001e836:	4645      	mov	r5, r8
1001e838:	e175      	b.n	1001eb26 <_dtoa_r+0x736>
1001e83a:	2301      	movs	r3, #1
1001e83c:	2c00      	cmp	r4, #0
1001e83e:	9310      	str	r3, [sp, #64]	@ 0x40
1001e840:	f6bf ae82 	bge.w	1001e548 <_dtoa_r+0x158>
1001e844:	f1c8 0301 	rsb	r3, r8, #1
1001e848:	930b      	str	r3, [sp, #44]	@ 0x2c
1001e84a:	2400      	movs	r4, #0
1001e84c:	e67e      	b.n	1001e54c <_dtoa_r+0x15c>
1001e84e:	4638      	mov	r0, r7
1001e850:	f001 f926 	bl	1001faa0 <__aeabi_i2d>
1001e854:	4642      	mov	r2, r8
1001e856:	464b      	mov	r3, r9
1001e858:	f001 f98c 	bl	1001fb74 <__aeabi_dmul>
1001e85c:	4b3d      	ldr	r3, [pc, #244]	@ (1001e954 <_dtoa_r+0x564>)
1001e85e:	2200      	movs	r2, #0
1001e860:	f000 ffd2 	bl	1001f808 <__adddf3>
1001e864:	4606      	mov	r6, r0
1001e866:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
1001e86a:	4b3d      	ldr	r3, [pc, #244]	@ (1001e960 <_dtoa_r+0x570>)
1001e86c:	4640      	mov	r0, r8
1001e86e:	4649      	mov	r1, r9
1001e870:	2200      	movs	r2, #0
1001e872:	f000 ffc7 	bl	1001f804 <__aeabi_dsub>
1001e876:	4632      	mov	r2, r6
1001e878:	463b      	mov	r3, r7
1001e87a:	4680      	mov	r8, r0
1001e87c:	4689      	mov	r9, r1
1001e87e:	f001 fc09 	bl	10020094 <__aeabi_dcmpgt>
1001e882:	2800      	cmp	r0, #0
1001e884:	f040 845a 	bne.w	1001f13c <_dtoa_r+0xd4c>
1001e888:	4640      	mov	r0, r8
1001e88a:	4649      	mov	r1, r9
1001e88c:	4632      	mov	r2, r6
1001e88e:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
1001e892:	f001 fbe1 	bl	10020058 <__aeabi_dcmplt>
1001e896:	bb28      	cbnz	r0, 1001e8e4 <_dtoa_r+0x4f4>
1001e898:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
1001e89a:	2b00      	cmp	r3, #0
1001e89c:	f2c0 8092 	blt.w	1001e9c4 <_dtoa_r+0x5d4>
1001e8a0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
1001e8a2:	2a0e      	cmp	r2, #14
1001e8a4:	f300 808e 	bgt.w	1001e9c4 <_dtoa_r+0x5d4>
1001e8a8:	4d27      	ldr	r5, [pc, #156]	@ (1001e948 <_dtoa_r+0x558>)
1001e8aa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001e8ac:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
1001e8b0:	e9d5 3400 	ldrd	r3, r4, [r5]
1001e8b4:	e9cd 3404 	strd	r3, r4, [sp, #16]
1001e8b8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
1001e8ba:	2b00      	cmp	r3, #0
1001e8bc:	da19      	bge.n	1001e8f2 <_dtoa_r+0x502>
1001e8be:	9b06      	ldr	r3, [sp, #24]
1001e8c0:	2b00      	cmp	r3, #0
1001e8c2:	dc16      	bgt.n	1001e8f2 <_dtoa_r+0x502>
1001e8c4:	d10e      	bne.n	1001e8e4 <_dtoa_r+0x4f4>
1001e8c6:	4b26      	ldr	r3, [pc, #152]	@ (1001e960 <_dtoa_r+0x570>)
1001e8c8:	2200      	movs	r2, #0
1001e8ca:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001e8ce:	f001 f951 	bl	1001fb74 <__aeabi_dmul>
1001e8d2:	4602      	mov	r2, r0
1001e8d4:	460b      	mov	r3, r1
1001e8d6:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
1001e8da:	f001 fbc7 	bl	1002006c <__aeabi_dcmple>
1001e8de:	2800      	cmp	r0, #0
1001e8e0:	f000 842c 	beq.w	1001f13c <_dtoa_r+0xd4c>
1001e8e4:	f04f 0900 	mov.w	r9, #0
1001e8e8:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
1001e8ea:	464f      	mov	r7, r9
1001e8ec:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
1001e8ee:	43dd      	mvns	r5, r3
1001e8f0:	e225      	b.n	1001ed3e <_dtoa_r+0x94e>
1001e8f2:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
1001e8f6:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
1001e8fa:	4622      	mov	r2, r4
1001e8fc:	462b      	mov	r3, r5
1001e8fe:	4640      	mov	r0, r8
1001e900:	4649      	mov	r1, r9
1001e902:	f001 fa61 	bl	1001fdc8 <__aeabi_ddiv>
1001e906:	f001 fbe5 	bl	100200d4 <__aeabi_d2iz>
1001e90a:	4606      	mov	r6, r0
1001e90c:	f001 f8c8 	bl	1001faa0 <__aeabi_i2d>
1001e910:	4622      	mov	r2, r4
1001e912:	462b      	mov	r3, r5
1001e914:	f001 f92e 	bl	1001fb74 <__aeabi_dmul>
1001e918:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
1001e91a:	460b      	mov	r3, r1
1001e91c:	4602      	mov	r2, r0
1001e91e:	4649      	mov	r1, r9
1001e920:	4640      	mov	r0, r8
1001e922:	f000 ff6f 	bl	1001f804 <__aeabi_dsub>
1001e926:	f106 0330 	add.w	r3, r6, #48	@ 0x30
1001e92a:	f807 3b01 	strb.w	r3, [r7], #1
1001e92e:	9b06      	ldr	r3, [sp, #24]
1001e930:	2b01      	cmp	r3, #1
1001e932:	f000 8312 	beq.w	1001ef5a <_dtoa_r+0xb6a>
1001e936:	2501      	movs	r5, #1
1001e938:	f8cd a018 	str.w	sl, [sp, #24]
1001e93c:	4699      	mov	r9, r3
1001e93e:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
1001e942:	46a8      	mov	r8, r5
1001e944:	e02c      	b.n	1001e9a0 <_dtoa_r+0x5b0>
1001e946:	bf00      	nop
1001e948:	10027a20 	.word	0x10027a20
1001e94c:	100279f8 	.word	0x100279f8
1001e950:	3ff00000 	.word	0x3ff00000
1001e954:	401c0000 	.word	0x401c0000
1001e958:	3fe00000 	.word	0x3fe00000
1001e95c:	40240000 	.word	0x40240000
1001e960:	40140000 	.word	0x40140000
1001e964:	4652      	mov	r2, sl
1001e966:	465b      	mov	r3, fp
1001e968:	4620      	mov	r0, r4
1001e96a:	4629      	mov	r1, r5
1001e96c:	f001 fa2c 	bl	1001fdc8 <__aeabi_ddiv>
1001e970:	f001 fbb0 	bl	100200d4 <__aeabi_d2iz>
1001e974:	4606      	mov	r6, r0
1001e976:	f001 f893 	bl	1001faa0 <__aeabi_i2d>
1001e97a:	4652      	mov	r2, sl
1001e97c:	465b      	mov	r3, fp
1001e97e:	f001 f8f9 	bl	1001fb74 <__aeabi_dmul>
1001e982:	f108 0801 	add.w	r8, r8, #1
1001e986:	460b      	mov	r3, r1
1001e988:	4602      	mov	r2, r0
1001e98a:	4629      	mov	r1, r5
1001e98c:	4620      	mov	r0, r4
1001e98e:	f000 ff39 	bl	1001f804 <__aeabi_dsub>
1001e992:	f106 0330 	add.w	r3, r6, #48	@ 0x30
1001e996:	45c8      	cmp	r8, r9
1001e998:	f807 3b01 	strb.w	r3, [r7], #1
1001e99c:	f000 82db 	beq.w	1001ef56 <_dtoa_r+0xb66>
1001e9a0:	4bb9      	ldr	r3, [pc, #740]	@ (1001ec88 <_dtoa_r+0x898>)
1001e9a2:	2200      	movs	r2, #0
1001e9a4:	f001 f8e6 	bl	1001fb74 <__aeabi_dmul>
1001e9a8:	2200      	movs	r2, #0
1001e9aa:	2300      	movs	r3, #0
1001e9ac:	4604      	mov	r4, r0
1001e9ae:	460d      	mov	r5, r1
1001e9b0:	f001 fb48 	bl	10020044 <__aeabi_dcmpeq>
1001e9b4:	2800      	cmp	r0, #0
1001e9b6:	d0d5      	beq.n	1001e964 <_dtoa_r+0x574>
1001e9b8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
1001e9ba:	f8dd a018 	ldr.w	sl, [sp, #24]
1001e9be:	3501      	adds	r5, #1
1001e9c0:	463e      	mov	r6, r7
1001e9c2:	e0b0      	b.n	1001eb26 <_dtoa_r+0x736>
1001e9c4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
1001e9c6:	2a00      	cmp	r2, #0
1001e9c8:	f040 80d2 	bne.w	1001eb70 <_dtoa_r+0x780>
1001e9cc:	2300      	movs	r3, #0
1001e9ce:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
1001e9d0:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
1001e9d2:	930c      	str	r3, [sp, #48]	@ 0x30
1001e9d4:	461f      	mov	r7, r3
1001e9d6:	b156      	cbz	r6, 1001e9ee <_dtoa_r+0x5fe>
1001e9d8:	2c00      	cmp	r4, #0
1001e9da:	dd08      	ble.n	1001e9ee <_dtoa_r+0x5fe>
1001e9dc:	42a6      	cmp	r6, r4
1001e9de:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
1001e9e0:	4633      	mov	r3, r6
1001e9e2:	bfa8      	it	ge
1001e9e4:	4623      	movge	r3, r4
1001e9e6:	1ad2      	subs	r2, r2, r3
1001e9e8:	920b      	str	r2, [sp, #44]	@ 0x2c
1001e9ea:	1af6      	subs	r6, r6, r3
1001e9ec:	1ae4      	subs	r4, r4, r3
1001e9ee:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001e9f0:	b153      	cbz	r3, 1001ea08 <_dtoa_r+0x618>
1001e9f2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001e9f4:	b113      	cbz	r3, 1001e9fc <_dtoa_r+0x60c>
1001e9f6:	2d00      	cmp	r5, #0
1001e9f8:	f040 82e8 	bne.w	1001efcc <_dtoa_r+0xbdc>
1001e9fc:	4651      	mov	r1, sl
1001e9fe:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
1001ea00:	9803      	ldr	r0, [sp, #12]
1001ea02:	f7ff f90d 	bl	1001dc20 <__pow5mult>
1001ea06:	4682      	mov	sl, r0
1001ea08:	9803      	ldr	r0, [sp, #12]
1001ea0a:	2101      	movs	r1, #1
1001ea0c:	f7ff f824 	bl	1001da58 <__i2b>
1001ea10:	4681      	mov	r9, r0
1001ea12:	f1bb 0f00 	cmp.w	fp, #0
1001ea16:	f040 81b6 	bne.w	1001ed86 <_dtoa_r+0x996>
1001ea1a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
1001ea1c:	2b01      	cmp	r3, #1
1001ea1e:	f340 81cc 	ble.w	1001edba <_dtoa_r+0x9ca>
1001ea22:	2001      	movs	r0, #1
1001ea24:	4420      	add	r0, r4
1001ea26:	f010 001f 	ands.w	r0, r0, #31
1001ea2a:	f000 809a 	beq.w	1001eb62 <_dtoa_r+0x772>
1001ea2e:	f1c0 0320 	rsb	r3, r0, #32
1001ea32:	2b04      	cmp	r3, #4
1001ea34:	f340 81da 	ble.w	1001edec <_dtoa_r+0x9fc>
1001ea38:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001ea3a:	f1c0 001c 	rsb	r0, r0, #28
1001ea3e:	4403      	add	r3, r0
1001ea40:	930b      	str	r3, [sp, #44]	@ 0x2c
1001ea42:	4406      	add	r6, r0
1001ea44:	4404      	add	r4, r0
1001ea46:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001ea48:	2b00      	cmp	r3, #0
1001ea4a:	dd05      	ble.n	1001ea58 <_dtoa_r+0x668>
1001ea4c:	4651      	mov	r1, sl
1001ea4e:	9803      	ldr	r0, [sp, #12]
1001ea50:	461a      	mov	r2, r3
1001ea52:	f7ff f93f 	bl	1001dcd4 <__lshift>
1001ea56:	4682      	mov	sl, r0
1001ea58:	2c00      	cmp	r4, #0
1001ea5a:	dd05      	ble.n	1001ea68 <_dtoa_r+0x678>
1001ea5c:	4649      	mov	r1, r9
1001ea5e:	9803      	ldr	r0, [sp, #12]
1001ea60:	4622      	mov	r2, r4
1001ea62:	f7ff f937 	bl	1001dcd4 <__lshift>
1001ea66:	4681      	mov	r9, r0
1001ea68:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001ea6a:	2b00      	cmp	r3, #0
1001ea6c:	f040 8170 	bne.w	1001ed50 <_dtoa_r+0x960>
1001ea70:	9b06      	ldr	r3, [sp, #24]
1001ea72:	2b00      	cmp	r3, #0
1001ea74:	f340 8148 	ble.w	1001ed08 <_dtoa_r+0x918>
1001ea78:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001ea7a:	2b00      	cmp	r3, #0
1001ea7c:	f040 80a4 	bne.w	1001ebc8 <_dtoa_r+0x7d8>
1001ea80:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
1001ea82:	3501      	adds	r5, #1
1001ea84:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
1001ea88:	9c06      	ldr	r4, [sp, #24]
1001ea8a:	f8dd b00c 	ldr.w	fp, [sp, #12]
1001ea8e:	2601      	movs	r6, #1
1001ea90:	e007      	b.n	1001eaa2 <_dtoa_r+0x6b2>
1001ea92:	4651      	mov	r1, sl
1001ea94:	2300      	movs	r3, #0
1001ea96:	220a      	movs	r2, #10
1001ea98:	4658      	mov	r0, fp
1001ea9a:	f7fe fee3 	bl	1001d864 <__multadd>
1001ea9e:	3601      	adds	r6, #1
1001eaa0:	4682      	mov	sl, r0
1001eaa2:	4649      	mov	r1, r9
1001eaa4:	4650      	mov	r0, sl
1001eaa6:	f7ff fc0b 	bl	1001e2c0 <quorem>
1001eaaa:	42a6      	cmp	r6, r4
1001eaac:	f100 0330 	add.w	r3, r0, #48	@ 0x30
1001eab0:	f808 3b01 	strb.w	r3, [r8], #1
1001eab4:	dbed      	blt.n	1001ea92 <_dtoa_r+0x6a2>
1001eab6:	9a06      	ldr	r2, [sp, #24]
1001eab8:	2a00      	cmp	r2, #0
1001eaba:	bfc8      	it	gt
1001eabc:	4616      	movgt	r6, r2
1001eabe:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001eac0:	bfd8      	it	le
1001eac2:	2601      	movle	r6, #1
1001eac4:	eb02 0b06 	add.w	fp, r2, r6
1001eac8:	2400      	movs	r4, #0
1001eaca:	4651      	mov	r1, sl
1001eacc:	2201      	movs	r2, #1
1001eace:	9803      	ldr	r0, [sp, #12]
1001ead0:	9304      	str	r3, [sp, #16]
1001ead2:	f7ff f8ff 	bl	1001dcd4 <__lshift>
1001ead6:	4649      	mov	r1, r9
1001ead8:	4682      	mov	sl, r0
1001eada:	f7ff f973 	bl	1001ddc4 <__mcmp>
1001eade:	2800      	cmp	r0, #0
1001eae0:	f340 81e3 	ble.w	1001eeaa <_dtoa_r+0xaba>
1001eae4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001eae6:	e002      	b.n	1001eaee <_dtoa_r+0x6fe>
1001eae8:	455a      	cmp	r2, fp
1001eaea:	f000 81e9 	beq.w	1001eec0 <_dtoa_r+0xad0>
1001eaee:	465e      	mov	r6, fp
1001eaf0:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
1001eaf4:	f816 3c01 	ldrb.w	r3, [r6, #-1]
1001eaf8:	2b39      	cmp	r3, #57	@ 0x39
1001eafa:	d0f5      	beq.n	1001eae8 <_dtoa_r+0x6f8>
1001eafc:	3301      	adds	r3, #1
1001eafe:	f88b 3000 	strb.w	r3, [fp]
1001eb02:	f8dd 800c 	ldr.w	r8, [sp, #12]
1001eb06:	4649      	mov	r1, r9
1001eb08:	4640      	mov	r0, r8
1001eb0a:	f7fe fea1 	bl	1001d850 <_Bfree>
1001eb0e:	b157      	cbz	r7, 1001eb26 <_dtoa_r+0x736>
1001eb10:	b12c      	cbz	r4, 1001eb1e <_dtoa_r+0x72e>
1001eb12:	42bc      	cmp	r4, r7
1001eb14:	d003      	beq.n	1001eb1e <_dtoa_r+0x72e>
1001eb16:	4621      	mov	r1, r4
1001eb18:	4640      	mov	r0, r8
1001eb1a:	f7fe fe99 	bl	1001d850 <_Bfree>
1001eb1e:	9803      	ldr	r0, [sp, #12]
1001eb20:	4639      	mov	r1, r7
1001eb22:	f7fe fe95 	bl	1001d850 <_Bfree>
1001eb26:	9803      	ldr	r0, [sp, #12]
1001eb28:	4651      	mov	r1, sl
1001eb2a:	f7fe fe91 	bl	1001d850 <_Bfree>
1001eb2e:	2300      	movs	r3, #0
1001eb30:	7033      	strb	r3, [r6, #0]
1001eb32:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
1001eb34:	601d      	str	r5, [r3, #0]
1001eb36:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
1001eb38:	2b00      	cmp	r3, #0
1001eb3a:	f43f ac94 	beq.w	1001e466 <_dtoa_r+0x76>
1001eb3e:	980a      	ldr	r0, [sp, #40]	@ 0x28
1001eb40:	601e      	str	r6, [r3, #0]
1001eb42:	b01f      	add	sp, #124	@ 0x7c
1001eb44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001eb48:	4658      	mov	r0, fp
1001eb4a:	f000 ffa9 	bl	1001faa0 <__aeabi_i2d>
1001eb4e:	4632      	mov	r2, r6
1001eb50:	463b      	mov	r3, r7
1001eb52:	f001 fa77 	bl	10020044 <__aeabi_dcmpeq>
1001eb56:	2800      	cmp	r0, #0
1001eb58:	f47f acdc 	bne.w	1001e514 <_dtoa_r+0x124>
1001eb5c:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
1001eb60:	e4d8      	b.n	1001e514 <_dtoa_r+0x124>
1001eb62:	231c      	movs	r3, #28
1001eb64:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
1001eb66:	441a      	add	r2, r3
1001eb68:	920b      	str	r2, [sp, #44]	@ 0x2c
1001eb6a:	441e      	add	r6, r3
1001eb6c:	441c      	add	r4, r3
1001eb6e:	e76a      	b.n	1001ea46 <_dtoa_r+0x656>
1001eb70:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
1001eb72:	2a01      	cmp	r2, #1
1001eb74:	f340 81a9 	ble.w	1001eeca <_dtoa_r+0xada>
1001eb78:	9a06      	ldr	r2, [sp, #24]
1001eb7a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001eb7c:	1e55      	subs	r5, r2, #1
1001eb7e:	42ab      	cmp	r3, r5
1001eb80:	f2c0 816b 	blt.w	1001ee5a <_dtoa_r+0xa6a>
1001eb84:	2a00      	cmp	r2, #0
1001eb86:	eba3 0505 	sub.w	r5, r3, r5
1001eb8a:	f280 82dd 	bge.w	1001f148 <_dtoa_r+0xd58>
1001eb8e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001eb90:	9a06      	ldr	r2, [sp, #24]
1001eb92:	1a9e      	subs	r6, r3, r2
1001eb94:	9803      	ldr	r0, [sp, #12]
1001eb96:	2101      	movs	r1, #1
1001eb98:	f7fe ff5e 	bl	1001da58 <__i2b>
1001eb9c:	4607      	mov	r7, r0
1001eb9e:	e71a      	b.n	1001e9d6 <_dtoa_r+0x5e6>
1001eba0:	f1c3 0320 	rsb	r3, r3, #32
1001eba4:	fa06 f003 	lsl.w	r0, r6, r3
1001eba8:	e481      	b.n	1001e4ae <_dtoa_r+0xbe>
1001ebaa:	2501      	movs	r5, #1
1001ebac:	e4e4      	b.n	1001e578 <_dtoa_r+0x188>
1001ebae:	4639      	mov	r1, r7
1001ebb0:	2300      	movs	r3, #0
1001ebb2:	9803      	ldr	r0, [sp, #12]
1001ebb4:	220a      	movs	r2, #10
1001ebb6:	f7fe fe55 	bl	1001d864 <__multadd>
1001ebba:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001ebbc:	2b00      	cmp	r3, #0
1001ebbe:	4607      	mov	r7, r0
1001ebc0:	f340 82ef 	ble.w	1001f1a2 <_dtoa_r+0xdb2>
1001ebc4:	950e      	str	r5, [sp, #56]	@ 0x38
1001ebc6:	9306      	str	r3, [sp, #24]
1001ebc8:	2e00      	cmp	r6, #0
1001ebca:	f300 813f 	bgt.w	1001ee4c <_dtoa_r+0xa5c>
1001ebce:	f1bb 0f00 	cmp.w	fp, #0
1001ebd2:	f040 81df 	bne.w	1001ef94 <_dtoa_r+0xba4>
1001ebd6:	46b8      	mov	r8, r7
1001ebd8:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
1001ebda:	9c06      	ldr	r4, [sp, #24]
1001ebdc:	1e73      	subs	r3, r6, #1
1001ebde:	441c      	add	r4, r3
1001ebe0:	9b04      	ldr	r3, [sp, #16]
1001ebe2:	940c      	str	r4, [sp, #48]	@ 0x30
1001ebe4:	f003 0301 	and.w	r3, r3, #1
1001ebe8:	9c03      	ldr	r4, [sp, #12]
1001ebea:	930f      	str	r3, [sp, #60]	@ 0x3c
1001ebec:	4649      	mov	r1, r9
1001ebee:	4650      	mov	r0, sl
1001ebf0:	f7ff fb66 	bl	1001e2c0 <quorem>
1001ebf4:	4639      	mov	r1, r7
1001ebf6:	4683      	mov	fp, r0
1001ebf8:	4650      	mov	r0, sl
1001ebfa:	f7ff f8e3 	bl	1001ddc4 <__mcmp>
1001ebfe:	4642      	mov	r2, r8
1001ec00:	4649      	mov	r1, r9
1001ec02:	4605      	mov	r5, r0
1001ec04:	4620      	mov	r0, r4
1001ec06:	f7ff f8fd 	bl	1001de04 <__mdiff>
1001ec0a:	68c2      	ldr	r2, [r0, #12]
1001ec0c:	4601      	mov	r1, r0
1001ec0e:	f10b 0330 	add.w	r3, fp, #48	@ 0x30
1001ec12:	2a00      	cmp	r2, #0
1001ec14:	d13a      	bne.n	1001ec8c <_dtoa_r+0x89c>
1001ec16:	9008      	str	r0, [sp, #32]
1001ec18:	4650      	mov	r0, sl
1001ec1a:	930b      	str	r3, [sp, #44]	@ 0x2c
1001ec1c:	f7ff f8d2 	bl	1001ddc4 <__mcmp>
1001ec20:	9908      	ldr	r1, [sp, #32]
1001ec22:	9006      	str	r0, [sp, #24]
1001ec24:	4620      	mov	r0, r4
1001ec26:	f7fe fe13 	bl	1001d850 <_Bfree>
1001ec2a:	9a06      	ldr	r2, [sp, #24]
1001ec2c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001ec2e:	2a00      	cmp	r2, #0
1001ec30:	d15a      	bne.n	1001ece8 <_dtoa_r+0x8f8>
1001ec32:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
1001ec34:	b91a      	cbnz	r2, 1001ec3e <_dtoa_r+0x84e>
1001ec36:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
1001ec38:	2a00      	cmp	r2, #0
1001ec3a:	f000 829a 	beq.w	1001f172 <_dtoa_r+0xd82>
1001ec3e:	2d00      	cmp	r5, #0
1001ec40:	db45      	blt.n	1001ecce <_dtoa_r+0x8de>
1001ec42:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
1001ec44:	46b3      	mov	fp, r6
1001ec46:	42b2      	cmp	r2, r6
1001ec48:	f80b 3b01 	strb.w	r3, [fp], #1
1001ec4c:	f000 81b9 	beq.w	1001efc2 <_dtoa_r+0xbd2>
1001ec50:	4651      	mov	r1, sl
1001ec52:	2300      	movs	r3, #0
1001ec54:	220a      	movs	r2, #10
1001ec56:	4620      	mov	r0, r4
1001ec58:	f7fe fe04 	bl	1001d864 <__multadd>
1001ec5c:	4547      	cmp	r7, r8
1001ec5e:	4682      	mov	sl, r0
1001ec60:	4639      	mov	r1, r7
1001ec62:	f04f 0300 	mov.w	r3, #0
1001ec66:	f04f 020a 	mov.w	r2, #10
1001ec6a:	4620      	mov	r0, r4
1001ec6c:	d036      	beq.n	1001ecdc <_dtoa_r+0x8ec>
1001ec6e:	f7fe fdf9 	bl	1001d864 <__multadd>
1001ec72:	4641      	mov	r1, r8
1001ec74:	4607      	mov	r7, r0
1001ec76:	2300      	movs	r3, #0
1001ec78:	220a      	movs	r2, #10
1001ec7a:	4620      	mov	r0, r4
1001ec7c:	f7fe fdf2 	bl	1001d864 <__multadd>
1001ec80:	465e      	mov	r6, fp
1001ec82:	4680      	mov	r8, r0
1001ec84:	e7b2      	b.n	1001ebec <_dtoa_r+0x7fc>
1001ec86:	bf00      	nop
1001ec88:	40240000 	.word	0x40240000
1001ec8c:	9803      	ldr	r0, [sp, #12]
1001ec8e:	9306      	str	r3, [sp, #24]
1001ec90:	f7fe fdde 	bl	1001d850 <_Bfree>
1001ec94:	2d00      	cmp	r5, #0
1001ec96:	9b06      	ldr	r3, [sp, #24]
1001ec98:	db06      	blt.n	1001eca8 <_dtoa_r+0x8b8>
1001ec9a:	9a04      	ldr	r2, [sp, #16]
1001ec9c:	9928      	ldr	r1, [sp, #160]	@ 0xa0
1001ec9e:	f002 0201 	and.w	r2, r2, #1
1001eca2:	430d      	orrs	r5, r1
1001eca4:	432a      	orrs	r2, r5
1001eca6:	d12a      	bne.n	1001ecfe <_dtoa_r+0x90e>
1001eca8:	4651      	mov	r1, sl
1001ecaa:	2201      	movs	r2, #1
1001ecac:	9803      	ldr	r0, [sp, #12]
1001ecae:	9304      	str	r3, [sp, #16]
1001ecb0:	f7ff f810 	bl	1001dcd4 <__lshift>
1001ecb4:	4649      	mov	r1, r9
1001ecb6:	4682      	mov	sl, r0
1001ecb8:	f7ff f884 	bl	1001ddc4 <__mcmp>
1001ecbc:	2800      	cmp	r0, #0
1001ecbe:	9b04      	ldr	r3, [sp, #16]
1001ecc0:	f340 80e8 	ble.w	1001ee94 <_dtoa_r+0xaa4>
1001ecc4:	2b39      	cmp	r3, #57	@ 0x39
1001ecc6:	f000 822f 	beq.w	1001f128 <_dtoa_r+0xd38>
1001ecca:	f10b 0331 	add.w	r3, fp, #49	@ 0x31
1001ecce:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
1001ecd0:	f806 3b01 	strb.w	r3, [r6], #1
1001ecd4:	463c      	mov	r4, r7
1001ecd6:	3501      	adds	r5, #1
1001ecd8:	4647      	mov	r7, r8
1001ecda:	e712      	b.n	1001eb02 <_dtoa_r+0x712>
1001ecdc:	f7fe fdc2 	bl	1001d864 <__multadd>
1001ece0:	465e      	mov	r6, fp
1001ece2:	4607      	mov	r7, r0
1001ece4:	4680      	mov	r8, r0
1001ece6:	e781      	b.n	1001ebec <_dtoa_r+0x7fc>
1001ece8:	2d00      	cmp	r5, #0
1001ecea:	f2c0 827d 	blt.w	1001f1e8 <_dtoa_r+0xdf8>
1001ecee:	9928      	ldr	r1, [sp, #160]	@ 0xa0
1001ecf0:	430d      	orrs	r5, r1
1001ecf2:	990f      	ldr	r1, [sp, #60]	@ 0x3c
1001ecf4:	430d      	orrs	r5, r1
1001ecf6:	f000 8277 	beq.w	1001f1e8 <_dtoa_r+0xdf8>
1001ecfa:	2a00      	cmp	r2, #0
1001ecfc:	dda1      	ble.n	1001ec42 <_dtoa_r+0x852>
1001ecfe:	2b39      	cmp	r3, #57	@ 0x39
1001ed00:	f000 8212 	beq.w	1001f128 <_dtoa_r+0xd38>
1001ed04:	3301      	adds	r3, #1
1001ed06:	e7e2      	b.n	1001ecce <_dtoa_r+0x8de>
1001ed08:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
1001ed0a:	2b02      	cmp	r3, #2
1001ed0c:	f77f aeb4 	ble.w	1001ea78 <_dtoa_r+0x688>
1001ed10:	9b06      	ldr	r3, [sp, #24]
1001ed12:	2b00      	cmp	r3, #0
1001ed14:	f040 811d 	bne.w	1001ef52 <_dtoa_r+0xb62>
1001ed18:	4649      	mov	r1, r9
1001ed1a:	2205      	movs	r2, #5
1001ed1c:	9803      	ldr	r0, [sp, #12]
1001ed1e:	f7fe fda1 	bl	1001d864 <__multadd>
1001ed22:	4601      	mov	r1, r0
1001ed24:	4681      	mov	r9, r0
1001ed26:	4650      	mov	r0, sl
1001ed28:	f7ff f84c 	bl	1001ddc4 <__mcmp>
1001ed2c:	2800      	cmp	r0, #0
1001ed2e:	f340 8110 	ble.w	1001ef52 <_dtoa_r+0xb62>
1001ed32:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
1001ed34:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
1001ed36:	2331      	movs	r3, #49	@ 0x31
1001ed38:	f806 3b01 	strb.w	r3, [r6], #1
1001ed3c:	3501      	adds	r5, #1
1001ed3e:	9803      	ldr	r0, [sp, #12]
1001ed40:	4649      	mov	r1, r9
1001ed42:	3501      	adds	r5, #1
1001ed44:	f7fe fd84 	bl	1001d850 <_Bfree>
1001ed48:	2f00      	cmp	r7, #0
1001ed4a:	f47f aee8 	bne.w	1001eb1e <_dtoa_r+0x72e>
1001ed4e:	e6ea      	b.n	1001eb26 <_dtoa_r+0x736>
1001ed50:	4649      	mov	r1, r9
1001ed52:	4650      	mov	r0, sl
1001ed54:	f7ff f836 	bl	1001ddc4 <__mcmp>
1001ed58:	2800      	cmp	r0, #0
1001ed5a:	f6bf ae89 	bge.w	1001ea70 <_dtoa_r+0x680>
1001ed5e:	4651      	mov	r1, sl
1001ed60:	2300      	movs	r3, #0
1001ed62:	9803      	ldr	r0, [sp, #12]
1001ed64:	220a      	movs	r2, #10
1001ed66:	f7fe fd7d 	bl	1001d864 <__multadd>
1001ed6a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001ed6c:	1e5d      	subs	r5, r3, #1
1001ed6e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001ed70:	4682      	mov	sl, r0
1001ed72:	2b00      	cmp	r3, #0
1001ed74:	f47f af1b 	bne.w	1001ebae <_dtoa_r+0x7be>
1001ed78:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001ed7a:	2b00      	cmp	r3, #0
1001ed7c:	f340 81ff 	ble.w	1001f17e <_dtoa_r+0xd8e>
1001ed80:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
1001ed82:	9306      	str	r3, [sp, #24]
1001ed84:	e67e      	b.n	1001ea84 <_dtoa_r+0x694>
1001ed86:	4601      	mov	r1, r0
1001ed88:	465a      	mov	r2, fp
1001ed8a:	9803      	ldr	r0, [sp, #12]
1001ed8c:	f7fe ff48 	bl	1001dc20 <__pow5mult>
1001ed90:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
1001ed92:	2b01      	cmp	r3, #1
1001ed94:	4681      	mov	r9, r0
1001ed96:	dd6c      	ble.n	1001ee72 <_dtoa_r+0xa82>
1001ed98:	f04f 0b00 	mov.w	fp, #0
1001ed9c:	f8d9 3010 	ldr.w	r3, [r9, #16]
1001eda0:	eb09 0383 	add.w	r3, r9, r3, lsl #2
1001eda4:	6918      	ldr	r0, [r3, #16]
1001eda6:	f7fe fe05 	bl	1001d9b4 <__hi0bits>
1001edaa:	f1c0 0020 	rsb	r0, r0, #32
1001edae:	e639      	b.n	1001ea24 <_dtoa_r+0x634>
1001edb0:	4b92      	ldr	r3, [pc, #584]	@ (1001effc <_dtoa_r+0xc0c>)
1001edb2:	930a      	str	r3, [sp, #40]	@ 0x28
1001edb4:	3303      	adds	r3, #3
1001edb6:	f7ff bbfa 	b.w	1001e5ae <_dtoa_r+0x1be>
1001edba:	9b04      	ldr	r3, [sp, #16]
1001edbc:	2b00      	cmp	r3, #0
1001edbe:	f47f ae30 	bne.w	1001ea22 <_dtoa_r+0x632>
1001edc2:	e9dd 1204 	ldrd	r1, r2, [sp, #16]
1001edc6:	f3c2 0313 	ubfx	r3, r2, #0, #20
1001edca:	2b00      	cmp	r3, #0
1001edcc:	f47f ae29 	bne.w	1001ea22 <_dtoa_r+0x632>
1001edd0:	4b8b      	ldr	r3, [pc, #556]	@ (1001f000 <_dtoa_r+0xc10>)
1001edd2:	4013      	ands	r3, r2
1001edd4:	b123      	cbz	r3, 1001ede0 <_dtoa_r+0x9f0>
1001edd6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001edd8:	3301      	adds	r3, #1
1001edda:	930b      	str	r3, [sp, #44]	@ 0x2c
1001eddc:	3401      	adds	r4, #1
1001edde:	2301      	movs	r3, #1
1001ede0:	f1bb 0f00 	cmp.w	fp, #0
1001ede4:	f040 81ae 	bne.w	1001f144 <_dtoa_r+0xd54>
1001ede8:	469b      	mov	fp, r3
1001edea:	e61a      	b.n	1001ea22 <_dtoa_r+0x632>
1001edec:	f43f ae2b 	beq.w	1001ea46 <_dtoa_r+0x656>
1001edf0:	f1c0 033c 	rsb	r3, r0, #60	@ 0x3c
1001edf4:	e6b6      	b.n	1001eb64 <_dtoa_r+0x774>
1001edf6:	2301      	movs	r3, #1
1001edf8:	930c      	str	r3, [sp, #48]	@ 0x30
1001edfa:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
1001edfc:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
1001edfe:	4413      	add	r3, r2
1001ee00:	9318      	str	r3, [sp, #96]	@ 0x60
1001ee02:	3301      	adds	r3, #1
1001ee04:	2b01      	cmp	r3, #1
1001ee06:	461e      	mov	r6, r3
1001ee08:	9306      	str	r3, [sp, #24]
1001ee0a:	bfb8      	it	lt
1001ee0c:	2601      	movlt	r6, #1
1001ee0e:	2e17      	cmp	r6, #23
1001ee10:	f340 81d5 	ble.w	1001f1be <_dtoa_r+0xdce>
1001ee14:	2201      	movs	r2, #1
1001ee16:	2304      	movs	r3, #4
1001ee18:	005b      	lsls	r3, r3, #1
1001ee1a:	f103 0014 	add.w	r0, r3, #20
1001ee1e:	42b0      	cmp	r0, r6
1001ee20:	4611      	mov	r1, r2
1001ee22:	f102 0201 	add.w	r2, r2, #1
1001ee26:	d9f7      	bls.n	1001ee18 <_dtoa_r+0xa28>
1001ee28:	9b03      	ldr	r3, [sp, #12]
1001ee2a:	63d9      	str	r1, [r3, #60]	@ 0x3c
1001ee2c:	e411      	b.n	1001e652 <_dtoa_r+0x262>
1001ee2e:	2301      	movs	r3, #1
1001ee30:	930c      	str	r3, [sp, #48]	@ 0x30
1001ee32:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
1001ee34:	2b00      	cmp	r3, #0
1001ee36:	dd33      	ble.n	1001eea0 <_dtoa_r+0xab0>
1001ee38:	9318      	str	r3, [sp, #96]	@ 0x60
1001ee3a:	9306      	str	r3, [sp, #24]
1001ee3c:	461e      	mov	r6, r3
1001ee3e:	e7e6      	b.n	1001ee0e <_dtoa_r+0xa1e>
1001ee40:	2300      	movs	r3, #0
1001ee42:	930c      	str	r3, [sp, #48]	@ 0x30
1001ee44:	e7d9      	b.n	1001edfa <_dtoa_r+0xa0a>
1001ee46:	2300      	movs	r3, #0
1001ee48:	930c      	str	r3, [sp, #48]	@ 0x30
1001ee4a:	e7f2      	b.n	1001ee32 <_dtoa_r+0xa42>
1001ee4c:	4639      	mov	r1, r7
1001ee4e:	9803      	ldr	r0, [sp, #12]
1001ee50:	4632      	mov	r2, r6
1001ee52:	f7fe ff3f 	bl	1001dcd4 <__lshift>
1001ee56:	4607      	mov	r7, r0
1001ee58:	e6b9      	b.n	1001ebce <_dtoa_r+0x7de>
1001ee5a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001ee5c:	9a06      	ldr	r2, [sp, #24]
1001ee5e:	950f      	str	r5, [sp, #60]	@ 0x3c
1001ee60:	1aeb      	subs	r3, r5, r3
1001ee62:	449b      	add	fp, r3
1001ee64:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001ee66:	461e      	mov	r6, r3
1001ee68:	4413      	add	r3, r2
1001ee6a:	4414      	add	r4, r2
1001ee6c:	930b      	str	r3, [sp, #44]	@ 0x2c
1001ee6e:	2500      	movs	r5, #0
1001ee70:	e690      	b.n	1001eb94 <_dtoa_r+0x7a4>
1001ee72:	9b04      	ldr	r3, [sp, #16]
1001ee74:	2b00      	cmp	r3, #0
1001ee76:	d18f      	bne.n	1001ed98 <_dtoa_r+0x9a8>
1001ee78:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001ee7c:	f3c1 0313 	ubfx	r3, r1, #0, #20
1001ee80:	460a      	mov	r2, r1
1001ee82:	2b00      	cmp	r3, #0
1001ee84:	d188      	bne.n	1001ed98 <_dtoa_r+0x9a8>
1001ee86:	e7a3      	b.n	1001edd0 <_dtoa_r+0x9e0>
1001ee88:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
1001ee8c:	2702      	movs	r7, #2
1001ee8e:	e9cd 2312 	strd	r2, r3, [sp, #72]	@ 0x48
1001ee92:	e40b      	b.n	1001e6ac <_dtoa_r+0x2bc>
1001ee94:	f47f af1b 	bne.w	1001ecce <_dtoa_r+0x8de>
1001ee98:	07da      	lsls	r2, r3, #31
1001ee9a:	f57f af18 	bpl.w	1001ecce <_dtoa_r+0x8de>
1001ee9e:	e711      	b.n	1001ecc4 <_dtoa_r+0x8d4>
1001eea0:	2301      	movs	r3, #1
1001eea2:	9329      	str	r3, [sp, #164]	@ 0xa4
1001eea4:	9306      	str	r3, [sp, #24]
1001eea6:	f7ff bbcf 	b.w	1001e648 <_dtoa_r+0x258>
1001eeaa:	d103      	bne.n	1001eeb4 <_dtoa_r+0xac4>
1001eeac:	9b04      	ldr	r3, [sp, #16]
1001eeae:	07db      	lsls	r3, r3, #31
1001eeb0:	f53f ae18 	bmi.w	1001eae4 <_dtoa_r+0x6f4>
1001eeb4:	465e      	mov	r6, fp
1001eeb6:	f81b 3d01 	ldrb.w	r3, [fp, #-1]!
1001eeba:	2b30      	cmp	r3, #48	@ 0x30
1001eebc:	d0fa      	beq.n	1001eeb4 <_dtoa_r+0xac4>
1001eebe:	e620      	b.n	1001eb02 <_dtoa_r+0x712>
1001eec0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001eec2:	2331      	movs	r3, #49	@ 0x31
1001eec4:	3501      	adds	r5, #1
1001eec6:	7013      	strb	r3, [r2, #0]
1001eec8:	e61b      	b.n	1001eb02 <_dtoa_r+0x712>
1001eeca:	9a11      	ldr	r2, [sp, #68]	@ 0x44
1001eecc:	2a00      	cmp	r2, #0
1001eece:	f000 80f9 	beq.w	1001f0c4 <_dtoa_r+0xcd4>
1001eed2:	f203 4333 	addw	r3, r3, #1075	@ 0x433
1001eed6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
1001eed8:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
1001eeda:	4616      	mov	r6, r2
1001eedc:	441a      	add	r2, r3
1001eede:	441c      	add	r4, r3
1001eee0:	920b      	str	r2, [sp, #44]	@ 0x2c
1001eee2:	e657      	b.n	1001eb94 <_dtoa_r+0x7a4>
1001eee4:	f1c8 0301 	rsb	r3, r8, #1
1001eee8:	4604      	mov	r4, r0
1001eeea:	930b      	str	r3, [sp, #44]	@ 0x2c
1001eeec:	9010      	str	r0, [sp, #64]	@ 0x40
1001eeee:	f7ff bb9b 	b.w	1001e628 <_dtoa_r+0x238>
1001eef2:	f000 80eb 	beq.w	1001f0cc <_dtoa_r+0xcdc>
1001eef6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001eef8:	4d42      	ldr	r5, [pc, #264]	@ (1001f004 <_dtoa_r+0xc14>)
1001eefa:	425e      	negs	r6, r3
1001eefc:	f006 030f 	and.w	r3, r6, #15
1001ef00:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
1001ef04:	e9d3 2300 	ldrd	r2, r3, [r3]
1001ef08:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
1001ef0c:	f000 fe32 	bl	1001fb74 <__aeabi_dmul>
1001ef10:	1135      	asrs	r5, r6, #4
1001ef12:	e9cd 0112 	strd	r0, r1, [sp, #72]	@ 0x48
1001ef16:	f000 814d 	beq.w	1001f1b4 <_dtoa_r+0xdc4>
1001ef1a:	4e3b      	ldr	r6, [pc, #236]	@ (1001f008 <_dtoa_r+0xc18>)
1001ef1c:	2300      	movs	r3, #0
1001ef1e:	2702      	movs	r7, #2
1001ef20:	4680      	mov	r8, r0
1001ef22:	4689      	mov	r9, r1
1001ef24:	07e8      	lsls	r0, r5, #31
1001ef26:	d509      	bpl.n	1001ef3c <_dtoa_r+0xb4c>
1001ef28:	e9d6 2300 	ldrd	r2, r3, [r6]
1001ef2c:	4640      	mov	r0, r8
1001ef2e:	4649      	mov	r1, r9
1001ef30:	f000 fe20 	bl	1001fb74 <__aeabi_dmul>
1001ef34:	3701      	adds	r7, #1
1001ef36:	4680      	mov	r8, r0
1001ef38:	4689      	mov	r9, r1
1001ef3a:	2301      	movs	r3, #1
1001ef3c:	106d      	asrs	r5, r5, #1
1001ef3e:	f106 0608 	add.w	r6, r6, #8
1001ef42:	d1ef      	bne.n	1001ef24 <_dtoa_r+0xb34>
1001ef44:	2b00      	cmp	r3, #0
1001ef46:	f47f abca 	bne.w	1001e6de <_dtoa_r+0x2ee>
1001ef4a:	e9dd 8912 	ldrd	r8, r9, [sp, #72]	@ 0x48
1001ef4e:	f7ff bbc6 	b.w	1001e6de <_dtoa_r+0x2ee>
1001ef52:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
1001ef54:	e4ca      	b.n	1001e8ec <_dtoa_r+0x4fc>
1001ef56:	f8dd a018 	ldr.w	sl, [sp, #24]
1001ef5a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
1001ef5c:	4602      	mov	r2, r0
1001ef5e:	460b      	mov	r3, r1
1001ef60:	f000 fc52 	bl	1001f808 <__adddf3>
1001ef64:	4602      	mov	r2, r0
1001ef66:	460b      	mov	r3, r1
1001ef68:	e9cd 2306 	strd	r2, r3, [sp, #24]
1001ef6c:	3501      	adds	r5, #1
1001ef6e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
1001ef72:	46a8      	mov	r8, r5
1001ef74:	f001 f88e 	bl	10020094 <__aeabi_dcmpgt>
1001ef78:	b940      	cbnz	r0, 1001ef8c <_dtoa_r+0xb9c>
1001ef7a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
1001ef7e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
1001ef82:	f001 f85f 	bl	10020044 <__aeabi_dcmpeq>
1001ef86:	b118      	cbz	r0, 1001ef90 <_dtoa_r+0xba0>
1001ef88:	07f1      	lsls	r1, r6, #31
1001ef8a:	d501      	bpl.n	1001ef90 <_dtoa_r+0xba0>
1001ef8c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001ef8e:	e44a      	b.n	1001e826 <_dtoa_r+0x436>
1001ef90:	463e      	mov	r6, r7
1001ef92:	e5c8      	b.n	1001eb26 <_dtoa_r+0x736>
1001ef94:	6879      	ldr	r1, [r7, #4]
1001ef96:	9803      	ldr	r0, [sp, #12]
1001ef98:	f7fe fc34 	bl	1001d804 <_Balloc>
1001ef9c:	4605      	mov	r5, r0
1001ef9e:	2800      	cmp	r0, #0
1001efa0:	f000 8126 	beq.w	1001f1f0 <_dtoa_r+0xe00>
1001efa4:	693b      	ldr	r3, [r7, #16]
1001efa6:	3302      	adds	r3, #2
1001efa8:	009a      	lsls	r2, r3, #2
1001efaa:	f107 010c 	add.w	r1, r7, #12
1001efae:	300c      	adds	r0, #12
1001efb0:	f7f6 fd26 	bl	10015a00 <memcpy>
1001efb4:	9803      	ldr	r0, [sp, #12]
1001efb6:	4629      	mov	r1, r5
1001efb8:	2201      	movs	r2, #1
1001efba:	f7fe fe8b 	bl	1001dcd4 <__lshift>
1001efbe:	4680      	mov	r8, r0
1001efc0:	e60a      	b.n	1001ebd8 <_dtoa_r+0x7e8>
1001efc2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
1001efc4:	463c      	mov	r4, r7
1001efc6:	3501      	adds	r5, #1
1001efc8:	4647      	mov	r7, r8
1001efca:	e57e      	b.n	1001eaca <_dtoa_r+0x6da>
1001efcc:	f8dd 800c 	ldr.w	r8, [sp, #12]
1001efd0:	4639      	mov	r1, r7
1001efd2:	462a      	mov	r2, r5
1001efd4:	4640      	mov	r0, r8
1001efd6:	f7fe fe23 	bl	1001dc20 <__pow5mult>
1001efda:	4652      	mov	r2, sl
1001efdc:	4601      	mov	r1, r0
1001efde:	4607      	mov	r7, r0
1001efe0:	4640      	mov	r0, r8
1001efe2:	f7fe fd67 	bl	1001dab4 <__multiply>
1001efe6:	4651      	mov	r1, sl
1001efe8:	4682      	mov	sl, r0
1001efea:	4640      	mov	r0, r8
1001efec:	f7fe fc30 	bl	1001d850 <_Bfree>
1001eff0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001eff2:	1b5b      	subs	r3, r3, r5
1001eff4:	930f      	str	r3, [sp, #60]	@ 0x3c
1001eff6:	f43f ad07 	beq.w	1001ea08 <_dtoa_r+0x618>
1001effa:	e4ff      	b.n	1001e9fc <_dtoa_r+0x60c>
1001effc:	10027af4 	.word	0x10027af4
1001f000:	7ff00000 	.word	0x7ff00000
1001f004:	10027a20 	.word	0x10027a20
1001f008:	100279f8 	.word	0x100279f8
1001f00c:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	@ 0x50
1001f010:	f000 fdb0 	bl	1001fb74 <__aeabi_dmul>
1001f014:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001f016:	701f      	strb	r7, [r3, #0]
1001f018:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001f01a:	2b01      	cmp	r3, #1
1001f01c:	e9cd 010c 	strd	r0, r1, [sp, #48]	@ 0x30
1001f020:	f000 80c6 	beq.w	1001f1b0 <_dtoa_r+0xdc0>
1001f024:	9f12      	ldr	r7, [sp, #72]	@ 0x48
1001f026:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001f028:	f8cd b044 	str.w	fp, [sp, #68]	@ 0x44
1001f02c:	441f      	add	r7, r3
1001f02e:	4b7c      	ldr	r3, [pc, #496]	@ (1001f220 <_dtoa_r+0xe30>)
1001f030:	2200      	movs	r2, #0
1001f032:	4640      	mov	r0, r8
1001f034:	4649      	mov	r1, r9
1001f036:	f000 fd9d 	bl	1001fb74 <__aeabi_dmul>
1001f03a:	4689      	mov	r9, r1
1001f03c:	4680      	mov	r8, r0
1001f03e:	f001 f849 	bl	100200d4 <__aeabi_d2iz>
1001f042:	4683      	mov	fp, r0
1001f044:	f000 fd2c 	bl	1001faa0 <__aeabi_i2d>
1001f048:	f10b 0b30 	add.w	fp, fp, #48	@ 0x30
1001f04c:	4602      	mov	r2, r0
1001f04e:	460b      	mov	r3, r1
1001f050:	4640      	mov	r0, r8
1001f052:	4649      	mov	r1, r9
1001f054:	f000 fbd6 	bl	1001f804 <__aeabi_dsub>
1001f058:	f806 bb01 	strb.w	fp, [r6], #1
1001f05c:	42b7      	cmp	r7, r6
1001f05e:	4680      	mov	r8, r0
1001f060:	4689      	mov	r9, r1
1001f062:	d1e4      	bne.n	1001f02e <_dtoa_r+0xc3e>
1001f064:	f8dd b044 	ldr.w	fp, [sp, #68]	@ 0x44
1001f068:	4b6e      	ldr	r3, [pc, #440]	@ (1001f224 <_dtoa_r+0xe34>)
1001f06a:	2200      	movs	r2, #0
1001f06c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
1001f070:	f000 fbca 	bl	1001f808 <__adddf3>
1001f074:	4602      	mov	r2, r0
1001f076:	460b      	mov	r3, r1
1001f078:	4640      	mov	r0, r8
1001f07a:	4649      	mov	r1, r9
1001f07c:	f001 f80a 	bl	10020094 <__aeabi_dcmpgt>
1001f080:	2800      	cmp	r0, #0
1001f082:	d167      	bne.n	1001f154 <_dtoa_r+0xd64>
1001f084:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
1001f088:	4966      	ldr	r1, [pc, #408]	@ (1001f224 <_dtoa_r+0xe34>)
1001f08a:	2000      	movs	r0, #0
1001f08c:	f000 fbba 	bl	1001f804 <__aeabi_dsub>
1001f090:	4602      	mov	r2, r0
1001f092:	460b      	mov	r3, r1
1001f094:	4640      	mov	r0, r8
1001f096:	4649      	mov	r1, r9
1001f098:	f000 ffde 	bl	10020058 <__aeabi_dcmplt>
1001f09c:	b948      	cbnz	r0, 1001f0b2 <_dtoa_r+0xcc2>
1001f09e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
1001f0a0:	2b00      	cmp	r3, #0
1001f0a2:	f6ff ac93 	blt.w	1001e9cc <_dtoa_r+0x5dc>
1001f0a6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001f0a8:	2b0e      	cmp	r3, #14
1001f0aa:	f73f ac8f 	bgt.w	1001e9cc <_dtoa_r+0x5dc>
1001f0ae:	f7ff bbfc 	b.w	1001e8aa <_dtoa_r+0x4ba>
1001f0b2:	463e      	mov	r6, r7
1001f0b4:	3f01      	subs	r7, #1
1001f0b6:	f816 3c01 	ldrb.w	r3, [r6, #-1]
1001f0ba:	2b30      	cmp	r3, #48	@ 0x30
1001f0bc:	d0f9      	beq.n	1001f0b2 <_dtoa_r+0xcc2>
1001f0be:	9d19      	ldr	r5, [sp, #100]	@ 0x64
1001f0c0:	3501      	adds	r5, #1
1001f0c2:	e530      	b.n	1001eb26 <_dtoa_r+0x736>
1001f0c4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
1001f0c6:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
1001f0ca:	e704      	b.n	1001eed6 <_dtoa_r+0xae6>
1001f0cc:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
1001f0d0:	2702      	movs	r7, #2
1001f0d2:	f7ff bb04 	b.w	1001e6de <_dtoa_r+0x2ee>
1001f0d6:	9b06      	ldr	r3, [sp, #24]
1001f0d8:	2b00      	cmp	r3, #0
1001f0da:	f43f abb8 	beq.w	1001e84e <_dtoa_r+0x45e>
1001f0de:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001f0e0:	2b00      	cmp	r3, #0
1001f0e2:	f77f abd9 	ble.w	1001e898 <_dtoa_r+0x4a8>
1001f0e6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
1001f0e8:	9312      	str	r3, [sp, #72]	@ 0x48
1001f0ea:	3a01      	subs	r2, #1
1001f0ec:	4b4c      	ldr	r3, [pc, #304]	@ (1001f220 <_dtoa_r+0xe30>)
1001f0ee:	9219      	str	r2, [sp, #100]	@ 0x64
1001f0f0:	4640      	mov	r0, r8
1001f0f2:	2200      	movs	r2, #0
1001f0f4:	4649      	mov	r1, r9
1001f0f6:	f000 fd3d 	bl	1001fb74 <__aeabi_dmul>
1001f0fa:	4680      	mov	r8, r0
1001f0fc:	4689      	mov	r9, r1
1001f0fe:	1c78      	adds	r0, r7, #1
1001f100:	f000 fcce 	bl	1001faa0 <__aeabi_i2d>
1001f104:	4642      	mov	r2, r8
1001f106:	464b      	mov	r3, r9
1001f108:	f000 fd34 	bl	1001fb74 <__aeabi_dmul>
1001f10c:	4b46      	ldr	r3, [pc, #280]	@ (1001f228 <_dtoa_r+0xe38>)
1001f10e:	2200      	movs	r2, #0
1001f110:	f000 fb7a 	bl	1001f808 <__adddf3>
1001f114:	4606      	mov	r6, r0
1001f116:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
1001f11a:	f7ff bb01 	b.w	1001e720 <_dtoa_r+0x330>
1001f11e:	f108 0801 	add.w	r8, r8, #1
1001f122:	2331      	movs	r3, #49	@ 0x31
1001f124:	f7ff bb86 	b.w	1001e834 <_dtoa_r+0x444>
1001f128:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
1001f12a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001f12c:	46b3      	mov	fp, r6
1001f12e:	2339      	movs	r3, #57	@ 0x39
1001f130:	463c      	mov	r4, r7
1001f132:	f80b 3b01 	strb.w	r3, [fp], #1
1001f136:	3501      	adds	r5, #1
1001f138:	4647      	mov	r7, r8
1001f13a:	e4d8      	b.n	1001eaee <_dtoa_r+0x6fe>
1001f13c:	f04f 0900 	mov.w	r9, #0
1001f140:	464f      	mov	r7, r9
1001f142:	e5f6      	b.n	1001ed32 <_dtoa_r+0x942>
1001f144:	469b      	mov	fp, r3
1001f146:	e629      	b.n	1001ed9c <_dtoa_r+0x9ac>
1001f148:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001f14a:	461e      	mov	r6, r3
1001f14c:	4413      	add	r3, r2
1001f14e:	4414      	add	r4, r2
1001f150:	930b      	str	r3, [sp, #44]	@ 0x2c
1001f152:	e51f      	b.n	1001eb94 <_dtoa_r+0x7a4>
1001f154:	9b19      	ldr	r3, [sp, #100]	@ 0x64
1001f156:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001f158:	f103 0801 	add.w	r8, r3, #1
1001f15c:	f7ff bb63 	b.w	1001e826 <_dtoa_r+0x436>
1001f160:	f8dd a058 	ldr.w	sl, [sp, #88]	@ 0x58
1001f164:	e7ab      	b.n	1001f0be <_dtoa_r+0xcce>
1001f166:	e9dd b41a 	ldrd	fp, r4, [sp, #104]	@ 0x68
1001f16a:	f8dd a058 	ldr.w	sl, [sp, #88]	@ 0x58
1001f16e:	f7ff bb93 	b.w	1001e898 <_dtoa_r+0x4a8>
1001f172:	2b39      	cmp	r3, #57	@ 0x39
1001f174:	d0d8      	beq.n	1001f128 <_dtoa_r+0xd38>
1001f176:	2d00      	cmp	r5, #0
1001f178:	f73f ada7 	bgt.w	1001ecca <_dtoa_r+0x8da>
1001f17c:	e5a7      	b.n	1001ecce <_dtoa_r+0x8de>
1001f17e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
1001f180:	2b02      	cmp	r3, #2
1001f182:	dc0a      	bgt.n	1001f19a <_dtoa_r+0xdaa>
1001f184:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001f186:	9306      	str	r3, [sp, #24]
1001f188:	4649      	mov	r1, r9
1001f18a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
1001f18c:	f7ff f898 	bl	1001e2c0 <quorem>
1001f190:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001f192:	f100 0330 	add.w	r3, r0, #48	@ 0x30
1001f196:	7013      	strb	r3, [r2, #0]
1001f198:	e48d      	b.n	1001eab6 <_dtoa_r+0x6c6>
1001f19a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001f19c:	9306      	str	r3, [sp, #24]
1001f19e:	950e      	str	r5, [sp, #56]	@ 0x38
1001f1a0:	e5b6      	b.n	1001ed10 <_dtoa_r+0x920>
1001f1a2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
1001f1a4:	2b02      	cmp	r3, #2
1001f1a6:	dcf8      	bgt.n	1001f19a <_dtoa_r+0xdaa>
1001f1a8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001f1aa:	950e      	str	r5, [sp, #56]	@ 0x38
1001f1ac:	9306      	str	r3, [sp, #24]
1001f1ae:	e50b      	b.n	1001ebc8 <_dtoa_r+0x7d8>
1001f1b0:	4637      	mov	r7, r6
1001f1b2:	e759      	b.n	1001f068 <_dtoa_r+0xc78>
1001f1b4:	e9dd 8912 	ldrd	r8, r9, [sp, #72]	@ 0x48
1001f1b8:	2702      	movs	r7, #2
1001f1ba:	f7ff ba90 	b.w	1001e6de <_dtoa_r+0x2ee>
1001f1be:	9b03      	ldr	r3, [sp, #12]
1001f1c0:	2100      	movs	r1, #0
1001f1c2:	63d9      	str	r1, [r3, #60]	@ 0x3c
1001f1c4:	f7ff ba45 	b.w	1001e652 <_dtoa_r+0x262>
1001f1c8:	9b03      	ldr	r3, [sp, #12]
1001f1ca:	2500      	movs	r5, #0
1001f1cc:	63dd      	str	r5, [r3, #60]	@ 0x3c
1001f1ce:	4629      	mov	r1, r5
1001f1d0:	4618      	mov	r0, r3
1001f1d2:	f7fe fb17 	bl	1001d804 <_Balloc>
1001f1d6:	900a      	str	r0, [sp, #40]	@ 0x28
1001f1d8:	b9a8      	cbnz	r0, 1001f206 <_dtoa_r+0xe16>
1001f1da:	4b14      	ldr	r3, [pc, #80]	@ (1001f22c <_dtoa_r+0xe3c>)
1001f1dc:	4814      	ldr	r0, [pc, #80]	@ (1001f230 <_dtoa_r+0xe40>)
1001f1de:	2200      	movs	r2, #0
1001f1e0:	f240 11af 	movw	r1, #431	@ 0x1af
1001f1e4:	f7fe f908 	bl	1001d3f8 <__assert_func>
1001f1e8:	2a00      	cmp	r2, #0
1001f1ea:	f77f ad70 	ble.w	1001ecce <_dtoa_r+0x8de>
1001f1ee:	e55b      	b.n	1001eca8 <_dtoa_r+0x8b8>
1001f1f0:	4b0e      	ldr	r3, [pc, #56]	@ (1001f22c <_dtoa_r+0xe3c>)
1001f1f2:	480f      	ldr	r0, [pc, #60]	@ (1001f230 <_dtoa_r+0xe40>)
1001f1f4:	462a      	mov	r2, r5
1001f1f6:	f240 21ef 	movw	r1, #751	@ 0x2ef
1001f1fa:	f7fe f8fd 	bl	1001d3f8 <__assert_func>
1001f1fe:	4b0d      	ldr	r3, [pc, #52]	@ (1001f234 <_dtoa_r+0xe44>)
1001f200:	930a      	str	r3, [sp, #40]	@ 0x28
1001f202:	f7ff b930 	b.w	1001e466 <_dtoa_r+0x76>
1001f206:	9b03      	ldr	r3, [sp, #12]
1001f208:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001f20a:	639a      	str	r2, [r3, #56]	@ 0x38
1001f20c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001f210:	2201      	movs	r2, #1
1001f212:	9529      	str	r5, [sp, #164]	@ 0xa4
1001f214:	9318      	str	r3, [sp, #96]	@ 0x60
1001f216:	920c      	str	r2, [sp, #48]	@ 0x30
1001f218:	9306      	str	r3, [sp, #24]
1001f21a:	f7ff bb3d 	b.w	1001e898 <_dtoa_r+0x4a8>
1001f21e:	bf00      	nop
1001f220:	40240000 	.word	0x40240000
1001f224:	3fe00000 	.word	0x3fe00000
1001f228:	401c0000 	.word	0x401c0000
1001f22c:	10020c70 	.word	0x10020c70
1001f230:	10027af8 	.word	0x10027af8
1001f234:	10027ae8 	.word	0x10027ae8

1001f238 <nan>:
1001f238:	4901      	ldr	r1, [pc, #4]	@ (1001f240 <nan+0x8>)
1001f23a:	2000      	movs	r0, #0
1001f23c:	4770      	bx	lr
1001f23e:	bf00      	nop
1001f240:	7ff80000 	.word	0x7ff80000

1001f244 <frexp>:
1001f244:	f8df c060 	ldr.w	ip, [pc, #96]	@ 1001f2a8 <frexp+0x64>
1001f248:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1001f24a:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
1001f24e:	2700      	movs	r7, #0
1001f250:	4563      	cmp	r3, ip
1001f252:	4604      	mov	r4, r0
1001f254:	460d      	mov	r5, r1
1001f256:	4616      	mov	r6, r2
1001f258:	6017      	str	r7, [r2, #0]
1001f25a:	d822      	bhi.n	1001f2a2 <frexp+0x5e>
1001f25c:	4684      	mov	ip, r0
1001f25e:	ea53 0c0c 	orrs.w	ip, r3, ip
1001f262:	d01e      	beq.n	1001f2a2 <frexp+0x5e>
1001f264:	f8df c044 	ldr.w	ip, [pc, #68]	@ 1001f2ac <frexp+0x68>
1001f268:	ea01 0c0c 	and.w	ip, r1, ip
1001f26c:	460a      	mov	r2, r1
1001f26e:	f1bc 0f00 	cmp.w	ip, #0
1001f272:	d109      	bne.n	1001f288 <frexp+0x44>
1001f274:	4b0e      	ldr	r3, [pc, #56]	@ (1001f2b0 <frexp+0x6c>)
1001f276:	2200      	movs	r2, #0
1001f278:	f000 fc7c 	bl	1001fb74 <__aeabi_dmul>
1001f27c:	f06f 0735 	mvn.w	r7, #53	@ 0x35
1001f280:	4604      	mov	r4, r0
1001f282:	460a      	mov	r2, r1
1001f284:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
1001f288:	f022 42ff 	bic.w	r2, r2, #2139095040	@ 0x7f800000
1001f28c:	151b      	asrs	r3, r3, #20
1001f28e:	f422 02e0 	bic.w	r2, r2, #7340032	@ 0x700000
1001f292:	f2a3 33fe 	subw	r3, r3, #1022	@ 0x3fe
1001f296:	f042 557f 	orr.w	r5, r2, #1069547520	@ 0x3fc00000
1001f29a:	443b      	add	r3, r7
1001f29c:	f445 1500 	orr.w	r5, r5, #2097152	@ 0x200000
1001f2a0:	6033      	str	r3, [r6, #0]
1001f2a2:	4620      	mov	r0, r4
1001f2a4:	4629      	mov	r1, r5
1001f2a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1001f2a8:	7fefffff 	.word	0x7fefffff
1001f2ac:	7ff00000 	.word	0x7ff00000
1001f2b0:	43500000 	.word	0x43500000

1001f2b4 <_fstat_r>:
1001f2b4:	b570      	push	{r4, r5, r6, lr}
1001f2b6:	460c      	mov	r4, r1
1001f2b8:	4d08      	ldr	r5, [pc, #32]	@ (1001f2dc <_fstat_r+0x28>)
1001f2ba:	4603      	mov	r3, r0
1001f2bc:	2600      	movs	r6, #0
1001f2be:	4620      	mov	r0, r4
1001f2c0:	4611      	mov	r1, r2
1001f2c2:	461c      	mov	r4, r3
1001f2c4:	602e      	str	r6, [r5, #0]
1001f2c6:	f7f1 fe6b 	bl	10010fa0 <_fstat>
1001f2ca:	1c43      	adds	r3, r0, #1
1001f2cc:	d000      	beq.n	1001f2d0 <_fstat_r+0x1c>
1001f2ce:	bd70      	pop	{r4, r5, r6, pc}
1001f2d0:	682b      	ldr	r3, [r5, #0]
1001f2d2:	2b00      	cmp	r3, #0
1001f2d4:	d0fb      	beq.n	1001f2ce <_fstat_r+0x1a>
1001f2d6:	6023      	str	r3, [r4, #0]
1001f2d8:	bd70      	pop	{r4, r5, r6, pc}
1001f2da:	bf00      	nop
1001f2dc:	20001498 	.word	0x20001498

1001f2e0 <_isatty_r>:
1001f2e0:	b538      	push	{r3, r4, r5, lr}
1001f2e2:	4d07      	ldr	r5, [pc, #28]	@ (1001f300 <_isatty_r+0x20>)
1001f2e4:	2200      	movs	r2, #0
1001f2e6:	4604      	mov	r4, r0
1001f2e8:	4608      	mov	r0, r1
1001f2ea:	602a      	str	r2, [r5, #0]
1001f2ec:	f7f1 fe50 	bl	10010f90 <_isatty>
1001f2f0:	1c43      	adds	r3, r0, #1
1001f2f2:	d000      	beq.n	1001f2f6 <_isatty_r+0x16>
1001f2f4:	bd38      	pop	{r3, r4, r5, pc}
1001f2f6:	682b      	ldr	r3, [r5, #0]
1001f2f8:	2b00      	cmp	r3, #0
1001f2fa:	d0fb      	beq.n	1001f2f4 <_isatty_r+0x14>
1001f2fc:	6023      	str	r3, [r4, #0]
1001f2fe:	bd38      	pop	{r3, r4, r5, pc}
1001f300:	20001498 	.word	0x20001498

1001f304 <fiprintf>:
1001f304:	b40e      	push	{r1, r2, r3}
1001f306:	b510      	push	{r4, lr}
1001f308:	b083      	sub	sp, #12
1001f30a:	ab05      	add	r3, sp, #20
1001f30c:	4c06      	ldr	r4, [pc, #24]	@ (1001f328 <fiprintf+0x24>)
1001f30e:	f853 2b04 	ldr.w	r2, [r3], #4
1001f312:	9301      	str	r3, [sp, #4]
1001f314:	4601      	mov	r1, r0
1001f316:	6820      	ldr	r0, [r4, #0]
1001f318:	f7fc ff82 	bl	1001c220 <_vfiprintf_r>
1001f31c:	b003      	add	sp, #12
1001f31e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1001f322:	b003      	add	sp, #12
1001f324:	4770      	bx	lr
1001f326:	bf00      	nop
1001f328:	20000590 	.word	0x20000590

1001f32c <__fputwc>:
1001f32c:	b570      	push	{r4, r5, r6, lr}
1001f32e:	b082      	sub	sp, #8
1001f330:	4606      	mov	r6, r0
1001f332:	460d      	mov	r5, r1
1001f334:	4614      	mov	r4, r2
1001f336:	f7f5 fea9 	bl	1001508c <__locale_mb_cur_max>
1001f33a:	2801      	cmp	r0, #1
1001f33c:	d102      	bne.n	1001f344 <__fputwc+0x18>
1001f33e:	1e6b      	subs	r3, r5, #1
1001f340:	2bfe      	cmp	r3, #254	@ 0xfe
1001f342:	d926      	bls.n	1001f392 <__fputwc+0x66>
1001f344:	f104 035c 	add.w	r3, r4, #92	@ 0x5c
1001f348:	462a      	mov	r2, r5
1001f34a:	a901      	add	r1, sp, #4
1001f34c:	4630      	mov	r0, r6
1001f34e:	f7fe f873 	bl	1001d438 <_wcrtomb_r>
1001f352:	1c43      	adds	r3, r0, #1
1001f354:	d020      	beq.n	1001f398 <__fputwc+0x6c>
1001f356:	b178      	cbz	r0, 1001f378 <__fputwc+0x4c>
1001f358:	68a3      	ldr	r3, [r4, #8]
1001f35a:	f89d 1004 	ldrb.w	r1, [sp, #4]
1001f35e:	3b01      	subs	r3, #1
1001f360:	2b00      	cmp	r3, #0
1001f362:	60a3      	str	r3, [r4, #8]
1001f364:	da04      	bge.n	1001f370 <__fputwc+0x44>
1001f366:	69a2      	ldr	r2, [r4, #24]
1001f368:	4293      	cmp	r3, r2
1001f36a:	db08      	blt.n	1001f37e <__fputwc+0x52>
1001f36c:	290a      	cmp	r1, #10
1001f36e:	d006      	beq.n	1001f37e <__fputwc+0x52>
1001f370:	6823      	ldr	r3, [r4, #0]
1001f372:	1c5a      	adds	r2, r3, #1
1001f374:	6022      	str	r2, [r4, #0]
1001f376:	7019      	strb	r1, [r3, #0]
1001f378:	4628      	mov	r0, r5
1001f37a:	b002      	add	sp, #8
1001f37c:	bd70      	pop	{r4, r5, r6, pc}
1001f37e:	4622      	mov	r2, r4
1001f380:	4630      	mov	r0, r6
1001f382:	f000 f8ff 	bl	1001f584 <__swbuf_r>
1001f386:	3001      	adds	r0, #1
1001f388:	d1f6      	bne.n	1001f378 <__fputwc+0x4c>
1001f38a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001f38e:	b002      	add	sp, #8
1001f390:	bd70      	pop	{r4, r5, r6, pc}
1001f392:	f88d 5004 	strb.w	r5, [sp, #4]
1001f396:	e7df      	b.n	1001f358 <__fputwc+0x2c>
1001f398:	89a3      	ldrh	r3, [r4, #12]
1001f39a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001f39e:	81a3      	strh	r3, [r4, #12]
1001f3a0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001f3a4:	e7f3      	b.n	1001f38e <__fputwc+0x62>
1001f3a6:	bf00      	nop

1001f3a8 <_fputwc_r>:
1001f3a8:	b530      	push	{r4, r5, lr}
1001f3aa:	4614      	mov	r4, r2
1001f3ac:	6e52      	ldr	r2, [r2, #100]	@ 0x64
1001f3ae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001f3b2:	4605      	mov	r5, r0
1001f3b4:	07d0      	lsls	r0, r2, #31
1001f3b6:	b083      	sub	sp, #12
1001f3b8:	d401      	bmi.n	1001f3be <_fputwc_r+0x16>
1001f3ba:	059a      	lsls	r2, r3, #22
1001f3bc:	d51c      	bpl.n	1001f3f8 <_fputwc_r+0x50>
1001f3be:	0498      	lsls	r0, r3, #18
1001f3c0:	d406      	bmi.n	1001f3d0 <_fputwc_r+0x28>
1001f3c2:	6e62      	ldr	r2, [r4, #100]	@ 0x64
1001f3c4:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
1001f3c8:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
1001f3cc:	81a3      	strh	r3, [r4, #12]
1001f3ce:	6662      	str	r2, [r4, #100]	@ 0x64
1001f3d0:	4622      	mov	r2, r4
1001f3d2:	4628      	mov	r0, r5
1001f3d4:	f7ff ffaa 	bl	1001f32c <__fputwc>
1001f3d8:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1001f3da:	07da      	lsls	r2, r3, #31
1001f3dc:	4605      	mov	r5, r0
1001f3de:	d402      	bmi.n	1001f3e6 <_fputwc_r+0x3e>
1001f3e0:	89a3      	ldrh	r3, [r4, #12]
1001f3e2:	059b      	lsls	r3, r3, #22
1001f3e4:	d502      	bpl.n	1001f3ec <_fputwc_r+0x44>
1001f3e6:	4628      	mov	r0, r5
1001f3e8:	b003      	add	sp, #12
1001f3ea:	bd30      	pop	{r4, r5, pc}
1001f3ec:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001f3ee:	f7f5 fe4b 	bl	10015088 <__retarget_lock_release_recursive>
1001f3f2:	4628      	mov	r0, r5
1001f3f4:	b003      	add	sp, #12
1001f3f6:	bd30      	pop	{r4, r5, pc}
1001f3f8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001f3fa:	9101      	str	r1, [sp, #4]
1001f3fc:	f7f5 fe42 	bl	10015084 <__retarget_lock_acquire_recursive>
1001f400:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001f404:	9901      	ldr	r1, [sp, #4]
1001f406:	e7da      	b.n	1001f3be <_fputwc_r+0x16>

1001f408 <__submore>:
1001f408:	f101 0340 	add.w	r3, r1, #64	@ 0x40
1001f40c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1001f410:	460c      	mov	r4, r1
1001f412:	6b09      	ldr	r1, [r1, #48]	@ 0x30
1001f414:	4299      	cmp	r1, r3
1001f416:	d014      	beq.n	1001f442 <__submore+0x3a>
1001f418:	6b66      	ldr	r6, [r4, #52]	@ 0x34
1001f41a:	0077      	lsls	r7, r6, #1
1001f41c:	463a      	mov	r2, r7
1001f41e:	f7f6 fc4b 	bl	10015cb8 <_realloc_r>
1001f422:	4605      	mov	r5, r0
1001f424:	b330      	cbz	r0, 1001f474 <__submore+0x6c>
1001f426:	eb00 0806 	add.w	r8, r0, r6
1001f42a:	4601      	mov	r1, r0
1001f42c:	4632      	mov	r2, r6
1001f42e:	4640      	mov	r0, r8
1001f430:	f7f6 fae6 	bl	10015a00 <memcpy>
1001f434:	e9c4 570c 	strd	r5, r7, [r4, #48]	@ 0x30
1001f438:	f8c4 8000 	str.w	r8, [r4]
1001f43c:	2000      	movs	r0, #0
1001f43e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001f442:	f44f 6180 	mov.w	r1, #1024	@ 0x400
1001f446:	f7f5 fa9d 	bl	10014984 <_malloc_r>
1001f44a:	b198      	cbz	r0, 1001f474 <__submore+0x6c>
1001f44c:	f894 3042 	ldrb.w	r3, [r4, #66]	@ 0x42
1001f450:	f44f 6280 	mov.w	r2, #1024	@ 0x400
1001f454:	e9c4 020c 	strd	r0, r2, [r4, #48]	@ 0x30
1001f458:	f880 33ff 	strb.w	r3, [r0, #1023]	@ 0x3ff
1001f45c:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
1001f460:	f880 33fe 	strb.w	r3, [r0, #1022]	@ 0x3fe
1001f464:	f894 2040 	ldrb.w	r2, [r4, #64]	@ 0x40
1001f468:	f880 23fd 	strb.w	r2, [r0, #1021]	@ 0x3fd
1001f46c:	f200 33fd 	addw	r3, r0, #1021	@ 0x3fd
1001f470:	6023      	str	r3, [r4, #0]
1001f472:	e7e3      	b.n	1001f43c <__submore+0x34>
1001f474:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001f478:	e7e1      	b.n	1001f43e <__submore+0x36>
1001f47a:	bf00      	nop

1001f47c <__ssprint_r>:
1001f47c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001f480:	6893      	ldr	r3, [r2, #8]
1001f482:	6817      	ldr	r7, [r2, #0]
1001f484:	b083      	sub	sp, #12
1001f486:	4692      	mov	sl, r2
1001f488:	2b00      	cmp	r3, #0
1001f48a:	d074      	beq.n	1001f576 <__ssprint_r+0xfa>
1001f48c:	f04f 0b00 	mov.w	fp, #0
1001f490:	688b      	ldr	r3, [r1, #8]
1001f492:	680a      	ldr	r2, [r1, #0]
1001f494:	4681      	mov	r9, r0
1001f496:	460c      	mov	r4, r1
1001f498:	465d      	mov	r5, fp
1001f49a:	e045      	b.n	1001f528 <__ssprint_r+0xac>
1001f49c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001f4a0:	f413 6f90 	tst.w	r3, #1152	@ 0x480
1001f4a4:	d02c      	beq.n	1001f500 <__ssprint_r+0x84>
1001f4a6:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
1001f4aa:	1a16      	subs	r6, r2, r0
1001f4ac:	eb01 0241 	add.w	r2, r1, r1, lsl #1
1001f4b0:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
1001f4b4:	1c71      	adds	r1, r6, #1
1001f4b6:	1052      	asrs	r2, r2, #1
1001f4b8:	4429      	add	r1, r5
1001f4ba:	4291      	cmp	r1, r2
1001f4bc:	bf92      	itee	ls
1001f4be:	4690      	movls	r8, r2
1001f4c0:	4688      	movhi	r8, r1
1001f4c2:	460a      	movhi	r2, r1
1001f4c4:	055b      	lsls	r3, r3, #21
1001f4c6:	d539      	bpl.n	1001f53c <__ssprint_r+0xc0>
1001f4c8:	4611      	mov	r1, r2
1001f4ca:	4648      	mov	r0, r9
1001f4cc:	f7f5 fa5a 	bl	10014984 <_malloc_r>
1001f4d0:	9001      	str	r0, [sp, #4]
1001f4d2:	2800      	cmp	r0, #0
1001f4d4:	d03d      	beq.n	1001f552 <__ssprint_r+0xd6>
1001f4d6:	4632      	mov	r2, r6
1001f4d8:	6921      	ldr	r1, [r4, #16]
1001f4da:	f7f6 fa91 	bl	10015a00 <memcpy>
1001f4de:	89a2      	ldrh	r2, [r4, #12]
1001f4e0:	9b01      	ldr	r3, [sp, #4]
1001f4e2:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
1001f4e6:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
1001f4ea:	81a2      	strh	r2, [r4, #12]
1001f4ec:	1998      	adds	r0, r3, r6
1001f4ee:	eba8 0606 	sub.w	r6, r8, r6
1001f4f2:	60a6      	str	r6, [r4, #8]
1001f4f4:	f8c4 8014 	str.w	r8, [r4, #20]
1001f4f8:	6123      	str	r3, [r4, #16]
1001f4fa:	6020      	str	r0, [r4, #0]
1001f4fc:	46a8      	mov	r8, r5
1001f4fe:	462e      	mov	r6, r5
1001f500:	4632      	mov	r2, r6
1001f502:	4659      	mov	r1, fp
1001f504:	f7fd fef8 	bl	1001d2f8 <memmove>
1001f508:	f8da 1008 	ldr.w	r1, [sl, #8]
1001f50c:	68a3      	ldr	r3, [r4, #8]
1001f50e:	6822      	ldr	r2, [r4, #0]
1001f510:	eba3 0308 	sub.w	r3, r3, r8
1001f514:	4432      	add	r2, r6
1001f516:	1b49      	subs	r1, r1, r5
1001f518:	60a3      	str	r3, [r4, #8]
1001f51a:	6022      	str	r2, [r4, #0]
1001f51c:	f8ca 1008 	str.w	r1, [sl, #8]
1001f520:	b349      	cbz	r1, 1001f576 <__ssprint_r+0xfa>
1001f522:	e9d7 b500 	ldrd	fp, r5, [r7]
1001f526:	3708      	adds	r7, #8
1001f528:	4698      	mov	r8, r3
1001f52a:	4610      	mov	r0, r2
1001f52c:	2d00      	cmp	r5, #0
1001f52e:	d0f8      	beq.n	1001f522 <__ssprint_r+0xa6>
1001f530:	429d      	cmp	r5, r3
1001f532:	461e      	mov	r6, r3
1001f534:	d2b2      	bcs.n	1001f49c <__ssprint_r+0x20>
1001f536:	46a8      	mov	r8, r5
1001f538:	462e      	mov	r6, r5
1001f53a:	e7e1      	b.n	1001f500 <__ssprint_r+0x84>
1001f53c:	4601      	mov	r1, r0
1001f53e:	4648      	mov	r0, r9
1001f540:	f7f6 fbba 	bl	10015cb8 <_realloc_r>
1001f544:	4603      	mov	r3, r0
1001f546:	2800      	cmp	r0, #0
1001f548:	d1d0      	bne.n	1001f4ec <__ssprint_r+0x70>
1001f54a:	6921      	ldr	r1, [r4, #16]
1001f54c:	4648      	mov	r0, r9
1001f54e:	f7f7 fd9b 	bl	10017088 <_free_r>
1001f552:	89a3      	ldrh	r3, [r4, #12]
1001f554:	220c      	movs	r2, #12
1001f556:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001f55a:	f8c9 2000 	str.w	r2, [r9]
1001f55e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001f562:	81a3      	strh	r3, [r4, #12]
1001f564:	2200      	movs	r2, #0
1001f566:	2300      	movs	r3, #0
1001f568:	f8ca 2008 	str.w	r2, [sl, #8]
1001f56c:	f8ca 3004 	str.w	r3, [sl, #4]
1001f570:	b003      	add	sp, #12
1001f572:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001f576:	2000      	movs	r0, #0
1001f578:	2300      	movs	r3, #0
1001f57a:	f8ca 3004 	str.w	r3, [sl, #4]
1001f57e:	b003      	add	sp, #12
1001f580:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

1001f584 <__swbuf_r>:
1001f584:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1001f586:	460d      	mov	r5, r1
1001f588:	4614      	mov	r4, r2
1001f58a:	4606      	mov	r6, r0
1001f58c:	b110      	cbz	r0, 1001f594 <__swbuf_r+0x10>
1001f58e:	6b43      	ldr	r3, [r0, #52]	@ 0x34
1001f590:	2b00      	cmp	r3, #0
1001f592:	d04a      	beq.n	1001f62a <__swbuf_r+0xa6>
1001f594:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1001f598:	69a3      	ldr	r3, [r4, #24]
1001f59a:	60a3      	str	r3, [r4, #8]
1001f59c:	0710      	lsls	r0, r2, #28
1001f59e:	d51b      	bpl.n	1001f5d8 <__swbuf_r+0x54>
1001f5a0:	6923      	ldr	r3, [r4, #16]
1001f5a2:	b1cb      	cbz	r3, 1001f5d8 <__swbuf_r+0x54>
1001f5a4:	b2ed      	uxtb	r5, r5
1001f5a6:	0491      	lsls	r1, r2, #18
1001f5a8:	462f      	mov	r7, r5
1001f5aa:	d521      	bpl.n	1001f5f0 <__swbuf_r+0x6c>
1001f5ac:	6822      	ldr	r2, [r4, #0]
1001f5ae:	6961      	ldr	r1, [r4, #20]
1001f5b0:	1ad3      	subs	r3, r2, r3
1001f5b2:	4299      	cmp	r1, r3
1001f5b4:	dd28      	ble.n	1001f608 <__swbuf_r+0x84>
1001f5b6:	3301      	adds	r3, #1
1001f5b8:	68a1      	ldr	r1, [r4, #8]
1001f5ba:	3901      	subs	r1, #1
1001f5bc:	60a1      	str	r1, [r4, #8]
1001f5be:	1c51      	adds	r1, r2, #1
1001f5c0:	6021      	str	r1, [r4, #0]
1001f5c2:	7015      	strb	r5, [r2, #0]
1001f5c4:	6962      	ldr	r2, [r4, #20]
1001f5c6:	429a      	cmp	r2, r3
1001f5c8:	d026      	beq.n	1001f618 <__swbuf_r+0x94>
1001f5ca:	89a3      	ldrh	r3, [r4, #12]
1001f5cc:	07db      	lsls	r3, r3, #31
1001f5ce:	d501      	bpl.n	1001f5d4 <__swbuf_r+0x50>
1001f5d0:	2d0a      	cmp	r5, #10
1001f5d2:	d021      	beq.n	1001f618 <__swbuf_r+0x94>
1001f5d4:	4638      	mov	r0, r7
1001f5d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1001f5d8:	4621      	mov	r1, r4
1001f5da:	4630      	mov	r0, r6
1001f5dc:	f7fd ffb2 	bl	1001d544 <__swsetup_r>
1001f5e0:	bb00      	cbnz	r0, 1001f624 <__swbuf_r+0xa0>
1001f5e2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1001f5e6:	6923      	ldr	r3, [r4, #16]
1001f5e8:	b2ed      	uxtb	r5, r5
1001f5ea:	0491      	lsls	r1, r2, #18
1001f5ec:	462f      	mov	r7, r5
1001f5ee:	d4dd      	bmi.n	1001f5ac <__swbuf_r+0x28>
1001f5f0:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
1001f5f4:	81a2      	strh	r2, [r4, #12]
1001f5f6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
1001f5f8:	6961      	ldr	r1, [r4, #20]
1001f5fa:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
1001f5fe:	6662      	str	r2, [r4, #100]	@ 0x64
1001f600:	6822      	ldr	r2, [r4, #0]
1001f602:	1ad3      	subs	r3, r2, r3
1001f604:	4299      	cmp	r1, r3
1001f606:	dcd6      	bgt.n	1001f5b6 <__swbuf_r+0x32>
1001f608:	4621      	mov	r1, r4
1001f60a:	4630      	mov	r0, r6
1001f60c:	f7f5 fff4 	bl	100155f8 <_fflush_r>
1001f610:	b940      	cbnz	r0, 1001f624 <__swbuf_r+0xa0>
1001f612:	6822      	ldr	r2, [r4, #0]
1001f614:	2301      	movs	r3, #1
1001f616:	e7cf      	b.n	1001f5b8 <__swbuf_r+0x34>
1001f618:	4621      	mov	r1, r4
1001f61a:	4630      	mov	r0, r6
1001f61c:	f7f5 ffec 	bl	100155f8 <_fflush_r>
1001f620:	2800      	cmp	r0, #0
1001f622:	d0d7      	beq.n	1001f5d4 <__swbuf_r+0x50>
1001f624:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
1001f628:	e7d4      	b.n	1001f5d4 <__swbuf_r+0x50>
1001f62a:	f7f6 f969 	bl	10015900 <__sinit>
1001f62e:	e7b1      	b.n	1001f594 <__swbuf_r+0x10>

1001f630 <abort>:
1001f630:	b508      	push	{r3, lr}
1001f632:	2006      	movs	r0, #6
1001f634:	f000 f88c 	bl	1001f750 <raise>
1001f638:	2001      	movs	r0, #1
1001f63a:	f000 f8dd 	bl	1001f7f8 <_exit>
1001f63e:	bf00      	nop

1001f640 <_wcsnrtombs_l>:
1001f640:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001f644:	b089      	sub	sp, #36	@ 0x24
1001f646:	e9dd 7a13 	ldrd	r7, sl, [sp, #76]	@ 0x4c
1001f64a:	4686      	mov	lr, r0
1001f64c:	461e      	mov	r6, r3
1001f64e:	2f00      	cmp	r7, #0
1001f650:	d053      	beq.n	1001f6fa <_wcsnrtombs_l+0xba>
1001f652:	6815      	ldr	r5, [r2, #0]
1001f654:	2900      	cmp	r1, #0
1001f656:	d055      	beq.n	1001f704 <_wcsnrtombs_l+0xc4>
1001f658:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001f65a:	2b00      	cmp	r3, #0
1001f65c:	d062      	beq.n	1001f724 <_wcsnrtombs_l+0xe4>
1001f65e:	1e74      	subs	r4, r6, #1
1001f660:	b32e      	cbz	r6, 1001f6ae <_wcsnrtombs_l+0x6e>
1001f662:	e9cd e100 	strd	lr, r1, [sp]
1001f666:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
1001f66a:	9102      	str	r1, [sp, #8]
1001f66c:	3d04      	subs	r5, #4
1001f66e:	2600      	movs	r6, #0
1001f670:	9203      	str	r2, [sp, #12]
1001f672:	e00a      	b.n	1001f68a <_wcsnrtombs_l+0x4a>
1001f674:	9b01      	ldr	r3, [sp, #4]
1001f676:	b9f3      	cbnz	r3, 1001f6b6 <_wcsnrtombs_l+0x76>
1001f678:	6828      	ldr	r0, [r5, #0]
1001f67a:	2800      	cmp	r0, #0
1001f67c:	d031      	beq.n	1001f6e2 <_wcsnrtombs_l+0xa2>
1001f67e:	45dc      	cmp	ip, fp
1001f680:	d252      	bcs.n	1001f728 <_wcsnrtombs_l+0xe8>
1001f682:	3c01      	subs	r4, #1
1001f684:	1c63      	adds	r3, r4, #1
1001f686:	4666      	mov	r6, ip
1001f688:	d011      	beq.n	1001f6ae <_wcsnrtombs_l+0x6e>
1001f68a:	f855 2f04 	ldr.w	r2, [r5, #4]!
1001f68e:	9800      	ldr	r0, [sp, #0]
1001f690:	f8da c0e0 	ldr.w	ip, [sl, #224]	@ 0xe0
1001f694:	463b      	mov	r3, r7
1001f696:	a905      	add	r1, sp, #20
1001f698:	e9d7 9800 	ldrd	r9, r8, [r7]
1001f69c:	47e0      	blx	ip
1001f69e:	1c42      	adds	r2, r0, #1
1001f6a0:	d034      	beq.n	1001f70c <_wcsnrtombs_l+0xcc>
1001f6a2:	eb00 0c06 	add.w	ip, r0, r6
1001f6a6:	45dc      	cmp	ip, fp
1001f6a8:	d9e4      	bls.n	1001f674 <_wcsnrtombs_l+0x34>
1001f6aa:	e9c7 9800 	strd	r9, r8, [r7]
1001f6ae:	4630      	mov	r0, r6
1001f6b0:	b009      	add	sp, #36	@ 0x24
1001f6b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001f6b6:	2800      	cmp	r0, #0
1001f6b8:	dd0c      	ble.n	1001f6d4 <_wcsnrtombs_l+0x94>
1001f6ba:	9b02      	ldr	r3, [sp, #8]
1001f6bc:	4418      	add	r0, r3
1001f6be:	1e5a      	subs	r2, r3, #1
1001f6c0:	a905      	add	r1, sp, #20
1001f6c2:	f100 3eff 	add.w	lr, r0, #4294967295	@ 0xffffffff
1001f6c6:	f811 3b01 	ldrb.w	r3, [r1], #1
1001f6ca:	f802 3f01 	strb.w	r3, [r2, #1]!
1001f6ce:	4596      	cmp	lr, r2
1001f6d0:	d1f9      	bne.n	1001f6c6 <_wcsnrtombs_l+0x86>
1001f6d2:	9002      	str	r0, [sp, #8]
1001f6d4:	9b03      	ldr	r3, [sp, #12]
1001f6d6:	6828      	ldr	r0, [r5, #0]
1001f6d8:	681a      	ldr	r2, [r3, #0]
1001f6da:	3204      	adds	r2, #4
1001f6dc:	601a      	str	r2, [r3, #0]
1001f6de:	2800      	cmp	r0, #0
1001f6e0:	d1cd      	bne.n	1001f67e <_wcsnrtombs_l+0x3e>
1001f6e2:	9901      	ldr	r1, [sp, #4]
1001f6e4:	9a03      	ldr	r2, [sp, #12]
1001f6e6:	b101      	cbz	r1, 1001f6ea <_wcsnrtombs_l+0xaa>
1001f6e8:	6010      	str	r0, [r2, #0]
1001f6ea:	f10c 36ff 	add.w	r6, ip, #4294967295	@ 0xffffffff
1001f6ee:	2200      	movs	r2, #0
1001f6f0:	4630      	mov	r0, r6
1001f6f2:	603a      	str	r2, [r7, #0]
1001f6f4:	b009      	add	sp, #36	@ 0x24
1001f6f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001f6fa:	6815      	ldr	r5, [r2, #0]
1001f6fc:	f500 7786 	add.w	r7, r0, #268	@ 0x10c
1001f700:	2900      	cmp	r1, #0
1001f702:	d1a9      	bne.n	1001f658 <_wcsnrtombs_l+0x18>
1001f704:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001f708:	9312      	str	r3, [sp, #72]	@ 0x48
1001f70a:	e7a8      	b.n	1001f65e <_wcsnrtombs_l+0x1e>
1001f70c:	f8dd e000 	ldr.w	lr, [sp]
1001f710:	4606      	mov	r6, r0
1001f712:	218a      	movs	r1, #138	@ 0x8a
1001f714:	2200      	movs	r2, #0
1001f716:	4630      	mov	r0, r6
1001f718:	f8ce 1000 	str.w	r1, [lr]
1001f71c:	603a      	str	r2, [r7, #0]
1001f71e:	b009      	add	sp, #36	@ 0x24
1001f720:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001f724:	9e12      	ldr	r6, [sp, #72]	@ 0x48
1001f726:	e7c2      	b.n	1001f6ae <_wcsnrtombs_l+0x6e>
1001f728:	4666      	mov	r6, ip
1001f72a:	e7c0      	b.n	1001f6ae <_wcsnrtombs_l+0x6e>

1001f72c <_wcsnrtombs_r>:
1001f72c:	b510      	push	{r4, lr}
1001f72e:	b084      	sub	sp, #16
1001f730:	4c05      	ldr	r4, [pc, #20]	@ (1001f748 <_wcsnrtombs_r+0x1c>)
1001f732:	9806      	ldr	r0, [sp, #24]
1001f734:	9000      	str	r0, [sp, #0]
1001f736:	9807      	ldr	r0, [sp, #28]
1001f738:	9001      	str	r0, [sp, #4]
1001f73a:	4804      	ldr	r0, [pc, #16]	@ (1001f74c <_wcsnrtombs_r+0x20>)
1001f73c:	6800      	ldr	r0, [r0, #0]
1001f73e:	9402      	str	r4, [sp, #8]
1001f740:	f7ff ff7e 	bl	1001f640 <_wcsnrtombs_l>
1001f744:	b004      	add	sp, #16
1001f746:	bd10      	pop	{r4, pc}
1001f748:	20000424 	.word	0x20000424
1001f74c:	20000590 	.word	0x20000590

1001f750 <raise>:
1001f750:	b538      	push	{r3, r4, r5, lr}
1001f752:	4b14      	ldr	r3, [pc, #80]	@ (1001f7a4 <raise+0x54>)
1001f754:	281f      	cmp	r0, #31
1001f756:	681d      	ldr	r5, [r3, #0]
1001f758:	d81e      	bhi.n	1001f798 <raise+0x48>
1001f75a:	f8d5 2118 	ldr.w	r2, [r5, #280]	@ 0x118
1001f75e:	4604      	mov	r4, r0
1001f760:	b162      	cbz	r2, 1001f77c <raise+0x2c>
1001f762:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
1001f766:	b14b      	cbz	r3, 1001f77c <raise+0x2c>
1001f768:	2b01      	cmp	r3, #1
1001f76a:	d005      	beq.n	1001f778 <raise+0x28>
1001f76c:	1c59      	adds	r1, r3, #1
1001f76e:	d00f      	beq.n	1001f790 <raise+0x40>
1001f770:	2100      	movs	r1, #0
1001f772:	f842 1020 	str.w	r1, [r2, r0, lsl #2]
1001f776:	4798      	blx	r3
1001f778:	2000      	movs	r0, #0
1001f77a:	bd38      	pop	{r3, r4, r5, pc}
1001f77c:	4628      	mov	r0, r5
1001f77e:	f000 f829 	bl	1001f7d4 <_getpid_r>
1001f782:	4622      	mov	r2, r4
1001f784:	4601      	mov	r1, r0
1001f786:	4628      	mov	r0, r5
1001f788:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
1001f78c:	f000 b80c 	b.w	1001f7a8 <_kill_r>
1001f790:	2316      	movs	r3, #22
1001f792:	602b      	str	r3, [r5, #0]
1001f794:	2001      	movs	r0, #1
1001f796:	bd38      	pop	{r3, r4, r5, pc}
1001f798:	2316      	movs	r3, #22
1001f79a:	602b      	str	r3, [r5, #0]
1001f79c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001f7a0:	bd38      	pop	{r3, r4, r5, pc}
1001f7a2:	bf00      	nop
1001f7a4:	20000590 	.word	0x20000590

1001f7a8 <_kill_r>:
1001f7a8:	b570      	push	{r4, r5, r6, lr}
1001f7aa:	460c      	mov	r4, r1
1001f7ac:	4d08      	ldr	r5, [pc, #32]	@ (1001f7d0 <_kill_r+0x28>)
1001f7ae:	4603      	mov	r3, r0
1001f7b0:	2600      	movs	r6, #0
1001f7b2:	4620      	mov	r0, r4
1001f7b4:	4611      	mov	r1, r2
1001f7b6:	461c      	mov	r4, r3
1001f7b8:	602e      	str	r6, [r5, #0]
1001f7ba:	f000 f815 	bl	1001f7e8 <_kill>
1001f7be:	1c43      	adds	r3, r0, #1
1001f7c0:	d000      	beq.n	1001f7c4 <_kill_r+0x1c>
1001f7c2:	bd70      	pop	{r4, r5, r6, pc}
1001f7c4:	682b      	ldr	r3, [r5, #0]
1001f7c6:	2b00      	cmp	r3, #0
1001f7c8:	d0fb      	beq.n	1001f7c2 <_kill_r+0x1a>
1001f7ca:	6023      	str	r3, [r4, #0]
1001f7cc:	bd70      	pop	{r4, r5, r6, pc}
1001f7ce:	bf00      	nop
1001f7d0:	20001498 	.word	0x20001498

1001f7d4 <_getpid_r>:
1001f7d4:	f000 b800 	b.w	1001f7d8 <_getpid>

1001f7d8 <_getpid>:
1001f7d8:	4b02      	ldr	r3, [pc, #8]	@ (1001f7e4 <_getpid+0xc>)
1001f7da:	2258      	movs	r2, #88	@ 0x58
1001f7dc:	601a      	str	r2, [r3, #0]
1001f7de:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001f7e2:	4770      	bx	lr
1001f7e4:	20001498 	.word	0x20001498

1001f7e8 <_kill>:
1001f7e8:	4b02      	ldr	r3, [pc, #8]	@ (1001f7f4 <_kill+0xc>)
1001f7ea:	2258      	movs	r2, #88	@ 0x58
1001f7ec:	601a      	str	r2, [r3, #0]
1001f7ee:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001f7f2:	4770      	bx	lr
1001f7f4:	20001498 	.word	0x20001498

1001f7f8 <_exit>:
1001f7f8:	e7fe      	b.n	1001f7f8 <_exit>
1001f7fa:	bf00      	nop

1001f7fc <__aeabi_drsub>:
1001f7fc:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
1001f800:	e002      	b.n	1001f808 <__adddf3>
1001f802:	bf00      	nop

1001f804 <__aeabi_dsub>:
1001f804:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

1001f808 <__adddf3>:
1001f808:	b530      	push	{r4, r5, lr}
1001f80a:	ea4f 0441 	mov.w	r4, r1, lsl #1
1001f80e:	ea4f 0543 	mov.w	r5, r3, lsl #1
1001f812:	ea94 0f05 	teq	r4, r5
1001f816:	bf08      	it	eq
1001f818:	ea90 0f02 	teqeq	r0, r2
1001f81c:	bf1f      	itttt	ne
1001f81e:	ea54 0c00 	orrsne.w	ip, r4, r0
1001f822:	ea55 0c02 	orrsne.w	ip, r5, r2
1001f826:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
1001f82a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
1001f82e:	f000 80e2 	beq.w	1001f9f6 <__adddf3+0x1ee>
1001f832:	ea4f 5454 	mov.w	r4, r4, lsr #21
1001f836:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
1001f83a:	bfb8      	it	lt
1001f83c:	426d      	neglt	r5, r5
1001f83e:	dd0c      	ble.n	1001f85a <__adddf3+0x52>
1001f840:	442c      	add	r4, r5
1001f842:	ea80 0202 	eor.w	r2, r0, r2
1001f846:	ea81 0303 	eor.w	r3, r1, r3
1001f84a:	ea82 0000 	eor.w	r0, r2, r0
1001f84e:	ea83 0101 	eor.w	r1, r3, r1
1001f852:	ea80 0202 	eor.w	r2, r0, r2
1001f856:	ea81 0303 	eor.w	r3, r1, r3
1001f85a:	2d36      	cmp	r5, #54	@ 0x36
1001f85c:	bf88      	it	hi
1001f85e:	bd30      	pophi	{r4, r5, pc}
1001f860:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
1001f864:	ea4f 3101 	mov.w	r1, r1, lsl #12
1001f868:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
1001f86c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
1001f870:	d002      	beq.n	1001f878 <__adddf3+0x70>
1001f872:	4240      	negs	r0, r0
1001f874:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1001f878:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
1001f87c:	ea4f 3303 	mov.w	r3, r3, lsl #12
1001f880:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
1001f884:	d002      	beq.n	1001f88c <__adddf3+0x84>
1001f886:	4252      	negs	r2, r2
1001f888:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
1001f88c:	ea94 0f05 	teq	r4, r5
1001f890:	f000 80a7 	beq.w	1001f9e2 <__adddf3+0x1da>
1001f894:	f1a4 0401 	sub.w	r4, r4, #1
1001f898:	f1d5 0e20 	rsbs	lr, r5, #32
1001f89c:	db0d      	blt.n	1001f8ba <__adddf3+0xb2>
1001f89e:	fa02 fc0e 	lsl.w	ip, r2, lr
1001f8a2:	fa22 f205 	lsr.w	r2, r2, r5
1001f8a6:	1880      	adds	r0, r0, r2
1001f8a8:	f141 0100 	adc.w	r1, r1, #0
1001f8ac:	fa03 f20e 	lsl.w	r2, r3, lr
1001f8b0:	1880      	adds	r0, r0, r2
1001f8b2:	fa43 f305 	asr.w	r3, r3, r5
1001f8b6:	4159      	adcs	r1, r3
1001f8b8:	e00e      	b.n	1001f8d8 <__adddf3+0xd0>
1001f8ba:	f1a5 0520 	sub.w	r5, r5, #32
1001f8be:	f10e 0e20 	add.w	lr, lr, #32
1001f8c2:	2a01      	cmp	r2, #1
1001f8c4:	fa03 fc0e 	lsl.w	ip, r3, lr
1001f8c8:	bf28      	it	cs
1001f8ca:	f04c 0c02 	orrcs.w	ip, ip, #2
1001f8ce:	fa43 f305 	asr.w	r3, r3, r5
1001f8d2:	18c0      	adds	r0, r0, r3
1001f8d4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
1001f8d8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
1001f8dc:	d507      	bpl.n	1001f8ee <__adddf3+0xe6>
1001f8de:	f04f 0e00 	mov.w	lr, #0
1001f8e2:	f1dc 0c00 	rsbs	ip, ip, #0
1001f8e6:	eb7e 0000 	sbcs.w	r0, lr, r0
1001f8ea:	eb6e 0101 	sbc.w	r1, lr, r1
1001f8ee:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
1001f8f2:	d31b      	bcc.n	1001f92c <__adddf3+0x124>
1001f8f4:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
1001f8f8:	d30c      	bcc.n	1001f914 <__adddf3+0x10c>
1001f8fa:	0849      	lsrs	r1, r1, #1
1001f8fc:	ea5f 0030 	movs.w	r0, r0, rrx
1001f900:	ea4f 0c3c 	mov.w	ip, ip, rrx
1001f904:	f104 0401 	add.w	r4, r4, #1
1001f908:	ea4f 5244 	mov.w	r2, r4, lsl #21
1001f90c:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
1001f910:	f080 809a 	bcs.w	1001fa48 <__adddf3+0x240>
1001f914:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
1001f918:	bf08      	it	eq
1001f91a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
1001f91e:	f150 0000 	adcs.w	r0, r0, #0
1001f922:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1001f926:	ea41 0105 	orr.w	r1, r1, r5
1001f92a:	bd30      	pop	{r4, r5, pc}
1001f92c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
1001f930:	4140      	adcs	r0, r0
1001f932:	eb41 0101 	adc.w	r1, r1, r1
1001f936:	3c01      	subs	r4, #1
1001f938:	bf28      	it	cs
1001f93a:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
1001f93e:	d2e9      	bcs.n	1001f914 <__adddf3+0x10c>
1001f940:	f091 0f00 	teq	r1, #0
1001f944:	bf04      	itt	eq
1001f946:	4601      	moveq	r1, r0
1001f948:	2000      	moveq	r0, #0
1001f94a:	fab1 f381 	clz	r3, r1
1001f94e:	bf08      	it	eq
1001f950:	3320      	addeq	r3, #32
1001f952:	f1a3 030b 	sub.w	r3, r3, #11
1001f956:	f1b3 0220 	subs.w	r2, r3, #32
1001f95a:	da0c      	bge.n	1001f976 <__adddf3+0x16e>
1001f95c:	320c      	adds	r2, #12
1001f95e:	dd08      	ble.n	1001f972 <__adddf3+0x16a>
1001f960:	f102 0c14 	add.w	ip, r2, #20
1001f964:	f1c2 020c 	rsb	r2, r2, #12
1001f968:	fa01 f00c 	lsl.w	r0, r1, ip
1001f96c:	fa21 f102 	lsr.w	r1, r1, r2
1001f970:	e00c      	b.n	1001f98c <__adddf3+0x184>
1001f972:	f102 0214 	add.w	r2, r2, #20
1001f976:	bfd8      	it	le
1001f978:	f1c2 0c20 	rsble	ip, r2, #32
1001f97c:	fa01 f102 	lsl.w	r1, r1, r2
1001f980:	fa20 fc0c 	lsr.w	ip, r0, ip
1001f984:	bfdc      	itt	le
1001f986:	ea41 010c 	orrle.w	r1, r1, ip
1001f98a:	4090      	lslle	r0, r2
1001f98c:	1ae4      	subs	r4, r4, r3
1001f98e:	bfa2      	ittt	ge
1001f990:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
1001f994:	4329      	orrge	r1, r5
1001f996:	bd30      	popge	{r4, r5, pc}
1001f998:	ea6f 0404 	mvn.w	r4, r4
1001f99c:	3c1f      	subs	r4, #31
1001f99e:	da1c      	bge.n	1001f9da <__adddf3+0x1d2>
1001f9a0:	340c      	adds	r4, #12
1001f9a2:	dc0e      	bgt.n	1001f9c2 <__adddf3+0x1ba>
1001f9a4:	f104 0414 	add.w	r4, r4, #20
1001f9a8:	f1c4 0220 	rsb	r2, r4, #32
1001f9ac:	fa20 f004 	lsr.w	r0, r0, r4
1001f9b0:	fa01 f302 	lsl.w	r3, r1, r2
1001f9b4:	ea40 0003 	orr.w	r0, r0, r3
1001f9b8:	fa21 f304 	lsr.w	r3, r1, r4
1001f9bc:	ea45 0103 	orr.w	r1, r5, r3
1001f9c0:	bd30      	pop	{r4, r5, pc}
1001f9c2:	f1c4 040c 	rsb	r4, r4, #12
1001f9c6:	f1c4 0220 	rsb	r2, r4, #32
1001f9ca:	fa20 f002 	lsr.w	r0, r0, r2
1001f9ce:	fa01 f304 	lsl.w	r3, r1, r4
1001f9d2:	ea40 0003 	orr.w	r0, r0, r3
1001f9d6:	4629      	mov	r1, r5
1001f9d8:	bd30      	pop	{r4, r5, pc}
1001f9da:	fa21 f004 	lsr.w	r0, r1, r4
1001f9de:	4629      	mov	r1, r5
1001f9e0:	bd30      	pop	{r4, r5, pc}
1001f9e2:	f094 0f00 	teq	r4, #0
1001f9e6:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
1001f9ea:	bf06      	itte	eq
1001f9ec:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
1001f9f0:	3401      	addeq	r4, #1
1001f9f2:	3d01      	subne	r5, #1
1001f9f4:	e74e      	b.n	1001f894 <__adddf3+0x8c>
1001f9f6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
1001f9fa:	bf18      	it	ne
1001f9fc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
1001fa00:	d029      	beq.n	1001fa56 <__adddf3+0x24e>
1001fa02:	ea94 0f05 	teq	r4, r5
1001fa06:	bf08      	it	eq
1001fa08:	ea90 0f02 	teqeq	r0, r2
1001fa0c:	d005      	beq.n	1001fa1a <__adddf3+0x212>
1001fa0e:	ea54 0c00 	orrs.w	ip, r4, r0
1001fa12:	bf04      	itt	eq
1001fa14:	4619      	moveq	r1, r3
1001fa16:	4610      	moveq	r0, r2
1001fa18:	bd30      	pop	{r4, r5, pc}
1001fa1a:	ea91 0f03 	teq	r1, r3
1001fa1e:	bf1e      	ittt	ne
1001fa20:	2100      	movne	r1, #0
1001fa22:	2000      	movne	r0, #0
1001fa24:	bd30      	popne	{r4, r5, pc}
1001fa26:	ea5f 5c54 	movs.w	ip, r4, lsr #21
1001fa2a:	d105      	bne.n	1001fa38 <__adddf3+0x230>
1001fa2c:	0040      	lsls	r0, r0, #1
1001fa2e:	4149      	adcs	r1, r1
1001fa30:	bf28      	it	cs
1001fa32:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
1001fa36:	bd30      	pop	{r4, r5, pc}
1001fa38:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
1001fa3c:	bf3c      	itt	cc
1001fa3e:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
1001fa42:	bd30      	popcc	{r4, r5, pc}
1001fa44:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
1001fa48:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
1001fa4c:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
1001fa50:	f04f 0000 	mov.w	r0, #0
1001fa54:	bd30      	pop	{r4, r5, pc}
1001fa56:	ea7f 5c64 	mvns.w	ip, r4, asr #21
1001fa5a:	bf1a      	itte	ne
1001fa5c:	4619      	movne	r1, r3
1001fa5e:	4610      	movne	r0, r2
1001fa60:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
1001fa64:	bf1c      	itt	ne
1001fa66:	460b      	movne	r3, r1
1001fa68:	4602      	movne	r2, r0
1001fa6a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
1001fa6e:	bf06      	itte	eq
1001fa70:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
1001fa74:	ea91 0f03 	teqeq	r1, r3
1001fa78:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
1001fa7c:	bd30      	pop	{r4, r5, pc}
1001fa7e:	bf00      	nop

1001fa80 <__aeabi_ui2d>:
1001fa80:	f090 0f00 	teq	r0, #0
1001fa84:	bf04      	itt	eq
1001fa86:	2100      	moveq	r1, #0
1001fa88:	4770      	bxeq	lr
1001fa8a:	b530      	push	{r4, r5, lr}
1001fa8c:	f44f 6480 	mov.w	r4, #1024	@ 0x400
1001fa90:	f104 0432 	add.w	r4, r4, #50	@ 0x32
1001fa94:	f04f 0500 	mov.w	r5, #0
1001fa98:	f04f 0100 	mov.w	r1, #0
1001fa9c:	e750      	b.n	1001f940 <__adddf3+0x138>
1001fa9e:	bf00      	nop

1001faa0 <__aeabi_i2d>:
1001faa0:	f090 0f00 	teq	r0, #0
1001faa4:	bf04      	itt	eq
1001faa6:	2100      	moveq	r1, #0
1001faa8:	4770      	bxeq	lr
1001faaa:	b530      	push	{r4, r5, lr}
1001faac:	f44f 6480 	mov.w	r4, #1024	@ 0x400
1001fab0:	f104 0432 	add.w	r4, r4, #50	@ 0x32
1001fab4:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
1001fab8:	bf48      	it	mi
1001faba:	4240      	negmi	r0, r0
1001fabc:	f04f 0100 	mov.w	r1, #0
1001fac0:	e73e      	b.n	1001f940 <__adddf3+0x138>
1001fac2:	bf00      	nop

1001fac4 <__aeabi_f2d>:
1001fac4:	0042      	lsls	r2, r0, #1
1001fac6:	ea4f 01e2 	mov.w	r1, r2, asr #3
1001faca:	ea4f 0131 	mov.w	r1, r1, rrx
1001face:	ea4f 7002 	mov.w	r0, r2, lsl #28
1001fad2:	bf1f      	itttt	ne
1001fad4:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
1001fad8:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
1001fadc:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
1001fae0:	4770      	bxne	lr
1001fae2:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
1001fae6:	bf08      	it	eq
1001fae8:	4770      	bxeq	lr
1001faea:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
1001faee:	bf04      	itt	eq
1001faf0:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
1001faf4:	4770      	bxeq	lr
1001faf6:	b530      	push	{r4, r5, lr}
1001faf8:	f44f 7460 	mov.w	r4, #896	@ 0x380
1001fafc:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
1001fb00:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
1001fb04:	e71c      	b.n	1001f940 <__adddf3+0x138>
1001fb06:	bf00      	nop

1001fb08 <__aeabi_ul2d>:
1001fb08:	ea50 0201 	orrs.w	r2, r0, r1
1001fb0c:	bf08      	it	eq
1001fb0e:	4770      	bxeq	lr
1001fb10:	b530      	push	{r4, r5, lr}
1001fb12:	f04f 0500 	mov.w	r5, #0
1001fb16:	e00a      	b.n	1001fb2e <__aeabi_l2d+0x16>

1001fb18 <__aeabi_l2d>:
1001fb18:	ea50 0201 	orrs.w	r2, r0, r1
1001fb1c:	bf08      	it	eq
1001fb1e:	4770      	bxeq	lr
1001fb20:	b530      	push	{r4, r5, lr}
1001fb22:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
1001fb26:	d502      	bpl.n	1001fb2e <__aeabi_l2d+0x16>
1001fb28:	4240      	negs	r0, r0
1001fb2a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1001fb2e:	f44f 6480 	mov.w	r4, #1024	@ 0x400
1001fb32:	f104 0432 	add.w	r4, r4, #50	@ 0x32
1001fb36:	ea5f 5c91 	movs.w	ip, r1, lsr #22
1001fb3a:	f43f aed8 	beq.w	1001f8ee <__adddf3+0xe6>
1001fb3e:	f04f 0203 	mov.w	r2, #3
1001fb42:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
1001fb46:	bf18      	it	ne
1001fb48:	3203      	addne	r2, #3
1001fb4a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
1001fb4e:	bf18      	it	ne
1001fb50:	3203      	addne	r2, #3
1001fb52:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
1001fb56:	f1c2 0320 	rsb	r3, r2, #32
1001fb5a:	fa00 fc03 	lsl.w	ip, r0, r3
1001fb5e:	fa20 f002 	lsr.w	r0, r0, r2
1001fb62:	fa01 fe03 	lsl.w	lr, r1, r3
1001fb66:	ea40 000e 	orr.w	r0, r0, lr
1001fb6a:	fa21 f102 	lsr.w	r1, r1, r2
1001fb6e:	4414      	add	r4, r2
1001fb70:	e6bd      	b.n	1001f8ee <__adddf3+0xe6>
1001fb72:	bf00      	nop

1001fb74 <__aeabi_dmul>:
1001fb74:	b570      	push	{r4, r5, r6, lr}
1001fb76:	f04f 0cff 	mov.w	ip, #255	@ 0xff
1001fb7a:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
1001fb7e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
1001fb82:	bf1d      	ittte	ne
1001fb84:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
1001fb88:	ea94 0f0c 	teqne	r4, ip
1001fb8c:	ea95 0f0c 	teqne	r5, ip
1001fb90:	f000 f8de 	bleq	1001fd50 <__aeabi_dmul+0x1dc>
1001fb94:	442c      	add	r4, r5
1001fb96:	ea81 0603 	eor.w	r6, r1, r3
1001fb9a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
1001fb9e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
1001fba2:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
1001fba6:	bf18      	it	ne
1001fba8:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
1001fbac:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
1001fbb0:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
1001fbb4:	d038      	beq.n	1001fc28 <__aeabi_dmul+0xb4>
1001fbb6:	fba0 ce02 	umull	ip, lr, r0, r2
1001fbba:	f04f 0500 	mov.w	r5, #0
1001fbbe:	fbe1 e502 	umlal	lr, r5, r1, r2
1001fbc2:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
1001fbc6:	fbe0 e503 	umlal	lr, r5, r0, r3
1001fbca:	f04f 0600 	mov.w	r6, #0
1001fbce:	fbe1 5603 	umlal	r5, r6, r1, r3
1001fbd2:	f09c 0f00 	teq	ip, #0
1001fbd6:	bf18      	it	ne
1001fbd8:	f04e 0e01 	orrne.w	lr, lr, #1
1001fbdc:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
1001fbe0:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
1001fbe4:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
1001fbe8:	d204      	bcs.n	1001fbf4 <__aeabi_dmul+0x80>
1001fbea:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
1001fbee:	416d      	adcs	r5, r5
1001fbf0:	eb46 0606 	adc.w	r6, r6, r6
1001fbf4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
1001fbf8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
1001fbfc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
1001fc00:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
1001fc04:	ea4f 2ece 	mov.w	lr, lr, lsl #11
1001fc08:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
1001fc0c:	bf88      	it	hi
1001fc0e:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
1001fc12:	d81e      	bhi.n	1001fc52 <__aeabi_dmul+0xde>
1001fc14:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
1001fc18:	bf08      	it	eq
1001fc1a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
1001fc1e:	f150 0000 	adcs.w	r0, r0, #0
1001fc22:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1001fc26:	bd70      	pop	{r4, r5, r6, pc}
1001fc28:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
1001fc2c:	ea46 0101 	orr.w	r1, r6, r1
1001fc30:	ea40 0002 	orr.w	r0, r0, r2
1001fc34:	ea81 0103 	eor.w	r1, r1, r3
1001fc38:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
1001fc3c:	bfc2      	ittt	gt
1001fc3e:	ebd4 050c 	rsbsgt	r5, r4, ip
1001fc42:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
1001fc46:	bd70      	popgt	{r4, r5, r6, pc}
1001fc48:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
1001fc4c:	f04f 0e00 	mov.w	lr, #0
1001fc50:	3c01      	subs	r4, #1
1001fc52:	f300 80ab 	bgt.w	1001fdac <__aeabi_dmul+0x238>
1001fc56:	f114 0f36 	cmn.w	r4, #54	@ 0x36
1001fc5a:	bfde      	ittt	le
1001fc5c:	2000      	movle	r0, #0
1001fc5e:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
1001fc62:	bd70      	pople	{r4, r5, r6, pc}
1001fc64:	f1c4 0400 	rsb	r4, r4, #0
1001fc68:	3c20      	subs	r4, #32
1001fc6a:	da35      	bge.n	1001fcd8 <__aeabi_dmul+0x164>
1001fc6c:	340c      	adds	r4, #12
1001fc6e:	dc1b      	bgt.n	1001fca8 <__aeabi_dmul+0x134>
1001fc70:	f104 0414 	add.w	r4, r4, #20
1001fc74:	f1c4 0520 	rsb	r5, r4, #32
1001fc78:	fa00 f305 	lsl.w	r3, r0, r5
1001fc7c:	fa20 f004 	lsr.w	r0, r0, r4
1001fc80:	fa01 f205 	lsl.w	r2, r1, r5
1001fc84:	ea40 0002 	orr.w	r0, r0, r2
1001fc88:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
1001fc8c:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
1001fc90:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
1001fc94:	fa21 f604 	lsr.w	r6, r1, r4
1001fc98:	eb42 0106 	adc.w	r1, r2, r6
1001fc9c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
1001fca0:	bf08      	it	eq
1001fca2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1001fca6:	bd70      	pop	{r4, r5, r6, pc}
1001fca8:	f1c4 040c 	rsb	r4, r4, #12
1001fcac:	f1c4 0520 	rsb	r5, r4, #32
1001fcb0:	fa00 f304 	lsl.w	r3, r0, r4
1001fcb4:	fa20 f005 	lsr.w	r0, r0, r5
1001fcb8:	fa01 f204 	lsl.w	r2, r1, r4
1001fcbc:	ea40 0002 	orr.w	r0, r0, r2
1001fcc0:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
1001fcc4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
1001fcc8:	f141 0100 	adc.w	r1, r1, #0
1001fccc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
1001fcd0:	bf08      	it	eq
1001fcd2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1001fcd6:	bd70      	pop	{r4, r5, r6, pc}
1001fcd8:	f1c4 0520 	rsb	r5, r4, #32
1001fcdc:	fa00 f205 	lsl.w	r2, r0, r5
1001fce0:	ea4e 0e02 	orr.w	lr, lr, r2
1001fce4:	fa20 f304 	lsr.w	r3, r0, r4
1001fce8:	fa01 f205 	lsl.w	r2, r1, r5
1001fcec:	ea43 0302 	orr.w	r3, r3, r2
1001fcf0:	fa21 f004 	lsr.w	r0, r1, r4
1001fcf4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
1001fcf8:	fa21 f204 	lsr.w	r2, r1, r4
1001fcfc:	ea20 0002 	bic.w	r0, r0, r2
1001fd00:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
1001fd04:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
1001fd08:	bf08      	it	eq
1001fd0a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1001fd0e:	bd70      	pop	{r4, r5, r6, pc}
1001fd10:	f094 0f00 	teq	r4, #0
1001fd14:	d10f      	bne.n	1001fd36 <__aeabi_dmul+0x1c2>
1001fd16:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
1001fd1a:	0040      	lsls	r0, r0, #1
1001fd1c:	eb41 0101 	adc.w	r1, r1, r1
1001fd20:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
1001fd24:	bf08      	it	eq
1001fd26:	3c01      	subeq	r4, #1
1001fd28:	d0f7      	beq.n	1001fd1a <__aeabi_dmul+0x1a6>
1001fd2a:	ea41 0106 	orr.w	r1, r1, r6
1001fd2e:	f095 0f00 	teq	r5, #0
1001fd32:	bf18      	it	ne
1001fd34:	4770      	bxne	lr
1001fd36:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
1001fd3a:	0052      	lsls	r2, r2, #1
1001fd3c:	eb43 0303 	adc.w	r3, r3, r3
1001fd40:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
1001fd44:	bf08      	it	eq
1001fd46:	3d01      	subeq	r5, #1
1001fd48:	d0f7      	beq.n	1001fd3a <__aeabi_dmul+0x1c6>
1001fd4a:	ea43 0306 	orr.w	r3, r3, r6
1001fd4e:	4770      	bx	lr
1001fd50:	ea94 0f0c 	teq	r4, ip
1001fd54:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
1001fd58:	bf18      	it	ne
1001fd5a:	ea95 0f0c 	teqne	r5, ip
1001fd5e:	d00c      	beq.n	1001fd7a <__aeabi_dmul+0x206>
1001fd60:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1001fd64:	bf18      	it	ne
1001fd66:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1001fd6a:	d1d1      	bne.n	1001fd10 <__aeabi_dmul+0x19c>
1001fd6c:	ea81 0103 	eor.w	r1, r1, r3
1001fd70:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
1001fd74:	f04f 0000 	mov.w	r0, #0
1001fd78:	bd70      	pop	{r4, r5, r6, pc}
1001fd7a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1001fd7e:	bf06      	itte	eq
1001fd80:	4610      	moveq	r0, r2
1001fd82:	4619      	moveq	r1, r3
1001fd84:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1001fd88:	d019      	beq.n	1001fdbe <__aeabi_dmul+0x24a>
1001fd8a:	ea94 0f0c 	teq	r4, ip
1001fd8e:	d102      	bne.n	1001fd96 <__aeabi_dmul+0x222>
1001fd90:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
1001fd94:	d113      	bne.n	1001fdbe <__aeabi_dmul+0x24a>
1001fd96:	ea95 0f0c 	teq	r5, ip
1001fd9a:	d105      	bne.n	1001fda8 <__aeabi_dmul+0x234>
1001fd9c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
1001fda0:	bf1c      	itt	ne
1001fda2:	4610      	movne	r0, r2
1001fda4:	4619      	movne	r1, r3
1001fda6:	d10a      	bne.n	1001fdbe <__aeabi_dmul+0x24a>
1001fda8:	ea81 0103 	eor.w	r1, r1, r3
1001fdac:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
1001fdb0:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
1001fdb4:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
1001fdb8:	f04f 0000 	mov.w	r0, #0
1001fdbc:	bd70      	pop	{r4, r5, r6, pc}
1001fdbe:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
1001fdc2:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
1001fdc6:	bd70      	pop	{r4, r5, r6, pc}

1001fdc8 <__aeabi_ddiv>:
1001fdc8:	b570      	push	{r4, r5, r6, lr}
1001fdca:	f04f 0cff 	mov.w	ip, #255	@ 0xff
1001fdce:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
1001fdd2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
1001fdd6:	bf1d      	ittte	ne
1001fdd8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
1001fddc:	ea94 0f0c 	teqne	r4, ip
1001fde0:	ea95 0f0c 	teqne	r5, ip
1001fde4:	f000 f8a7 	bleq	1001ff36 <__aeabi_ddiv+0x16e>
1001fde8:	eba4 0405 	sub.w	r4, r4, r5
1001fdec:	ea81 0e03 	eor.w	lr, r1, r3
1001fdf0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
1001fdf4:	ea4f 3101 	mov.w	r1, r1, lsl #12
1001fdf8:	f000 8088 	beq.w	1001ff0c <__aeabi_ddiv+0x144>
1001fdfc:	ea4f 3303 	mov.w	r3, r3, lsl #12
1001fe00:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
1001fe04:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
1001fe08:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
1001fe0c:	ea4f 2202 	mov.w	r2, r2, lsl #8
1001fe10:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
1001fe14:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
1001fe18:	ea4f 2600 	mov.w	r6, r0, lsl #8
1001fe1c:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
1001fe20:	429d      	cmp	r5, r3
1001fe22:	bf08      	it	eq
1001fe24:	4296      	cmpeq	r6, r2
1001fe26:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
1001fe2a:	f504 7440 	add.w	r4, r4, #768	@ 0x300
1001fe2e:	d202      	bcs.n	1001fe36 <__aeabi_ddiv+0x6e>
1001fe30:	085b      	lsrs	r3, r3, #1
1001fe32:	ea4f 0232 	mov.w	r2, r2, rrx
1001fe36:	1ab6      	subs	r6, r6, r2
1001fe38:	eb65 0503 	sbc.w	r5, r5, r3
1001fe3c:	085b      	lsrs	r3, r3, #1
1001fe3e:	ea4f 0232 	mov.w	r2, r2, rrx
1001fe42:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
1001fe46:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
1001fe4a:	ebb6 0e02 	subs.w	lr, r6, r2
1001fe4e:	eb75 0e03 	sbcs.w	lr, r5, r3
1001fe52:	bf22      	ittt	cs
1001fe54:	1ab6      	subcs	r6, r6, r2
1001fe56:	4675      	movcs	r5, lr
1001fe58:	ea40 000c 	orrcs.w	r0, r0, ip
1001fe5c:	085b      	lsrs	r3, r3, #1
1001fe5e:	ea4f 0232 	mov.w	r2, r2, rrx
1001fe62:	ebb6 0e02 	subs.w	lr, r6, r2
1001fe66:	eb75 0e03 	sbcs.w	lr, r5, r3
1001fe6a:	bf22      	ittt	cs
1001fe6c:	1ab6      	subcs	r6, r6, r2
1001fe6e:	4675      	movcs	r5, lr
1001fe70:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
1001fe74:	085b      	lsrs	r3, r3, #1
1001fe76:	ea4f 0232 	mov.w	r2, r2, rrx
1001fe7a:	ebb6 0e02 	subs.w	lr, r6, r2
1001fe7e:	eb75 0e03 	sbcs.w	lr, r5, r3
1001fe82:	bf22      	ittt	cs
1001fe84:	1ab6      	subcs	r6, r6, r2
1001fe86:	4675      	movcs	r5, lr
1001fe88:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
1001fe8c:	085b      	lsrs	r3, r3, #1
1001fe8e:	ea4f 0232 	mov.w	r2, r2, rrx
1001fe92:	ebb6 0e02 	subs.w	lr, r6, r2
1001fe96:	eb75 0e03 	sbcs.w	lr, r5, r3
1001fe9a:	bf22      	ittt	cs
1001fe9c:	1ab6      	subcs	r6, r6, r2
1001fe9e:	4675      	movcs	r5, lr
1001fea0:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
1001fea4:	ea55 0e06 	orrs.w	lr, r5, r6
1001fea8:	d018      	beq.n	1001fedc <__aeabi_ddiv+0x114>
1001feaa:	ea4f 1505 	mov.w	r5, r5, lsl #4
1001feae:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
1001feb2:	ea4f 1606 	mov.w	r6, r6, lsl #4
1001feb6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
1001feba:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
1001febe:	ea4f 02c2 	mov.w	r2, r2, lsl #3
1001fec2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
1001fec6:	d1c0      	bne.n	1001fe4a <__aeabi_ddiv+0x82>
1001fec8:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
1001fecc:	d10b      	bne.n	1001fee6 <__aeabi_ddiv+0x11e>
1001fece:	ea41 0100 	orr.w	r1, r1, r0
1001fed2:	f04f 0000 	mov.w	r0, #0
1001fed6:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
1001feda:	e7b6      	b.n	1001fe4a <__aeabi_ddiv+0x82>
1001fedc:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
1001fee0:	bf04      	itt	eq
1001fee2:	4301      	orreq	r1, r0
1001fee4:	2000      	moveq	r0, #0
1001fee6:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
1001feea:	bf88      	it	hi
1001feec:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
1001fef0:	f63f aeaf 	bhi.w	1001fc52 <__aeabi_dmul+0xde>
1001fef4:	ebb5 0c03 	subs.w	ip, r5, r3
1001fef8:	bf04      	itt	eq
1001fefa:	ebb6 0c02 	subseq.w	ip, r6, r2
1001fefe:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
1001ff02:	f150 0000 	adcs.w	r0, r0, #0
1001ff06:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1001ff0a:	bd70      	pop	{r4, r5, r6, pc}
1001ff0c:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
1001ff10:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
1001ff14:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
1001ff18:	bfc2      	ittt	gt
1001ff1a:	ebd4 050c 	rsbsgt	r5, r4, ip
1001ff1e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
1001ff22:	bd70      	popgt	{r4, r5, r6, pc}
1001ff24:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
1001ff28:	f04f 0e00 	mov.w	lr, #0
1001ff2c:	3c01      	subs	r4, #1
1001ff2e:	e690      	b.n	1001fc52 <__aeabi_dmul+0xde>
1001ff30:	ea45 0e06 	orr.w	lr, r5, r6
1001ff34:	e68d      	b.n	1001fc52 <__aeabi_dmul+0xde>
1001ff36:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
1001ff3a:	ea94 0f0c 	teq	r4, ip
1001ff3e:	bf08      	it	eq
1001ff40:	ea95 0f0c 	teqeq	r5, ip
1001ff44:	f43f af3b 	beq.w	1001fdbe <__aeabi_dmul+0x24a>
1001ff48:	ea94 0f0c 	teq	r4, ip
1001ff4c:	d10a      	bne.n	1001ff64 <__aeabi_ddiv+0x19c>
1001ff4e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
1001ff52:	f47f af34 	bne.w	1001fdbe <__aeabi_dmul+0x24a>
1001ff56:	ea95 0f0c 	teq	r5, ip
1001ff5a:	f47f af25 	bne.w	1001fda8 <__aeabi_dmul+0x234>
1001ff5e:	4610      	mov	r0, r2
1001ff60:	4619      	mov	r1, r3
1001ff62:	e72c      	b.n	1001fdbe <__aeabi_dmul+0x24a>
1001ff64:	ea95 0f0c 	teq	r5, ip
1001ff68:	d106      	bne.n	1001ff78 <__aeabi_ddiv+0x1b0>
1001ff6a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
1001ff6e:	f43f aefd 	beq.w	1001fd6c <__aeabi_dmul+0x1f8>
1001ff72:	4610      	mov	r0, r2
1001ff74:	4619      	mov	r1, r3
1001ff76:	e722      	b.n	1001fdbe <__aeabi_dmul+0x24a>
1001ff78:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1001ff7c:	bf18      	it	ne
1001ff7e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1001ff82:	f47f aec5 	bne.w	1001fd10 <__aeabi_dmul+0x19c>
1001ff86:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
1001ff8a:	f47f af0d 	bne.w	1001fda8 <__aeabi_dmul+0x234>
1001ff8e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
1001ff92:	f47f aeeb 	bne.w	1001fd6c <__aeabi_dmul+0x1f8>
1001ff96:	e712      	b.n	1001fdbe <__aeabi_dmul+0x24a>

1001ff98 <__gedf2>:
1001ff98:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
1001ff9c:	e006      	b.n	1001ffac <__cmpdf2+0x4>
1001ff9e:	bf00      	nop

1001ffa0 <__ledf2>:
1001ffa0:	f04f 0c01 	mov.w	ip, #1
1001ffa4:	e002      	b.n	1001ffac <__cmpdf2+0x4>
1001ffa6:	bf00      	nop

1001ffa8 <__cmpdf2>:
1001ffa8:	f04f 0c01 	mov.w	ip, #1
1001ffac:	f84d cd04 	str.w	ip, [sp, #-4]!
1001ffb0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
1001ffb4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1001ffb8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
1001ffbc:	bf18      	it	ne
1001ffbe:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
1001ffc2:	d01b      	beq.n	1001fffc <__cmpdf2+0x54>
1001ffc4:	b001      	add	sp, #4
1001ffc6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
1001ffca:	bf0c      	ite	eq
1001ffcc:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
1001ffd0:	ea91 0f03 	teqne	r1, r3
1001ffd4:	bf02      	ittt	eq
1001ffd6:	ea90 0f02 	teqeq	r0, r2
1001ffda:	2000      	moveq	r0, #0
1001ffdc:	4770      	bxeq	lr
1001ffde:	f110 0f00 	cmn.w	r0, #0
1001ffe2:	ea91 0f03 	teq	r1, r3
1001ffe6:	bf58      	it	pl
1001ffe8:	4299      	cmppl	r1, r3
1001ffea:	bf08      	it	eq
1001ffec:	4290      	cmpeq	r0, r2
1001ffee:	bf2c      	ite	cs
1001fff0:	17d8      	asrcs	r0, r3, #31
1001fff2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
1001fff6:	f040 0001 	orr.w	r0, r0, #1
1001fffa:	4770      	bx	lr
1001fffc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10020000:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10020004:	d102      	bne.n	1002000c <__cmpdf2+0x64>
10020006:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
1002000a:	d107      	bne.n	1002001c <__cmpdf2+0x74>
1002000c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10020010:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10020014:	d1d6      	bne.n	1001ffc4 <__cmpdf2+0x1c>
10020016:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
1002001a:	d0d3      	beq.n	1001ffc4 <__cmpdf2+0x1c>
1002001c:	f85d 0b04 	ldr.w	r0, [sp], #4
10020020:	4770      	bx	lr
10020022:	bf00      	nop

10020024 <__aeabi_cdrcmple>:
10020024:	4684      	mov	ip, r0
10020026:	4610      	mov	r0, r2
10020028:	4662      	mov	r2, ip
1002002a:	468c      	mov	ip, r1
1002002c:	4619      	mov	r1, r3
1002002e:	4663      	mov	r3, ip
10020030:	e000      	b.n	10020034 <__aeabi_cdcmpeq>
10020032:	bf00      	nop

10020034 <__aeabi_cdcmpeq>:
10020034:	b501      	push	{r0, lr}
10020036:	f7ff ffb7 	bl	1001ffa8 <__cmpdf2>
1002003a:	2800      	cmp	r0, #0
1002003c:	bf48      	it	mi
1002003e:	f110 0f00 	cmnmi.w	r0, #0
10020042:	bd01      	pop	{r0, pc}

10020044 <__aeabi_dcmpeq>:
10020044:	f84d ed08 	str.w	lr, [sp, #-8]!
10020048:	f7ff fff4 	bl	10020034 <__aeabi_cdcmpeq>
1002004c:	bf0c      	ite	eq
1002004e:	2001      	moveq	r0, #1
10020050:	2000      	movne	r0, #0
10020052:	f85d fb08 	ldr.w	pc, [sp], #8
10020056:	bf00      	nop

10020058 <__aeabi_dcmplt>:
10020058:	f84d ed08 	str.w	lr, [sp, #-8]!
1002005c:	f7ff ffea 	bl	10020034 <__aeabi_cdcmpeq>
10020060:	bf34      	ite	cc
10020062:	2001      	movcc	r0, #1
10020064:	2000      	movcs	r0, #0
10020066:	f85d fb08 	ldr.w	pc, [sp], #8
1002006a:	bf00      	nop

1002006c <__aeabi_dcmple>:
1002006c:	f84d ed08 	str.w	lr, [sp, #-8]!
10020070:	f7ff ffe0 	bl	10020034 <__aeabi_cdcmpeq>
10020074:	bf94      	ite	ls
10020076:	2001      	movls	r0, #1
10020078:	2000      	movhi	r0, #0
1002007a:	f85d fb08 	ldr.w	pc, [sp], #8
1002007e:	bf00      	nop

10020080 <__aeabi_dcmpge>:
10020080:	f84d ed08 	str.w	lr, [sp, #-8]!
10020084:	f7ff ffce 	bl	10020024 <__aeabi_cdrcmple>
10020088:	bf94      	ite	ls
1002008a:	2001      	movls	r0, #1
1002008c:	2000      	movhi	r0, #0
1002008e:	f85d fb08 	ldr.w	pc, [sp], #8
10020092:	bf00      	nop

10020094 <__aeabi_dcmpgt>:
10020094:	f84d ed08 	str.w	lr, [sp, #-8]!
10020098:	f7ff ffc4 	bl	10020024 <__aeabi_cdrcmple>
1002009c:	bf34      	ite	cc
1002009e:	2001      	movcc	r0, #1
100200a0:	2000      	movcs	r0, #0
100200a2:	f85d fb08 	ldr.w	pc, [sp], #8
100200a6:	bf00      	nop

100200a8 <__aeabi_dcmpun>:
100200a8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
100200ac:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
100200b0:	d102      	bne.n	100200b8 <__aeabi_dcmpun+0x10>
100200b2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
100200b6:	d10a      	bne.n	100200ce <__aeabi_dcmpun+0x26>
100200b8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
100200bc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
100200c0:	d102      	bne.n	100200c8 <__aeabi_dcmpun+0x20>
100200c2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
100200c6:	d102      	bne.n	100200ce <__aeabi_dcmpun+0x26>
100200c8:	f04f 0000 	mov.w	r0, #0
100200cc:	4770      	bx	lr
100200ce:	f04f 0001 	mov.w	r0, #1
100200d2:	4770      	bx	lr

100200d4 <__aeabi_d2iz>:
100200d4:	ea4f 0241 	mov.w	r2, r1, lsl #1
100200d8:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
100200dc:	d215      	bcs.n	1002010a <__aeabi_d2iz+0x36>
100200de:	d511      	bpl.n	10020104 <__aeabi_d2iz+0x30>
100200e0:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
100200e4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
100200e8:	d912      	bls.n	10020110 <__aeabi_d2iz+0x3c>
100200ea:	ea4f 23c1 	mov.w	r3, r1, lsl #11
100200ee:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
100200f2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
100200f6:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
100200fa:	fa23 f002 	lsr.w	r0, r3, r2
100200fe:	bf18      	it	ne
10020100:	4240      	negne	r0, r0
10020102:	4770      	bx	lr
10020104:	f04f 0000 	mov.w	r0, #0
10020108:	4770      	bx	lr
1002010a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
1002010e:	d105      	bne.n	1002011c <__aeabi_d2iz+0x48>
10020110:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
10020114:	bf08      	it	eq
10020116:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
1002011a:	4770      	bx	lr
1002011c:	f04f 0000 	mov.w	r0, #0
10020120:	4770      	bx	lr
10020122:	bf00      	nop

10020124 <__aeabi_d2uiz>:
10020124:	004a      	lsls	r2, r1, #1
10020126:	d211      	bcs.n	1002014c <__aeabi_d2uiz+0x28>
10020128:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
1002012c:	d211      	bcs.n	10020152 <__aeabi_d2uiz+0x2e>
1002012e:	d50d      	bpl.n	1002014c <__aeabi_d2uiz+0x28>
10020130:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
10020134:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
10020138:	d40e      	bmi.n	10020158 <__aeabi_d2uiz+0x34>
1002013a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
1002013e:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
10020142:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
10020146:	fa23 f002 	lsr.w	r0, r3, r2
1002014a:	4770      	bx	lr
1002014c:	f04f 0000 	mov.w	r0, #0
10020150:	4770      	bx	lr
10020152:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
10020156:	d102      	bne.n	1002015e <__aeabi_d2uiz+0x3a>
10020158:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1002015c:	4770      	bx	lr
1002015e:	f04f 0000 	mov.w	r0, #0
10020162:	4770      	bx	lr

10020164 <__aeabi_d2f>:
10020164:	ea4f 0241 	mov.w	r2, r1, lsl #1
10020168:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
1002016c:	bf24      	itt	cs
1002016e:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
10020172:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
10020176:	d90d      	bls.n	10020194 <__aeabi_d2f+0x30>
10020178:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
1002017c:	ea4f 02c0 	mov.w	r2, r0, lsl #3
10020180:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
10020184:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
10020188:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
1002018c:	bf08      	it	eq
1002018e:	f020 0001 	biceq.w	r0, r0, #1
10020192:	4770      	bx	lr
10020194:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
10020198:	d121      	bne.n	100201de <__aeabi_d2f+0x7a>
1002019a:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
1002019e:	bfbc      	itt	lt
100201a0:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
100201a4:	4770      	bxlt	lr
100201a6:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
100201aa:	ea4f 5252 	mov.w	r2, r2, lsr #21
100201ae:	f1c2 0218 	rsb	r2, r2, #24
100201b2:	f1c2 0c20 	rsb	ip, r2, #32
100201b6:	fa10 f30c 	lsls.w	r3, r0, ip
100201ba:	fa20 f002 	lsr.w	r0, r0, r2
100201be:	bf18      	it	ne
100201c0:	f040 0001 	orrne.w	r0, r0, #1
100201c4:	ea4f 23c1 	mov.w	r3, r1, lsl #11
100201c8:	ea4f 23d3 	mov.w	r3, r3, lsr #11
100201cc:	fa03 fc0c 	lsl.w	ip, r3, ip
100201d0:	ea40 000c 	orr.w	r0, r0, ip
100201d4:	fa23 f302 	lsr.w	r3, r3, r2
100201d8:	ea4f 0343 	mov.w	r3, r3, lsl #1
100201dc:	e7cc      	b.n	10020178 <__aeabi_d2f+0x14>
100201de:	ea7f 5362 	mvns.w	r3, r2, asr #21
100201e2:	d107      	bne.n	100201f4 <__aeabi_d2f+0x90>
100201e4:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
100201e8:	bf1e      	ittt	ne
100201ea:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
100201ee:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
100201f2:	4770      	bxne	lr
100201f4:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
100201f8:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
100201fc:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
10020200:	4770      	bx	lr
10020202:	bf00      	nop

10020204 <__aeabi_uldivmod>:
10020204:	b953      	cbnz	r3, 1002021c <__aeabi_uldivmod+0x18>
10020206:	b94a      	cbnz	r2, 1002021c <__aeabi_uldivmod+0x18>
10020208:	2900      	cmp	r1, #0
1002020a:	bf08      	it	eq
1002020c:	2800      	cmpeq	r0, #0
1002020e:	bf1c      	itt	ne
10020210:	f04f 31ff 	movne.w	r1, #4294967295	@ 0xffffffff
10020214:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
10020218:	f000 b9a0 	b.w	1002055c <__aeabi_idiv0>
1002021c:	f1ad 0c08 	sub.w	ip, sp, #8
10020220:	e96d ce04 	strd	ip, lr, [sp, #-16]!
10020224:	f000 f83c 	bl	100202a0 <__udivmoddi4>
10020228:	f8dd e004 	ldr.w	lr, [sp, #4]
1002022c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
10020230:	b004      	add	sp, #16
10020232:	4770      	bx	lr

10020234 <__aeabi_d2lz>:
10020234:	b538      	push	{r3, r4, r5, lr}
10020236:	2200      	movs	r2, #0
10020238:	2300      	movs	r3, #0
1002023a:	4604      	mov	r4, r0
1002023c:	460d      	mov	r5, r1
1002023e:	f7ff ff0b 	bl	10020058 <__aeabi_dcmplt>
10020242:	b928      	cbnz	r0, 10020250 <__aeabi_d2lz+0x1c>
10020244:	4620      	mov	r0, r4
10020246:	4629      	mov	r1, r5
10020248:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
1002024c:	f000 b80a 	b.w	10020264 <__aeabi_d2ulz>
10020250:	4620      	mov	r0, r4
10020252:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
10020256:	f000 f805 	bl	10020264 <__aeabi_d2ulz>
1002025a:	4240      	negs	r0, r0
1002025c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10020260:	bd38      	pop	{r3, r4, r5, pc}
10020262:	bf00      	nop

10020264 <__aeabi_d2ulz>:
10020264:	b5d0      	push	{r4, r6, r7, lr}
10020266:	4b0c      	ldr	r3, [pc, #48]	@ (10020298 <__aeabi_d2ulz+0x34>)
10020268:	2200      	movs	r2, #0
1002026a:	4606      	mov	r6, r0
1002026c:	460f      	mov	r7, r1
1002026e:	f7ff fc81 	bl	1001fb74 <__aeabi_dmul>
10020272:	f7ff ff57 	bl	10020124 <__aeabi_d2uiz>
10020276:	4604      	mov	r4, r0
10020278:	f7ff fc02 	bl	1001fa80 <__aeabi_ui2d>
1002027c:	4b07      	ldr	r3, [pc, #28]	@ (1002029c <__aeabi_d2ulz+0x38>)
1002027e:	2200      	movs	r2, #0
10020280:	f7ff fc78 	bl	1001fb74 <__aeabi_dmul>
10020284:	4602      	mov	r2, r0
10020286:	460b      	mov	r3, r1
10020288:	4630      	mov	r0, r6
1002028a:	4639      	mov	r1, r7
1002028c:	f7ff faba 	bl	1001f804 <__aeabi_dsub>
10020290:	f7ff ff48 	bl	10020124 <__aeabi_d2uiz>
10020294:	4621      	mov	r1, r4
10020296:	bdd0      	pop	{r4, r6, r7, pc}
10020298:	3df00000 	.word	0x3df00000
1002029c:	41f00000 	.word	0x41f00000

100202a0 <__udivmoddi4>:
100202a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
100202a4:	9d08      	ldr	r5, [sp, #32]
100202a6:	460c      	mov	r4, r1
100202a8:	2b00      	cmp	r3, #0
100202aa:	d14e      	bne.n	1002034a <__udivmoddi4+0xaa>
100202ac:	4694      	mov	ip, r2
100202ae:	458c      	cmp	ip, r1
100202b0:	4686      	mov	lr, r0
100202b2:	fab2 f282 	clz	r2, r2
100202b6:	d962      	bls.n	1002037e <__udivmoddi4+0xde>
100202b8:	b14a      	cbz	r2, 100202ce <__udivmoddi4+0x2e>
100202ba:	f1c2 0320 	rsb	r3, r2, #32
100202be:	4091      	lsls	r1, r2
100202c0:	fa20 f303 	lsr.w	r3, r0, r3
100202c4:	fa0c fc02 	lsl.w	ip, ip, r2
100202c8:	4319      	orrs	r1, r3
100202ca:	fa00 fe02 	lsl.w	lr, r0, r2
100202ce:	ea4f 471c 	mov.w	r7, ip, lsr #16
100202d2:	fa1f f68c 	uxth.w	r6, ip
100202d6:	fbb1 f4f7 	udiv	r4, r1, r7
100202da:	ea4f 431e 	mov.w	r3, lr, lsr #16
100202de:	fb07 1114 	mls	r1, r7, r4, r1
100202e2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
100202e6:	fb04 f106 	mul.w	r1, r4, r6
100202ea:	4299      	cmp	r1, r3
100202ec:	d90a      	bls.n	10020304 <__udivmoddi4+0x64>
100202ee:	eb1c 0303 	adds.w	r3, ip, r3
100202f2:	f104 30ff 	add.w	r0, r4, #4294967295	@ 0xffffffff
100202f6:	f080 8112 	bcs.w	1002051e <__udivmoddi4+0x27e>
100202fa:	4299      	cmp	r1, r3
100202fc:	f240 810f 	bls.w	1002051e <__udivmoddi4+0x27e>
10020300:	3c02      	subs	r4, #2
10020302:	4463      	add	r3, ip
10020304:	1a59      	subs	r1, r3, r1
10020306:	fa1f f38e 	uxth.w	r3, lr
1002030a:	fbb1 f0f7 	udiv	r0, r1, r7
1002030e:	fb07 1110 	mls	r1, r7, r0, r1
10020312:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
10020316:	fb00 f606 	mul.w	r6, r0, r6
1002031a:	429e      	cmp	r6, r3
1002031c:	d90a      	bls.n	10020334 <__udivmoddi4+0x94>
1002031e:	eb1c 0303 	adds.w	r3, ip, r3
10020322:	f100 31ff 	add.w	r1, r0, #4294967295	@ 0xffffffff
10020326:	f080 80fc 	bcs.w	10020522 <__udivmoddi4+0x282>
1002032a:	429e      	cmp	r6, r3
1002032c:	f240 80f9 	bls.w	10020522 <__udivmoddi4+0x282>
10020330:	4463      	add	r3, ip
10020332:	3802      	subs	r0, #2
10020334:	1b9b      	subs	r3, r3, r6
10020336:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
1002033a:	2100      	movs	r1, #0
1002033c:	b11d      	cbz	r5, 10020346 <__udivmoddi4+0xa6>
1002033e:	40d3      	lsrs	r3, r2
10020340:	2200      	movs	r2, #0
10020342:	e9c5 3200 	strd	r3, r2, [r5]
10020346:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1002034a:	428b      	cmp	r3, r1
1002034c:	d905      	bls.n	1002035a <__udivmoddi4+0xba>
1002034e:	b10d      	cbz	r5, 10020354 <__udivmoddi4+0xb4>
10020350:	e9c5 0100 	strd	r0, r1, [r5]
10020354:	2100      	movs	r1, #0
10020356:	4608      	mov	r0, r1
10020358:	e7f5      	b.n	10020346 <__udivmoddi4+0xa6>
1002035a:	fab3 f183 	clz	r1, r3
1002035e:	2900      	cmp	r1, #0
10020360:	d146      	bne.n	100203f0 <__udivmoddi4+0x150>
10020362:	42a3      	cmp	r3, r4
10020364:	d302      	bcc.n	1002036c <__udivmoddi4+0xcc>
10020366:	4290      	cmp	r0, r2
10020368:	f0c0 80f0 	bcc.w	1002054c <__udivmoddi4+0x2ac>
1002036c:	1a86      	subs	r6, r0, r2
1002036e:	eb64 0303 	sbc.w	r3, r4, r3
10020372:	2001      	movs	r0, #1
10020374:	2d00      	cmp	r5, #0
10020376:	d0e6      	beq.n	10020346 <__udivmoddi4+0xa6>
10020378:	e9c5 6300 	strd	r6, r3, [r5]
1002037c:	e7e3      	b.n	10020346 <__udivmoddi4+0xa6>
1002037e:	2a00      	cmp	r2, #0
10020380:	f040 8090 	bne.w	100204a4 <__udivmoddi4+0x204>
10020384:	eba1 040c 	sub.w	r4, r1, ip
10020388:	ea4f 481c 	mov.w	r8, ip, lsr #16
1002038c:	fa1f f78c 	uxth.w	r7, ip
10020390:	2101      	movs	r1, #1
10020392:	fbb4 f6f8 	udiv	r6, r4, r8
10020396:	ea4f 431e 	mov.w	r3, lr, lsr #16
1002039a:	fb08 4416 	mls	r4, r8, r6, r4
1002039e:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
100203a2:	fb07 f006 	mul.w	r0, r7, r6
100203a6:	4298      	cmp	r0, r3
100203a8:	d908      	bls.n	100203bc <__udivmoddi4+0x11c>
100203aa:	eb1c 0303 	adds.w	r3, ip, r3
100203ae:	f106 34ff 	add.w	r4, r6, #4294967295	@ 0xffffffff
100203b2:	d202      	bcs.n	100203ba <__udivmoddi4+0x11a>
100203b4:	4298      	cmp	r0, r3
100203b6:	f200 80cd 	bhi.w	10020554 <__udivmoddi4+0x2b4>
100203ba:	4626      	mov	r6, r4
100203bc:	1a1c      	subs	r4, r3, r0
100203be:	fa1f f38e 	uxth.w	r3, lr
100203c2:	fbb4 f0f8 	udiv	r0, r4, r8
100203c6:	fb08 4410 	mls	r4, r8, r0, r4
100203ca:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
100203ce:	fb00 f707 	mul.w	r7, r0, r7
100203d2:	429f      	cmp	r7, r3
100203d4:	d908      	bls.n	100203e8 <__udivmoddi4+0x148>
100203d6:	eb1c 0303 	adds.w	r3, ip, r3
100203da:	f100 34ff 	add.w	r4, r0, #4294967295	@ 0xffffffff
100203de:	d202      	bcs.n	100203e6 <__udivmoddi4+0x146>
100203e0:	429f      	cmp	r7, r3
100203e2:	f200 80b0 	bhi.w	10020546 <__udivmoddi4+0x2a6>
100203e6:	4620      	mov	r0, r4
100203e8:	1bdb      	subs	r3, r3, r7
100203ea:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
100203ee:	e7a5      	b.n	1002033c <__udivmoddi4+0x9c>
100203f0:	f1c1 0620 	rsb	r6, r1, #32
100203f4:	408b      	lsls	r3, r1
100203f6:	fa22 f706 	lsr.w	r7, r2, r6
100203fa:	431f      	orrs	r7, r3
100203fc:	fa20 fc06 	lsr.w	ip, r0, r6
10020400:	fa04 f301 	lsl.w	r3, r4, r1
10020404:	ea43 030c 	orr.w	r3, r3, ip
10020408:	40f4      	lsrs	r4, r6
1002040a:	fa00 f801 	lsl.w	r8, r0, r1
1002040e:	0c38      	lsrs	r0, r7, #16
10020410:	ea4f 4913 	mov.w	r9, r3, lsr #16
10020414:	fbb4 fef0 	udiv	lr, r4, r0
10020418:	fa1f fc87 	uxth.w	ip, r7
1002041c:	fb00 441e 	mls	r4, r0, lr, r4
10020420:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
10020424:	fb0e f90c 	mul.w	r9, lr, ip
10020428:	45a1      	cmp	r9, r4
1002042a:	fa02 f201 	lsl.w	r2, r2, r1
1002042e:	d90a      	bls.n	10020446 <__udivmoddi4+0x1a6>
10020430:	193c      	adds	r4, r7, r4
10020432:	f10e 3aff 	add.w	sl, lr, #4294967295	@ 0xffffffff
10020436:	f080 8084 	bcs.w	10020542 <__udivmoddi4+0x2a2>
1002043a:	45a1      	cmp	r9, r4
1002043c:	f240 8081 	bls.w	10020542 <__udivmoddi4+0x2a2>
10020440:	f1ae 0e02 	sub.w	lr, lr, #2
10020444:	443c      	add	r4, r7
10020446:	eba4 0409 	sub.w	r4, r4, r9
1002044a:	fa1f f983 	uxth.w	r9, r3
1002044e:	fbb4 f3f0 	udiv	r3, r4, r0
10020452:	fb00 4413 	mls	r4, r0, r3, r4
10020456:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
1002045a:	fb03 fc0c 	mul.w	ip, r3, ip
1002045e:	45a4      	cmp	ip, r4
10020460:	d907      	bls.n	10020472 <__udivmoddi4+0x1d2>
10020462:	193c      	adds	r4, r7, r4
10020464:	f103 30ff 	add.w	r0, r3, #4294967295	@ 0xffffffff
10020468:	d267      	bcs.n	1002053a <__udivmoddi4+0x29a>
1002046a:	45a4      	cmp	ip, r4
1002046c:	d965      	bls.n	1002053a <__udivmoddi4+0x29a>
1002046e:	3b02      	subs	r3, #2
10020470:	443c      	add	r4, r7
10020472:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
10020476:	fba0 9302 	umull	r9, r3, r0, r2
1002047a:	eba4 040c 	sub.w	r4, r4, ip
1002047e:	429c      	cmp	r4, r3
10020480:	46ce      	mov	lr, r9
10020482:	469c      	mov	ip, r3
10020484:	d351      	bcc.n	1002052a <__udivmoddi4+0x28a>
10020486:	d04e      	beq.n	10020526 <__udivmoddi4+0x286>
10020488:	b155      	cbz	r5, 100204a0 <__udivmoddi4+0x200>
1002048a:	ebb8 030e 	subs.w	r3, r8, lr
1002048e:	eb64 040c 	sbc.w	r4, r4, ip
10020492:	fa04 f606 	lsl.w	r6, r4, r6
10020496:	40cb      	lsrs	r3, r1
10020498:	431e      	orrs	r6, r3
1002049a:	40cc      	lsrs	r4, r1
1002049c:	e9c5 6400 	strd	r6, r4, [r5]
100204a0:	2100      	movs	r1, #0
100204a2:	e750      	b.n	10020346 <__udivmoddi4+0xa6>
100204a4:	f1c2 0320 	rsb	r3, r2, #32
100204a8:	fa20 f103 	lsr.w	r1, r0, r3
100204ac:	fa0c fc02 	lsl.w	ip, ip, r2
100204b0:	fa24 f303 	lsr.w	r3, r4, r3
100204b4:	4094      	lsls	r4, r2
100204b6:	430c      	orrs	r4, r1
100204b8:	ea4f 481c 	mov.w	r8, ip, lsr #16
100204bc:	fa00 fe02 	lsl.w	lr, r0, r2
100204c0:	fa1f f78c 	uxth.w	r7, ip
100204c4:	fbb3 f0f8 	udiv	r0, r3, r8
100204c8:	fb08 3110 	mls	r1, r8, r0, r3
100204cc:	0c23      	lsrs	r3, r4, #16
100204ce:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
100204d2:	fb00 f107 	mul.w	r1, r0, r7
100204d6:	4299      	cmp	r1, r3
100204d8:	d908      	bls.n	100204ec <__udivmoddi4+0x24c>
100204da:	eb1c 0303 	adds.w	r3, ip, r3
100204de:	f100 36ff 	add.w	r6, r0, #4294967295	@ 0xffffffff
100204e2:	d22c      	bcs.n	1002053e <__udivmoddi4+0x29e>
100204e4:	4299      	cmp	r1, r3
100204e6:	d92a      	bls.n	1002053e <__udivmoddi4+0x29e>
100204e8:	3802      	subs	r0, #2
100204ea:	4463      	add	r3, ip
100204ec:	1a5b      	subs	r3, r3, r1
100204ee:	b2a4      	uxth	r4, r4
100204f0:	fbb3 f1f8 	udiv	r1, r3, r8
100204f4:	fb08 3311 	mls	r3, r8, r1, r3
100204f8:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
100204fc:	fb01 f307 	mul.w	r3, r1, r7
10020500:	42a3      	cmp	r3, r4
10020502:	d908      	bls.n	10020516 <__udivmoddi4+0x276>
10020504:	eb1c 0404 	adds.w	r4, ip, r4
10020508:	f101 36ff 	add.w	r6, r1, #4294967295	@ 0xffffffff
1002050c:	d213      	bcs.n	10020536 <__udivmoddi4+0x296>
1002050e:	42a3      	cmp	r3, r4
10020510:	d911      	bls.n	10020536 <__udivmoddi4+0x296>
10020512:	3902      	subs	r1, #2
10020514:	4464      	add	r4, ip
10020516:	1ae4      	subs	r4, r4, r3
10020518:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
1002051c:	e739      	b.n	10020392 <__udivmoddi4+0xf2>
1002051e:	4604      	mov	r4, r0
10020520:	e6f0      	b.n	10020304 <__udivmoddi4+0x64>
10020522:	4608      	mov	r0, r1
10020524:	e706      	b.n	10020334 <__udivmoddi4+0x94>
10020526:	45c8      	cmp	r8, r9
10020528:	d2ae      	bcs.n	10020488 <__udivmoddi4+0x1e8>
1002052a:	ebb9 0e02 	subs.w	lr, r9, r2
1002052e:	eb63 0c07 	sbc.w	ip, r3, r7
10020532:	3801      	subs	r0, #1
10020534:	e7a8      	b.n	10020488 <__udivmoddi4+0x1e8>
10020536:	4631      	mov	r1, r6
10020538:	e7ed      	b.n	10020516 <__udivmoddi4+0x276>
1002053a:	4603      	mov	r3, r0
1002053c:	e799      	b.n	10020472 <__udivmoddi4+0x1d2>
1002053e:	4630      	mov	r0, r6
10020540:	e7d4      	b.n	100204ec <__udivmoddi4+0x24c>
10020542:	46d6      	mov	lr, sl
10020544:	e77f      	b.n	10020446 <__udivmoddi4+0x1a6>
10020546:	4463      	add	r3, ip
10020548:	3802      	subs	r0, #2
1002054a:	e74d      	b.n	100203e8 <__udivmoddi4+0x148>
1002054c:	4606      	mov	r6, r0
1002054e:	4623      	mov	r3, r4
10020550:	4608      	mov	r0, r1
10020552:	e70f      	b.n	10020374 <__udivmoddi4+0xd4>
10020554:	3e02      	subs	r6, #2
10020556:	4463      	add	r3, ip
10020558:	e730      	b.n	100203bc <__udivmoddi4+0x11c>
1002055a:	bf00      	nop

1002055c <__aeabi_idiv0>:
1002055c:	4770      	bx	lr
1002055e:	bf00      	nop
10020560:	65642525 	.word	0x65642525
10020564:	3a677562 	.word	0x3a677562
10020568:	00000020 	.word	0x00000020
1002056c:	73726946 	.word	0x73726946
10020570:	6f622074 	.word	0x6f622074
10020574:	202c746f 	.word	0x202c746f
10020578:	74746573 	.word	0x74746573
1002057c:	20676e69 	.word	0x20676e69
10020580:	73616c66 	.word	0x73616c66
10020584:	00002168 	.word	0x00002168
10020588:	00002525 	.word	0x00002525
1002058c:	6e692525 	.word	0x6e692525
10020590:	203a6f66 	.word	0x203a6f66
10020594:	00000000 	.word	0x00000000
10020598:	78303e50 	.word	0x78303e50
1002059c:	78383025 	.word	0x78383025
100205a0:	0000000a 	.word	0x0000000a
100205a4:	78303e46 	.word	0x78303e46
100205a8:	78383025 	.word	0x78383025
100205ac:	0000000a 	.word	0x0000000a
100205b0:	75732525 	.word	0x75732525
100205b4:	73656363 	.word	0x73656363
100205b8:	00203a73 	.word	0x00203a73
100205bc:	7473694c 	.word	0x7473694c
100205c0:	00000000 	.word	0x00000000
100205c4:	72652525 	.word	0x72652525
100205c8:	3a726f72 	.word	0x3a726f72
100205cc:	00000020 	.word	0x00000020
100205d0:	6c756f43 	.word	0x6c756f43
100205d4:	6f6e2064 	.word	0x6f6e2064
100205d8:	61762074 	.word	0x61762074
100205dc:	6164696c 	.word	0x6164696c
100205e0:	63206574 	.word	0x63206574
100205e4:	6f706d6f 	.word	0x6f706d6f
100205e8:	746e656e 	.word	0x746e656e
100205ec:	00000000 	.word	0x00000000
100205f0:	706d6f43 	.word	0x706d6f43
100205f4:	6e656e6f 	.word	0x6e656e6f
100205f8:	44492074 	.word	0x44492074
100205fc:	7830203a 	.word	0x7830203a
10020600:	78383025 	.word	0x78383025
10020604:	766e6920 	.word	0x766e6920
10020608:	64696c61 	.word	0x64696c61
1002060c:	0000000a 	.word	0x0000000a
10020610:	78257830 	.word	0x78257830
10020614:	0a73253e 	.word	0x0a73253e
10020618:	00000000 	.word	0x00000000
1002061c:	6c756f43 	.word	0x6c756f43
10020620:	6f6e2064 	.word	0x6f6e2064
10020624:	6f622074 	.word	0x6f622074
10020628:	6320746f 	.word	0x6320746f
1002062c:	6f706d6f 	.word	0x6f706d6f
10020630:	746e656e 	.word	0x746e656e
10020634:	00000000 	.word	0x00000000
10020638:	78303e43 	.word	0x78303e43
1002063c:	78383025 	.word	0x78383025
10020640:	00000000 	.word	0x00000000
10020644:	6c756f43 	.word	0x6c756f43
10020648:	6f6e2064 	.word	0x6f6e2064
1002064c:	74612074 	.word	0x74612074
10020650:	74736574 	.word	0x74736574
10020654:	6d6f6320 	.word	0x6d6f6320
10020658:	656e6f70 	.word	0x656e6f70
1002065c:	0000746e 	.word	0x0000746e
10020660:	206c6c41 	.word	0x206c6c41
10020664:	706d6f43 	.word	0x706d6f43
10020668:	6e656e6f 	.word	0x6e656e6f
1002066c:	76207374 	.word	0x76207374
10020670:	64696c61 	.word	0x64696c61
10020674:	64657461 	.word	0x64657461
10020678:	00000000 	.word	0x00000000
1002067c:	6c696146 	.word	0x6c696146
10020680:	74206465 	.word	0x74206465
10020684:	6f62206f 	.word	0x6f62206f
10020688:	6120746f 	.word	0x6120746f
1002068c:	63206c6c 	.word	0x63206c6c
10020690:	6f706d6f 	.word	0x6f706d6f
10020694:	746e656e 	.word	0x746e656e
10020698:	00000073 	.word	0x00000073
1002069c:	27756f59 	.word	0x27756f59
100206a0:	62206576 	.word	0x62206576
100206a4:	206e6565 	.word	0x206e6565
100206a8:	6d6f7270 	.word	0x6d6f7270
100206ac:	6465746f 	.word	0x6465746f
100206b0:	444f3a20 	.word	0x444f3a20
100206b4:	00000000 	.word	0x00000000
100206b8:	253e5041 	.word	0x253e5041
100206bc:	00000a73 	.word	0x00000a73
100206c0:	746f6f42 	.word	0x746f6f42
100206c4:	00000000 	.word	0x00000000
100206c8:	65746e45 	.word	0x65746e45
100206cc:	69702072 	.word	0x69702072
100206d0:	00203a6e 	.word	0x00203a6e
100206d4:	34333231 	.word	0x34333231
100206d8:	00003635 	.word	0x00003635
100206dc:	206e6950 	.word	0x206e6950
100206e0:	65636341 	.word	0x65636341
100206e4:	64657470 	.word	0x64657470
100206e8:	00000021 	.word	0x00000021
100206ec:	61766e49 	.word	0x61766e49
100206f0:	2064696c 	.word	0x2064696c
100206f4:	214e4950 	.word	0x214e4950
100206f8:	00000000 	.word	0x00000000
100206fc:	65746e45 	.word	0x65746e45
10020700:	6f742072 	.word	0x6f742072
10020704:	3a6e656b 	.word	0x3a6e656b
10020708:	00000020 	.word	0x00000020
1002070c:	34333231 	.word	0x34333231
10020710:	38373635 	.word	0x38373635
10020714:	63626139 	.word	0x63626139
10020718:	00666564 	.word	0x00666564
1002071c:	656b6f54 	.word	0x656b6f54
10020720:	6341206e 	.word	0x6341206e
10020724:	74706563 	.word	0x74706563
10020728:	00216465 	.word	0x00216465
1002072c:	61766e49 	.word	0x61766e49
10020730:	2064696c 	.word	0x2064696c
10020734:	656b6f54 	.word	0x656b6f54
10020738:	0000216e 	.word	0x0000216e
1002073c:	706d6f43 	.word	0x706d6f43
10020740:	6e656e6f 	.word	0x6e656e6f
10020744:	63207374 	.word	0x63207374
10020748:	646c756f 	.word	0x646c756f
1002074c:	746f6e20 	.word	0x746f6e20
10020750:	20656220 	.word	0x20656220
10020754:	696c6176 	.word	0x696c6176
10020758:	65746164 	.word	0x65746164
1002075c:	00000064 	.word	0x00000064
10020760:	706d6f43 	.word	0x706d6f43
10020764:	6e656e6f 	.word	0x6e656e6f
10020768:	44492074 	.word	0x44492074
1002076c:	3a6e4920 	.word	0x3a6e4920
10020770:	00000020 	.word	0x00000020
10020774:	00007825 	.word	0x00007825
10020778:	706d6f43 	.word	0x706d6f43
1002077c:	6e656e6f 	.word	0x6e656e6f
10020780:	44492074 	.word	0x44492074
10020784:	74754f20 	.word	0x74754f20
10020788:	0000203a 	.word	0x0000203a
1002078c:	6c706552 	.word	0x6c706552
10020790:	64656361 	.word	0x64656361
10020794:	25783020 	.word	0x25783020
10020798:	20783830 	.word	0x20783830
1002079c:	68746977 	.word	0x68746977
100207a0:	25783020 	.word	0x25783020
100207a4:	0a783830 	.word	0x0a783830
100207a8:	00000000 	.word	0x00000000
100207ac:	6c706552 	.word	0x6c706552
100207b0:	00656361 	.word	0x00656361
100207b4:	706d6f43 	.word	0x706d6f43
100207b8:	6e656e6f 	.word	0x6e656e6f
100207bc:	78302074 	.word	0x78302074
100207c0:	78383025 	.word	0x78383025
100207c4:	20736920 	.word	0x20736920
100207c8:	20746f6e 	.word	0x20746f6e
100207cc:	766f7270 	.word	0x766f7270
100207d0:	6f697369 	.word	0x6f697369
100207d4:	2064656e 	.word	0x2064656e
100207d8:	20726f66 	.word	0x20726f66
100207dc:	20656874 	.word	0x20656874
100207e0:	74737973 	.word	0x74737973
100207e4:	0a0d6d65 	.word	0x0a0d6d65
100207e8:	00000000 	.word	0x00000000
100207ec:	706d6f43 	.word	0x706d6f43
100207f0:	6e656e6f 	.word	0x6e656e6f
100207f4:	44492074 	.word	0x44492074
100207f8:	0000203a 	.word	0x0000203a
100207fc:	65747441 	.word	0x65747441
10020800:	00007473 	.word	0x00007473
10020804:	6c707041 	.word	0x6c707041
10020808:	74616369 	.word	0x74616369
1002080c:	206e6f69 	.word	0x206e6f69
10020810:	636f7250 	.word	0x636f7250
10020814:	6f737365 	.word	0x6f737365
10020818:	74532072 	.word	0x74532072
1002081c:	65747261 	.word	0x65747261
10020820:	00000064 	.word	0x00000064
10020824:	65746e45 	.word	0x65746e45
10020828:	6f432072 	.word	0x6f432072
1002082c:	6e616d6d 	.word	0x6e616d6d
10020830:	00203a64 	.word	0x00203a64
10020834:	7473696c 	.word	0x7473696c
10020838:	00000000 	.word	0x00000000
1002083c:	746f6f62 	.word	0x746f6f62
10020840:	00000000 	.word	0x00000000
10020844:	6c706572 	.word	0x6c706572
10020848:	00656361 	.word	0x00656361
1002084c:	65747461 	.word	0x65747461
10020850:	00007473 	.word	0x00007473
10020854:	65726e55 	.word	0x65726e55
10020858:	6e676f63 	.word	0x6e676f63
1002085c:	64657a69 	.word	0x64657a69
10020860:	6d6f6320 	.word	0x6d6f6320
10020864:	646e616d 	.word	0x646e616d
10020868:	73252720 	.word	0x73252720
1002086c:	00000a27 	.word	0x00000a27

10020870 <djFIehjkklIH>:
10020870:	0138e798 02cdbb14 01f9f376 023bcfda     ..8.....v.....;.
10020880:	01d90544 01cad2d2 00860e2c 00860e2c     D.......,...,...
10020890:	01f9f376 038ec6f2 0138e798 023bcfda     v.........8...;.
100208a0:	0138e798 038ec6f2 0138e798 031dc9ea     ..8.......8.....
100208b0:	02cdbb14 0138e798 025cbe0c 023bcfda     ......8...\...;.
100208c0:	00199a72 0138e798 011c82b4 02cdbb14     r.....8.........
100208d0:	023bcfda 03225338 018d7fbc 011c82b4     ..;.8S".........
100208e0:	0035ff56 02b15630 03225338 008a977a     V.5.0V..8S".z...
100208f0:	018d7fbc 029067fe 01ae6dee 004431c8     .....g...m...1D.
10020900:	00000000                                ....

10020904 <aseiFuengleR>:
10020904:	01ffe4b6 003098ac 02f56101 011a38bb     ......0..a...8..
10020914:	00485124 011644a7 003c74e8 003c74e8     $QH..D...t<..t<.
10020924:	02f56101 012614f7 01ffe4b6 011a38bb     .a....&......8..
10020934:	01ffe4b6 012614f7 01ffe4b6 012220e3     ......&...... ".
10020944:	003098ac 01ffe4b6 002ca498 011a38bb     ..0.......,..8..
10020954:	00e6d3b7 01ffe4b6 000127bc 003098ac     .........'....0.
10020964:	011a38bb 01d073c6 00051bd0 000127bc     .8...s.......'..
10020974:	02e590b1 01cc7fb2 01d073c6 00eac7cb     .........s......
10020984:	00051bd0 02ba13d5 02b22bad 02179d2e     .........+......
10020994:	00000000 63612525 0a25256b 00000000     ....%%ack%%.....
100209a4:	203e2d20 65746e49 70757272 28202174      -> Interrupt! (
100209b4:	73616c46 63612068 73736563 69616620     Flash access fai
100209c4:	6572756c 00000a29 6c696146 74206465     lure)...Failed t
100209d4:	6e69206f 61697469 657a696c 43324920     o initialize I2C
100209e4:	0000002e                                ....

100209e8 <num_leds>:
100209e8:	00000003                                ....

100209ec <led_pin>:
100209ec:	40080400 00000001 00010001 40080400     ...@...........@
100209fc:	00000002 00010001 40080400 00000004     ...........@....
10020a0c:	00010001                                ....

10020a10 <num_pbs>:
10020a10:	00000002                                ....

10020a14 <pb_pin>:
10020a14:	40008000 00000004 00010100 40009000     ...@...........@
10020a24:	00000080 00010100                       ........

10020a2c <gpio_cfg_uart3>:
10020a2c:	40080400 000000c0 00000003              ...@........

10020a38 <gpio_cfg_uart2>:
10020a38:	40009000 00000003 00000002              ...@........

10020a44 <gpio_cfg_uart1>:
10020a44:	40008000 00003000 00000002              ...@.0......

10020a50 <gpio_cfg_uart0>:
10020a50:	40008000 00000003 00000002              ...@........

10020a5c <gpio_cfg_i2c2>:
10020a5c:	40008000 c0000000 00000002              ...@........

10020a68 <gpio_cfg_i2c1>:
10020a68:	40008000 00030000 00000002              ...@........

10020a74 <gpio_cfg_i2c0>:
10020a74:	40008000 00000c00 00000002              ...@........

10020a80 <gpio_cfg_extclk>:
10020a80:	40008000 00000008 00000002              ...@........

10020a8c <CSWTCH.16>:
10020a8c:	40008000 40009000 40080400 40080600     ...@...@...@...@
10020a9c:	646c2565 00000000                       e%ld....

10020aa4 <basefix.0>:
10020aa4:	0001000a 00030002 00050004 00070006     ................
10020ab4:	00090008 000b000a 000d000c 000f000e     ................
10020ac4:	00000010 435f434c 414c4c4f 00004554     ....LC_COLLATE..
10020ad4:	435f434c 45505954 00000000 4d5f434c     LC_CTYPE....LC_M
10020ae4:	54454e4f 00595241 4e5f434c 52454d55     ONETARY.LC_NUMER
10020af4:	00004349 545f434c 00454d49 4d5f434c     IC..LC_TIME.LC_M
10020b04:	41535345 00534547                       ESSAGES.

10020b0c <_ctype_>:
10020b0c:	20202000 20202020 28282020 20282828     .         ((((( 
10020b1c:	20202020 20202020 20202020 20202020                     
10020b2c:	10108820 10101010 10101010 10101010      ...............
10020b3c:	04040410 04040404 10040404 10101010     ................
10020b4c:	41411010 41414141 01010101 01010101     ..AAAAAA........
10020b5c:	01010101 01010101 01010101 10101010     ................
10020b6c:	42421010 42424242 02020202 02020202     ..BBBBBB........
10020b7c:	02020202 02020202 02020202 10101010     ................
10020b8c:	00000020 00000000 00000000 00000000      ...............
	...
10020c10:	0000666e 74696e69 00000079 00006e61     nf..inity...an..

10020c20 <fpinan.0>:
10020c20:	00000034 fffffbce 000003cb 00000001     4...............
10020c30:	00000000                                ....

10020c34 <fpi.1>:
10020c34:	00000035 fffffbce 000003cb 00000001     5...............
10020c44:	00000000                                ....

10020c48 <tinytens>:
10020c48:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
10020c58:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
10020c68:	64ac6f43 11680628 6c6c6142 7320636f     Co.d(.h.Balloc s
10020c78:	65636375 64656465 00000000 7461642f     ucceeded..../dat
10020c88:	656a2f61 6e696b6e 6f772f73 70736b72     a/jenkins/worksp
10020c98:	2f656361 2d554e47 6c6f6f74 69616863     ace/GNU-toolchai
10020ca8:	72612f6e 32312d6d 6372732f 77656e2f     n/arm-12/src/new
10020cb8:	2d62696c 77677963 6e2f6e69 696c7765     lib-cygwin/newli
10020cc8:	696c2f62 732f6362 696c6474 64672f62     b/libc/stdlib/gd
10020cd8:	2d616f74 68746567 632e7865 00000000     toa-gethex.c....

10020ce8 <__hexdig>:
	...
10020d18:	13121110 17161514 00001918 00000000     ................
10020d28:	1c1b1a00 001f1e1d 00000000 00000000     ................
	...
10020d48:	1c1b1a00 001f1e1d 00000000 00000000     ................
	...

10020de8 <categories>:
10020de8:	00000000 201c001f 00000000 00002114     ....... .....!..
10020df8:	24160002 00000000 00002514 28150002     ...$.....%.....(
10020e08:	00000000 00002911 2a140000 00000000     .....).....*....
10020e18:	00002b18 2c140000 00000000 00002d10     .+.....,.....-..
10020e28:	2e140000 00010000 0000300c 3a140009     .........0.....:
10020e38:	00010000 00003c18 3f140002 00010000     .....<.....?....
10020e48:	00004103 5b150019 00000000 00005c14     .A.....[.....\..
10020e58:	5d110000 00000000 00005e17 5f0f0000     ...].....^....._
10020e68:	00000000 00006017 61030000 00190000     .....`.....a....
10020e78:	00007b15 7c180000 00000000 00007d11     .{.....|.....}..
10020e88:	7e180000 00000000 00007f00 a01c0020     ...~........ ...
10020e98:	00000000 0000a114 a2160000 00030000     ................
10020ea8:	0000a619 a7140000 00000000 0000a817     ................
10020eb8:	a9190000 00000000 0000aa06 ab130000     ................
10020ec8:	00000000 0000ac18 ad010000 00000000     ................
10020ed8:	0000ae19 af170000 00000000 0000b019     ................
10020ee8:	b1180000 00000000 0000b20e b4170001     ................
10020ef8:	00000000 0000b503 b6140000 00010000     ................
10020f08:	0000b817 b90e0000 00000000 0000ba06     ................
10020f18:	bb120000 00000000 0000bc0e bf140002     ................
10020f28:	00000000 0000c003 d7180016 00000000     ................
10020f38:	0000d803 df040006 00000000 0000e003     ................
10020f48:	f7180016 00000000 0000f803 3804003f     ............?..8
10020f58:	00000001 00013903 4904000f 00000001     .....9.....I....
10020f68:	00014a03 8d040042 00000001 00018e03     .J..B...........
10020f78:	9b04000c 00000001 00019c03 aa04000d     ................
10020f88:	00010001 0001ac03 ba04000d 00000001     ................
10020f98:	0001bb06 bc030000 00010001 0001be04     ................
10020fa8:	bf030000 00000001 0001c006 c4030003     ................
10020fb8:	00000001 0001c507 c6030000 00010001     ................
10020fc8:	0001c807 c9030000 00010001 0001cb07     ................
10020fd8:	cc030000 00230001 0001f004 f1030000     ......#.........
10020fe8:	00000001 0001f207 f3030000 002d0001     ..............-.
10020ff8:	00022104 22030000 00110002 00023404     .!.....".....4..
10021008:	3a030005 001a0002 00025504 56030000     ...:.....U.....V
10021018:	00010002 00025804 59030000 00000002     .....X.....Y....
10021028:	00025a04 5b030000 00010002 00025d04     .Z.....[.....]..
10021038:	60030002 00010002 00026204 63030000     ...`.....b.....c
10021048:	00000002 00026404 65030000 00010002     .....d.....e....
10021058:	00026704 68030000 00040002 00026d04     .g.....h.....m..
10021068:	6f030001 00000002 00027004 71030000     ...o.....p.....q
10021078:	00010002 00027304 75030001 00000002     .....s.....u....
10021088:	00027604 7d030006 00000002 00027e04     .v.....}.....~..
10021098:	80030001 00000002 00028104 82030000     ................
100210a8:	00010002 00028404 87030002 00050002     ................
100210b8:	00028d04 92030004 00000002 00029304     ................
100210c8:	94060000 00000002 00029504 9d030007     ................
100210d8:	00010002 00029f04 b0050010 00110002     ................
100210e8:	0002c217 c6050003 000b0002 0002d217     ................
100210f8:	e005000d 00040002 0002e517 ec050006     ................
10021108:	00000002 0002ed17 ee050000 00000002     ................
10021118:	0002ef17 000b0010 006f0003 00037003     ..........o..p..
10021128:	74050003 00000003 00037517 76030000     ...t.....u.....v
10021138:	00010003 00037a05 7b030000 00020003     .....z.....{....
10021148:	00037e14 7f030000 00000003 00038417     .~..............
10021158:	86030001 00000003 00038714 88030000     ................
10021168:	00020003 00038c03 8e030000 00010003     ................
10021178:	00039004 91030000 00100003 0003a303     ................
10021188:	b004000c 00000003 0003b103 d2080020     ............ ...
10021198:	00020003 0003d503 f6180020 00000003     ........ .......
100211a8:	0003f703 fc040004 00000003 0003fd03     ................
100211b8:	82190084 00000004 0004830b 880a0004     ................
100211c8:	00010004 00048a03 310300a5 00250005     ...........1..%.
100211d8:	00055905 5a140000 00050005 00056004     .Y.....Z.....`..
100211e8:	61030000 00250005 00058704 89140001     ...a..%.........
100211f8:	00000005 00058a10 8d190000 00010005     ................
10021208:	00058f16 910b0000 002c0005 0005be10     ..........,.....
10021218:	bf0b0000 00000005 0005c014 c10b0000     ................
10021228:	00010005 0005c314 c40b0000 00010005     ................
10021238:	0005c614 c70b0000 00000005 0005d006     ................
10021248:	ef06001a 00030005 0005f314 00010001     ................
10021258:	00050006 00060618 09140002 00010006     ................
10021268:	00060b16 0c140000 00010006 00060e19     ................
10021278:	100b0001 000a0006 00061b14 1c010000     ................
10021288:	00000006 00061d14 20060002 001f0006     ........... ....
10021298:	00064005 41060000 00090006 00064b0b     .@.....A.....K..
100212a8:	600c0014 00090006 00066a14 6e060003     ...`.....j.....n
100212b8:	00010006 0006700b 71060000 00620006     .....p.....q..b.
100212c8:	0006d414 d5060000 00000006 0006d60b     ................
100212d8:	dd010006 00000006 0006de19 df0b0000     ................
100212e8:	00050006 0006e505 e70b0001 00010006     ................
100212f8:	0006e919 ea0b0000 00030006 0006ee06     ................
10021308:	f00c0001 00090006 0006fa06 fd190002     ................
10021318:	00010006 0006ff06 00140000 000d0007     ................
10021328:	00070f01 10060000 00000007 0007110b     ................
10021338:	12060000 001d0007 0007300b 4d06001a     .........0.....M
10021348:	00580007 0007a60b b106000a 00000007     ..X.............
10021358:	0007c00c ca060009 00200007 0007eb0b     .......... .....
10021368:	f4050008 00010007 0007f619 f7140000     ................
10021378:	00020007 0007fa05 fd0b0000 00000007     ................
10021388:	0007fe16 00060001 00150008 0008160b     ................
10021398:	1a050003 00000008 00081b0b 24050008     ...............$
100213a8:	00000008 0008250b 28050002 00000008     .....%.....(....
100213b8:	0008290b 30140004 000e0008 00084006     .).....0.....@..
100213c8:	590b0018 00020008 00085e14 60060000     ...Y.....^.....`
100213d8:	000a0008 00087006 88170017 00000008     .....p..........
100213e8:	00088906 90010005 00010008 0008980b     ................
100213f8:	a0060007 00280008 0008c905 ca0b0000     ......(.........
10021408:	00170008 0008e201 e30b0000 001f0008     ................
10021418:	00090309 04060000 00350009 00093a0b     ..........5..:..
10021428:	3b090000 00000009 00093c0b 3d060000     ...;.....<.....=
10021438:	00000009 00093e09 410b0002 00070009     .....>.....A....
10021448:	00094909 4d0b0003 00000009 00094e09     .I.....M.....N..
10021458:	50060001 00000009 0009510b 58060006     ...P.....Q.....X
10021468:	00090009 0009620b 64140001 00010009     .....b.....d....
10021478:	0009660c 70140009 00000009 00097105     .f.....p.....q..
10021488:	72060000 000e0009 0009810b 82090000     ...r............
10021498:	00010009 00098506 8f060007 00010009     ................
100214a8:	00099306 aa060015 00060009 0009b206     ................
100214b8:	b6060000 00030009 0009bc0b bd060000     ................
100214c8:	00000009 0009be09 c10b0002 00030009     ................
100214d8:	0009c709 cb090001 00010009 0009cd0b     ................
100214e8:	ce060000 00000009 0009d709 dc060000     ................
100214f8:	00010009 0009df06 e20b0002 00010009     ................
10021508:	0009e60c f0060009 00010009 0009f216     ................
10021518:	f40e0001 00050009 0009fa19 fb160000     ................
10021528:	00000009 0009fc06 fd140000 00000009     ................
10021538:	0009fe0b 010b0000 0001000a 000a0309     ................
10021548:	05060000 0005000a 000a0f06 13060001     ................
10021558:	0015000a 000a2a06 32060006 0001000a     .....*.....2....
10021568:	000a3506 38060001 0001000a 000a3c0b     .5.....8.....<..
10021578:	3e090000 0002000a 000a410b 470b0001     ...>.....A.....G
10021588:	0001000a 000a4b0b 510b0002 0000000a     .....K.....Q....
10021598:	000a5906 5e060003 0000000a 000a660c     .Y.....^.....f..
100215a8:	700b0009 0001000a 000a7206 750b0002     ...p.....r.....u
100215b8:	0000000a 000a7614 810b0000 0001000a     .....v..........
100215c8:	000a8309 85060000 0008000a 000a8f06     ................
100215d8:	93060002 0015000a 000aaa06 b2060006     ................
100215e8:	0001000a 000ab506 bc0b0004 0000000a     ................
100215f8:	000abd06 be090000 0002000a 000ac10b     ................
10021608:	c70b0004 0001000a 000ac909 cb090000     ................
10021618:	0001000a 000acd0b d0060000 0000000a     ................
10021628:	000ae006 e20b0001 0001000a 000ae60c     ................
10021638:	f0140009 0000000a 000af116 f9060000     ................
10021648:	0000000a 000afa0b 010b0005 0000000b     ................
10021658:	000b0209 05060001 0007000b 000b0f06     ................
10021668:	13060001 0015000b 000b2a06 32060006     .........*.....2
10021678:	0001000b 000b3506 3c0b0004 0000000b     .....5.....<....
10021688:	000b3d06 3e090000 0000000b 000b3f0b     .=.....>.....?..
10021698:	40090000 0000000b 000b410b 47090003     ...@.....A.....G
100216a8:	0001000b 000b4b09 4d0b0001 0000000b     .....K.....M....
100216b8:	000b550b 57090001 0000000b 000b5c06     .U.....W.....\..
100216c8:	5f060001 0002000b 000b620b 660c0001     ..._.....b.....f
100216d8:	0009000b 000b7019 71060000 0000000b     .....p.....q....
100216e8:	000b720e 820b0005 0000000b 000b8306     .r..............
100216f8:	85060000 0005000b 000b8e06 92060002     ................
10021708:	0003000b 000b9906 9c060001 0000000b     ................
10021718:	000b9e06 a3060001 0001000b 000ba806     ................
10021728:	ae060002 000b000b 000bbe09 c00b0001     ................
10021738:	0000000b 000bc109 c6090001 0002000b     ................
10021748:	000bca09 cd0b0002 0000000b 000bd006     ................
10021758:	d7090000 0000000b 000be60c f00e0009     ................
10021768:	0002000b 000bf319 f9160005 0000000b     ................
10021778:	000bfa19 000b0000 0000000c 000c0109     ................
10021788:	040b0002 0000000c 000c0506 0e060007     ................
10021798:	0002000c 000c1206 2a060016 000f000c     ...........*....
100217a8:	000c3c0b 3d060000 0000000c 000c3e0b     .<.....=.....>..
100217b8:	41090002 0003000c 000c460b 4a0b0002     ...A.....F.....J
100217c8:	0003000c 000c550b 58060001 0002000c     .....U.....X....
100217d8:	000c5d06 60060000 0001000c 000c620b     .].....`.....b..
100217e8:	660c0001 0009000c 000c7714 780e0000     ...f.....w.....x
100217f8:	0006000c 000c7f19 80060000 0000000c     ................
10021808:	000c810b 82090000 0001000c 000c8414     ................
10021818:	85060000 0007000c 000c8e06 92060002     ................
10021828:	0016000c 000caa06 b5060009 0004000c     ................
10021838:	000cbc0b bd060000 0000000c 000cbe09     ................
10021848:	bf0b0000 0000000c 000cc009 c60b0004     ................
10021858:	0000000c 000cc709 ca090001 0001000c     ................
10021868:	000ccc0b d5090001 0001000c 000cdd06     ................
10021878:	e0060001 0001000c 000ce20b e60c0001     ................
10021888:	0009000c 000cf106 f3090001 0000000c     ................
10021898:	000d000b 02090001 0001000d 000d0406     ................
100218a8:	0e060008 0002000d 000d1206 3b0b0028     ............(..;
100218b8:	0001000d 000d3d06 3e090000 0002000d     .....=.....>....
100218c8:	000d410b 46090003 0002000d 000d4a09     .A.....F.....J..
100218d8:	4d0b0002 0000000d 000d4e06 4f190000     ...M.....N.....O
100218e8:	0000000d 000d5406 57090002 0000000d     .....T.....W....
100218f8:	000d580e 5f060006 0002000d 000d620b     .X....._.....b..
10021908:	660c0001 0009000d 000d700e 79190008     ...f.....p.....y
10021918:	0000000d 000d7a06 810b0005 0000000d     .....z..........
10021928:	000d8209 85060001 0011000d 000d9a06     ................
10021938:	b3060017 0008000d 000dbd06 c0060000     ................
10021948:	0006000d 000dca0b cf090000 0002000d     ................
10021958:	000dd20b d60b0002 0000000d 000dd809     ................
10021968:	e60c0007 0009000d 000df209 f4140001     ................
10021978:	0000000d 000e0106 310b002f 0000000e     ......../..1....
10021988:	000e3206 340b0001 0006000e 000e3f16     .2.....4.....?..
10021998:	40060000 0005000e 000e4605 470b0000     ...@.....F.....G
100219a8:	0007000e 000e4f14 500c0000 0009000e     .....O.....P....
100219b8:	000e5a14 81060001 0001000e 000e8406     .Z..............
100219c8:	86060000 0004000e 000e8c06 a5060017     ................
100219d8:	0000000e 000ea706 b10b0009 0000000e     ................
100219e8:	000eb206 b40b0001 0008000e 000ebd06     ................
100219f8:	c0060000 0004000e 000ec605 c80b0000     ................
10021a08:	0006000e 000ed00c dc060009 0003000e     ................
10021a18:	000f0006 01190000 0002000f 000f0414     ................
10021a28:	1319000e 0000000f 000f1414 15190000     ................
10021a38:	0002000f 000f180b 1a190001 0005000f     ................
10021a48:	000f200c 2a0e0009 0009000f 000f3419     . .....*.....4..
10021a58:	350b0000 0000000f 000f3619 370b0000     ...5.....6.....7
10021a68:	0000000f 000f3819 390b0000 0000000f     .....8.....9....
10021a78:	000f3a15 3b110000 0000000f 000f3c15     .:.....;.....<..
10021a88:	3d110000 0000000f 000f3e09 40060001     ...=.....>.....@
10021a98:	0007000f 000f4906 710b0023 000d000f     .....I..#..q....
10021aa8:	000f7f09 800b0000 0004000f 000f8514     ................
10021ab8:	860b0000 0001000f 000f8806 8d0b0004     ................
10021ac8:	000a000f 000f990b be190023 0007000f     ........#.......
10021ad8:	000fc60b c7190000 0005000f 000fce19     ................
10021ae8:	d0140001 0004000f 000fd519 d9140003     ................
10021af8:	0001000f 00100006 2b09002a 00010010     ........*..+....
10021b08:	00102d0b 31090003 00000010 0010320b     .-.....1.....2..
10021b18:	38090005 00000010 0010390b 3b090001     ...8.....9.....;
10021b28:	00010010 00103d0b 3f060001 00000010     .....=.....?....
10021b38:	0010400c 4a140009 00050010 00105006     .@.....J.....P..
10021b48:	56090005 00010010 0010580b 5a060001     ...V.....X.....Z
10021b58:	00030010 00105e0b 61060002 00000010     .....^.....a....
10021b68:	00106209 65060002 00010010 00106709     .b.....e.....g..
10021b78:	6e060006 00020010 0010710b 75060003     ...n.....q.....u
10021b88:	000c0010 0010820b 83090000 00010010     ................
10021b98:	0010850b 87090001 00050010 00108d0b     ................
10021ba8:	8e060000 00000010 00108f09 900c0000     ................
10021bb8:	00090010 00109a09 9d0b0002 00000010     ................
10021bc8:	00109e19 a0030001 00250010 0010c703     ..........%.....
10021bd8:	cd030000 00000010 0010d003 fb14002a     ............*...
10021be8:	00000010 0010fc05 fd030000 00020010     ................
10021bf8:	00110006 4a060148 00030012 00125006     ....H..J.....P..
10021c08:	58060006 00000012 00125a06 60060003     ...X.....Z.....`
10021c18:	00280012 00128a06 90060003 00200012     ..(........... .
10021c28:	0012b206 b8060003 00060012 0012c006     ................
10021c38:	c2060000 00030012 0012c806 d806000e     ................
10021c48:	00380012 00131206 18060003 00420013     ..8...........B.
10021c58:	00135d0b 60140002 00080013 0013690e     .].....`.....i..
10021c68:	80060013 000f0013 00139019 a0030009     ................
10021c78:	00550013 0013f803 00100005 00000014     ..U.............
10021c88:	00140106 6d19026b 00000016 00166e14     ....k..m.....n..
10021c98:	6f060000 00100016 0016801c 81060000     ...o............
10021ca8:	00190016 00169b15 9c110000 00000016     ................
10021cb8:	0016a006 eb14004a 00020016 0016ee0d     ....J...........
10021cc8:	f1060002 00070016 00170006 120b0011     ................
10021cd8:	00020017 00171509 1f060000 00120017     ................
10021ce8:	0017320b 34090001 00000017 00173514     .2.....4.....5..
10021cf8:	40060001 00110017 0017520b 60060001     ...@.....R.....`
10021d08:	000c0017 00176e06 720b0002 00010017     .....n.....r....
10021d18:	00178006 b40b0033 00010017 0017b609     ....3...........
10021d28:	b70b0000 00060017 0017be09 c60b0007     ................
10021d38:	00000017 0017c709 c90b0001 000a0017     ................
10021d48:	0017d414 d7050002 00000017 0017d814     ................
10021d58:	db160002 00000017 0017dc06 dd0b0000     ................
10021d68:	00000017 0017e00c f00e0009 00090017     ................
10021d78:	00180014 06100005 00000018 00180714     ................
10021d88:	0b0b0003 00020018 00180e01 0f0b0000     ................
10021d98:	00000018 0018100c 20060009 00220018     ........... ..".
10021da8:	00184305 44060000 00340018 00188006     .C.....D..4.....
10021db8:	850b0004 00010018 00188706 a90b0021     ............!...
10021dc8:	00000018 0018aa06 b0060000 00450018     ..............E.
10021dd8:	00190006 200b001e 00020019 00192309     ....... .....#..
10021de8:	270b0003 00010019 00192909 30090002     ...'.....).....0
10021df8:	00010019 0019320b 33090000 00050019     .....2.....3....
10021e08:	0019390b 40190002 00000019 00194414     .9.....@.....D..
10021e18:	460c0001 00090019 00195006 7006001d     ...F.....P.....p
10021e28:	00040019 00198006 b006002b 00190019     ........+.......
10021e38:	0019d00c da0e0009 00000019 0019de19     ................
10021e48:	00060021 0016001a 001a170b 19090001     !...............
10021e58:	0001001a 001a1b0b 1e140000 0001001a     ................
10021e68:	001a2006 55090034 0000001a 001a560b     . ..4..U.....V..
10021e78:	57090000 0000001a 001a580b 600b0006     ...W.....X.....`
10021e88:	0000001a 001a6109 620b0000 0000001a     .....a.....b....
10021e98:	001a6309 650b0001 0007001a 001a6d09     .c.....e.....m..
10021ea8:	730b0005 0009001a 001a7f0b 800c0000     ...s............
10021eb8:	0009001a 001a900c a0140009 0006001a     ................
10021ec8:	001aa705 a8140000 0005001a 001ab00b     ................
10021ed8:	be0a000d 0000001a 001abf0b 000b000f     ................
10021ee8:	0003001b 001b0409 05060000 002e001b     ................
10021ef8:	001b340b 35090000 0000001b 001b360b     .4.....5.....6..
10021f08:	3b090004 0000001b 001b3c0b 3d090000     ...;.....<.....=
10021f18:	0004001b 001b420b 43090000 0001001b     .....B.....C....
10021f28:	001b4506 500c0007 0009001b 001b5a14     .E.....P.....Z..
10021f38:	61190006 0009001b 001b6b0b 74190008     ...a.....k.....t
10021f48:	0008001b 001b7d14 800b0001 0001001b     .....}..........
10021f58:	001b8209 83060000 001d001b 001ba109     ................
10021f68:	a20b0000 0003001b 001ba609 a80b0001     ................
10021f78:	0001001b 001baa09 ab0b0000 0002001b     ................
10021f88:	001bae06 b00c0001 0009001b 001bba06     ................
10021f98:	e60b002b 0000001b 001be709 e80b0000     +...............
10021fa8:	0001001b 001bea09 ed0b0002 0000001b     ................
10021fb8:	001bee09 ef0b0000 0002001b 001bf209     ................
10021fc8:	fc140001 0003001b 001c0006 24090023     ............#..$
10021fd8:	0007001c 001c2c0b 34090007 0001001c     .....,.....4....
10021fe8:	001c360b 3b140001 0004001c 001c400c     .6.....;.....@..
10021ff8:	4d060009 0002001c 001c500c 5a060009     ...M.....P.....Z
10022008:	001d001c 001c7805 7e140005 0001001c     .....x.....~....
10022018:	001c8003 90030008 002a001c 001cbd03     ..........*.....
10022028:	c0140002 0007001c 001cd00b d3140002     ................
10022038:	0000001c 001cd40b e109000c 0000001c     ................
10022048:	001ce20b e9060006 0003001c 001ced0b     ................
10022058:	ee060000 0005001c 001cf40b f5060000     ................
10022068:	0001001c 001cf709 f80b0000 0001001c     ................
10022078:	001cfa06 00040000 002b001d 001d2c05     ..........+..,..
10022088:	6b04003e 000c001d 001d7805 79030000     >..k.....x.....y
10022098:	0000001d 001d7a04 7d030002 0000001d     .....z.....}....
100220a8:	001d7e04 8e03000f 0000001d 001d8f04     .~..............
100220b8:	9b05000b 0024001d 001dc00b 0003003f     ......$.....?...
100220c8:	0095001e 001e9604 9b030004 0000001e     ................
100220d8:	001e9c04 9e030001 0000001e 001e9f04     ................
100220e8:	a0030000 0075001e 001f1803 20030005     ......u........ 
100220f8:	0025001f 001f4803 50040005 0000001f     ..%..H.....P....
10022108:	001f5103 52040000 0000001f 001f5303     .Q.....R.....S..
10022118:	54040000 0000001f 001f5503 56040000     ...T.....U.....V
10022128:	0000001f 001f5703 59030000 0000001f     .....W.....Y....
10022138:	001f5b03 5d030000 0000001f 001f5f03     .[.....]....._..
10022148:	8003001e 0007001f 001f8807 90030007     ................
10022158:	0007001f 001f9807 a0030007 0007001f     ................
10022168:	001fa807 b0030007 0001001f 001fb204     ................
10022178:	b3030000 0000001f 001fb404 b6040000     ................
10022188:	0001001f 001fb803 bc070003 0000001f     ................
10022198:	001fbd17 be030000 0000001f 001fbf17     ................
100221a8:	c2040002 0000001f 001fc303 c4040000     ................
100221b8:	0000001f 001fc604 c8030001 0003001f     ................
100221c8:	001fcc07 cd170000 0002001f 001fd003     ................
100221d8:	d2040001 0001001f 001fd604 d8030001     ................
100221e8:	0003001f 001fdd17 e0030002 0001001f     ................
100221f8:	001fe204 e5030002 0000001f 001fe604     ................
10022208:	e8030001 0004001f 001fed17 f2040002     ................
10022218:	0000001f 001ff303 f4040000 0000001f     ................
10022228:	001ff604 f8030001 0003001f 001ffc07     ................
10022238:	fd170000 0001001f 0020001c 0b01000a     .......... .....
10022248:	00040020 00201010 16140005 00010020      ..... ..... ...
10022258:	00201813 19120000 00000020 00201a15     .. ..... ..... .
10022268:	1b130000 00010020 00201d12 1e150000     .... ..... .....
10022278:	00000020 00201f13 20140000 00070020      ..... ....  ...
10022288:	0020281a 291b0000 00000020 00202a01     .( ....) ....* .
10022298:	2f1c0004 00000020 00203014 39130008     .../ ....0 ....9
100222a8:	00000020 00203a12 3b140000 00030020      ....: ....; ...
100222b8:	00203f0f 41140001 00020020 00204418     .? ....A ....D .
100222c8:	45150000 00000020 00204611 47140000     ...E ....F ....G
100222d8:	000a0020 00205218 53140000 00000020      ....R ....S ...
100222e8:	0020540f 55140000 00090020 00205f1c     .T ....U ...._ .
100222f8:	60010000 00040020 00206601 700e0009     ...` ....f ....p
10022308:	00000020 00207105 740e0000 00050020      ....q ....t ...
10022318:	00207a18 7d150002 00000020 00207e11     .z ....} ....~ .
10022328:	7f050000 00000020 0020800e 8a180009     .... ..... .....
10022338:	00020020 00208d15 8e110000 00000020      ..... ..... ...
10022348:	00209005 a016000c 00200020 0020d00b     .. ..... . ... .
10022358:	dd0a000c 00030020 0020e10b e20a0000     .... ..... .....
10022368:	00020020 0020e50b 0019000b 00010021      ..... .....!...
10022378:	00210208 03190000 00030021 00210708     ..!.....!.....!.
10022388:	08190000 00010021 00210a04 0b080000     ....!.....!.....
10022398:	00020021 00210e04 10080001 00020021     !.....!.....!...
100223a8:	00211304 14190000 00000021 00211508     ..!.....!.....!.
100223b8:	16190000 00010021 00211818 19080000     ....!.....!.....
100223c8:	00040021 00211e19 24080005 00000021     !.....!....$!...
100223d8:	00212519 26030000 00000021 00212719     .%!....&!....'!.
100223e8:	28080000 00000021 00212919 2a030000     ...(!....)!....*
100223f8:	00010021 00212c08 2e190001 00000021     !....,!.....!...
10022408:	00212f04 30080000 00010021 00213203     ./!....0!....2!.
10022418:	33080000 00000021 00213404 35060000     ...3!....4!....5
10022428:	00030021 00213904 3a190000 00010021     !....9!....:!...
10022438:	00213c04 3e080001 00010021 00214018     .<!....>!....@!.
10022448:	45080004 00000021 00214604 4a190003     ...E!....F!....J
10022458:	00000021 00214b18 4c190000 00010021     !....K!....L!...
10022468:	00214e03 4f190000 00000021 0021500e     .N!....O!....P!.
10022478:	600d000f 00220021 00218303 850d0001     ...`!."...!.....
10022488:	00030021 0021890e 8a190000 00010021     !.....!.....!...
10022498:	00219018 95190004 00040021 00219a18     ..!.....!.....!.
100224a8:	9c190001 00030021 0021a018 a1190000     ....!.....!.....
100224b8:	00010021 0021a318 a4190000 00010021     !.....!.....!...
100224c8:	0021a618 a7190000 00060021 0021ae18     ..!.....!.....!.
100224d8:	af190000 001e0021 0021ce18 d0190001     ....!.....!.....
100224e8:	00010021 0021d218 d3190000 00000021     !.....!.....!...
100224f8:	0021d418 d5190000 001e0021 0021f418     ..!.....!.....!.
10022508:	0019010b 00070023 00230815 09110000     ....#.....#.....
10022518:	00000023 00230a15 0b110000 00000023     #.....#.....#...
10022528:	00230c19 20180013 00010023 00232219     ..#.... #...."#.
10022538:	29150006 00000023 00232a11 2b190000     ...)#....*#....+
10022548:	00500023 00237c18 7d190000 001d0023     #.P..|#....}#...
10022558:	00239b18 b4190018 00270023 0023dc18     ..#.....#.'...#.
10022568:	e2190005 00440023 00244019 600e000a     ....#.D..@$....`
10022578:	003b0024 00249c19 ea0e004d 00150024     $.;...$.M...$...
10022588:	00250019 b71800b6 00000025 0025b819     ..%.....%.....%.
10022598:	c1180008 00000025 0025c219 f8180035     ....%.....%.5...
100225a8:	00070025 00260019 6f18006e 00000026     %.....&.n..o&...
100225b8:	00267019 681500f7 00000027 00276911     .p&....h'....i'.
100225c8:	6a150000 00000027 00276b11 6c150000     ...j'....k'....l
100225d8:	00000027 00276d11 6e150000 00000027     '....m'....n'...
100225e8:	00276f11 70150000 00000027 00277111     .o'....p'....q'.
100225f8:	72150000 00000027 00277311 74150000     ...r'....s'....t
10022608:	00000027 00277511 760e0000 001d0027     '....u'....v'...
10022618:	00279419 c018002b 00040027 0027c515     ..'.+...'.....'.
10022628:	c6110000 00000027 0027c718 e615001e     ....'.....'.....
10022638:	00000027 0027e711 e8150000 00000027     '.....'.....'...
10022648:	0027e911 ea150000 00000027 0027eb11     ..'.....'.....'.
10022658:	ec150000 00000027 0027ed11 ee150000     ....'.....'.....
10022668:	00000027 0027ef11 f0180000 000f0027     '.....'.....'...
10022678:	00280019 001800ff 00820029 00298315     ..(.....).....).
10022688:	84110000 00000029 00298515 86110000     ....).....).....
10022698:	00000029 00298715 88110000 00000029     ).....).....)...
100226a8:	00298915 8a110000 00000029 00298b15     ..).....).....).
100226b8:	8c110000 00000029 00298d15 8e110000     ....).....).....
100226c8:	00000029 00298f15 90110000 00000029     ).....).....)...
100226d8:	00299115 92110000 00000029 00299315     ..).....).....).
100226e8:	94110000 00000029 00299515 96110000     ....).....).....
100226f8:	00000029 00299715 98110000 00000029     ).....).....)...
10022708:	00299918 d815003e 00000029 0029d911     ..).>...).....).
10022718:	da150000 00000029 0029db11 dc180000     ....).....).....
10022728:	001f0029 0029fc15 fd110000 00000029     ).....).....)...
10022738:	0029fe18 00190101 002f002b 002b3018     ..).....+./..0+.
10022748:	45190014 0001002b 002b4718 4d190005     ...E+....G+....M
10022758:	0026002b 002b7619 9719001f 0068002b     +.&..v+.....+.h.
10022768:	002c0003 71040070 0000002c 002c7203     ..,.p..q,....r,.
10022778:	74040001 0000002c 002c7503 77040001     ...t,....u,....w
10022788:	0004002c 002c7c05 7e030001 0065002c     ,....|,....~,.e.
10022798:	002ce404 e5190000 0005002c 002ceb03     ..,.....,.....,.
100227a8:	ef0b0003 0002002c 002cf203 f9140001     ....,.....,.....
100227b8:	0003002c 002cfd0e fe140000 0001002c     ,.....,.....,...
100227c8:	002d0003 27030025 0000002d 002d2d03     ..-.%..'-....--.
100227d8:	30060000 0037002d 002d6f05 70140000     ...0-.7..o-....p
100227e8:	0000002d 002d7f0b 80060000 0016002d     -.....-.....-...
100227f8:	002da006 a8060006 0006002d 002db006     ..-.....-.....-.
10022808:	b8060006 0006002d 002dc006 c8060006     ....-.....-.....
10022818:	0006002d 002dd006 d8060006 0006002d     -.....-.....-...
10022828:	002de00b 0014001f 0001002e 002e0213     ..-.............
10022838:	03120000 0000002e 002e0413 05120000     ................
10022848:	0000002e 002e0614 09130002 0000002e     ................
10022858:	002e0a12 0b140000 0000002e 002e0c13     ................
10022868:	0d120000 0000002e 002e0e14 17100008     ................
10022878:	0000002e 002e1814 1a100001 0000002e     ................
10022888:	002e1b14 1c130000 0000002e 002e1d12     ................
10022898:	1e140000 0001002e 002e2013 21120000     ......... .....!
100228a8:	0000002e 002e2215 23110000 0000002e     .....".....#....
100228b8:	002e2415 25110000 0000002e 002e2615     .$.....%.....&..
100228c8:	27110000 0000002e 002e2815 29110000     ...'.....(.....)
100228d8:	0000002e 002e2a14 2f050004 0000002e     .....*...../....
100228e8:	002e3014 3a100009 0001002e 002e3c14     .0.....:.....<..
100228f8:	40100003 0000002e 002e4114 42150000     ...@.....A.....B
10022908:	0000002e 002e4314 5019000c 0001002e     .....C.....P....
10022918:	002e5214 55150002 0000002e 002e5611     .R.....U.....V..
10022928:	57150000 0000002e 002e5811 59150000     ...W.....X.....Y
10022938:	0000002e 002e5a11 5b150000 0000002e     .....Z.....[....
10022948:	002e5c11 5d100000 0000002e 002e8019     .\.....]........
10022958:	9b190019 0058002e 002f0019 f01900d5     ......X.../.....
10022968:	000b002f 0030001c 01140000 00020030     /.....0.....0...
10022978:	00300419 05050000 00000030 00300606     ..0.....0.....0.
10022988:	070d0000 00000030 00300815 09110000     ....0.....0.....
10022998:	00000030 00300a15 0b110000 00000030     0.....0.....0...
100229a8:	00300c15 0d110000 00000030 00300e15     ..0.....0.....0.
100229b8:	0f110000 00000030 00301015 11110000     ....0.....0.....
100229c8:	00000030 00301219 14150001 00000030     0.....0.....0...
100229d8:	00301511 16150000 00000030 00301711     ..0.....0.....0.
100229e8:	18150000 00000030 00301911 1a150000     ....0.....0.....
100229f8:	00000030 00301b11 1c100000 00000030     0.....0.....0...
10022a08:	00301d15 1e110000 00010030 00302019     ..0.....0.... 0.
10022a18:	210d0000 00080030 00302a0b 2e090003     ...!0....*0.....
10022a28:	00010030 00303010 31050000 00040030     0....00....10...
10022a38:	00303619 380d0001 00020030 00303b05     .60....80....;0.
10022a48:	3c060000 00000030 00303d14 3e190000     ...<0....=0....>
10022a58:	00010030 00304106 990b0055 00010030     0....A0.U...0...
10022a68:	00309b17 9d050001 00010030 00309f06     ..0.....0.....0.
10022a78:	a0100000 00000030 0030a106 fb140059     ....0.....0.Y...
10022a88:	00000030 0030fc05 ff060002 00000030     0.....0.....0...
10022a98:	00310506 3106002a 005d0031 00319019     ..1.*..11.]...1.
10022aa8:	920e0001 00030031 00319619 a0060009     ....1.....1.....
10022ab8:	001f0031 0031c019 f0060023 000f0031     1.....1.#...1...
10022ac8:	00320019 200e001e 00090032 00322a19     ..2.... 2....*2.
10022ad8:	480e001d 00070032 00325019 510e0000     ...H2....P2....Q
10022ae8:	000e0032 00326019 800e001f 00090032     2....`2.....2...
10022af8:	00328a19 b10e0026 000e0032 0032c019     ..2.&...2.....2.
10022b08:	0006013f 19bf0034 004dc019 0006003f     ?...4.....M.?...
10022b18:	5214004e 00a01505 16060000 047600a0     N..R..........v.
10022b28:	00a49019 d0060036 002700a4 00a4f805     ....6.....'.....
10022b38:	fe140005 000100a4 00a50006 0c05010b     ................
10022b48:	000000a6 00a60d14 10060002 000f00a6     ................
10022b58:	00a6200c 2a060009 000100a6 00a64003     . .....*.....@..
10022b68:	6e06002d 000000a6 00a66f0b 700a0000     -..n.....o.....p
10022b78:	000200a6 00a67314 740b0000 000900a6     .....s.....t....
10022b88:	00a67e14 7f050000 000000a6 00a68003     .~..............
10022b98:	9c05001b 000100a6 00a69e0b a0060001     ................
10022ba8:	004500a6 00a6e60d f00b0009 000100a6     ..E.............
10022bb8:	00a6f214 00170005 001600a7 00a71705     ................
10022bc8:	20170008 000100a7 00a72203 3004000d     ... .....".....0
10022bd8:	000100a7 00a73203 7005003d 000000a7     .....2..=..p....
10022be8:	00a77104 79030007 000e00a7 00a78805     .q.....y........
10022bf8:	89170000 000100a7 00a78b03 8e040002     ................
10022c08:	000000a7 00a78f06 90030000 000400a7     ................
10022c18:	00a79504 96030000 001800a7 00a7af04     ................
10022c28:	b0030000 001a00a7 00a7d003 d3040001     ................
10022c38:	000000a7 00a7d504 d6030000 000300a7     ................
10022c48:	00a7f205 f5030002 000100a7 00a7f706     ................
10022c58:	f8050000 000100a7 00a7fa04 fb060000     ................
10022c68:	000600a7 00a8020b 03060000 000200a8     ................
10022c78:	00a8060b 07060000 000300a8 00a80b0b     ................
10022c88:	0c060000 001600a8 00a82309 250b0001     .........#.....%
10022c98:	000100a8 00a82709 28190000 000300a8     .....'.....(....
10022ca8:	00a82c0b 300e0000 000500a8 00a83619     .,.....0.....6..
10022cb8:	38160001 000000a8 00a83919 40060000     ...8.....9.....@
10022cc8:	003300a8 00a87414 80090003 000100a8     ..3..t..........
10022cd8:	00a88206 b4090031 000f00a8 00a8c40b     ....1...........
10022ce8:	ce140001 000100a8 00a8d00c e00b0009     ................
10022cf8:	001100a8 00a8f206 f8140005 000200a8     ................
10022d08:	00a8fb06 fc140000 000000a8 00a8fd06     ................
10022d18:	ff0b0001 000000a8 00a9000c 0a060009     ................
10022d28:	001b00a9 00a9260b 2e140007 000100a9     .....&..........
10022d38:	00a93006 470b0016 000a00a9 00a95209     .0.....G.....R..
10022d48:	5f140001 000000a9 00a96006 800b001c     ..._.....`......
10022d58:	000200a9 00a98309 84060000 002e00a9     ................
10022d68:	00a9b30b b4090000 000100a9 00a9b60b     ................
10022d78:	ba090003 000100a9 00a9bc0b be090001     ................
10022d88:	000200a9 00a9c114 cf05000c 000000a9     ................
10022d98:	00a9d00c de140009 000100a9 00a9e006     ................
10022da8:	e50b0004 000000a9 00a9e605 e7060000     ................
10022db8:	000800a9 00a9f00c fa060009 000400a9     ................
10022dc8:	00aa0006 290b0028 000500aa 00aa2f09     ....(..)...../..
10022dd8:	310b0001 000100aa 00aa3309 350b0001     ...1.....3.....5
10022de8:	000100aa 00aa4006 430b0002 000000aa     .....@.....C....
10022df8:	00aa4406 4c0b0007 000000aa 00aa4d09     .D.....L.....M..
10022e08:	500c0000 000900aa 00aa5c14 60060003     ...P.....\.....`
10022e18:	000f00aa 00aa7005 71060000 000500aa     .....p.....q....
10022e28:	00aa7719 7a060002 000000aa 00aa7b09     .w.....z.....{..
10022e38:	7c0b0000 000000aa 00aa7d09 7e060000     ...|.....}.....~
10022e48:	003100aa 00aab00b b1060000 000000aa     ..1.............
10022e58:	00aab20b b5060002 000100aa 00aab70b     ................
10022e68:	b9060001 000400aa 00aabe0b c0060001     ................
10022e78:	000000aa 00aac10b c2060000 000000aa     ................
10022e88:	00aadb06 dd050001 000000aa 00aade14     ................
10022e98:	e0060001 000a00aa 00aaeb09 ec0b0000     ................
10022ea8:	000100aa 00aaee09 f0140001 000100aa     ................
10022eb8:	00aaf206 f3050000 000100aa 00aaf509     ................
10022ec8:	f60b0000 000000aa 00ab0106 09060005     ................
10022ed8:	000500ab 00ab1106 20060005 000600ab     ........... ....
10022ee8:	00ab2806 30040006 002200ab 00ab5303     .(.....0.."..S..
10022ef8:	54040000 000600ab 00ab5b17 5c050000     ...T.....[.....\
10022f08:	000300ab 00ab6004 69050008 000000ab     .....`.....i....
10022f18:	00ab6a17 70030001 004f00ab 00abc006     .j.....p..O.....
10022f28:	e3090022 000100ab 00abe50b e6090000     "...............
10022f38:	000100ab 00abe80b e9090000 000100ab     ................
10022f48:	00abeb14 ec090000 000000ab 00abed0b     ................
10022f58:	f00c0000 000900ab 00ac0006 b0062ba3     .............+..
10022f68:	001600d7 00d7cb06 00020030 07ff00d8     ........0.......
10022f78:	00f90006 7006016d 006900fa 00fb0004     ....m..p..i.....
10022f88:	13040006 000400fb 00fb1d06 1e0b0000     ................
10022f98:	000000fb 00fb1f06 29180009 000000fb     ...........)....
10022fa8:	00fb2a06 3806000c 000400fb 00fb3e06     .*.....8.....>..
10022fb8:	40060000 000100fb 00fb4306 46060001     ...@.....C.....F
10022fc8:	006b00fb 00fbb217 d3060010 016a00fb     ..k...........j.
10022fd8:	00fd3e11 3f150000 000000fd 00fd4019     .>.....?.....@..
10022fe8:	5006000f 003f00fd 00fd9206 cf190035     ...P..?.....5...
10022ff8:	000000fd 00fdf006 fc16000b 000000fd     ................
10023008:	00fdfd19 000b0002 000f00fe 00fe1014     ................
10023018:	17150006 000000fe 00fe1811 19140000     ................
10023028:	000000fe 00fe200b 3014000f 000000fe     ..... .....0....
10023038:	00fe3110 330f0001 000100fe 00fe3515     .1.....3.....5..
10023048:	36110000 000000fe 00fe3715 38110000     ...6.....7.....8
10023058:	000000fe 00fe3915 3a110000 000000fe     .....9.....:....
10023068:	00fe3b15 3c110000 000000fe 00fe3d15     .;.....<.....=..
10023078:	3e110000 000000fe 00fe3f15 40110000     ...>.....?.....@
10023088:	000000fe 00fe4115 42110000 000000fe     .....A.....B....
10023098:	00fe4315 44110000 000000fe 00fe4514     .C.....D.....E..
100230a8:	47150001 000000fe 00fe4811 49140000     ...G.....H.....I
100230b8:	000300fe 00fe4d0f 50140002 000200fe     .....M.....P....
100230c8:	00fe5414 58100003 000000fe 00fe5915     .T.....X.....Y..
100230d8:	5a110000 000000fe 00fe5b15 5c110000     ...Z.....[.....\
100230e8:	000000fe 00fe5d15 5e110000 000000fe     .....].....^....
100230f8:	00fe5f14 62180002 000000fe 00fe6310     ._.....b.....c..
10023108:	64180000 000200fe 00fe6814 69160000     ...d.....h.....i
10023118:	000000fe 00fe6a14 70060001 000400fe     .....j.....p....
10023128:	00fe7606 ff010086 000000fe 00ff0114     .v..............
10023138:	04160002 000000ff 00ff0514 08150002     ................
10023148:	000000ff 00ff0911 0a140000 000000ff     ................
10023158:	00ff0b18 0c140000 000000ff 00ff0d10     ................
10023168:	0e140000 000100ff 00ff100c 1a140009     ................
10023178:	000100ff 00ff1c18 1f140002 000100ff     ................
10023188:	00ff2103 3b150019 000000ff 00ff3c14     .!.....;.....<..
10023198:	3d110000 000000ff 00ff3e17 3f0f0000     ...=.....>.....?
100231a8:	000000ff 00ff4017 41030000 001900ff     .....@.....A....
100231b8:	00ff5b15 5c180000 000000ff 00ff5d11     .[.....\.....]..
100231c8:	5e180000 000000ff 00ff5f15 60110000     ...^....._.....`
100231d8:	000000ff 00ff6114 62150000 000000ff     .....a.....b....
100231e8:	00ff6311 64140000 000100ff 00ff6606     .c.....d.....f..
100231f8:	70050009 000000ff 00ff7106 9e05002c     ...p.....q..,...
10023208:	000100ff 00ffa006 c206001e 000500ff     ................
10023218:	00ffca06 d2060005 000500ff 00ffda06     ................
10023228:	e0160002 000100ff 00ffe218 e3170000     ................
10023238:	000000ff 00ffe419 e5160000 000100ff     ................
10023248:	00ffe819 e9180000 000300ff 00ffed19     ................
10023258:	f9010001 000200ff 00fffc19 00060001     ................
10023268:	000b0100 01000d06 28060019 00120100     ...........(....
10023278:	01003c06 3f060001 000e0100 01005006     .<.....?.....P..
10023288:	8006000d 007a0100 01010014 070e0002     ......z.........
10023298:	002c0101 01013719 400d0008 00340101     ..,..7.....@..4.
100232a8:	0101750e 79190003 00100101 01018a0e     .u.....y........
100232b8:	8c190001 00020101 01019019 a019000c     ................
100232c8:	00000101 0101d019 fd0b002c 00000101     ........,.......
100232d8:	01028006 a006001c 00300102 0102e00b     ..........0.....
100232e8:	e10e0000 001a0102 01030006 200e001f     ............... 
100232f8:	00030103 01032d06 410d0013 00000103     .....-.....A....
10023308:	01034206 4a0d0007 00000103 01035006     .B.....J.....P..
10023318:	760b0025 00040103 01038006 9f14001d     %..v............
10023328:	00000103 0103a006 c8060023 00070103     ........#.......
10023338:	0103d014 d10d0000 00040103 01040003     ................
10023348:	5006004f 004d0104 0104a00c b0030009     O..P..M.........
10023358:	00230104 0104d803 00060023 00270105     ..#.....#.....'.
10023368:	01053006 6f140033 00000105 01057003     .0..3..o.....p..
10023378:	7c03000a 000e0105 01058c03 94030006     ...|............
10023388:	00010105 01059703 a303000a 000e0105     ................
10023398:	0105b303 bb030006 00010105 01060006     ................
100233a8:	40060136 00150107 01076006 80050007     6..@.....`......
100233b8:	00050107 01078705 b2050029 00080107     ........).......
100233c8:	01080006 08060005 00000108 01080a06     ................
100233d8:	3706002b 00010108 01083c06 3f060000     +..7.....<.....?
100233e8:	00160108 01085714 580e0000 00070108     .....W.....X....
100233f8:	01086006 77190016 00010108 0108790e     .`.....w.....y..
10023408:	80060006 001e0108 0108a70e e0060008     ................
10023418:	00120108 0108f406 fb0e0001 00040108     ................
10023428:	01090006 160e0015 00050109 01091f14     ................
10023438:	20060000 00190109 01093f14 80060000     ... .....?......
10023448:	00370109 0109bc0e be060001 00010109     ..7.............
10023458:	0109c00e d20e000f 002d0109 010a0006     ..........-.....
10023468:	010b0000 0002010a 010a050b 0c0b0001     ................
10023478:	0003010a 010a1006 15060003 0002010a     ................
10023488:	010a1906 380b001c 0002010a 010a3f0b     .......8.....?..
10023498:	400e0000 0008010a 010a5014 60060008     ...@.....P.....`
100234a8:	001c010a 010a7d0e 7f140001 0000010a     .....}..........
100234b8:	010a8006 9d0e001c 0002010a 010ac006     ................
100234c8:	c8190007 0000010a 010ac906 e50b001b     ................
100234d8:	0001010a 010aeb0e f0140004 0006010a     ................
100234e8:	010b0006 39140035 0006010b 010b4006     ....5..9.....@..
100234f8:	580e0015 0007010b 010b6006 780e0012     ...X.....`.....x
10023508:	0007010b 010b8006 99140011 0003010b     ................
10023518:	010ba90e 00060006 0048010c 010c8003     ..........H.....
10023528:	c0030032 0032010c 010cfa0e 00060005     2.....2.........
10023538:	0023010d 010d240b 300c0003 0009010d     ..#..$.....0....
10023548:	010e600e 8006001e 0029010e 010eab0b     .`........).....
10023558:	ad100001 0000010e 010eb006 fd0b0001     ................
10023568:	0002010e 010f0006 1d0e001c 0009010f     ................
10023578:	010f2706 30060000 0015010f 010f460b     .'.....0.....F..
10023588:	510e000a 0003010f 010f5514 70060004     ...Q.....U.....p
10023598:	0011010f 010f820b 86140003 0003010f     ................
100235a8:	010fb006 c50e0014 0006010f 010fe006     ................
100235b8:	00090016 00000110 0110010b 02090000     ................
100235c8:	00000110 01100306 380b0034 000e0110     ........4..8....
100235d8:	01104714 520e0006 00130110 0110660c     .G.....R.....f..
100235e8:	700b0009 00000110 01107106 730b0001     ...p.....q.....s
100235f8:	00010110 01107506 7f0b0000 00020110     .....u..........
10023608:	01108209 83060000 002c0110 0110b009     ..........,.....
10023618:	b30b0002 00030110 0110b709 b90b0001     ................
10023628:	00010110 0110bb14 bd010001 00000110     ................
10023638:	0110be14 c20b0003 00000110 0110cd01     ................
10023648:	d0060000 00180110 0110f00c 000b0009     ................
10023658:	00020111 01110306 270b0023 00040111     ........#..'....
10023668:	01112c09 2d0b0000 00070111 0111360c     .,.....-.....6..
10023678:	40140009 00030111 01114406 45090000     ...@.....D.....E
10023688:	00010111 01114706 50060000 00220111     .....G.....P..".
10023698:	0111730b 74140000 00010111 01117606     .s.....t.....v..
100236a8:	800b0000 00010111 01118209 83060000     ................
100236b8:	002f0111 0111b309 b60b0002 00080111     ../.............
100236c8:	0111bf09 c1060001 00030111 0111c514     ................
100236d8:	c90b0003 00030111 0111cd14 ce090000     ................
100236e8:	00000111 0111cf0b d00c0000 00090111     ................
100236f8:	0111da06 db140000 00000111 0111dc06     ................
10023708:	dd140000 00020111 0111e10e 00060013     ................
10023718:	00110112 01121306 2c090018 00020112     ...........,....
10023728:	01122f0b 32090002 00010112 0112340b     ./.....2.....4..
10023738:	35090000 00000112 0112360b 38140001     ...5.....6.....8
10023748:	00050112 01123e0b 3f060000 00010112     .....>.....?....
10023758:	0112410b 80060000 00060112 01128806     .A..............
10023768:	8a060000 00030112 01128f06 9f06000e     ................
10023778:	00090112 0112a914 b0060000 002e0112     ................
10023788:	0112df0b e0090000 00020112 0112e30b     ................
10023798:	f00c0007 00090112 0113000b 02090001     ................
100237a8:	00010113 01130506 0f060007 00010113     ................
100237b8:	01131306 2a060015 00060113 01133206     .......*.....2..
100237c8:	35060001 00040113 01133b0b 3d060001     ...5.....;.....=
100237d8:	00000113 01133e09 400b0001 00000113     .....>.....@....
100237e8:	01134109 47090003 00010113 01134b09     .A.....G.....K..
100237f8:	50060002 00000113 01135709 5d060000     ...P.....W.....]
10023808:	00040113 01136209 660b0001 00060113     .....b.....f....
10023818:	0113700b 00060004 00340114 01143509     .p........4..5..
10023828:	380b0002 00070114 01144009 420b0001     ...8.....@.....B
10023838:	00020114 01144509 460b0000 00000114     .....E.....F....
10023848:	01144706 4b140003 00040114 0114500c     .G.....K.....P..
10023858:	5a140009 00010114 01145d14 5e0b0000     ...Z.....].....^
10023868:	00000114 01145f06 80060002 002f0114     ....._......../.
10023878:	0114b009 b30b0002 00050114 0114b909     ................
10023888:	ba0b0000 00000114 0114bb09 bf0b0003     ................
10023898:	00010114 0114c109 c20b0000 00010114     ................
100238a8:	0114c406 c6140001 00000114 0114c706     ................
100238b8:	d00c0000 00090114 01158006 af09002e     ................
100238c8:	00020115 0115b20b b8090003 00030115     ................
100238d8:	0115bc0b be090001 00000115 0115bf0b     ................
100238e8:	c1140001 00160115 0115d806 dc0b0003     ................
100238f8:	00010115 01160006 3009002f 00020116     ......../..0....
10023908:	0116330b 3b090007 00010116 01163d0b     .3.....;.....=..
10023918:	3e090000 00000116 01163f0b 41140001     ...>.....?.....A
10023928:	00020116 01164406 500c0000 00090116     .....D.....P....
10023938:	01166014 8006000c 002a0116 0116ab0b     .`........*.....
10023948:	ac090000 00000116 0116ad0b ae090000     ................
10023958:	00010116 0116b00b b6090005 00000116     ................
10023968:	0116b70b b8060000 00000116 0116b914     ................
10023978:	c00c0000 00090116 01170006 1d0b001a     ................
10023988:	00020117 01172009 220b0001 00030117     ..... ....."....
10023998:	01172609 270b0000 00040117 0117300c     .&.....'.....0..
100239a8:	3a0e0009 00010117 01173c14 3f190002     ...:.....<.....?
100239b8:	00000117 01174006 00060006 002b0118     .....@........+.
100239c8:	01182c09 2f0b0002 00080118 01183809     .,...../.....8..
100239d8:	390b0000 00010118 01183b14 a0030000     ...9.....;......
100239e8:	003f0118 0118e00c ea0e0009 00080118     ..?.............
100239f8:	0118ff06 09060007 00000119 01190c06     ................
10023a08:	15060007 00010119 01191806 30090017     ...............0
10023a18:	00050119 01193709 3b0b0001 00010119     .....7.....;....
10023a28:	01193d09 3e0b0000 00000119 01193f06     .=.....>.....?..
10023a38:	40090000 00000119 01194106 42090000     ...@.....A.....B
10023a48:	00000119 0119430b 44140000 00020119     .....C.....D....
10023a58:	0119500c a0060009 00070119 0119aa06     .P..............
10023a68:	d1090026 00020119 0119d40b da0b0003     &...............
10023a78:	00010119 0119dc09 e00b0003 00000119     ................
10023a88:	0119e106 e2140000 00000119 0119e306     ................
10023a98:	e4090000 00000119 011a0006 010b0000     ................
10023aa8:	0009011a 011a0b06 330b0027 0005011a     ........'..3....
10023ab8:	011a3909 3a060000 0000011a 011a3b0b     .9.....:.....;..
10023ac8:	3f140003 0007011a 011a470b 50060000     ...?.....G.....P
10023ad8:	0000011a 011a510b 57090005 0001011a     .....Q.....W....
10023ae8:	011a590b 5c060002 002d011a 011a8a0b     .Y.....\..-.....
10023af8:	9709000c 0000011a 011a980b 9a140001     ................
10023b08:	0002011a 011a9d06 9e140000 0004011a     ................
10023b18:	011ab006 00140048 0009011b 011c0006     ....H...........
10023b28:	0a060008 0024011c 011c2f09 300b0000     ......$../.....0
10023b38:	0006011c 011c380b 3e090005 0000011c     .....8.....>....
10023b48:	011c3f0b 40060000 0000011c 011c4114     .?.....@.....A..
10023b58:	500c0004 0009011c 011c5a0e 70140012     ...P.....Z.....p
10023b68:	0001011c 011c7206 920b001d 0015011c     .....r..........
10023b78:	011ca909 aa0b0000 0006011c 011cb109     ................
10023b88:	b20b0000 0001011c 011cb409 b50b0000     ................
10023b98:	0001011c 011d0006 08060006 0001011d     ................
10023ba8:	011d0b06 310b0025 0005011d 011d3a0b     ....%..1.....:..
10023bb8:	3c0b0000 0001011d 011d3f0b 46060006     ...<.....?.....F
10023bc8:	0000011d 011d470b 500c0000 0009011d     .....G.....P....
10023bd8:	011d6006 67060005 0001011d 011d6a06     .`.....g.....j..
10023be8:	8a09001f 0004011d 011d900b 93090001     ................
10023bf8:	0001011d 011d950b 96090000 0000011d     ................
10023c08:	011d970b 98060000 0000011d 011da00c     ................
10023c18:	e0060009 0012011e 011ef30b f5090001     ................
10023c28:	0001011e 011ef714 000b0001 0001011f     ................
10023c38:	011f0206 03090000 0000011f 011f0406     ................
10023c48:	1206000c 0021011f 011f3409 360b0001     ......!..4.....6
10023c58:	0004011f 011f3e09 400b0001 0000011f     .....>.....@....
10023c68:	011f4109 420b0000 0000011f 011f4314     .A.....B.....C..
10023c78:	500c000c 0009011f 011fb006 c00e0000     ...P............
10023c88:	0014011f 011fd519 dd160007 0003011f     ................
10023c98:	011fe119 ff140010 0000011f 01200006     .............. .
10023ca8:	000d0399 006e0124 01247014 80060004     ....$.n..p$.....
10023cb8:	00c30124 012f9006 f1140060 0001012f     $...../.`.../...
10023cc8:	01300006 3001042f 000f0134 0134400b     ..0./..04....@4.
10023cd8:	41060000 00050134 0134470b 0006000e     ...A4....G4.....
10023ce8:	02460144 01680006 40060238 001e016a     D.F...h.8..@j...
10023cf8:	016a600c 6e140009 0001016a 016a7006     .`j....nj....pj.
10023d08:	c00c004e 0009016a 016ad006 f00b001d     N...j.....j.....
10023d18:	0004016a 016af514 00060000 002f016b     j.....j.....k./.
10023d28:	016b300b 37140006 0004016b 016b3c19     .0k....7k....<k.
10023d38:	40050003 0003016b 016b4414 45190000     ...@k....Dk....E
10023d48:	0000016b 016b500c 5b0e0009 0006016b     k....Pk....[k...
10023d58:	016b6306 7d060014 0012016b 016e4003     .ck....}k....@n.
10023d68:	800e003f 0016016e 016e9714 00060003     ?...n.....n.....
10023d78:	004a016f 016f4f0b 50060000 0000016f     o.J..Oo....Po...
10023d88:	016f5109 8f0b0036 0003016f 016f9305     .Qo.6...o.....o.
10023d98:	e005000c 0001016f 016fe214 e3050000     ....o.....o.....
10023da8:	0000016f 016fe40b f0090000 0001016f     o.....o.....o...
10023db8:	01700006 000617f7 04d50188 018d0006     ..p.............
10023dc8:	f0050008 000301af 01aff505 fd050006     ................
10023dd8:	000101af 01b00006 32060122 000001b1     ........"..2....
10023de8:	01b15006 55060002 000001b1 01b16406     .P.....U.....d..
10023df8:	70060003 018b01b1 01bc0006 7006006a     ...p........j..p
10023e08:	000c01bc 01bc8006 90060008 000901bc     ................
10023e18:	01bc9c19 9d0b0000 000101bc 01bc9f14     ................
10023e28:	a0010000 000301bc 01cf000b 300b002d     ............-..0
10023e38:	001601cf 01cf5019 00190073 00f501d0     .....P..s.......
10023e48:	01d10019 29190026 003b01d1 01d16509     ....&..)..;..e..
10023e58:	670b0001 000201d1 01d16a19 6d090002     ...g.....j.....m
10023e68:	000501d1 01d17301 7b0b0007 000701d1     .....s.....{....
10023e78:	01d18319 850b0001 000601d1 01d18c19     ................
10023e88:	aa0b001d 000301d1 01d1ae19 0019003c     ............<...
10023e98:	004101d2 01d2420b 45190002 000001d2     ..A..B.....E....
10023ea8:	01d2c00e e00e0013 001301d2 01d30019     ................
10023eb8:	600e0056 001801d3 01d40008 1a040019     V..`............
10023ec8:	001901d4 01d43408 4e040019 000601d4     .....4.....N....
10023ed8:	01d45604 68080011 001901d4 01d48204     .V.....h........
10023ee8:	9c080019 000001d4 01d49e08 a2080001     ................
10023ef8:	000001d4 01d4a508 a9080001 000301d4     ................
10023f08:	01d4ae08 b6040007 000301d4 01d4bb04     ................
10023f18:	bd040000 000601d4 01d4c504 d008000a     ................
10023f28:	001901d4 01d4ea04 04080019 000101d5     ................
10023f38:	01d50708 0d080003 000701d5 01d51608     ................
10023f48:	1e040006 001901d5 01d53808 3b080001     .........8.....;
10023f58:	000301d5 01d54008 46080004 000001d5     .....@.....F....
10023f68:	01d54a08 52040006 001901d5 01d56c08     .J.....R.....l..
10023f78:	86040019 001901d5 01d5a008 ba040019     ................
10023f88:	001901d5 01d5d408 ee040019 001901d5     ................
10023f98:	01d60808 22040019 001901d6 01d63c08     .......".....<..
10023fa8:	56040019 001901d6 01d67008 8a040019     ...V.....p......
10023fb8:	001b01d6 01d6a808 c1180018 000001d6     ................
10023fc8:	01d6c204 db180018 000001d6 01d6dc04     ................
10023fd8:	e2080005 001801d6 01d6fb18 fc040000     ................
10023fe8:	001801d6 01d71518 16040000 000501d7     ................
10023ff8:	01d71c08 35180018 000001d7 01d73604     .......5.....6..
10024008:	4f180018 000001d7 01d75004 56080005     ...O.....P.....V
10024018:	001801d7 01d76f18 70040000 001801d7     .....o.....p....
10024028:	01d78918 8a040000 000501d7 01d79008     ................
10024038:	a9180018 000001d7 01d7aa04 c3180018     ................
10024048:	000001d7 01d7c404 ca080005 000001d7     ................
10024058:	01d7cb04 ce0c0000 003101d7 01d80019     ..........1.....
10024068:	000b01ff 003601da 01da3719 3b0b0003     ......6..7.....;
10024078:	003101da 01da6d19 750b0007 000001da     ..1..m.....u....
10024088:	01da7619 840b000d 000001da 01da8519     .v..............
10024098:	87140001 000401da 01da9b0b a10b0004     ................
100240a8:	000e01da 01df0004 0a060009 000001df     ................
100240b8:	01df0b04 25040013 000501df 01e0000b     .......%........
100240c8:	080b0006 001001e0 01e01b0b 230b0006     ...............#
100240d8:	000101e0 01e0260b 30050004 003d01e0     .....&.....0..=.
100240e8:	01e08f0b 00060000 002c01e1 01e1300b     ..........,..0..
100240f8:	37050006 000601e1 01e1400c 4e060009     ...7.....@.....N
10024108:	000001e1 01e14f19 90060000 001d01e2     .....O..........
10024118:	01e2ae0b c0060000 002b01e2 01e2ec0b     ..........+.....
10024128:	f00c0003 000901e2 01e2ff16 d0060000     ................
10024138:	001a01e4 01e4eb05 ec0b0000 000301e4     ................
10024148:	01e4f00c e0060009 000601e7 01e7e806     ................
10024158:	ed060003 000101e7 01e7f006 0006000e     ................
10024168:	00c401e8 01e8c70e d00b0008 000601e8     ................
10024178:	01e90003 440b0043 000601e9 01e94b05     ....C..D.....K..
10024188:	500c0000 000901e9 01e95e14 710e0001     ...P.....^.....q
10024198:	003a01ec 01ecac19 ad0e0000 000201ec     ..:.............
100241a8:	01ecb016 b10e0000 000301ec 01ed010e     ................
100241b8:	2e19002c 000001ed 01ed2f0e 0006000e     ,......../......
100241c8:	000301ee 01ee0506 2106001a 000101ee     ...........!....
100241d8:	01ee2406 27060000 000001ee 01ee2906     .$.....'.....)..
100241e8:	34060009 000301ee 01ee3906 3b060000     ...4.....9.....;
100241f8:	000001ee 01ee4206 47060000 000001ee     .....B.....G....
10024208:	01ee4906 4b060000 000001ee 01ee4d06     .I.....K.....M..
10024218:	51060002 000101ee 01ee5406 57060000     ...Q.....T.....W
10024228:	000001ee 01ee5906 5b060000 000001ee     .....Y.....[....
10024238:	01ee5d06 5f060000 000001ee 01ee6106     .]....._.....a..
10024248:	64060001 000001ee 01ee6706 6c060003     ...d.....g.....l
10024258:	000601ee 01ee7406 79060003 000301ee     .....t.....y....
10024268:	01ee7e06 80060000 000901ee 01ee8b06     .~..............
10024278:	a1060010 000201ee 01eea506 ab060004     ................
10024288:	001001ee 01eef018 00190001 002b01f0     ..............+.
10024298:	01f03019 a0190063 000e01f0 01f0b119     .0..c...........
100242a8:	c119000e 000e01f0 01f0d119 000e0024     ............$...
100242b8:	000c01f1 01f10d19 e61900a0 001c01f1     ................
100242c8:	01f21019 4019002b 000801f2 01f25019     ....+..@.....P..
100242d8:	60190001 000501f2 01f30019 fb1700fa     ...`............
100242e8:	000401f3 01f40019 dc1902d7 001001f6     ................
100242f8:	01f6f019 0019000c 007601f7 01f77b19     ..........v..{..
10024308:	e019005e 000b01f7 01f7f019 00190000     ^...............
10024318:	000b01f8 01f81019 50190037 000901f8     ........7..P....
10024328:	01f86019 90190027 001d01f8 01f8b019     .`..'...........
10024338:	00190001 015301f9 01fa6019 7019000d     ......S..`.....p
10024348:	000c01fa 01fa8019 90190008 002d01fa     ..............-.
10024358:	01fabf19 ce190006 000d01fa 01fae019     ................
10024368:	f0190008 000801fa 01fb0019 94190092     ................
10024378:	003601fb 01fbf00c 00060009 a6df0200     ..6.............
10024388:	02a70006 40061039 00dd02b7 02b82006     ....9..@..... ..
10024398:	b0061681 1d3002ce 02f80006 0006021d     ......0.........
100243a8:	134a0300 03135006 0101105f 00000e00     ..J..P.._.......
100243b8:	0e002001 000b005f 00ef0e01 0053494a     . .._.......JIS.
100243c8:	53494a53 00000000 4a435545 00000050     SJIS....EUCJP...

100243d8 <d02f4>:
100243d8:	4e105f0c 4e2a4e15 4e364e31 4e3f4e3c     ._.N.N*N1N6N<N?N
100243e8:	4e564e42 4e824e58 8c6b4e85 82124e8a     BNVNXN.N.Nk..N..
100243f8:	4e8e5f0d 4e9f4e9e 4ea24ea0 4eb34eb0     ._.N.N.N.N.N.N.N
10024408:	4ece4eb6 4ec44ecd 4ec24ec6 4ede4ed7     .N.N.N.N.N.N.N.N
10024418:	4edf4eed 4f094ef7 4f304f5a 4f5d4f5b     .N.N.N.OZO0O[O]O
10024428:	4f474f57 4f884f76 4f984f8f 4f694f7b     WOGOvO.O.O.O{OiO
10024438:	4f914f70 4f864f6f 51184f96 4fdf4fd4     pO.OoO.O.O.Q.O.O
10024448:	4fd84fce 4fd14fdb 4fd04fda 4fe54fe4     .O.O.O.O.O.O.O.O
10024458:	5028501a 502a5014 50055025 4ff64f1c     .P(P.P*P%P.P.O.O
10024468:	50295021 4ffe502c 50114fef 50435006     !P)P,P.O.O.P.PCP
10024478:	67035047 50505055 505a5048 506c5056     GP.gUPPPHPZPVPlP
10024488:	50805078 5085509a 50b250b4 50ca50c9     xP.P.P.P.P.P.P.P
10024498:	50c250b3 50de50d6 50ed50e5 50ee50e3     .P.P.P.P.P.P.P.P
100244a8:	50f550f9 51015109 51165102 51145115     .P.P.Q.Q.Q.Q.Q.Q
100244b8:	5121511a 5137513a 513b513c 5140513f     .Q!Q:Q7Q<Q;Q?Q@Q
100244c8:	514c5152 51625154 51697af8 516e516a     RQLQTQbQ.ziQjQnQ
100244d8:	51825180 518c56d8 518f5189 51935191     .Q.Q.V.Q.Q.Q.Q.Q
100244e8:	51965195 51a651a4 51a951a2 51ab51aa     .Q.Q.Q.Q.Q.Q.Q.Q
100244f8:	51b151b3 51b051b2 51bd51b5 51c951c5     .Q.Q.Q.Q.Q.Q.Q.Q
10024508:	51e051db 51e98655 51f051ed 51fe51f5     .Q.QU..Q.Q.Q.Q.Q
10024518:	520b5204 520e5214 522a5227 5233522e     .R.R.R.R'R*R.R3R
10024528:	524f5239 524b5244 525e524c 526a5254     9RORDRKRLR^RTRjR
10024538:	52695274 527f5273 528d527d 52925294     tRiRsR.R}R.R.R.R
10024548:	52885271 8fa85291 52ac8fa7 52bc52ad     qR.R.R.....R.R.R
10024558:	52c152b5 52d752cd 52e352de 98ed52e6     .R.R.R.R.R.R.R..
10024568:	52f352e0 52f852f5 530652f9 75385308     .R.R.R.R.R.S.S8u
10024578:	5310530d 5315530f 5323531a 5331532f     .S.S.S.S.S#S/S1S
10024588:	53385333 53465340 4e175345 534d5349     3S8S@SFSES.NISMS
10024598:	535e51d6 536e5369 537b5918 53825377     .Q^SiSnS.Y{SwS.S
100245a8:	53a05396 53a553a6 53b053ae 53c353b6     .S.S.S.S.S.S.S.S
100245b8:	96d97c12 66fc53df 53ee71ee 53ed53e8     .|...S.f.q.S.S.S
100245c8:	540153fa 5440543d 542d542c 542e543c     .S.T=T@T,T-T<T.T
100245d8:	54295436 544e541d 5475548f 545f548e     6T)T.TNT.TuT.T_T
100245e8:	54775471 54925470 5480547b 54845476     qTwTpT.T{T.TvT.T
100245f8:	54865490 54a254c7 54a554b8 54c454ac     .T.T.T.T.T.T.T.T
10024608:	54a854c8 54c254ab 54be54a4 54d854bc     .T.T.T.T.T.T.T.T
10024618:	54e654e5 5514550f 54ee54fd 54fa54ed     .T.T.U.U.T.T.T.T
10024628:	553954e2 55635540 552e554c 5545555c     .T9U@UcULU.U\UEU
10024638:	55575556 55335538 5599555d 54af5580     VUWU8U3U]U.U.U.T
10024648:	559f558a 557e557b 559e5598 557c55ae     .U.U{U~U.U.U.U|U
10024658:	55a95583 55a85587 55c555da 55c455df     .U.U.U.U.U.U.U.U
10024668:	55e455dc 561455d4 561655f7 55fd55fe     .U.U.U.V.U.V.U.U
10024678:	55f9561b 5650564e 563471df 56325636     .V.UNVPV.q4V6V2V
10024688:	566b5638 562f5664 566a566c 56805686     8VkVdV/VlVjV.V.V
10024698:	56a0568a 568f5694 56ae56a5 56b456b6     .V.V.V.V.V.V.V.V
100246a8:	56bc56c2 56c356c1 56c856c0 56d156ce     .V.V.V.V.V.V.V.V
100246b8:	56d756d3 56f956ee 56ff5700 57095704     .V.V.V.V.W.V.W.W
100246c8:	570b5708 5713570d 57165718 571c55c7     .W.W.W.W.W.W.U.W
100246d8:	57375726 574e5738 5740573b 5769574f     &W7W8WNW;W@WOWiW
100246e8:	578857c0 577f5761 57935789 57b357a0     .W.WaW.W.W.W.W.W
100246f8:	57aa57a4 57c357b0 57d457c6 57d357d2     .W.W.W.W.W.W.W.W
10024708:	57d6580a 580b57e3 581d5819 58215872     .X.W.W.X.X.XrX!X
10024718:	584b5862 6bc05870 583d5852 58855879     bXKXpX.kRX=XyX.X
10024728:	589f58b9 58ba58ab 58bb58de 58ae58b8     .X.X.X.X.X.X.X.X
10024738:	58d358c5 58d758d1 58d858d9 58dc58e5     .X.X.X.X.X.X.X.X
10024748:	58df58e4 58fa58ef 58fb58f9 58fd58fc     .X.X.X.X.X.X.X.X
10024758:	590a5902 591b5910 592568a6 592d592c     .Y.Y.Y.Y.h%Y,Y-Y
10024768:	59385932 7ad2593e 59505955 595a594e     2Y8Y>Y.zUYPYNYZY
10024778:	59625958 59675960 5969596c 59815978     XYbY`YgYlYiYxY.Y
10024788:	4f5e599d 59a34fab 59c659b2 59dc59e8     .Y^O.O.Y.Y.Y.Y.Y
10024798:	59d9598d 5a2559da 5a115a1f 5a095a1c     .Y.Y.Y%Z.Z.Z.Z.Z
100247a8:	5a405a1a 5a495a6c 5a365a35 5a6a5a62     .Z@ZlZIZ5Z6ZbZjZ
100247b8:	5abc5a9a 5acb5abe 5abd5ac2 5ad75ae3     .Z.Z.Z.Z.Z.Z.Z.Z
100247c8:	5ae95ae6 5afa5ad6 5b0c5afb 5b165b0b     .Z.Z.Z.Z.Z.[.[.[
100247d8:	5ad05b32 5b365b2a 5b435b3e 5b405b45     2[.Z*[6[>[C[E[@[
100247e8:	5b555b51 5b5b5b5a 5b695b65 5b735b70     Q[U[Z[[[e[i[p[s[
100247f8:	5b785b75 5b7a6588 5b835b80 5bb85ba6     u[x[.ez[.[.[.[.[
10024808:	5bc75bc3 5bd45bc9 5be45bd0 5be25be6     .[.[.[.[.[.[.[.[
10024818:	5be55bde 5bf05beb 5bf35bf6 5c075c05     .[.[.[.[.[.[.\.\
10024828:	5c0d5c08 5c205c13 5c285c22 5c395c38     .\.\.\ \"\(\8\9\
10024838:	5c465c41 5c535c4e 5c4f5c50 5c6c5b71     A\F\N\S\P\O\q[l\
10024848:	4e625c6e 5c795c76 5c915c8c 599b5c94     n\bNv\y\.\.\.\.Y
10024858:	5cbb5cab 5cbc5cb6 5cc55cb7 5cc75cbe     .\.\.\.\.\.\.\.\
10024868:	5ce95cd9 5cfa5cfd 5d8c5ced 5d0b5cea     .\.\.\.\.\.].\.]
10024878:	5d175d15 5d1f5d5c 5d115d1b 5d225d14     .].]\].].].].]"]
10024888:	5d195d1a 5d4c5d18 5d4e5d52 5d6c5d4b     .].].]L]R]N]K]l]
10024898:	5d765d73 5d845d87 5da25d82 5dac5d9d     s]v].].].].].].]
100248a8:	5dbd5dae 5db75d90 5dc95dbc 5dd35dcd     .].].].].].].].]
100248b8:	5dd65dd2 5deb5ddb 5df55df2 5e1a5e0b     .].].].].].].^.^
100248c8:	5e115e19 5e365e1b 5e445e37 5e405e43     .^.^.^6^7^D^C^@^
100248d8:	5e575e4e 5e5f5e54 5e645e62 5e755e47     N^W^T^_^b^d^G^u^
100248e8:	5e7a5e76 5e7f9ebc 5ec15ea0 5ec85ec2     v^z^...^.^.^.^.^
100248f8:	5ecf5ed0 5ee35ed6 5eda5edd 5ee25edb     .^.^.^.^.^.^.^.^
10024908:	5ee85ee1 5eec5ee9 5ef35ef1 5ef45ef0     .^.^.^.^.^.^.^.^
10024918:	5efe5ef8 5f095f03 5f5c5f5d 5f115f0b     .^.^._._]_\_._._
10024928:	5f295f16 5f385f2d 5f485f41 5f4e5f4c     ._)_-_8_A_H_L_N_
10024938:	5f515f2f 5f575f56 5f615f59 5f735f6d     /_Q_V_W_Y_a_m_s_
10024948:	5f835f77 5f7f5f82 5f885f8a 5f875f91     w_._._._._._._._
10024958:	5f995f9e 5fa05f98 5fad5fa8 5fd65fbc     ._._._._._._._._
10024968:	5fe45ffb 5ff15ff8 60b35fdd 60215fff     ._._._._._.`._!`
10024978:	60196060 60296010 6031600e 6015601b     ``.`.`)`.`1`.`.`
10024988:	6026602b 603a600f 6041605a 6077606a     +`&`.`:`Z`A`j`w`
10024998:	604a605f 604d6046 60436063 60426064     _`J`F`M`c`C`d`B`
100249a8:	606b606c 60816059 60e7608d 609a6083     l`k`Y`.`.`.`.`.`
100249b8:	609b6084 60976096 60a76092 60e1608b     .`.`.`.`.`.`.`.`
100249c8:	60e060b8 60b460d3 60bd5ff0 60b560c6     .`.`.`.`._.`.`.`
100249d8:	614d60d8 61066115 60f760f6 60f46100     .`Ma.a.a.`.`.a.`
100249e8:	610360fa 60fb6121 610d60f1 6147610e     .`.a!a.`.`.a.aGa
100249f8:	6128613e 614a6127 613c613f 6134612c     >a(a'aJa?a<a,a4a
10024a08:	6142613d 61736144 61586177 615a6159     =aBaDasawaXaYaZa
10024a18:	6174616b 6165616f 615f6171 6153615d     kataoaeaqa_a]aSa
10024a28:	61996175 61876196 619461ac 618a619a     ua.a.a.a.a.a.a.a
10024a38:	61ab6191 61cc61ae 61c961ca 61c861f7     .a.a.a.a.a.a.a.a
10024a48:	61c661c3 61cb61ba 61cd7f79 61e361e6     .a.a.a.ay..a.a.a
10024a58:	61fa61f6 61ff61f4 61fc61fd 620061fe     .a.a.a.a.a.a.a.b
10024a68:	62096208 620c620d 621b6214 6221621e     .b.b.b.b.b.b.b!b
10024a78:	622e622a 62326230 62416233 625e624e     *b.b0b2b3bAbNb^b
10024a88:	625b6263 62686260 6282627c 627e6289     cb[b`bhb|b.b.b~b
10024a98:	62936292 62d46296 62946283 62d162d7     .b.b.b.b.b.b.b.b
10024aa8:	62cf62bb 62c662ff 62c864d4 62cc62dc     .b.b.b.b.d.b.b.b
10024ab8:	62c262ca 629b62c7 630c62c9 62f162ee     .b.b.b.b.b.c.b.b
10024ac8:	63026327 62ef6308 635062f5 634d633e     'c.c.c.b.bPc>cMc
10024ad8:	634f641c 638e6396 63ab6380 63a36376     .dOc.c.c.c.cvc.c
10024ae8:	6389638f 63b5639f 6369636b 63e963be     .c.c.c.ckcic.c.c
10024af8:	63c663c0 63c963e3 63f663d2 641663c4     .c.c.c.c.c.c.c.d
10024b08:	64066434 64266413 651d6436 64286417     4d.d.d&d6d.e.d(d
10024b18:	6467640f 6476646f 652a644e 64936495     .dgdodvdNd*e.d.d
10024b28:	64a964a5 64bc6488 64d264da 64c764c5     .d.d.d.d.d.d.d.d
10024b38:	64d864bb 64f164c2 820964e7 64e164e0     .d.d.d.d.d...d.d
10024b48:	64e362ac 652c64ef 64f464f6 64fa64f2     .b.d.d,e.d.d.d.d
10024b58:	64fd6500 651c6518 65246505 652b6523     .e.d.e.e.e$e#e+e
10024b68:	65356534 65366537 754b6538 65566548     4e5e7e6e8eKuHeVe
10024b78:	654d6555 655e6558 6572655d 65826578     UeMeXe^e]erexe.e
10024b88:	8b8a6583 659f659b 65b765ab 65c665c3     .e...e.e.e.e.e.e
10024b98:	65c465c1 65d265cc 65d965db 65e165e0     .e.e.e.e.e.e.e.e
10024ba8:	677265f1 6603660a 677365fb 66366635     .erg.f.f.esg5f6f
10024bb8:	661c6634 6644664f 66416649 665d665e     4f.fOfDfIfAf^f]f
10024bc8:	66676664 665f6668 66706662 66886683     dfgfhf_fbfpf.f.f
10024bd8:	6689668e 66986684 66c1669d 66c966b9     .f.f.f.f.f.f.f.f
10024be8:	66bc66be 66b866c4 66da66d6 663f66e0     .f.f.f.f.f.f.f?f
10024bf8:	66e966e6 66f566f0 670f66f7 671e6716     .f.f.f.f.f.g.g.g
10024c08:	67276726 672e9738 6736673f 67386741     &g'g8..g?g6gAg8g
10024c18:	67466737 6760675e 67636759 67896764     7gFg^g`gYgcgdg.g
10024c28:	67a96770 676a677c 678b678c 67a167a6     pg.g|gjg.g.g.g.g
10024c38:	67b76785 67b467ef 67b367ec 67b867e9     .g.g.g.g.g.g.g.g
10024c48:	67de67e4 67e267dd 67b967ee 67c667ce     .g.g.g.g.g.g.g.g
10024c58:	6a9c67e7 6846681e 68406829 6832684d     .g.j.hFh)h@hMh2h
10024c68:	68b3684e 6859682b 68776863 689f687f     Nh.h+hYhchwh.h.h
10024c78:	68ad688f 689d6894 6883689b 68b96aae     .h.h.h.h.h.h.j.h
10024c88:	68b56874 68ba68a0 688d690f 6901687e     th.h.h.h.i.h~h.i
10024c98:	690868ca 692268d8 68e16926 68cd690c     .h.i.h"i&i.h.i.h
10024ca8:	68e768d4 693668d5 69046912 68e368d7     .h.h.h6i.i.i.h.h
10024cb8:	68f96925 68ef68e0 692a6928 6923691a     %i.h.h.h(i*i.i#i
10024cc8:	68c66921 69776979 6978695c 6954696b     !i.hyiwi\ixikiTi
10024cd8:	696e697e 69746939 6959693d 69616930     ~ini9iti=iYi0iai
10024ce8:	695d695e 696a6981 69ae69b2 69bf69d0     ^i]i.iji.i.i.i.i
10024cf8:	69d369c1 69ce69be 69ca5be8 69bb69dd     .i.i.i.i.[.i.i.i
10024d08:	69a769c3 69916a2e 699c69a0 69b46995     .i.i.j.i.i.i.i.i
10024d18:	69e869de 6a1b6a02 6b0a69ff 69f269f9     .i.i.j.j.i.k.i.i
10024d28:	6a0569e7 6a1e69b1 6a1469ed 6a0a69eb     .i.j.i.j.i.j.i.j
10024d38:	6ac16a12 6a136a23 6a0c6a44 6a366a72     .j.j#j.jDj.jrj6j
10024d48:	6a476a78 6a596a62 6a486a66 6a226a38     xjGjbjYjfjHj8j"j
10024d58:	6a8d6a90 6a846aa0 6aa36aa2 86176a97     .j.j.j.j.j.j.j..
10024d68:	6ac36abb 6ab86ac2 6aac6ab3 6ad16ade     .j.j.j.j.j.j.j.j
10024d78:	6aaa6adf 6aea6ada 6b056afb 6afa8616     .j.j.j.j.j.k...j
10024d88:	6b166b12 6b1f9b31 6b376b38 6b3976dc     .k.k1..k8k7k.v9k
10024d98:	6b4798ee 6b496b43 6b596b50 6b5b6b54     ..GkCkIkPkYkTk[k
10024da8:	6b616b5f 6b796b78 6b806b7f 6b836b84     _kakxkyk.k.k.k.k
10024db8:	6b986b8d 6b9e6b95 6baa6ba4 6baf6bab     .k.k.k.k.k.k.k.k
10024dc8:	6bb16bb2 6bb76bb3 6bc66bbc 6bd36bcb     .k.k.k.k.k.k.k.k
10024dd8:	6bec6bdf 6bf36beb 9ebe6bef 6c136c08     .k.k.k.k.k...l.l
10024de8:	6c1b6c14 6c236c24 6c556c5e 6c6a6c62     .l.l$l#l^lUlbljl
10024df8:	6c8d6c82 6c816c9a 6c7e6c9b 6c736c68     .l.l.l.l.l~lhlsl
10024e08:	6c906c92 6cf16cc4 6cbd6cd3 6cc56cd7     .l.l.l.l.l.l.l.l
10024e18:	6cae6cdd 6cbe6cb1 6cdb6cba 6cd96cef     .l.l.l.l.l.l.l.l
10024e28:	6d1f6cea 6d36884d 6d3d6d2b 6d196d38     .l.mM.6m+m=m8m.m
10024e38:	6d336d35 6d0c6d12 6d936d63 6d5a6d64     5m3m.m.mcm.mdmZm
10024e48:	6d596d79 6d956d8e 6d856fe4 6e156df9     ymYm.m.m.o.m.m.n
10024e58:	6db56e0a 6de66dc7 6dc66db8 6dde6dec     .n.m.m.m.m.m.m.m
10024e68:	6de86dcc 6dc56dd2 6dd96dfa 6dd56de4     .m.m.m.m.m.m.m.m
10024e78:	6dee6dea 6e6e6e2d 6e196e2e 6e5f6e72     .m.m-nnn.n.nrn_n
10024e88:	6e236e3e 6e2b6e6b 6e4d6e76 6e436e1f     >n#nkn+nvnMn.nCn
10024e98:	6e4e6e3a 6eff6e24 6e386e1d 6eaa6e82     :nNn$n.n.n8n.n.n
10024ea8:	6ec96e98 6ed36eb7 6eaf6ebd 6eb26ec4     .n.n.n.n.n.n.n.n
10024eb8:	6ed56ed4 6ea56e8f 6e9f6ec2 6f116f41     .n.n.n.n.n.nAo.o
10024ec8:	6eec704c 6efe6ef8 6ef26f3f 6eef6f31     Lp.n.n.n?o.n1o.n
10024ed8:	6ecc6f32 6f136f3e 6f866ef7 6f786f7a     2o.n>o.o.n.ozoxo
10024ee8:	6f806f81 6f5b6f6f 6f6d6ff3 6f7c6f82     .o.ooo[o.omo.o|o
10024ef8:	6f8e6f58 6fc26f91 6fb36f66 6fa16fa3     Xo.o.o.ofo.o.o.o
10024f08:	6fb96fa4 6faa6fc6 6fd56fdf 6fd46fec     .o.o.o.o.o.o.o.o
10024f18:	6ff16fd8 6fdb6fee 700b7009 70116ffa     .o.o.o.o.p.p.o.p
10024f28:	700f7001 701b6ffe 6f74701a 7018701d     .p.p.o.p.pto.p.p
10024f38:	7030701f 7032703e 70637051 70927099     .p0p>p2pQpcp.p.p
10024f48:	70f170af 70b870ac 70ae70b3 70cb70df     .p.p.p.p.p.p.p.p
10024f58:	70d970dd 70fd7109 7119711c 71557165     .p.p.q.p.q.qeqUq
10024f68:	71667188 714c7162 716c7156 71fb718f     .qfqbqLqVqlq.q.q
10024f78:	71957184 71ac71a8 71b971d7 71d271be     .q.q.q.q.q.q.q.q
10024f88:	71d471c9 71e071ce 71e771ec 71fc71f5     .q.q.q.q.q.q.q.q
10024f98:	71ff71f9 7210720d 7228721b 722c722d     .q.q.r.r.r(r-r,r
10024fa8:	72327230 723c723b 7240723f 724b7246     0r2r;r<r?r@rFrKr
10024fb8:	72747258 7282727e 72877281 72967292     Xrtr~r.r.r.r.r.r
10024fc8:	72a772a2 72b272b9 72c672c3 72ce72c4     .r.r.r.r.r.r.r.r
10024fd8:	72e272d2 72e172e0 72f772f9 7317500f     .r.r.r.r.r.r.P.s
10024fe8:	731c730a 731d7316 732f7334 73257329     .s.s.s.s4s/s)s%s
10024ff8:	734e733e 9ed8734f 736a7357 73707368     >sNsOs..Wsjshsps
10025008:	73757378 737a737b 73b373c8 73bb73ce     xsus{szs.s.s.s.s
10025018:	73e573c0 73de73ee 740574a2 7425746f     .s.s.s.s.t.tot%t
10025028:	743273f8 7455743a 745f743f 74417459     .s2t:tUt?t_tYtAt
10025038:	7469745c 74637470 7476746a 748b747e     \titptctjtvt~t.t
10025048:	74a7749e 74cf74ca 73f174d4 74e374e0     .t.t.t.t.t.s.t.t
10025058:	74e974e7 74f274ee 74f174f0 74f774f8     .t.t.t.t.t.t.t.t
10025068:	75037504 750c7505 750d750e 75137515     .u.u.u.u.u.u.u.u
10025078:	7526751e 753c752c 754d7544 7549754a     .u&u,u<uDuMuJuIu
10025088:	7546755b 7569755a 75677564 756d756b     [uFuZuiudugukumu
10025098:	75767578 75877586 758a7574 75827589     xuvu.u.utu.u.u.u
100250a8:	759a7594 75a5759d 75c275a3 75c375b3     .u.u.u.u.u.u.u.u
100250b8:	75bd75b5 75bc75b8 75cd75b1 75d275ca     .u.u.u.u.u.u.u.u
100250c8:	75e375d9 75fe75de 75fc75ff 75f07601     .u.u.u.u.u.u.v.u
100250d8:	75f275fa 760b75f3 7609760d 7627761f     .u.u.u.v.v.v.v'v
100250e8:	76217620 76247622 76307634 7647763b      v!v"v$v4v0v;vGv
100250f8:	76467648 7658765c 76627661 76697668     HvFv\vXvavbvhviv
10025108:	7667766a 7670766c 76767672 767c7678     jvgvlvpvrvvvxv|v
10025118:	76837680 768b7688 7696768e 76997693     .v.v.v.v.v.v.v.v
10025128:	76b0769a 76b876b4 76ba76b9 76cd76c2     .v.v.v.v.v.v.v.v
10025138:	76d276d6 76e176de 76e776e5 862f76ea     .v.v.v.v.v.v.v/.
10025148:	770876fb 77047707 77247729 7725771e     .v.w.w.w)w$w.w%w
10025158:	771b7726 77387737 775a7747 776b7768     &w.w7w8wGwZwhwkw
10025168:	7765775b 777e777f 778e7779 7791778b     [wew.w~wyw.w.w.w
10025178:	779e77a0 77b677b0 77bf77b9 77bd77bc     .w.w.w.w.w.w.w.w
10025188:	77c777bb 77d777cd 77dc77da 77ee77e3     .w.w.w.w.w.w.w.w
10025198:	780c77fc 79267812 792a7820 788e7845     .w.x.x&y x*yEx.x
100251a8:	78867874 789a787c 78a3788c 78aa78b5     tx.x|x.x.x.x.x.x
100251b8:	78d178af 78cb78c6 78be78d4 78c578bc     .x.x.x.x.x.x.x.x
100251c8:	78ec78ca 78da78e7 78f478fd 79127907     .x.x.x.x.x.x.y.y
100251d8:	79197911 792b792c 79607940 795f7957     .y.y,y+y@y`yWy_y
100251e8:	7955795a 797a7953 798a797f 79a7799d     ZyUySyzy.y.y.y.y
100251f8:	79aa9f4b 79b379ae 79ba79b9 79d579c9     K..y.y.y.y.y.y.y
10025208:	79ec79e7 79e379e1 7a0d7a08 7a197a18     .y.y.y.y.z.z.z.z
10025218:	7a1f7a20 7a317980 7a3e7a3b 7a437a37      z.z.y1z;z>z7zCz
10025228:	7a497a57 7a627a61 9f9d7a69 7a797a70     WzIzazbziz..pzyz
10025238:	7a887a7d 7a957a97 7a967a98 7ac87aa9     }z.z.z.z.z.z.z.z
10025248:	7ab67ab0 7ac47ac5 90837abf 7aca7ac7     .z.z.z.z.z...z.z
10025258:	7acf7acd 7ad37ad5 7ada7ad9 7ae17add     .z.z.z.z.z.z.z.z
10025268:	7ae67ae2 7af07aed 7b0f7b02 7b067b0a     .z.z.z.z.{.{.{.{
10025278:	7b187b33 7b1e7b19 7b287b35 7b507b36     3{.{.{.{5{({6{P{
10025288:	7b047b7a 7b0b7b4d 7b457b4c 7b657b75     z{.{M{.{L{E{u{e{
10025298:	7b677b74 7b717b70 7b6e7b6c 7b987b9d     t{g{p{q{l{n{.{.{
100252a8:	7b8d7b9f 7b9a7b9c 7b927b8b 7b5d7b8f     .{.{.{.{.{.{.{]{
100252b8:	7bcb7b99 7bcc7bc1 7bb47bcf 7bdd7bc6     .{.{.{.{.{.{.{.{
100252c8:	7c117be9 7be67c14 7c607be5 7c077c00     .{.|.|.{.{`|.|.|
100252d8:	7bf37c13 7c177bf7 7bf67c0d 7c277c23     .|.{.{.|.|.{#|'|
100252e8:	7c1f7c2a 7c2b7c37 7c4c7c3d 7c547c43     *|.|7|+|=|L|C|T|
100252f8:	7c407c4f 7c587c50 7c647c5f 7c657c56     O|@|P|X|_|d|V|e|
10025308:	7c757c6c 7c907c83 7cad7ca4 7cab7ca2     l|u|.|.|.|.|.|.|
10025318:	7ca87ca1 7cb27cb3 7cae7cb1 7cbd7cb9     .|.|.|.|.|.|.|.|
10025328:	7cc57cc0 7cd87cc2 7cdc7cd2 9b3b7ce2     .|.|.|.|.|.|.|;.
10025338:	7cf27cef 7cf67cf4 7d067cfa 7d1c7d02     .|.|.|.|.|.}.}.}
10025348:	7d0a7d15 7d4b7d45 7d327d2e 7d357d3f     .}.}E}K}.}2}?}5}
10025358:	7d737d46 7d4e7d56 7d687d72 7d4f7d6e     F}s}V}N}r}h}n}O}
10025368:	7d937d63 7d5b7d89 7d7d7d8f 7dba7d9b     c}.}.}[}.}}}.}.}
10025378:	7da37dae 7dc77db5 7dab7dbd 7da27e3d     .}.}.}.}.}.}=~.}
10025388:	7ddc7daf 7d9f7db8 7dd87db0 7de47ddd     .}.}.}.}.}.}.}.}
10025398:	7dfb7dde 7de17df2 7e0a7e05 7e217e23     .}.}.}.}.~.~#~!~
100253a8:	7e317e12 7e097e1f 7e227e0b 7e667e46     .~1~.~.~.~"~F~f~
100253b8:	7e357e3b 7e437e39 7e327e37 7e677e3a     ;~5~9~C~7~2~:~g~
100253c8:	7e567e5d 7e597e5e 7e797e5a 7e697e6a     ]~V~^~Y~Z~y~j~i~
100253d8:	7e7b7e7c 7dd57e83 8fae7e7d 7e887e7f     |~{~.~.}}~...~.~
100253e8:	7e8c7e89 7e907e92 7e947e93 7e8e7e96     .~.~.~.~.~.~.~.~
100253f8:	7e9c7e9b 7f3a7f38 7f4c7f45 7f4e7f4d     .~.~8.:.E.L.M.N.
10025408:	7f517f50 7f547f55 7f5f7f58 7f687f60     P.Q.U.T.X._.`.h.
10025418:	7f677f69 7f827f78 7f837f86 7f877f88     i.g.x...........
10025428:	7f947f8c 7f9d7f9e 7fa37f9a 7fb27faf     ................
10025438:	7fae7fb9 7fb87fb6 7fc58b71 7fca7fc6     ........q.......
10025448:	7fd47fd5 7fe67fe1 7ff37fe9 98dc7ff9     ................
10025458:	80048006 8012800b 80198018 8021801c     ..............!.
10025468:	803f8028 804a803b 80528046 805a8058     (.?.;.J.F.R.X.Z.
10025478:	8062805f 80738068 80708072 80798076     _.b.h.s.r.p.v.y.
10025488:	807f807d 80868084 809b8085 809a8093     }...............
10025498:	519080ad 80db80ac 80d980e5 80c480dd     ...Q............
100254a8:	80d680da 80ef8109 811b80f1 81238129     ............).#.
100254b8:	814b812f 8146968b 8153813e 80fc8151     /.K...F.>.S.Q...
100254c8:	816e8171 81668165 81838174 818a8188     q.n.e.f.t.......
100254d8:	81828180 819581a0 81a381a4 8193815f     ............_...
100254e8:	81b081a9 81be81b5 81bd81b8 81c281c0     ................
100254f8:	81c981ba 81d181cd 81d881d9 81da81c8     ................
10025508:	81e081df 81fa81e7 81fe81fb 82028201     ................
10025518:	82078205 820d820a 82168210 822b8229     ............).+.
10025528:	82338238 82598240 825d8258 825f825a     8.3.@.Y.X.].Z._.
10025538:	82628264 826a8268 822e826b 82778271     d.b.h.j.k...q.w.
10025548:	827e8278 8292828d 829f82ab 82ac82bb     x.~.............
10025558:	82e382e1 82d282df 82f382f4 839382fa     ................
10025568:	82fb8303 82de82f9 82dc8306 82d98309     ................
10025578:	83348335 83328316 83408331 83508339     5.4...2.1.@.9.P.
10025588:	832f8345 8317832b 83858318 83aa839a     E./.+...........
10025598:	83a2839f 83238396 8387838e 837c838a     ......#.......|.
100255a8:	837383b5 83a08375 83a88389 841383f4     ..s.u...........
100255b8:	83ce83eb 840383fd 840b83d8 83f783c1     ................
100255c8:	83e08407 840d83f2 84208422 843883bd     ........". ...8.
100255d8:	83fb8506 842a846d 855a843c 84778484     ....m.*.<.Z...w.
100255e8:	84ad846b 8482846e 84468469 846f842c     k...n...i.F.,.o.
100255f8:	84358479 846284ca 84bf84b9 84d9849f     y.5...b.........
10025608:	84bb84cd 84d084da 84c684c1 84a184d6     ................
10025618:	84ff8521 851784f4 852c8518 8515851f     !.........,.....
10025628:	84fc8514 85638540 85488558 86028541     ....@.c.X.H.A...
10025638:	8555854b 85a48580 85918588 85a8858a     K.U.............
10025648:	8594856d 85ea859b 859c8587 857e8577     m...........w.~.
10025658:	85c98590 85cf85ba 85d085b9 85dd85d5     ................
10025668:	85dc85e5 860a85f9 860b8613 85fa85fe     ................
10025678:	86228606 8630861a 864d863f 86544e55     .."...0.?.M.UNT.
10025688:	8667865f 86938671 86a986a3 868b86aa     _.g.q...........
10025698:	86b6868c 86c486af 86b086c6 882386c9     ..............#.
100256a8:	86d486ab 86e986de 86df86ec 86ef86db     ................
100256b8:	87068712 87008708 86fb8703 87098711     ................
100256c8:	86f9870d 8734870a 8737873f 8725873b     ......4.?.7.;.%.
100256d8:	871a8729 875f8760 874c8778 8774874e     )...`._.x.L.N.t.
100256e8:	87688757 8759876e 87638753 8805876a     W.h.n.Y.S.c.j...
100256f8:	879f87a2 87af8782 87bd87cb 87d087c0     ................
10025708:	87ab96d6 87b387c4 87c687c7 87ef87bb     ................
10025718:	87e087f2 880d880f 87f687fe 880e87f7     ................
10025728:	881187d2 88158816 88218822 88368831     ........".!.1.6.
10025738:	88278839 8844883b 88528842 885e8859     9.'.;.D.B.R.Y.^.
10025748:	886b8862 887e8881 8875889e 88b5887d     b.k...~...u.}...
10025758:	88828872 88928897 889988ae 888d88a2     r...............
10025768:	88b088a4 88b188bf 88c488c3 88d888d4     ................
10025778:	88dd88d9 890288f9 88f488fc 88f288e8     ................
10025788:	890c8904 8913890a 891e8943 892a8925     ........C...%.*.
10025798:	8941892b 893b8944 89388936 891d894c     +.A.D.;.6.8.L...
100257a8:	895e8960 89648966 896a896d 8974896f     `.^.f.d.m.j.o.t.
100257b8:	897e8977 89888983 8993898a 89a18998     w.~.............
100257c8:	89a689a9 89af89ac 89ba89b2 89bf89bd     ................
100257d8:	89da89c0 89dd89dc 89f489e7 8a0389f8     ................
100257e8:	8a108a16 8a1b8a0c 8a258a1d 8a418a36     ..........%.6.A.
100257f8:	8a528a5b 8a488a46 8a6d8a7c 8a628a6c     [.R.F.H.|.m.l.b.
10025808:	8a828a85 8aa88a84 8a918aa1 8aa68aa5     ................
10025818:	8aa38a9a 8acd8ac4 8ada8ac2 8af38aeb     ................
10025828:	8ae48ae7 8b148af1 8ae28ae0 8ade8af7     ................
10025838:	8b0c8adb 8b1a8b07 8b168ae1 8b178b10     ................
10025848:	8b338b20 8b2697ab 8b3e8b2b 8b418b28      .3...&.+.>.(.A.
10025858:	8b4f8b4c 8b498b4e 8b5b8b56 8b6b8b5a     L.O.N.I.V.[.Z.k.
10025868:	8b6c8b5f 8b748b6f 8b808b7d 8b8e8b8c     _.l.o.t.}.......
10025878:	8b938b92 8b998b96 8c3a8b9a 8c3f8c41     ..........:.A.?.
10025888:	8c4c8c48 8c508c4e 8c628c55 8c788c6c     H.L.N.P.U.b.l.x.
10025898:	8c828c7a 8c858c89 8c8d8c8a 8c948c8e     z...............
100258a8:	8c988c7c 8cad621d 8cbd8caa 8cb38cb2     |....b..........
100258b8:	8cb68cae 8cc18cc8 8ce38ce4 8cfd8cda     ................
100258c8:	8cfb8cfa 8d058d04 8d078d0a 8d0d8d0f     ................
100258d8:	9f4e8d10 8ccd8d13 8d168d14 8d6d8d67     ..N.........g.m.
100258e8:	8d738d71 8d998d81 8dbe8dc2 8dcf8dba     q.s.............
100258f8:	8dd68dda 8ddb8dcc 8dea8dcb 8ddf8deb     ................
10025908:	8dfc8de3 8e098e08 8e1d8dff 8e108e1e     ................
10025918:	8e428e1f 8e308e35 8e4a8e34 8e498e47     ..B.5.0.4.J.G.I.
10025928:	8e508e4c 8e598e48 8e608e64 8e638e2a     L.P.H.Y.d.`.*.c.
10025938:	8e768e55 8e7c8e72 8e878e81 8e848e85     U.v.r.|.........
10025948:	8e8a8e8b 8e918e93 8e998e94 8ea18eaa     ................
10025958:	8eb08eac 8eb18ec6 8ec58ebe 8ecb8ec8     ................
10025968:	8ee38edb 8efb8efc 8efe8eeb 8f058f0a     ................
10025978:	8f128f15 8f138f19 8f1f8f1c 8f0c8f1b     ................
10025988:	8f338f26 8f398f3b 8f428f45 8f4c8f3e     &.3.;.9.E.B.>.L.
10025998:	8f468f49 8f578f4e 8f628f5c 8f648f63     I.F.N.W.\.b.c.d.
100259a8:	8f9f8f9c 8fad8fa3 8fb78faf 8fe58fda     ................
100259b8:	8fea8fe2 90878fef 90058ff4 8ffa8ff9     ................
100259c8:	90159011 900d9021 9016901e 9027900b     ....!.........'.
100259d8:	90359036 8ff89039 9050904f 90529051     6.5.9...O.P.Q.R.
100259e8:	9049900e 9056903e 905e9058 906f9068     ..I.>.V.X.^.h.o.
100259f8:	96a89076 90829072 9081907d 908a9080     v...r...}.......
10025a08:	908f9089 90af90a8 90b590b1 90e490e2     ................
10025a18:	90db6248 91129102 91329119 914a9130     Hb........2.0.J.
10025a28:	91589156 91659163 91739169 918b9172     V.X.c.e.i.s.r...
10025a38:	91829189 91ab91a2 91aa91af 91b491b5     ................
10025a48:	91c091ba 91c991c1 91d091cb 91df91d6     ................
10025a58:	91db91e1 91f591fc 921e91f6 921491ff     ................
10025a68:	9215922c 925e9211 92459257 92649249     ,.....^.W.E.I.d.
10025a78:	92959248 924b923f 929c9250 92939296     H...?.K.P.......
10025a88:	925a929b 92b992cf 92e992b7 92fa930f     ..Z.............
10025a98:	932e9344 93229319 9323931a 9335933a     D....."...#.:.5.
10025aa8:	935c933b 937c9360 9356936e 93ac93b0     ;.\.`.|.n.V.....
10025ab8:	939493ad 93d693b9 93e893d7 93d893e5     ................
10025ac8:	93dd93c3 93c893d0 941a93e4 94139414     ................
10025ad8:	94079403 94369410 9435942b 943a9421     ......6.+.5.!.:.
10025ae8:	94529441 945b9444 94629460 946a945e     A.R.D.[.`.b.^.j.
10025af8:	94709229 94779475 945a947d 947e947c     ).p.u.w.}.Z.|.~.
10025b08:	947f9481 95879582 9594958a 95989596     ................
10025b18:	95a09599 95a795a8 95bc95ad 95b995bb     ................
10025b28:	95ca95be 95c36ff6 95cc95cd 95d495d5     .....o..........
10025b38:	95dc95d6 95e595e1 962195e2 962e9628     ..........!.(...
10025b48:	9642962f 964f964c 9677964b 965e965c     /.B.L.O.K.w.\.^.
10025b58:	965f965d 96729666 968d966c 96959698     ]._.f.r.l.......
10025b68:	96aa9697 96b196a7 96b096b2 96b696b4     ................
10025b78:	96b996b8 96cb96ce 96cd96c9 96dc894d     ............M...
10025b88:	96d5970d 970496f9 97089706 970e9713     ................
10025b98:	970f9711 97199716 972a9724 97399730     ........$.*.0.9.
10025ba8:	973e973d 97469744 97429748 975c9749     =.>.D.F.H.B.I.\.
10025bb8:	97649760 97689766 976b52d2 97799771     `.d.f.h..Rk.q.y.
10025bc8:	977c9785 977a9781 978b9786 9790978f     ..|...z.........
10025bd8:	97a8979c 97a397a6 97b497b3 97c697c3     ................
10025be8:	97cb97c8 97ed97dc 97f29f4f 97f67adf     ........O....z..
10025bf8:	980f97f5 9838980c 98219824 983d9837     ......8.$.!.7.=.
10025c08:	984f9846 986b984b 9870986f 98749871     F.O.K.k.o.p.q.t.
10025c18:	98aa9873 98b198af 98c498b6 98c698c3     s...............
10025c28:	98eb98e9 99099903 99149912 99219918     ..............!.
10025c38:	991e991d 99209924 992e992c 993e993d     ....$. .,...=.>.
10025c48:	99499942 99509945 9951994b 994c9952     B.I.E.P.K.Q.R.L.
10025c58:	99979955 99a59998 99ae99ad 99df99bc     U...............
10025c68:	99dd99db 99d199d8 99ee99ed 99f299f1     ................
10025c78:	99f899fb 9a0f9a01 99e29a05 9a2b9a19     ..............+.
10025c88:	9a459a37 9a409a42 9a3e9a43 9a4d9a55     7.E.B.@.C.>.U.M.
10025c98:	9a579a5b 9a629a5f 9a649a65 9a6b9a69     [.W._.b.e.d.i.k.
10025ca8:	9aad9a6a 9abc9ab0 9acf9ac0 9ad39ad1     j...............
10025cb8:	9ade9ad4 9ae29adf 9ae69ae3 9aeb9aef     ................
10025cc8:	9af49aee 9af79af1 9b069afb 9b1a9b18     ................
10025cd8:	9b229b1f 9b259b23 9b289b27 9b2a9b29     ..".#.%.'.(.).*.
10025ce8:	9b2f9b2e 9b449b32 9b4f9b43 9b4e9b4d     ../.2.D.C.O.M.N.
10025cf8:	9b589b51 9b939b74 9b919b83 9b979b96     Q.X.t...........
10025d08:	9ba09b9f 9bb49ba8 9bca9bc0 9bc69bb9     ................
10025d18:	9bd19bcf 9be39bd2 9be49be2 9be19bd4     ................
10025d28:	9bf29c3a 9bf09bf1 9c149c15 9c139c09     :...............
10025d38:	9c069c0c 9c129c08 9c049c0a 9c1b9c2e     ................
10025d48:	9c249c25 9c309c21 9c329c47 9c3e9c46     %.$.!.0.G.2.F.>.
10025d58:	9c609c5a 9c769c67 9ce79c78 9cf09cec     Z.`.g.v.x.......
10025d68:	9d089d09 9d039ceb 9d2a9d06 9daf9d26     ..........*.&...
10025d78:	9d1f9d23 9d159d44 9d419d12 9d3e9d3f     #...D.....A.?.>.
10025d88:	9d489d46 9d5e9d5d 9d519d64 9d599d50     F.H.].^.d.Q.P.Y.
10025d98:	9d899d72 9dab9d87 9d7a9d6f 9da49d9a     r.......o.z.....
10025da8:	9db29da9 9dc19dc4 9db89dbb 9dc69dba     ................
10025db8:	9dc29dcf 9dd39dd9 9de69df8 9def9ded     ................
10025dc8:	9e1a9dfd 9e1e9e1b 9e799e75 9e819e7d     ........u.y.}...
10025dd8:	9e8b9e88 9e929e8c 9e919e95 9ea59e9d     ................
10025de8:	9eb89ea9 9ead9eaa 9ecc9761 9ecf9ece     ........a.......
10025df8:	9ed49ed0 9ede9edc 9ee09edd 9ee89ee5     ................
10025e08:	9ef49eef 9ef79ef6 9efb9ef9 9efd9efc     ................
10025e18:	9f089f07 9f1576b7 9f2c9f21 9f4a9f3e     .....v..!.,.>.J.
10025e28:	9f549f52 9f5f9f63 9f619f60 9f679f66     R.T.c._.`.a.f.g.
10025e38:	9f6a9f6c 9f729f77 9f959f76 9fa09f9c     l.j.w.r.v.......
10025e48:	69c7582f 74649059 719951dc              /X.iY.dt.Q.q

10025e54 <b02cf>:
10025e54:	55164e9c 963f5a03 611b54c0 59f66328     .N.U.Z?..T.a(c.Y
10025e64:	84759022 7a50831c 63e160aa 65ed6e25     ".u...Pz.`.c%n.e
10025e74:	82a68466 68939bf5 65a15727 5b9b6271     f......h'W.eqb.[
10025e84:	867b59d0 7d6298f4 9b8e7dbe 7c9f6216     .Y{...b}.}...b.|
10025e94:	5b8988b7 63095eb5 68486697 978d95c7     ...[.^.c.fHh....
10025ea4:	4ee5674f 4f4d4f0a 50494f9d 593756f2     Og.N.OMO.OIP.V7Y
10025eb4:	5a0159d4 60df5c09 6170610f 69056613     .Y.Z.\.`.apa.f.i
10025ec4:	754f70ba 79fb7570 7def7dad 840e80c3     .pOupu.y.}.}....
10025ed4:	8b028863 907a9055 4e95533b 57df4ea5     c...U.z.;S.N.N.W
10025ee4:	90c180b2 4e0078ef 6ea258f1 7a329038     .....x.N.X.n8.2z
10025ef4:	828b8328 51419c2f 54bd5370 56e054e1     (.../.AQpS.T.T.V
10025f04:	5f1559fb 6deb98f2 852d80e4 96709662     .Y._...m..-.b.p.
10025f14:	97fb96a0 53f3540b 70cf5b87 8fc27fbd     .....T.S.[.p....
10025f24:	536f96e8 7aba9d5c 78934e11 6e2681fc     ..oS\..z.N.x..&n
10025f34:	55045618 851a6b1d 59e59c3b 6d6653a9     .V.U.k..;..Y.Sfm
10025f44:	958f74dc 4e915642 96f2904b 990c834f     .t..BV.NK...O...
10025f54:	55b653e1 5f715b30 66f36620 6c386804     .S.U0[q_ f.f.h8l
10025f64:	6d296cf3 76c8745b 98347a4e 885b82f1     .l)m[t.vNz4...[.
10025f74:	92ed8a60 75ab6db2 99c576ca 8b0160a6     `....m.u.v...`..
10025f84:	95b28d8a 53ad698e 57125186 59445830     .....i.S.Q.W0XDY
10025f94:	5ef65bb4 63a96028 6cbf63f4 708e6f14     .[.^(`.c.c.l.o.p
10025fa4:	71597114 733f71d5 82767e01 859782d1     .qYq.q?s.~v.....
10025fb4:	925b9060 58699d1b 6c5a65bc 51f97525     `.[...iX.eZl%u.Q
10025fc4:	5965592e 5fdc5f80 65fa62bc 6b276a2a     .YeY._._.b.e*j'k
10025fd4:	738b6bb4 89567fc1 9d0e9d2c 5ca19ec4     .k.s..V.,......\
10025fe4:	837b6c96 5c4b5104 81c661b6 72616876     .l{..QK\.a..vhar
10025ff4:	4ffa4e59 60695378 7a4f6e29 4e0b97f3     YN.OxSi`)nOz...N
10026004:	4eee5316 4f3d4f55 4f734fa1 53ef52a0     .S.NUO=O.OsO.R.S
10026014:	590f5609 5bb65ac1 79d15be1 679c6687     .V.Y.Z.[.[.y.f.g
10026024:	6b4c67b6 706b6cb3 798d73c2 7a3c79be     .gLk.lkp.s.y.y<z
10026034:	82b17b87 830482db 83ef8377 876683d3     .{......w.....f.
10026044:	56298ab2 8fe68ca8 971e904e 4fc4868a     ..)V....N......O
10026054:	62115ce8 753b7259 82bd81e5 8cc086fe     .\.bYr;u........
10026064:	991396c5 4ecb99d5 89e34f1a 584a56de     .......N.O...VJX
10026074:	5efb58ca 602a5feb 60626094 621261d0     .X.^._*`.`b`.a.b
10026084:	653962d0 66669b41 6d7768b0 754c7070     .b9eA.ff.hwmppLu
10026094:	7d757686 87f982a5 968e958b 51f18c9d     .vu}...........Q
100260a4:	591652be 5bb354b3 61685d16 6daf6982     .R.Y.T.[.]ha.i.m
100260b4:	84cb788d 8a728857 9ab893a7 99a86d6c     .x..W.r.....lm..
100260c4:	57a386d9 86ce67ff 5283920e 54045687     ...W.g.....R.V.T
100260d4:	62e15ed3 683c64b9 6bbb6838 78ba7372     .^.b.d<h8h.krs.x
100260e4:	899a7a6b 8d6b89d2 90ed8f03 969495a3     kz....k.........
100260f4:	5b669769 697d5cb3 984e984d 7b20639b     i.f[.\}iM.N..c {
10026104:	6a7f6a2b 9c0d68b6 52726f5f 6070559d     +j.j.h.._orR.Up`
10026114:	6d3b62ec 6ed16e07 8910845b 4e148f44     .b;m.n.n[...D..N
10026124:	53f69c39 6a3a691b 682a9784 7ac3515c     9..S.i:j..*h\Q.z
10026134:	91dc84b2 565b938c 68229d28 84318305     ......[V(."h..1.
10026144:	52087ca5 74e682c5 4f834e7e 5bd251a0     .|.R...t~N.O.Q.[
10026154:	52d8520a 5dfb52e7 582a559a 5b8c59e6     .R.R.R.].U*X.Y.[
10026164:	5bdb5b98 5e795e72 611f60a3 61be6163     .[.[r^y^.`.aca.a
10026174:	656263db 685367d1 6b3e68fa 6c576b53     .cbe.gSh.h>kSkWl
10026184:	6f976f22 74b06f45 76e37518 7aff770b     "o.oEo.t.u.v.w.z
10026194:	7c217ba1 7f367de9 809d7ff0 839e8266     .{!|.}6.....f...
100261a4:	8acc89b3 90848cab 95939451 95a29591     ........Q.......
100261b4:	97d39665 82189928 542b4e38 5dcc5cb8     e...(...8N+T.\.]
100261c4:	764c73a9 5ca9773c 8d0b7feb 981196c1     .sLv<w.\........
100261d4:	98589854 4f0e4f01 559c5371 57fa5668     T.X..O.OqS.UhV.W
100261e4:	5b095947 5c905bc4 5e7e5e0c 63ee5fcc     GY.[.[.\.^~^._.c
100261f4:	65d7673a 671f65e2 68c468cb 5e306a5f     :g.e.e.g.h.h_j0^
10026204:	6c176bc5 757f6c7d 5b637948 7d007a00     .k.l}l.uHyc[.z.}
10026214:	898f5fbd 8cb48a18 8ecc8d77 98e28f1d     ._......w.......
10026224:	9b3c9a0e 507d4e80 59935100 622f5b9c     ..<..N}P.Q.Y.[/b
10026234:	64ec6280 72a06b3a 79477591 87fb7fa9     .b.d:k.r.uGy....
10026244:	8b708abc 83ca63ac 540997a0 55ab5403     ..p..c.....T.T.U
10026254:	6a586854 78278a70 9ecd6775 5ba25374     ThXjp.'xug..tS.[
10026264:	8650811a 4e189006 4ec74e45 53ca4f11     ..P....NEN.N.O.S
10026274:	5bae5438 60255f13 673d6551 6c726c42     8T.[._%`Qe=gBlrl
10026284:	70786ce3 7a767403 7b087aae 7cfe7d1a     .lxp.tvz.z.{.}.|
10026294:	65e77d66 53bb725b 5de85c45 62e062d2     f}.e[r.SE\.].b.b
100262a4:	6e206319 8a31865a 92f88ddd 79a66f01     .c nZ.1......o.y
100262b4:	4ea89b5a 4eac4eab 4fa04f9b 514750d1     Z..N.N.N.O.O.PGQ
100262c4:	51717af6 535451f6 537f5321 55ac53eb     .zqQ.QTS!S.S.S.U
100262d4:	5ce15883 5f4a5f37 6050602f 631f606d     .X.\7_J_/`P`m`.c
100262e4:	6a4b6559 72c26cc1 77ef72ed 810580f8     YeKj.l.r.r.w....
100262f4:	854e8208 93e190f7 995797ff 4ef09a5a     ..N.......W.Z..N
10026304:	5c2d51dd 696d6681 66f25c40 73896975     .Q-\.fmi@\.fui.s
10026314:	7c816850 52e450c5 5dfe5747 65a49326     Ph.|.P.RGW.]&..e
10026324:	6b3d6b23 79817434 7b4b79bd 82b97dca     #k=k4t.y.yK{.}..
10026334:	887f83cc 8b39895f 91d18fd1 9280541f     ...._.9......T..
10026344:	50364e5d 533a53e5 739672d7 82e677e9     ]N6P.S:S.r.s.w..
10026354:	99c68eaf 99d299c8 611a5177 55b0865e     ........wQ.a^..U
10026364:	50767a7a 90475bd3 4e329685 91e76adb     zzvP.[G...2N.j..
10026374:	5c485c51 7a9f6398 97746c93 7aaa8f61     Q\H\.c.z.lt.a..z
10026384:	9688718a 68177c82 68517e70 52f2936c     .q...|.hp~Qhl..R
10026394:	85ab541b 7fa48a13 90e18ecd 88885366     .T..........fS..
100263a4:	4fc27941 521150be 55535144 73ea572d     Ay.O.P.RDQSU-W.s
100263b4:	5951578b 5f845f62 61766075 61a96167     .WQYb_._u`vaga.a
100263c4:	643a63b2 666f656c 6e136842 7a3d7566     .c:dleofBh.nfu=z
100263d4:	7d4c7cfb 7e4b7d99 830e7f6b 86cd834a     .|L}.}K~k...J...
100263e4:	8a638a08 8efd8b66 9d8f981a 8fce82b8     ..c.f...........
100263f4:	52879be8 6483621f 96996fc0 50916841     ...R.b.d.o..Ah.P
10026404:	6c7a6b20 7a746f54 88407d50 67088a23      kzlTotzP}@.#..g
10026414:	50394ef6 50655026 5238517c 55a75263     .N9P&PeP|Q8RcR.U
10026424:	5805570f 5efa5acc 61f861b2 637262f3     .W.X.Z.^.a.a.brc
10026434:	6a29691c 72ac727d 7814732e 7d79786f     .i)j}r.r.s.xoxy}
10026444:	80a9770c 8b19898b 8ed28ce2 93759063     .w..........c.u.
10026454:	9855967a 9e789a13 539f5143 5e7b53b3     z.U...x.CQ.S.S{^
10026464:	6e1b5f26 73846e90 7d4373fe 8a008237     &_.n.n.s.sC}7...
10026474:	96508afa 500b4e4e 547c53e4 59d156fa     ..P.NN.P.S|T.V.Y
10026484:	5df15b64 5f275eab 65456238 6e5667af     d[.].^'_8bEe.gVn
10026494:	7cca72d0 80a188b4 83f080e1 8a87864e     .r.|........N...
100264a4:	92378de8 986796c7 4e949f13 4f0d4e92     ..7...g....N.N.O
100264b4:	54495348 5a2f543e 5fa15f8c 68a7609f     HSIT>T/Z._._.`.h
100264c4:	745a6a8e 8a9e7881 8b778aa4 4e5e9190     .jZt.x....w...^N
100264d4:	4ea49bc9 4faf4f7c 50165019 516c5149     ...N|O.O.P.PIQlQ
100264e4:	52b9529f 539a52fe 541153e3 5589540e     .R.R.R.S.S.T.T.U
100264f4:	57a25751 5b54597d 5b8f5b5d 5de75de5     QW.W}YT[][.[.].]
10026504:	5e785df7 5e9a5e83 5f185eb7 614c6052     .]x^.^.^.^._R`La
10026514:	62d86297 653b63a7 66436602 676d66f4     .b.b.c;e.fCf.fmg
10026524:	68976821 6c5f69cb 6d696d2a 6e9d6e2f     !h.h.i_l*mim/n.n
10026534:	76877532 7a3f786c 7d057ce0 7d5e7d18     2u.vlx?z.|.}.}^}
10026544:	80157db1 80af8003 815480b1 822a818f     .}........T...*.
10026554:	884c8352 8b1b8861 8cfc8ca2 917590ca     R.L.a.........u.
10026564:	783f9271 95a492fc 9805964d 9ad89999     q.?x....M.......
10026574:	525b9d3b 53f752ab 58d55408 6fe062f7     ;.[R.R.S.T.X.b.o
10026584:	8f5f8c6a 514b9eb9 544a523b 7a4056fd     j._...KQ;RJT.V@z
10026594:	9d609177 73449ed2 81706f09 5ffd7511     w.`...Ds.op..u._
100265a4:	9aa860da 8fbc72db 98036b64 56f04eca     .`...r..dk...N.V
100265b4:	58be5764 60685a5a 660f61c7 68396606     dW.XZZh`.a.f.f9h
100265c4:	6df768b1 7d3a75d5 9b42826e 4f504e9b     .h.m.u:}n.B..NPO
100265d4:	550653c9 5de65d6f 67fb5dee 74736c99     .S.Uo].].].g.lst
100265e4:	8a507802 88df9396 5ea75750 50b5632b     .xP.....PW.^+c.P
100265f4:	518d50ac 54c96700 59bb585e 5f695bb0     .P.Q.g.T^X.Y.[i_
10026604:	63a1624d 6b73683d 707d6e08 728091c7     Mb.c=hsk.n}p...r
10026614:	78267815 658e796d 83dc7d30 8f0988c1     .x&xmy.e0}......
10026624:	5264969b 67505728 8ca17f6a 574251b4     ..dR(WPgj....QBW
10026634:	583a962a 80b4698a 5d0e54b2 789557fc     *.:X.i...T.].W.x
10026644:	4f5c9dfa 548b524a 6628643e 67f56714     ..\OJR.T>d(f.g.g
10026654:	7b567a84 932f7d22 9bad685c 53197b39     .zV{"}/.\h..9{.S
10026664:	5237518a 62f65bdf 64e664ae 6bba672d     .Q7R.[.b.d.d-g.k
10026674:	96d185a9 9bd67690 9306634c 76bf9bab     .....v..Lc.....v
10026684:	4e096652 53c25098 60e85c71 65636492     Rf.N.P.Sq\.`.dce
10026694:	71e6685f 752373ca 7e827b97 8b838695     _h.q.s#u.{.~....
100266a4:	91788cdb 65ac9910 6b8b66ab 4ed44ed5     ..x....e.f.k.N.N
100266b4:	4f7f4f3a 53f8523a 55e353f2 58eb56db     :O.O:R.S.S.U.V.X
100266c4:	59c959cb 5b5059ff 5e025c4d 5fd75e2b     .Y.Y.YP[M\.^+^._
100266d4:	6307601d 5b5c652f 65bd65af 679d65e8     .`.c/e\[.e.e.e.g
100266e4:	6b7b6b62 73456c0f 79c17949 7d197cf8     bk{k.lEsIy.y.|.}
100266f4:	80a27d2b 81f38102 8a5e8996 8a668a69     +}........^.i.f.
10026704:	8aee8a8c 8cdc8cc7 98fc96cc 4e8b6b6f     ............ok.N
10026714:	4f8d4f3c 5b575150 61485bfa 66426301     <O.OPQW[.[Ha.cBf
10026724:	6ecb6b21 723e6cbb 75d474bd 793a78c1     !k.n.l>r.t.u.x:y
10026734:	8033800c 849481ea 6c508f9e 5f0f9e7f     ..3.......Pl..._
10026744:	9d2b8b58 8ef87afa 96eb5b8d 53f14e03     X.+..z...[...N.S
10026754:	593157f7 5ba45ac9 6e7f6089 75be6f06     .W1Y.Z.[.`.n.o.u
10026764:	5b9f8cea 7be08500 67f45072 5c61829d     ...[...{rP.g..a\
10026774:	7e1e854a 5199820e 63685c04 659c8d66     J..~...Q.\hcf..e
10026784:	793e716e 80057d17 8eca8b1d 86c7906e     nq>y.}......n...
10026794:	501f90aa 5c3a52fa 707c6753 914c7235     ...P.R:\Sg|p5rL.
100267a4:	932b91c8 5bc282e5 60f95f31 53d64e3b     ..+....[1_.`;N.S
100267b4:	624b5b88 6b8a6731 73e072e9 816b7a2e     .[Kb1g.k.r.s.zk.
100267c4:	91528da3 51129996 546a53d7 63885bff     ..R....Q.SjT.[.c
100267d4:	7dac6a39 56da9700 546853ce 5c315b97     9j.}...V.ShT.[1\
100267e4:	4fee5dde 62fe6101 79c06d32 7d4279cb     .].O.a.b2m.y.yB}
100267f4:	7fd27e4d 821f81ed 88468490 8b908972     M~........F.r...
10026804:	8f2f8e74 914b9031 96c6916c 4ec0919c     t./.1.K.l......N
10026814:	51454f4f 5f935341 67d4620e 6e0b6c41     OOEQAS._.b.gAl.n
10026824:	7e267363 928391cd 591953d4 6dd15bbf     cs&~.....S.Y.[.m
10026834:	7e2e795d 587e7c9b 51fa719f 8ff08853     ]y.~.|~X.q.QS...
10026844:	5cfb4fca 77ac6625 821c7ae3 51c699ff     .O.\%f.w.z.....Q
10026854:	65ec5faa 6b89696f 6e966df3 76fe6f64     ._.eoi.k.m.ndo.v
10026864:	5de17d14 91879075 51e69806 6240521d     .}.]u......Q.R@b
10026874:	66d96691 5eb66e1a 7f727dd2 85af66f8     .f.f.n.^.}r..f..
10026884:	8af885f7 53d952a9 5e8f5973 60555f90     .....R.SsY.^._U`
10026894:	966492e4 511f50b7 532052dd 53ec5347     ..d..P.Q.R SGS.S
100268a4:	554654e8 56175531 59be5968 5bb55a3c     .TFU1U.VhY.Y<Z.[
100268b4:	5c0f5c06 5c1a5c11 5e8a5e84 5f705ee0     .\.\.\.\.^.^.^p_
100268c4:	6284627f 638c62db 66076377 662d660c     .b.b.b.cwc.f.f-f
100268d4:	677e6676 6a1f68a2 6cbc6a35 6e096d88     vf~g.h.j5j.l.m.n
100268e4:	713c6e58 71677126 770175c7 7901785d     Xn<q&qgq.u.w]x.y
100268f4:	79f07965 7b117ae0 7d397ca7 83d68096     ey.y.z.{.|9}....
10026904:	8549848b 88f3885d 8a3c8a1f 8a738a54     ..I.].....<.T.s.
10026914:	8cde8c61 926691a4 9418937e 9798969c     a.....f.~.......
10026924:	4e084e0a 4e574e1e 52705197 583457ce     .N.N.NWN.QpR.W4X
10026934:	5b2258cc 60c55e38 676164fe 6d446756     .X"[8^.`.dagVgDm
10026944:	757372b6 84b87a63 91b88b72 56319320     .rsucz..r... .1V
10026954:	98fe57f4 690d62ed 71ed6b96 80777e54     .W...b.i.k.qT~w.
10026964:	89e68272 875598df 5c3b8fb1 4fe14f38     r.....U...;\8O.O
10026974:	55074fb5 5bdd5a20 5fc35be9 632f614e     .O.U Z.[.[._Na/c
10026984:	664b65b0 699b68ee 6df16d78 75b97533     .eKf.h.ixm.m3u.u
10026994:	795e771f 7d3379e6 82af81e3 89aa85aa     .w^y.y3}........
100269a4:	8eab8a3a 90328f9b 970791dd 4ec14eba     :.....2......N.N
100269b4:	58755203 5c0b58ec 5c3d751a 8a0a814e     .RuX.X.\.u=\N...
100269c4:	96638fc5 7b25976d 98088acf 56f39162     ..c.m.%{....b..V
100269d4:	901753a8 57825439 63a85e25 708a6c34     .S..9T.W%^.c4l.p
100269e4:	7c8b7761 88707fe0 91549042 93189310     aw.|..p.B.T.....
100269f4:	745e968f 5d079ac4 65705d69 8da867a2     ..^t...]i]pe.g..
10026a04:	636e96db 69196749 981783c5 88fe96c0     ..ncIg.i........
10026a14:	647a6f84 4e165bf8 755d702c 51c4662f     .ozd.[.N,p]u/f.Q
10026a24:	52e25236 5f8159d3 62106027 6574653f     6R.R.Y._'`.b?ete
10026a34:	6674661f 681668f2 6e056b63 751f7272     .ftf.h.hck.nrr.u
10026a44:	7cbe76db 58f08056 897f88fd 8a938aa0     .v.|V..X........
10026a54:	901d8acb 97529192 65899759 81067a0e     ......R.Y..e.z..
10026a64:	5e2d96bb 621a60dc 661465a5 77f36790     ..-^.`.b.e.f.g.w
10026a74:	7c4d7a4d 810a7e3e 8d648cac 8e5f8de1     MzM|>~....d..._.
10026a84:	520778a9 63a562d9 62986442 7a838a2d     .x.R.b.cBd.b-..z
10026a94:	8aac7bc0 7d7696ea 8749820c 51484ed9     .{....v}..I..NHQ
10026aa4:	53605343 5c025ba3 5ddd5c16 62476226     CS`S.[.\.\.]&bGb
10026ab4:	681364b0 6cc96834 6d176d45 6f5c67d3     .d.h4h.lEm.m.g\o
10026ac4:	717d714e 7a7f65cb 7dda7bad 7fa87e4a     Nq}q.e.z.{.}J~..
10026ad4:	821b817a 85a68239 8cce8a6e 90788df5     z...9...n.....x.
10026ae4:	92ad9077 95839291 524d9bae 6f385584     w.........MR.U8o
10026af4:	51687136 7e557985 7cce81b3 5851564c     6qhQ.yU~...|LVQX
10026b04:	63aa5ca8 66fd66fe 72d9695a 758e758f     .\.c.f.fZi.r.u.u
10026b14:	7956790e 7c9779df 7d447d20 8a348607     .yVy.y.| }D}..4.
10026b24:	9061963b 50e79f20 53cc5275 500953e2     ;.a. ..PuR.S.S.P
10026b34:	58ee55aa 723d594f 5c645b8b 60e3531d     .U.XOY=r.[d\.S.`
10026b44:	635c60f3 633f6383 64cd63bb 66f965e9     .`\c.c?c.c.d.e.f
10026b54:	69cd5de3 6f1569fd 4e8971e5 76f875e9     .].i.i.o.q.N.u.v
10026b64:	7cdf7a93 7d9c7dcf 83498061 846c8358     .z.|.}.}a.I.X.l.
10026b74:	85fb84bc 8d7088c5 906d9001 971c9397     ......p...m.....
10026b84:	50cf9a12 618e5897 853581d3 90208d08     ...P.X.a..5... .
10026b94:	50744fc3 53735247 6349606f 6e2c675f     .OtPGRsSo`Ic_g,n
10026ba4:	901f8db3 5c5e4fd7 65cf8cca 53527d9a     .....O^\...e.}RS
10026bb4:	51768896 5b5863c3 5c0a5b6b 6751640d     ..vQ.cX[k[.\.dQg
10026bc4:	4ed6905c 592a591a 8a516c70 5815553e     \..N.Y*YplQ.>U.X
10026bd4:	60f059a5 67c16253 69558235 99c49640     .Y.`Sb.g5.Ui@...
10026be4:	4f539a28 5bfe5806 5cb18010 5f855e2f     (.SO.X.[...\/^._
10026bf4:	614b6020 66ff6234 6ede6cf0 817f80ce      `Ka4b.f.l.n....
10026c04:	888b82d4 90008cb8 968a902e 9bdb9edb     ................
10026c14:	53f04ee3 7b2c5927 984c918d 6edd9df9     .N.S'Y,{..L....n
10026c24:	53537027 5b855544 629e6258 6ca262d3     'pSSDU.[Xb.b.b.l
10026c34:	74226fef 94388a17 8afe6fc1 51e78338     .o"t..8..o..8..Q
10026c44:	53ea86f8 4f4653e9 8fb09054 8131596a     ...S.SFOT...jY1.
10026c54:	7aea5dfd 68da8fbf 72f88c37 6a3d9c48     .].z...h7..rH.=j
10026c64:	4e398ab0 56065358 62c55766 65e663a2     ..9NXS.VfW.b.c.e
10026c74:	6de16b4e 70ad6e5b 7aef77ed 7dbb7baa     Nk.m[n.p.w.z.{.}
10026c84:	80c6803d 8a9586cb 56e3935b 5f3e58c7     =.......[..V.X>_
10026c94:	669665ad 6bb56a80 8ac77537 77e55024     .e.f.j.k7u..$P.w
10026ca4:	5f1b5730 667a6065 75f46c60 7f6e7a1a     0W._e`zf`l.u.zn.
10026cb4:	871881f4 99b39045 755c7bc9 7b517af9     ....E....{\u.zQ{
10026cc4:	901084c4 7a9279e9 5ae18336 4e2d7740     .....y.z6..Z@w-N
10026cd4:	5b994ef2 62bd5fe0 67f1663c 866b6ce8     .N.[._.b<f.g.lk.
10026ce4:	8a3b8877 92f3914e 6a1799d0 732a7026     w.;.N......j&p*s
10026cf4:	845782e7 4e018caf 51cb5146 5bf5558b     ..W....NFQ.Q.U.[
10026d04:	5e335e16 5f145e81 5f6b5f35 61f25fb4     .^3^.^._5_k_._.a
10026d14:	66a26311 6f6e671d 753a7252 8074773a     .c.f.gnoRr:u:wt.
10026d24:	81788139 8abf8776 8d858adc 929a8df3     9.x.v...........
10026d34:	98029577 52c59ce5 76f46357 6c886715     w......RWc.v.g.l
10026d44:	8cc373cd 967393ae 589c6d25 69cc690e     .s....s.%m.X.i.i
10026d54:	939a8ffd 901a75db 6802585a 69fb63b4     .....u..ZX.h.c.i
10026d64:	6f2c4f43 8fbb67d8 7db48526 693f9354     CO,o.g..&..}T.?i
10026d74:	576a6f70 5b2c58f7 722a7d2c 91e3540a     pojW.X,[,}*r.T..
10026d84:	4ead9db4 505c4f4e 52435075 54488c9e     ...NNO\PuPCR..HT
10026d94:	5b9a5824 5e955e1d 5ef75ead 608c5f1f     $X.[.^.^.^.^._.`
10026da4:	633a62b5 68af63d0 78876c40 7a0b798e     .b:c.c.h@l.x.y.z
10026db4:	82477de0 8ae68a02 90138e44 912d90b8     .}G.....D.....-.
10026dc4:	9f0e91d8 64586ce5 657564e2 76846ef4     .....lXd.due.n.v
10026dd4:	90697b1b 6eba93d1 5fb954f2 8f4d64a4     .{i....n.T._.dM.
10026de4:	92448fed 586b5178 5c555929 6dfb5e97     ..D.xQkX)YU\.^.m
10026df4:	751c7e8f 8ee28cbc 70b9985b 6bbf4f1d     .~.u....[..p.O.k
10026e04:	75306fb1 514e96fb 58355410 59ac5857     .o0u..NQ.T5XWX.Y
10026e14:	5f925c60 675c6597 767b6e21 8ced83df     `\._.e\g!n{v....
10026e24:	90fd9014 7825934d 52aa783a 571f5ea6     ....M.%x:x.R.^.W
10026e34:	60125974 515a5012 51cd51ac 55105200     tY.`.PZQ.Q.Q.R.U
10026e44:	58585854 5b955957 5d8b5cf6 629560bc     TXXXWY.[.\.].`.b
10026e54:	6771642d 68bc6843 76d768df 6e6f6dd8     -dqgCh.h.h.v.mon
10026e64:	706f6d9b 5f5371c8 797775d8 7b547b49     .mop.qS_.uwyI{T{
10026e74:	7cd67b52 52307d71 85698463 8a0e85e4     R{.|q}0Rc.i.....
10026e84:	8c468b04 90038e0f 9419900f 982d9676     ..F.........v.-.
10026e94:	95d89a30 52d550cd 5802540c 61a75c0e     0....P.R.T.X.\.a
10026ea4:	6d1e649e 7ae577b3 840480f4 92859053     .d.m.w.z....S...
10026eb4:	9d075ce0 5f97533f 6d9c5fb3 77637279     .\..?S._._.myrcw
10026ec4:	7be479bf 72ec6bd2 68038aad 51f86a61     .y.{.k.r...haj.Q
10026ed4:	69347a81 9cf65c4a 5bc582eb 701e9149     .z4iJ\.....[I..p
10026ee4:	5c6f5678 656660c7 8c5a6c8c 98139041     xVo\.`fe.lZ.A...
10026ef4:	66c75451 5948920d 518590a3 51ea4e4d     QT.f..HY...QMN.Q
10026f04:	8b0e8599 637a7058 6962934b 7e0499b4     ....XpzcK.bi...~
10026f14:	53577577 8edf6960 6c5d96e3 5c3c4e8c     wuWS`i....]l.N<\
10026f24:	8fe95f10 8cd15302 86798089 65e55eff     ._...S....y..^.e
10026f34:	51654e73 5c3f5982 4efb97ee 5fcd598a     sNeQ.Y?\...N.Y._
10026f44:	6fe18a8d 796279b0 84715be7 71b1732b     ...o.yby.[q.+s.q
10026f54:	5ff55e74 649a637b 7c9871c3 5efc4e43     t^._{c.d.q.|CN.^
10026f64:	57dc4e4b 60a956a2 7d0d6fc3 813380fd     KN.W.V.`.o.}..3.
10026f74:	8fb281bf 86a48997 628a5df4 898764ad     .........].b.d..
10026f84:	6ce26777 74366d3e 5a467834 82ad7f75     wg.l>m6t4xFZu...
10026f94:	4ff399ac 62dd5ec3 65576392 76c3676f     ...O.^.b.cWeog.v
10026fa4:	80cc724c 8f2980ba 500d914d 5a9257f9     Lr....).M..P.W.Z
10026fb4:	69736885 72fd7164 58f28cb7 966a8ce0     .hsidq.r...X..j.
10026fc4:	877f9019 77e779e4 4f2f8429 535a5265     .....y.w)./OeRZS
10026fd4:	67cf62cd 767d6cca 7c957b94 85848236     .b.g.l}v.{.|6...
10026fe4:	66dd8feb 72066f20 83ab7e1b 9ea699c1     ...f o.r.~......
10026ff4:	7bb151fd 7bb87872 7b488087 5e616ae8     .Q.{rx.{..H{.ja^
10027004:	7551808c 516b7560 6e8c9262 9197767a     ..Qu`ukQb..nzv..
10027014:	4f109aea 629c7f70 95a57b4f 567a9ce9     ...Op..bO{....zV
10027024:	86e45859 4f3496bc 534a5224 53db53cd     YX....4O$RJS.S.S
10027034:	642c5e06 677f6591 6c4e6c3e 72af7248     .^,d.e.g>lNlHr.r
10027044:	755473ed 822c7e41 8ca985e9 91c67bc4     .sTuA~,......{..
10027054:	98127169 633d98ef 756a6669 78d076e4     iq....=cifju.v.x
10027064:	86ee8543 5351532a 59835426 5f7c5e87     C...*SQS&T.Y.^|_
10027074:	624960b2 62ab6279 6bd46590 75b26ccc     .`Ibyb.b.e.k.l.u
10027084:	789176ae 7dcb79d8 80a57f77 8ab988ab     .v.x.y.}w.......
10027094:	907f8cbb 98db975e 7c386a0b 5c3e5099     ....^....j8|.P>\
100270a4:	67875fae 74356bd8 7f8e7709 67ca9f3b     ._.g.k5t.w..;..g
100270b4:	53397a17 9aed758b 819d5f66 809883f1     .z9S.u..f_......
100270c4:	5fc55f3c 7b467562 6867903c 5a9b59eb     <_._buF{<.gh.Y.Z
100270d4:	767e7d10 4ff58b2c 6a195f6a 6f026c37     .}~v,..Oj_.j7l.o
100270e4:	796874e2 8a558868 5edf8c79 75c563cf     .thyh.U.y..^.c.u
100270f4:	82d779d2 92f29328 86ed849c 54c19c2d     .y..(.......-..T
10027104:	658c5f6c 70156d5c 8cd38ca7 654f983b     l_.e\m.p....;.Oe
10027114:	4e0d74f6 57e04ed8 5a66592b 51a85bcc     .t.N.N.W+YfZ.[.Q
10027124:	5e9c5e03 62766016 65a76577 6d6e666e     .^.^.`vbwe.enfnm
10027134:	7b267236 819a8150 8b5c8299 8ce68ca0     6r&{P.....\.....
10027144:	961c8d74 4fae9644 6b6664ab 8461821e     t...D..O.dfk..a.
10027154:	90e8856a 69535c01 847a98a8 4f0f8557     j....\Si..z.W..O
10027164:	5fa9526f 670d5e45 8179798f 89868907     oR._E^.g.yy.....
10027174:	5f176df5 6cb86255 72694ecf 52069b92     .m._Ub.l.Nir...R
10027184:	5674543b 61a458b3 711a626e 7c89596e     ;TtV.X.anb.qnY.|
10027194:	7d1b7cde 658796f0 4e19805e 51754f75     .|.}...e^..NuOuQ
100271a4:	5e635840 5f0a5e73 4e2667c4 9589853d     @Xc^s^._.g&N=...
100271b4:	7c73965b 50fb9801 765658c1 522578a7     [.s|...P.XVv.x%R
100271c4:	851177a5 504f7b86 72475909 7de87bc7     .w...{OP.YGr.{.}
100271d4:	8fd48fba 4fbf904d 5a2952c9 97ad5f01     ....M..O.R)Z._..
100271e4:	82174fdd 570392ea 6b696355 88dc752b     .O.....WUcik+u..
100271f4:	7a428f14 589352df 620a6155 6bcd66ae     ..Bz.R.XUa.b.f.k
10027204:	83e97c3f 4ff85023 54465305 59495831     ?|..#P.O.SFT1XIY
10027214:	5cf05b9d 5d295cef 62b15e96 653e6367     .[.\.\)].^.bgc>e
10027224:	670b65b9 6ce16cd5 783270f9 80de7e2b     .e.g.l.l.p2x+~..
10027234:	840c82b3 870284ec 8a2a8912 90a68c4a     ..........*.J...
10027244:	98fd92d2 9d6c9cf3 4ea14e4f 5256508d     ......l.ON.N.PVR
10027254:	59a8574a 5fd85e3d 623f5fd9 671b66b4     JW.Y=^._._?b.f.g
10027264:	68d267d0 7d215192 81a880aa 8c8c8b00     .g.h.Q!}........
10027274:	927e8cbf 54209632 5317982c 535c50d5     ..~.2. T,..S.P\S
10027284:	64b258a8 72676734 7a467766 52c391e6     .X.d4ggrfwFz...R
10027294:	6b866ca1 5e4c5800 672c5954 51e17ffb     .l.k.XL^TY,g...Q
100272a4:	646976c6 9b5478e8 57cb9ebb 662759b9     .vid.xT....W.Y'f
100272b4:	6bce679a 69d954e9 819c5e55 9baa6795     .g.k.T.iU^...g..
100272c4:	9c5267fe 4ea6685d 53c84fe3 672b62b9     .gR.]h.N.O.S.b+g
100272d4:	8fc46cab 7e6d4fad 4e079ebf 6e806162     .l...Om~...Nba.n
100272e4:	85136f2b 672a5473 5df39b45 5cac7b95     +o..sT*gE..].{.\
100272f4:	871c5bc6 84d16e4a 81087a14 7c8d5999     .[..Jn...z...Y.|
10027304:	77206c11 592252d9 725f7121 972777db     .l w.R"Y!q_r.w'.
10027314:	690b9d61 5a185a7f 540d51a5 660e547d     a..i.Z.Z.Q.T}T.f
10027324:	8ff776df 9cf49298 725d59ea 514d6ec5     .v.......Y]r.nMQ
10027334:	7dbf68c9 97627dec 64789eba 83026a21     .h.}.}b...xd!j..
10027344:	5b5f5984 731b6bdb 7db276f2 84998017     .Y_[.k.s.v.}....
10027354:	67285132 76ee9ed9 52ff6762 5c249905     2Q(g...vbg.R..$\
10027364:	7c7e623b 554f8cb0 7d0b60b6 53019580     ;b~|..OU.`.}...S
10027374:	51b64e5f 723a591c 91ce8036 77e25f25     _N.Q.Y:r6...%_.w
10027384:	5f795384 85ac7d04 8e8d8a33 67f39756     .Sy_.}..3...V..g
10027394:	945385ae 61086109 76526cb9 8f388aed     ..S..a.a.lRv..8.
100273a4:	4f51552f 52c7512a 5ba553cb 60a05e7d     /UQO*Q.R.S.[}^.`
100273b4:	63d66182 67da6709 6d8c6e67 73377336     .a.c.g.ggn.m6s7s
100273c4:	79507531 8a9888d5 9091904a 96c490f5     1uPy....J.......
100273d4:	5915878d 4f594e88 8a894e0e 98108f3f     ...Y.NYO.N..?...
100273e4:	5e7c50ad 5bb95996 63da5eb8 64c163fa     .P|^.Y.[.^.c.c.d
100273f4:	694a66dc 6d0b69d8 71946eb6 7aaf7528     .fJi.i.m.n.q(u.z
10027404:	80007f8a 84c98449 8b218981 90658e0a     ....I.....!...e.
10027414:	990a967d 6291617e 6c836b32 7fcc6d74     }...~a.b2k.ltm..
10027424:	6dc07ffc 87ba7f85 676588f8 983c83b1     ...m......eg..<.
10027434:	6d1b96f7 843d7d61 4e71916a 5d505375     ...ma}=.j.qNuSP]
10027444:	6feb6b04 862d85cd 522989a7 5c65540f     .k.o..-...)R.Te\
10027454:	68a8674e 74837406 88cf75e2 91cc88e1     Ng.h.t.t.u......
10027464:	967896e2 73875f8b 844e7acb 756563a0     ..x.._.s.zN..ceu
10027474:	6d415289 74096e9c 786b7559 96867c92     .RAm.n.tYukx.|..
10027484:	9f8d7adc 616e4fb6 865c65c5 4eae4e86     .z...Ona.e\..N.N
10027494:	4e2150da 5bee51cc 68816599 731f6dbc     .P!N.Q.[.e.h.m.s
100274a4:	77ad7642 7ce77a1c 8ad2826f 91cf907c     Bv.w.z.|o...|...
100274b4:	98189675 7dd1529b 5398502b 6dcb6797     u....R.}+P.S.g.m
100274c4:	743371d0 8f2a81e8 9c5796a3 74609e9f     .q3t..*...W...`t
100274d4:	6d995841 985e7d2f 4f364ee4 51b74f8b     AX.m/}^..N6O.O.Q
100274e4:	5dba52b1 73b2601c 82d3793c 96b79234     .R.].`.s<y..4...
100274f4:	970a96f6 9f629e97 6b7466a6 52a35217     ......b..ftk.R.R
10027504:	88c270c8 604b5ec9 6f236190 7c3e7149     .p...^K`.a#oIq>|
10027514:	806f7df4 902384ee 5442932c 6ad39b6f     .}o...#.,.BTo..j
10027524:	8cc27089 97328def 5a4152b4 5f045eca     .p....2..RAZ.^._
10027534:	697c6717 6d6a6994 72626f0f 7bed72fc     .g|i.ijm.obr.r.{
10027544:	807e8001 90ce874b 9e93516d 808b7984     ..~.K...mQ...y..
10027554:	8ad69332 548c502d 6b6a8a71 81078cc4     2...-P.Tq.jk....
10027564:	67a060d1 4e999df2 9c104e98 85c18a6b     .`.g...N.N..k...
10027574:	69008568 78976e7e 00008155              h..i~n.xU...

10027580 <a8>:
10027580:	25022500 2510250c 25142518 252c251c     .%.%.%.%.%.%.%,%
10027590:	25342524 2501253c 250f2503 251b2513     $%4%<%.%.%.%.%.%
100275a0:	25232517 252b2533 254b253b 252f2520     .%#%3%+%;%K% %/%
100275b0:	25372528 251d253f 25252530 25422538     (%7%?%.%0%%%8%B%

100275c0 <a7>:
100275c0:	04110410 04130412 04150414 04160401     ................
100275d0:	04180417 041a0419 041c041b 041e041d     ................
100275e0:	0420041f 04220421 04240423 04260425     .. .!.".#.$.%.&.
100275f0:	04280427 042a0429 042c042b 042e042d     '.(.).*.+.,.-...
10027600:	0000042f 00000000 00000000 00000000     /...............
	...
10027620:	04310430 04330432 04350434 04360451     0.1.2.3.4.5.Q.6.
10027630:	04380437 043a0439 043c043b 043e043d     7.8.9.:.;.<.=.>.
10027640:	0440043f 04420441 04440443 04460445     ?.@.A.B.C.D.E.F.
10027650:	04480447 044a0449 044c044b 044e044d     G.H.I.J.K.L.M.N.
10027660:	0000044f                                O...

10027664 <a6>:
10027664:	03920391 03940393 03960395 03980397     ................
10027674:	039a0399 039c039b 039e039d 03a0039f     ................
10027684:	03a303a1 03a503a4 03a703a6 03a903a8     ................
	...
100276a4:	03b203b1 03b403b3 03b603b5 03b803b7     ................
100276b4:	03ba03b9 03bc03bb 03be03bd 03c003bf     ................
100276c4:	03c303c1 03c503c4 03c703c6 03c903c8     ................

100276d4 <a3>:
	...
100276e0:	01000000 01010101 01010101 00000001     ................
100276f0:	00000000 01010101 01010101 01010101     ................
10027700:	01010101 01010101 01010101 00000101     ................
10027710:	00000000 01010100 01010101 01010101     ................
10027720:	01010101 01010101 01010101 00010101     ................

10027730 <a2>:
10027730:	25a125c6 25b325a0 25bd25b2 203b25bc     .%.%.%.%.%.%.%; 
10027740:	21923012 21912190 30132193 00000000     .0.!.!.!.!.0....
	...
10027760:	22080000 2286220b 22822287 222a2283     ..."."."."."."*"
10027770:	00002229 00000000 00000000 00000000     )"..............
10027780:	22270000 00ac2228 21d421d2 22032200     ..'"("...!.!."."
10027790:	00002229 00000000 00000000 00000000     )"..............
100277a0:	00000000 22200000 231222a5 22072202     ...... ".".#."."
100277b0:	22522261 226b226a 223d221a 2235221d     a"R"j"k"."="."5"
100277c0:	222c222b 00000000 00000000 00000000     +","............
100277d0:	212b0000 266f2030 266a266d 20212020     ..+!0 o&m&j&  ! 
100277e0:	222c00b6 00000000 25ef0000              ..,".......%

100277ec <a1>:
100277ec:	30013000 ff0c3002 30fbff0e ff1bff1a     .0.0.0.....0....
100277fc:	ff01ff1f 309c309b ff4000b4 ff3e00a8     .....0.0..@...>.
1002780c:	ff3f203e 30fe30fd 309e309d 4edd3003     > ?..0.0.0.0.0.N
1002781c:	30063005 30fc3007 20102014 ff3cff0f     .0.0.0.0. . ..<.
1002782c:	2016301c 2026ff5c 20182025 201c2019     .0. \.& % . . . 
1002783c:	ff08201d 3014ff09 ff3b3015 ff5bff3d     . .....0.0;.=.[.
1002784c:	3008ff5d 300a3009 300c300b 300e300d     ]..0.0.0.0.0.0.0
1002785c:	3010300f ff0b3011 00b12212 00f700d7     .0.0.0..."......
1002786c:	2260ff1d ff1eff1c 22672266 2234221e     ..`"....f"g"."4"
1002787c:	26402642 203200b0 21032033 ff0400a5     B&@&..2 3 .!....
1002788c:	00a300a2 ff03ff05 ff0aff06 00a7ff20     ............ ...
1002789c:	26052606 25cf25cb 25c725ce 00464e49     .&.&.%.%.%.%INF.
100278ac:	00666e69 004e414e 006e616e 33323130     inf.NAN.nan.0123
100278bc:	37363534 62613938 66656463 00000000     456789abcdef....
100278cc:	33323130 37363534 42413938 46454443     0123456789ABCDEF
100278dc:	00000000 6c756e28 0000296c 00000030     ....(null)..0...

100278ec <zeroes.0>:
100278ec:	30303030 30303030 30303030 30303030     0000000000000000

100278fc <blanks.1>:
100278fc:	20202020 20202020 20202020 20202020                     

1002790c <zeroes.0>:
1002790c:	30303030 30303030 30303030 30303030     0000000000000000

1002791c <blanks.1>:
1002791c:	20202020 20202020 20202020 20202020                     

1002792c <zeroes.0>:
1002792c:	30303030 30303030 30303030 30303030     0000000000000000

1002793c <blanks.1>:
1002793c:	20202020 20202020 20202020 20202020                     
1002794c:	7566202c 6974636e 203a6e6f 00000000     , function: ....
1002795c:	65737361 6f697472 2522206e 66202273     assertion "%s" f
1002796c:	656c6961 66203a64 20656c69 22732522     ailed: file "%s"
1002797c:	696c202c 2520656e 25732564 00000a73     , line %d%s%s...
1002798c:	7461642f 656a2f61 6e696b6e 6f772f73     /data/jenkins/wo
1002799c:	70736b72 2f656361 2d554e47 6c6f6f74     rkspace/GNU-tool
100279ac:	69616863 72612f6e 32312d6d 6372732f     chain/arm-12/src
100279bc:	77656e2f 2d62696c 77677963 6e2f6e69     /newlib-cygwin/n
100279cc:	696c7765 696c2f62 732f6362 696c6474     ewlib/libc/stdli
100279dc:	706d2f62 2e636572 00000063              b/mprec.c...

100279e8 <p05.0>:
100279e8:	00000005 00000019 0000007d 00000000     ........}.......

100279f8 <__mprec_bigtens>:
100279f8:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
10027a08:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
10027a18:	7f73bf3c 75154fdd                       <.s..O.u

10027a20 <__mprec_tens>:
10027a20:	00000000 3ff00000 00000000 40240000     .......?......$@
10027a30:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
10027a40:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
10027a50:	00000000 412e8480 00000000 416312d0     .......A......cA
10027a60:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
10027a70:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
10027a80:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
10027a90:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
10027aa0:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
10027ab0:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
10027ac0:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
10027ad0:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
10027ae0:	79d99db4 44ea7843 69666e49 7974696e     ...yCx.DInfinity
10027af0:	00000000 004e614e 7461642f 656a2f61     ....NaN./data/je
10027b00:	6e696b6e 6f772f73 70736b72 2f656361     nkins/workspace/
10027b10:	2d554e47 6c6f6f74 69616863 72612f6e     GNU-toolchain/ar
10027b20:	32312d6d 6372732f 77656e2f 2d62696c     m-12/src/newlib-
10027b30:	77677963 6e2f6e69 696c7765 696c2f62     cygwin/newlib/li
10027b40:	732f6362 696c6474 74642f62 632e616f     bc/stdlib/dtoa.c
10027b50:	00000000                                ....

10027b54 <_init>:
10027b54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10027b56:	bf00      	nop
10027b58:	bcf8      	pop	{r3, r4, r5, r6, r7}
10027b5a:	bc08      	pop	{r3}
10027b5c:	469e      	mov	lr, r3
10027b5e:	4770      	bx	lr

10027b60 <_fini>:
10027b60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10027b62:	bf00      	nop
10027b64:	bcf8      	pop	{r3, r4, r5, r6, r7}
10027b66:	bc08      	pop	{r3}
10027b68:	469e      	mov	lr, r3
10027b6a:	4770      	bx	lr
10027b6c:	0000      	movs	r0, r0
	...

10027b70 <__MXC_FLC_PageErase_veneer>:
10027b70:	f85f f000 	ldr.w	pc, [pc]	@ 10027b74 <__MXC_FLC_PageErase_veneer+0x4>
10027b74:	200006c9 	.word	0x200006c9

10027b78 <__MXC_FLC_Com_Write_veneer>:
10027b78:	f85f f000 	ldr.w	pc, [pc]	@ 10027b7c <__MXC_FLC_Com_Write_veneer+0x4>
10027b7c:	20000ac9 	.word	0x20000ac9

10027b80 <__MXC_FLC_RevA_Write32Using128_veneer>:
10027b80:	f85f f000 	ldr.w	pc, [pc]	@ 10027b84 <__MXC_FLC_RevA_Write32Using128_veneer+0x4>
10027b84:	20000939 	.word	0x20000939

10027b88 <__MXC_FLC_Com_Read_veneer>:
10027b88:	f85f f000 	ldr.w	pc, [pc]	@ 10027b8c <__MXC_FLC_Com_Read_veneer+0x4>
10027b8c:	20000ba1 	.word	0x20000ba1

10027b90 <__EH_FRAME_BEGIN__>:
10027b90:	00000010 00000000 00527a01 010e7c02     .........zR..|..
10027ba0:	000d0c1b 00000038 00000018 fffeddb4     ....8...........
10027bb0:	0000009e 100e5100 03850484 01870286     .....Q..........
10027bc0:	c5c6c75b 4c000ec4 0a0b420a 100e0b42     [......L.B..B...
10027bd0:	03850484 01870286 c5c6c751 00000ec4     ........Q.......
10027be0:	00000010 00000000 00527a01 010e7c02     .........zR..|..
10027bf0:	000d0c1b 00000014 00000018 fffede04     ................
10027c00:	00000134 0a710200 00000b43 00000010     4.....q.C.......
10027c10:	00000000 00527a01 010e7c02 000d0c1b     .....zR..|......
10027c20:	0000001c 00000018 fffedf18 000000d8     ................
10027c30:	080e4100 02840185 4a0a4902 0b41c4c5     .A.......I.J..A.

10027c40 <__FRAME_END__>:
10027c40:	00000000                                ....

Disassembly of section .data:

20000000 <ConsoleUart>:
20000000:	40042000                                . .@

20000004 <overflows>:
20000004:	ffffffff                                ....

20000008 <flc_int>:
20000008:	40029000                                ...@

2000000c <interruptCheck>:
2000000c:	00001008                                ....

20000010 <__malloc_sbrk_base>:
20000010:	ffffffff                                ....

20000014 <__malloc_trim_threshold>:
20000014:	00020000                                ....

20000018 <__malloc_av_>:
	...
20000020:	20000018 20000018 20000020 20000020     ... ...  ..  .. 
20000030:	20000028 20000028 20000030 20000030     (.. (.. 0.. 0.. 
20000040:	20000038 20000038 20000040 20000040     8.. 8.. @.. @.. 
20000050:	20000048 20000048 20000050 20000050     H.. H.. P.. P.. 
20000060:	20000058 20000058 20000060 20000060     X.. X.. `.. `.. 
20000070:	20000068 20000068 20000070 20000070     h.. h.. p.. p.. 
20000080:	20000078 20000078 20000080 20000080     x.. x.. ... ... 
20000090:	20000088 20000088 20000090 20000090     ... ... ... ... 
200000a0:	20000098 20000098 200000a0 200000a0     ... ... ... ... 
200000b0:	200000a8 200000a8 200000b0 200000b0     ... ... ... ... 
200000c0:	200000b8 200000b8 200000c0 200000c0     ... ... ... ... 
200000d0:	200000c8 200000c8 200000d0 200000d0     ... ... ... ... 
200000e0:	200000d8 200000d8 200000e0 200000e0     ... ... ... ... 
200000f0:	200000e8 200000e8 200000f0 200000f0     ... ... ... ... 
20000100:	200000f8 200000f8 20000100 20000100     ... ... ... ... 
20000110:	20000108 20000108 20000110 20000110     ... ... ... ... 
20000120:	20000118 20000118 20000120 20000120     ... ...  ..  .. 
20000130:	20000128 20000128 20000130 20000130     (.. (.. 0.. 0.. 
20000140:	20000138 20000138 20000140 20000140     8.. 8.. @.. @.. 
20000150:	20000148 20000148 20000150 20000150     H.. H.. P.. P.. 
20000160:	20000158 20000158 20000160 20000160     X.. X.. `.. `.. 
20000170:	20000168 20000168 20000170 20000170     h.. h.. p.. p.. 
20000180:	20000178 20000178 20000180 20000180     x.. x.. ... ... 
20000190:	20000188 20000188 20000190 20000190     ... ... ... ... 
200001a0:	20000198 20000198 200001a0 200001a0     ... ... ... ... 
200001b0:	200001a8 200001a8 200001b0 200001b0     ... ... ... ... 
200001c0:	200001b8 200001b8 200001c0 200001c0     ... ... ... ... 
200001d0:	200001c8 200001c8 200001d0 200001d0     ... ... ... ... 
200001e0:	200001d8 200001d8 200001e0 200001e0     ... ... ... ... 
200001f0:	200001e8 200001e8 200001f0 200001f0     ... ... ... ... 
20000200:	200001f8 200001f8 20000200 20000200     ... ... ... ... 
20000210:	20000208 20000208 20000210 20000210     ... ... ... ... 
20000220:	20000218 20000218 20000220 20000220     ... ...  ..  .. 
20000230:	20000228 20000228 20000230 20000230     (.. (.. 0.. 0.. 
20000240:	20000238 20000238 20000240 20000240     8.. 8.. @.. @.. 
20000250:	20000248 20000248 20000250 20000250     H.. H.. P.. P.. 
20000260:	20000258 20000258 20000260 20000260     X.. X.. `.. `.. 
20000270:	20000268 20000268 20000270 20000270     h.. h.. p.. p.. 
20000280:	20000278 20000278 20000280 20000280     x.. x.. ... ... 
20000290:	20000288 20000288 20000290 20000290     ... ... ... ... 
200002a0:	20000298 20000298 200002a0 200002a0     ... ... ... ... 
200002b0:	200002a8 200002a8 200002b0 200002b0     ... ... ... ... 
200002c0:	200002b8 200002b8 200002c0 200002c0     ... ... ... ... 
200002d0:	200002c8 200002c8 200002d0 200002d0     ... ... ... ... 
200002e0:	200002d8 200002d8 200002e0 200002e0     ... ... ... ... 
200002f0:	200002e8 200002e8 200002f0 200002f0     ... ... ... ... 
20000300:	200002f8 200002f8 20000300 20000300     ... ... ... ... 
20000310:	20000308 20000308 20000310 20000310     ... ... ... ... 
20000320:	20000318 20000318 20000320 20000320     ... ...  ..  .. 
20000330:	20000328 20000328 20000330 20000330     (.. (.. 0.. 0.. 
20000340:	20000338 20000338 20000340 20000340     8.. 8.. @.. @.. 
20000350:	20000348 20000348 20000350 20000350     H.. H.. P.. P.. 
20000360:	20000358 20000358 20000360 20000360     X.. X.. `.. `.. 
20000370:	20000368 20000368 20000370 20000370     h.. h.. p.. p.. 
20000380:	20000378 20000378 20000380 20000380     x.. x.. ... ... 
20000390:	20000388 20000388 20000390 20000390     ... ... ... ... 
200003a0:	20000398 20000398 200003a0 200003a0     ... ... ... ... 
200003b0:	200003a8 200003a8 200003b0 200003b0     ... ... ... ... 
200003c0:	200003b8 200003b8 200003c0 200003c0     ... ... ... ... 
200003d0:	200003c8 200003c8 200003d0 200003d0     ... ... ... ... 
200003e0:	200003d8 200003d8 200003e0 200003e0     ... ... ... ... 
200003f0:	200003e8 200003e8 200003f0 200003f0     ... ... ... ... 
20000400:	200003f8 200003f8 20000400 20000400     ... ... ... ... 
20000410:	20000408 20000408 20000410 20000410     ... ... ... ... 

20000420 <__atexit_recursive_mutex>:
20000420:	20001490                                ... 

20000424 <__global_locale>:
20000424:	00000043 00000000 00000000 00000000     C...............
	...
20000444:	00000043 00000000 00000000 00000000     C...............
	...
20000464:	00000043 00000000 00000000 00000000     C...............
	...
20000484:	00000043 00000000 00000000 00000000     C...............
	...
200004a4:	00000043 00000000 00000000 00000000     C...............
	...
200004c4:	00000043 00000000 00000000 00000000     C...............
	...
200004e4:	00000043 00000000 00000000 00000000     C...............
	...
20000504:	10018251 1001d2cd 00000000 10020b0c     Q...............
20000514:	100209e4 100207e8 100207e8 100207e8     ................
20000524:	100207e8 100207e8 100207e8 100207e8     ................
20000534:	100207e8 100207e8 ffffffff ffffffff     ................
20000544:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
2000056c:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

20000590 <_impure_ptr>:
20000590:	20000598 00000000                       ... ....

20000598 <_impure_data>:
20000598:	00000000 2000149c 20001504 2000156c     ....... ... l.. 
	...
20000630:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
20000640:	0005deec 0000000b 00000000 00000000     ................
	...

200006b8 <__sglue>:
200006b8:	00000000 00000003 2000149c              ........... 

200006c4 <MXC_FLC_Busy>:
    return MXC_FLC_RevA_Busy();
200006c4:	f000 b864 	b.w	20000790 <MXC_FLC_RevA_Busy>

200006c8 <MXC_FLC_PageErase>:
    if ((addr >= MXC_FLASH_MEM_BASE) && (addr < (MXC_FLASH_MEM_BASE + MXC_FLASH_MEM_SIZE))) {
200006c8:	f100 4370 	add.w	r3, r0, #4026531840	@ 0xf0000000
200006cc:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
200006d0:	d320      	bcc.n	20000714 <MXC_FLC_PageErase+0x4c>
    } else if ((addr >= MXC_INFO_MEM_BASE) && (addr < (MXC_INFO_MEM_BASE + MXC_INFO_MEM_SIZE))) {
200006d2:	f1a0 5384 	sub.w	r3, r0, #276824064	@ 0x10800000
200006d6:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
200006da:	d21e      	bcs.n	2000071a <MXC_FLC_PageErase+0x52>
        *result = (addr & (MXC_INFO_MEM_SIZE - 1)) + MXC_FLASH_MEM_SIZE;
200006dc:	f3c0 000d 	ubfx	r0, r0, #0, #14
200006e0:	f500 2100 	add.w	r1, r0, #524288	@ 0x80000
{
200006e4:	b500      	push	{lr}
    err = MXC_FLC_RevA_PageErase((mxc_flc_reva_regs_t *)flc, addr);
200006e6:	480e      	ldr	r0, [pc, #56]	@ (20000720 <MXC_FLC_PageErase+0x58>)
{
200006e8:	b083      	sub	sp, #12
    err = MXC_FLC_RevA_PageErase((mxc_flc_reva_regs_t *)flc, addr);
200006ea:	f000 f897 	bl	2000081c <MXC_FLC_RevA_PageErase>
    MXC_GCR->sysctrl |= MXC_F_GCR_SYSCTRL_ICC0_FLUSH;
200006ee:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
200006f2:	6813      	ldr	r3, [r2, #0]
200006f4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
200006f8:	6013      	str	r3, [r2, #0]
    while (MXC_GCR->sysctrl & MXC_F_GCR_SYSCTRL_ICC0_FLUSH) {}
200006fa:	6813      	ldr	r3, [r2, #0]
200006fc:	065b      	lsls	r3, r3, #25
200006fe:	d4fc      	bmi.n	200006fa <MXC_FLC_PageErase+0x32>
    line = *line_addr;
20000700:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
    line = *line_addr;
20000704:	4b07      	ldr	r3, [pc, #28]	@ (20000724 <MXC_FLC_PageErase+0x5c>)
    line = *line_addr;
20000706:	6812      	ldr	r2, [r2, #0]
20000708:	9201      	str	r2, [sp, #4]
    line = *line_addr;
2000070a:	681b      	ldr	r3, [r3, #0]
2000070c:	9301      	str	r3, [sp, #4]
}
2000070e:	b003      	add	sp, #12
20000710:	f85d fb04 	ldr.w	pc, [sp], #4
        *result = addr & (MXC_FLASH_MEM_SIZE - 1);
20000714:	f3c0 0112 	ubfx	r1, r0, #0, #19
20000718:	e7e4      	b.n	200006e4 <MXC_FLC_PageErase+0x1c>
        return E_BAD_PARAM;
2000071a:	f06f 0002 	mvn.w	r0, #2
}
2000071e:	4770      	bx	lr
20000720:	40029000 	.word	0x40029000
20000724:	10002000 	.word	0x10002000

20000728 <MXC_FLC_Write128>:
    if (address & 0xF) {
20000728:	0702      	lsls	r2, r0, #28
2000072a:	d129      	bne.n	20000780 <MXC_FLC_Write128+0x58>
    if ((addr >= MXC_FLASH_MEM_BASE) && (addr < (MXC_FLASH_MEM_BASE + MXC_FLASH_MEM_SIZE))) {
2000072c:	f100 4370 	add.w	r3, r0, #4026531840	@ 0xf0000000
20000730:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
20000734:	460a      	mov	r2, r1
20000736:	d320      	bcc.n	2000077a <MXC_FLC_Write128+0x52>
    } else if ((addr >= MXC_INFO_MEM_BASE) && (addr < (MXC_INFO_MEM_BASE + MXC_INFO_MEM_SIZE))) {
20000738:	f1a0 5384 	sub.w	r3, r0, #276824064	@ 0x10800000
2000073c:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
20000740:	d21e      	bcs.n	20000780 <MXC_FLC_Write128+0x58>
        *result = (addr & (MXC_INFO_MEM_SIZE - 1)) + MXC_FLASH_MEM_SIZE;
20000742:	f3c0 000d 	ubfx	r0, r0, #0, #14
20000746:	f500 2100 	add.w	r1, r0, #524288	@ 0x80000
{
2000074a:	b500      	push	{lr}
    err = MXC_FLC_RevA_Write128((mxc_flc_reva_regs_t *)flc, addr, data);
2000074c:	480e      	ldr	r0, [pc, #56]	@ (20000788 <MXC_FLC_Write128+0x60>)
{
2000074e:	b083      	sub	sp, #12
    err = MXC_FLC_RevA_Write128((mxc_flc_reva_regs_t *)flc, addr, data);
20000750:	f000 f958 	bl	20000a04 <MXC_FLC_RevA_Write128>
    MXC_GCR->sysctrl |= MXC_F_GCR_SYSCTRL_ICC0_FLUSH;
20000754:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
20000758:	6813      	ldr	r3, [r2, #0]
2000075a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
2000075e:	6013      	str	r3, [r2, #0]
    while (MXC_GCR->sysctrl & MXC_F_GCR_SYSCTRL_ICC0_FLUSH) {}
20000760:	6813      	ldr	r3, [r2, #0]
20000762:	065b      	lsls	r3, r3, #25
20000764:	d4fc      	bmi.n	20000760 <MXC_FLC_Write128+0x38>
    line = *line_addr;
20000766:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
    line = *line_addr;
2000076a:	4b08      	ldr	r3, [pc, #32]	@ (2000078c <MXC_FLC_Write128+0x64>)
    line = *line_addr;
2000076c:	6812      	ldr	r2, [r2, #0]
2000076e:	9201      	str	r2, [sp, #4]
    line = *line_addr;
20000770:	681b      	ldr	r3, [r3, #0]
20000772:	9301      	str	r3, [sp, #4]
}
20000774:	b003      	add	sp, #12
20000776:	f85d fb04 	ldr.w	pc, [sp], #4
        *result = addr & (MXC_FLASH_MEM_SIZE - 1);
2000077a:	f3c0 0112 	ubfx	r1, r0, #0, #19
2000077e:	e7e4      	b.n	2000074a <MXC_FLC_Write128+0x22>
        return E_BAD_PARAM;
20000780:	f06f 0002 	mvn.w	r0, #2
}
20000784:	4770      	bx	lr
20000786:	bf00      	nop
20000788:	40029000 	.word	0x40029000
2000078c:	10002000 	.word	0x10002000

20000790 <MXC_FLC_RevA_Busy>:
    return (flc->ctrl &
20000790:	4b02      	ldr	r3, [pc, #8]	@ (2000079c <MXC_FLC_RevA_Busy+0xc>)
20000792:	6898      	ldr	r0, [r3, #8]
}
20000794:	f000 0007 	and.w	r0, r0, #7
20000798:	4770      	bx	lr
2000079a:	bf00      	nop
2000079c:	40029000 	.word	0x40029000

200007a0 <MXC_FLC_RevA_MassErase>:
    return (flc->ctrl &
200007a0:	6882      	ldr	r2, [r0, #8]
{
200007a2:	4603      	mov	r3, r0
    if (MXC_busy_flc(flc)) {
200007a4:	0750      	lsls	r0, r2, #29
200007a6:	d12a      	bne.n	200007fe <MXC_FLC_RevA_MassErase+0x5e>
    flc->clkdiv = SystemCoreClock / 1000000;
200007a8:	4a1a      	ldr	r2, [pc, #104]	@ (20000814 <MXC_FLC_RevA_MassErase+0x74>)
200007aa:	491b      	ldr	r1, [pc, #108]	@ (20000818 <MXC_FLC_RevA_MassErase+0x78>)
200007ac:	6812      	ldr	r2, [r2, #0]
200007ae:	fba1 1202 	umull	r1, r2, r1, r2
200007b2:	0c92      	lsrs	r2, r2, #18
200007b4:	605a      	str	r2, [r3, #4]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
200007b6:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
200007b8:	0791      	lsls	r1, r2, #30
200007ba:	d41b      	bmi.n	200007f4 <MXC_FLC_RevA_MassErase+0x54>
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_UNLOCK) | MXC_S_FLC_REVA_CTRL_UNLOCK_UNLOCKED;
200007bc:	689a      	ldr	r2, [r3, #8]
200007be:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
200007c2:	f042 5200 	orr.w	r2, r2, #536870912	@ 0x20000000
200007c6:	609a      	str	r2, [r3, #8]
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_ERASE_CODE) |
200007c8:	689a      	ldr	r2, [r3, #8]
200007ca:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
200007ce:	f442 422a 	orr.w	r2, r2, #43520	@ 0xaa00
200007d2:	609a      	str	r2, [r3, #8]
    flc->ctrl |= MXC_F_FLC_REVA_CTRL_ME;
200007d4:	689a      	ldr	r2, [r3, #8]
200007d6:	f042 0202 	orr.w	r2, r2, #2
200007da:	609a      	str	r2, [r3, #8]
    return (flc->ctrl &
200007dc:	689a      	ldr	r2, [r3, #8]
    while (MXC_busy_flc(flc)) {}
200007de:	0752      	lsls	r2, r2, #29
200007e0:	d1fc      	bne.n	200007dc <MXC_FLC_RevA_MassErase+0x3c>
    flc->ctrl &= ~MXC_F_FLC_REVA_CTRL_UNLOCK;
200007e2:	689a      	ldr	r2, [r3, #8]
200007e4:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
200007e8:	609a      	str	r2, [r3, #8]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
200007ea:	6a58      	ldr	r0, [r3, #36]	@ 0x24
200007ec:	f010 0002 	ands.w	r0, r0, #2
200007f0:	d108      	bne.n	20000804 <MXC_FLC_RevA_MassErase+0x64>
}
200007f2:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
200007f4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
200007f6:	f022 0202 	bic.w	r2, r2, #2
200007fa:	625a      	str	r2, [r3, #36]	@ 0x24
200007fc:	e7de      	b.n	200007bc <MXC_FLC_RevA_MassErase+0x1c>
        return E_BUSY;
200007fe:	f06f 0005 	mvn.w	r0, #5
20000802:	e7f6      	b.n	200007f2 <MXC_FLC_RevA_MassErase+0x52>
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000804:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
20000806:	f022 0202 	bic.w	r2, r2, #2
        return E_BAD_STATE;
2000080a:	f06f 0006 	mvn.w	r0, #6
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
2000080e:	625a      	str	r2, [r3, #36]	@ 0x24
        return E_BAD_STATE;
20000810:	4770      	bx	lr
20000812:	bf00      	nop
20000814:	20001768 	.word	0x20001768
20000818:	431bde83 	.word	0x431bde83

2000081c <MXC_FLC_RevA_PageErase>:
    return (flc->ctrl &
2000081c:	6882      	ldr	r2, [r0, #8]
    if (MXC_busy_flc(flc)) {
2000081e:	0752      	lsls	r2, r2, #29
{
20000820:	4603      	mov	r3, r0
    if (MXC_busy_flc(flc)) {
20000822:	d12b      	bne.n	2000087c <MXC_FLC_RevA_PageErase+0x60>
    flc->clkdiv = SystemCoreClock / 1000000;
20000824:	4a1a      	ldr	r2, [pc, #104]	@ (20000890 <MXC_FLC_RevA_PageErase+0x74>)
20000826:	481b      	ldr	r0, [pc, #108]	@ (20000894 <MXC_FLC_RevA_PageErase+0x78>)
20000828:	6812      	ldr	r2, [r2, #0]
2000082a:	fba0 0202 	umull	r0, r2, r0, r2
2000082e:	0c92      	lsrs	r2, r2, #18
20000830:	605a      	str	r2, [r3, #4]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
20000832:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
20000834:	0790      	lsls	r0, r2, #30
20000836:	d41c      	bmi.n	20000872 <MXC_FLC_RevA_PageErase+0x56>
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_UNLOCK) | MXC_S_FLC_REVA_CTRL_UNLOCK_UNLOCKED;
20000838:	689a      	ldr	r2, [r3, #8]
2000083a:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
2000083e:	f042 5200 	orr.w	r2, r2, #536870912	@ 0x20000000
20000842:	609a      	str	r2, [r3, #8]
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_ERASE_CODE) |
20000844:	689a      	ldr	r2, [r3, #8]
20000846:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
2000084a:	f442 42aa 	orr.w	r2, r2, #21760	@ 0x5500
2000084e:	609a      	str	r2, [r3, #8]
    flc->addr = addr;
20000850:	6019      	str	r1, [r3, #0]
    flc->ctrl |= MXC_F_FLC_REVA_CTRL_PGE;
20000852:	689a      	ldr	r2, [r3, #8]
20000854:	f042 0204 	orr.w	r2, r2, #4
20000858:	609a      	str	r2, [r3, #8]
    return (flc->ctrl &
2000085a:	689a      	ldr	r2, [r3, #8]
    while (MXC_busy_flc(flc)) {}
2000085c:	0752      	lsls	r2, r2, #29
2000085e:	d1fc      	bne.n	2000085a <MXC_FLC_RevA_PageErase+0x3e>
    flc->ctrl &= ~MXC_F_FLC_REVA_CTRL_UNLOCK;
20000860:	689a      	ldr	r2, [r3, #8]
20000862:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
20000866:	609a      	str	r2, [r3, #8]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
20000868:	6a58      	ldr	r0, [r3, #36]	@ 0x24
2000086a:	f010 0002 	ands.w	r0, r0, #2
2000086e:	d108      	bne.n	20000882 <MXC_FLC_RevA_PageErase+0x66>
}
20000870:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000872:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
20000874:	f022 0202 	bic.w	r2, r2, #2
20000878:	625a      	str	r2, [r3, #36]	@ 0x24
2000087a:	e7dd      	b.n	20000838 <MXC_FLC_RevA_PageErase+0x1c>
        return E_BUSY;
2000087c:	f06f 0005 	mvn.w	r0, #5
20000880:	e7f6      	b.n	20000870 <MXC_FLC_RevA_PageErase+0x54>
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000882:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
20000884:	f022 0202 	bic.w	r2, r2, #2
        return E_BAD_STATE;
20000888:	f06f 0006 	mvn.w	r0, #6
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
2000088c:	625a      	str	r2, [r3, #36]	@ 0x24
        return E_BAD_STATE;
2000088e:	4770      	bx	lr
20000890:	20001768 	.word	0x20001768
20000894:	431bde83 	.word	0x431bde83

20000898 <MXC_FLC_RevA_Write32>:
    if (logicAddr & 0x3) {
20000898:	078b      	lsls	r3, r1, #30
2000089a:	d139      	bne.n	20000910 <MXC_FLC_RevA_Write32+0x78>
    if ((*(uint32_t *)logicAddr & data) != data) {
2000089c:	4603      	mov	r3, r0
2000089e:	6808      	ldr	r0, [r1, #0]
200008a0:	ea32 0000 	bics.w	r0, r2, r0
200008a4:	d141      	bne.n	2000092a <MXC_FLC_RevA_Write32+0x92>
    return (flc->ctrl &
200008a6:	6898      	ldr	r0, [r3, #8]
    if (MXC_busy_flc(flc)) {
200008a8:	0740      	lsls	r0, r0, #29
    logicAddr = logicAddr & 0xfffffffc;
200008aa:	f021 0103 	bic.w	r1, r1, #3
    if (MXC_busy_flc(flc)) {
200008ae:	d132      	bne.n	20000916 <MXC_FLC_RevA_Write32+0x7e>
    flc->clkdiv = SystemCoreClock / 1000000;
200008b0:	481f      	ldr	r0, [pc, #124]	@ (20000930 <MXC_FLC_RevA_Write32+0x98>)
{
200008b2:	b410      	push	{r4}
    flc->clkdiv = SystemCoreClock / 1000000;
200008b4:	6800      	ldr	r0, [r0, #0]
200008b6:	4c1f      	ldr	r4, [pc, #124]	@ (20000934 <MXC_FLC_RevA_Write32+0x9c>)
200008b8:	fba4 4000 	umull	r4, r0, r4, r0
200008bc:	0c80      	lsrs	r0, r0, #18
200008be:	6058      	str	r0, [r3, #4]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
200008c0:	6a58      	ldr	r0, [r3, #36]	@ 0x24
200008c2:	0780      	lsls	r0, r0, #30
200008c4:	d41f      	bmi.n	20000906 <MXC_FLC_RevA_Write32+0x6e>
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_UNLOCK) | MXC_S_FLC_REVA_CTRL_UNLOCK_UNLOCKED;
200008c6:	6898      	ldr	r0, [r3, #8]
200008c8:	f020 4070 	bic.w	r0, r0, #4026531840	@ 0xf0000000
200008cc:	f040 5000 	orr.w	r0, r0, #536870912	@ 0x20000000
200008d0:	6098      	str	r0, [r3, #8]
    flc->ctrl |= MXC_F_FLC_REVA_CTRL_WDTH;
200008d2:	6898      	ldr	r0, [r3, #8]
200008d4:	f040 0010 	orr.w	r0, r0, #16
200008d8:	6098      	str	r0, [r3, #8]
    flc->addr = logicAddr;
200008da:	6019      	str	r1, [r3, #0]
    flc->data[0] = data;
200008dc:	631a      	str	r2, [r3, #48]	@ 0x30
    flc->ctrl |= MXC_F_FLC_REVA_CTRL_WR;
200008de:	689a      	ldr	r2, [r3, #8]
200008e0:	f042 0201 	orr.w	r2, r2, #1
200008e4:	609a      	str	r2, [r3, #8]
    while ((flc->ctrl & MXC_F_FLC_REVA_CTRL_PEND) != 0) {}
200008e6:	689a      	ldr	r2, [r3, #8]
200008e8:	01d1      	lsls	r1, r2, #7
200008ea:	d4fc      	bmi.n	200008e6 <MXC_FLC_RevA_Write32+0x4e>
    return (flc->ctrl &
200008ec:	689a      	ldr	r2, [r3, #8]
    while (MXC_busy_flc(flc)) {}
200008ee:	0752      	lsls	r2, r2, #29
200008f0:	d1fc      	bne.n	200008ec <MXC_FLC_RevA_Write32+0x54>
    flc->ctrl &= ~MXC_F_FLC_REVA_CTRL_UNLOCK;
200008f2:	689a      	ldr	r2, [r3, #8]
200008f4:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
200008f8:	609a      	str	r2, [r3, #8]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
200008fa:	6a58      	ldr	r0, [r3, #36]	@ 0x24
200008fc:	f010 0002 	ands.w	r0, r0, #2
20000900:	d10c      	bne.n	2000091c <MXC_FLC_RevA_Write32+0x84>
}
20000902:	bc10      	pop	{r4}
20000904:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000906:	6a58      	ldr	r0, [r3, #36]	@ 0x24
20000908:	f020 0002 	bic.w	r0, r0, #2
2000090c:	6258      	str	r0, [r3, #36]	@ 0x24
2000090e:	e7da      	b.n	200008c6 <MXC_FLC_RevA_Write32+0x2e>
        return E_BAD_PARAM;
20000910:	f06f 0002 	mvn.w	r0, #2
20000914:	4770      	bx	lr
        return E_BUSY;
20000916:	f06f 0005 	mvn.w	r0, #5
2000091a:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
2000091c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
2000091e:	f022 0202 	bic.w	r2, r2, #2
20000922:	625a      	str	r2, [r3, #36]	@ 0x24
        return E_BAD_STATE;
20000924:	f06f 0006 	mvn.w	r0, #6
20000928:	e7eb      	b.n	20000902 <MXC_FLC_RevA_Write32+0x6a>
2000092a:	f06f 0006 	mvn.w	r0, #6
}
2000092e:	4770      	bx	lr
20000930:	20001768 	.word	0x20001768
20000934:	431bde83 	.word	0x431bde83

20000938 <MXC_FLC_RevA_Write32Using128>:
{
20000938:	b570      	push	{r4, r5, r6, lr}
2000093a:	4684      	mov	ip, r0
2000093c:	b084      	sub	sp, #16
    uint32_t current_data[4] = { 0, 0, 0, 0 };
2000093e:	2000      	movs	r0, #0
    if (logicAddr & 0x3) {
20000940:	078e      	lsls	r6, r1, #30
    uint32_t current_data[4] = { 0, 0, 0, 0 };
20000942:	e9cd 0000 	strd	r0, r0, [sp]
20000946:	e9cd 0002 	strd	r0, r0, [sp, #8]
    if (logicAddr & 0x3) {
2000094a:	d150      	bne.n	200009ee <MXC_FLC_RevA_Write32Using128+0xb6>
    if ((*(uint32_t *)logicAddr & data) != data) {
2000094c:	6808      	ldr	r0, [r1, #0]
2000094e:	ea32 0000 	bics.w	r0, r2, r0
20000952:	d149      	bne.n	200009e8 <MXC_FLC_RevA_Write32Using128+0xb0>
    return (flc->ctrl &
20000954:	f8dc 4008 	ldr.w	r4, [ip, #8]
    if (MXC_busy_flc(flc)) {
20000958:	0765      	lsls	r5, r4, #29
    logicAddr = logicAddr & 0xfffffff0;
2000095a:	f021 000f 	bic.w	r0, r1, #15
    if (MXC_busy_flc(flc)) {
2000095e:	d149      	bne.n	200009f4 <MXC_FLC_RevA_Write32Using128+0xbc>
    flc->clkdiv = SystemCoreClock / 1000000;
20000960:	4c26      	ldr	r4, [pc, #152]	@ (200009fc <MXC_FLC_RevA_Write32Using128+0xc4>)
20000962:	4d27      	ldr	r5, [pc, #156]	@ (20000a00 <MXC_FLC_RevA_Write32Using128+0xc8>)
20000964:	6824      	ldr	r4, [r4, #0]
20000966:	fba5 5404 	umull	r5, r4, r5, r4
2000096a:	0ca4      	lsrs	r4, r4, #18
2000096c:	f8cc 4004 	str.w	r4, [ip, #4]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
20000970:	f8dc 4024 	ldr.w	r4, [ip, #36]	@ 0x24
20000974:	07a4      	lsls	r4, r4, #30
20000976:	d425      	bmi.n	200009c4 <MXC_FLC_RevA_Write32Using128+0x8c>
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_UNLOCK) | MXC_S_FLC_REVA_CTRL_UNLOCK_UNLOCKED;
20000978:	f8dc 4008 	ldr.w	r4, [ip, #8]
2000097c:	f024 4470 	bic.w	r4, r4, #4026531840	@ 0xf0000000
20000980:	f044 5400 	orr.w	r4, r4, #536870912	@ 0x20000000
20000984:	f8cc 4008 	str.w	r4, [ip, #8]
    for (ptr = (uint32_t *)logicAddr; ptr < (uint32_t *)(logicAddr + 16); ptr++, i++) {
20000988:	f100 0410 	add.w	r4, r0, #16
2000098c:	42a0      	cmp	r0, r4
2000098e:	4686      	mov	lr, r0
20000990:	d20d      	bcs.n	200009ae <MXC_FLC_RevA_Write32Using128+0x76>
20000992:	1d05      	adds	r5, r0, #4
20000994:	42ac      	cmp	r4, r5
20000996:	bf34      	ite	cc
20000998:	2401      	movcc	r4, #1
2000099a:	2404      	movcs	r4, #4
2000099c:	eb00 0484 	add.w	r4, r0, r4, lsl #2
200009a0:	466d      	mov	r5, sp
        current_data[i] = *ptr;
200009a2:	f85e 6b04 	ldr.w	r6, [lr], #4
200009a6:	f845 6b04 	str.w	r6, [r5], #4
    for (ptr = (uint32_t *)logicAddr; ptr < (uint32_t *)(logicAddr + 16); ptr++, i++) {
200009aa:	45a6      	cmp	lr, r4
200009ac:	d1f9      	bne.n	200009a2 <MXC_FLC_RevA_Write32Using128+0x6a>
    if (byte < 4) {
200009ae:	f011 0f0c 	tst.w	r1, #12
    flc->addr = physicalAddr;
200009b2:	f8cc 3000 	str.w	r3, [ip]
    if (byte < 4) {
200009b6:	d10c      	bne.n	200009d2 <MXC_FLC_RevA_Write32Using128+0x9a>
        current_data[0] = data;
200009b8:	9200      	str	r2, [sp, #0]
    return MXC_FLC_Write128(logicAddr, current_data);
200009ba:	4669      	mov	r1, sp
200009bc:	f7ff feb4 	bl	20000728 <MXC_FLC_Write128>
}
200009c0:	b004      	add	sp, #16
200009c2:	bd70      	pop	{r4, r5, r6, pc}
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
200009c4:	f8dc 4024 	ldr.w	r4, [ip, #36]	@ 0x24
200009c8:	f024 0402 	bic.w	r4, r4, #2
200009cc:	f8cc 4024 	str.w	r4, [ip, #36]	@ 0x24
200009d0:	e7d2      	b.n	20000978 <MXC_FLC_RevA_Write32Using128+0x40>
    } else if (byte < 8) {
200009d2:	070b      	lsls	r3, r1, #28
200009d4:	d401      	bmi.n	200009da <MXC_FLC_RevA_Write32Using128+0xa2>
        current_data[1] = data;
200009d6:	9201      	str	r2, [sp, #4]
200009d8:	e7ef      	b.n	200009ba <MXC_FLC_RevA_Write32Using128+0x82>
    byte = (logicAddr & 0xf);
200009da:	f001 010f 	and.w	r1, r1, #15
    } else if (byte < 12) {
200009de:	290b      	cmp	r1, #11
        current_data[2] = data;
200009e0:	bf94      	ite	ls
200009e2:	9202      	strls	r2, [sp, #8]
        current_data[3] = data;
200009e4:	9203      	strhi	r2, [sp, #12]
200009e6:	e7e8      	b.n	200009ba <MXC_FLC_RevA_Write32Using128+0x82>
        return E_BAD_STATE;
200009e8:	f06f 0006 	mvn.w	r0, #6
200009ec:	e7e8      	b.n	200009c0 <MXC_FLC_RevA_Write32Using128+0x88>
        return E_BAD_PARAM;
200009ee:	f06f 0002 	mvn.w	r0, #2
200009f2:	e7e5      	b.n	200009c0 <MXC_FLC_RevA_Write32Using128+0x88>
        return E_BUSY;
200009f4:	f06f 0005 	mvn.w	r0, #5
200009f8:	e7e2      	b.n	200009c0 <MXC_FLC_RevA_Write32Using128+0x88>
200009fa:	bf00      	nop
200009fc:	20001768 	.word	0x20001768
20000a00:	431bde83 	.word	0x431bde83

20000a04 <MXC_FLC_RevA_Write128>:
    if (addr & 0xF) {
20000a04:	070b      	lsls	r3, r1, #28
20000a06:	d13a      	bne.n	20000a7e <MXC_FLC_RevA_Write128+0x7a>
    return (flc->ctrl &
20000a08:	4603      	mov	r3, r0
20000a0a:	6880      	ldr	r0, [r0, #8]
    if (MXC_busy_flc(flc)) {
20000a0c:	0740      	lsls	r0, r0, #29
20000a0e:	d139      	bne.n	20000a84 <MXC_FLC_RevA_Write128+0x80>
    flc->clkdiv = SystemCoreClock / 1000000;
20000a10:	4821      	ldr	r0, [pc, #132]	@ (20000a98 <MXC_FLC_RevA_Write128+0x94>)
{
20000a12:	b410      	push	{r4}
    flc->clkdiv = SystemCoreClock / 1000000;
20000a14:	6800      	ldr	r0, [r0, #0]
20000a16:	4c21      	ldr	r4, [pc, #132]	@ (20000a9c <MXC_FLC_RevA_Write128+0x98>)
20000a18:	fba4 4000 	umull	r4, r0, r4, r0
20000a1c:	0c80      	lsrs	r0, r0, #18
20000a1e:	6058      	str	r0, [r3, #4]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
20000a20:	6a58      	ldr	r0, [r3, #36]	@ 0x24
20000a22:	0780      	lsls	r0, r0, #30
20000a24:	d426      	bmi.n	20000a74 <MXC_FLC_RevA_Write128+0x70>
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_UNLOCK) | MXC_S_FLC_REVA_CTRL_UNLOCK_UNLOCKED;
20000a26:	6898      	ldr	r0, [r3, #8]
20000a28:	f020 4070 	bic.w	r0, r0, #4026531840	@ 0xf0000000
20000a2c:	f040 5000 	orr.w	r0, r0, #536870912	@ 0x20000000
20000a30:	6098      	str	r0, [r3, #8]
    flc->ctrl &= ~MXC_F_FLC_REVA_CTRL_WDTH;
20000a32:	6898      	ldr	r0, [r3, #8]
20000a34:	f020 0010 	bic.w	r0, r0, #16
20000a38:	6098      	str	r0, [r3, #8]
    flc->addr = addr;
20000a3a:	6019      	str	r1, [r3, #0]
    flc->data[0] = data[0];
20000a3c:	6811      	ldr	r1, [r2, #0]
20000a3e:	6319      	str	r1, [r3, #48]	@ 0x30
    flc->data[1] = data[1];
20000a40:	6851      	ldr	r1, [r2, #4]
20000a42:	6359      	str	r1, [r3, #52]	@ 0x34
    flc->data[2] = data[2];
20000a44:	6891      	ldr	r1, [r2, #8]
20000a46:	6399      	str	r1, [r3, #56]	@ 0x38
    flc->data[3] = data[3];
20000a48:	68d2      	ldr	r2, [r2, #12]
20000a4a:	63da      	str	r2, [r3, #60]	@ 0x3c
    flc->ctrl |= MXC_F_FLC_REVA_CTRL_WR;
20000a4c:	689a      	ldr	r2, [r3, #8]
20000a4e:	f042 0201 	orr.w	r2, r2, #1
20000a52:	609a      	str	r2, [r3, #8]
    while ((flc->ctrl & MXC_F_FLC_REVA_CTRL_PEND) != 0) {}
20000a54:	689a      	ldr	r2, [r3, #8]
20000a56:	01d1      	lsls	r1, r2, #7
20000a58:	d4fc      	bmi.n	20000a54 <MXC_FLC_RevA_Write128+0x50>
    return (flc->ctrl &
20000a5a:	689a      	ldr	r2, [r3, #8]
    while (MXC_busy_flc(flc)) {}
20000a5c:	0752      	lsls	r2, r2, #29
20000a5e:	d1fc      	bne.n	20000a5a <MXC_FLC_RevA_Write128+0x56>
    flc->ctrl &= ~MXC_F_FLC_REVA_CTRL_UNLOCK;
20000a60:	689a      	ldr	r2, [r3, #8]
20000a62:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
20000a66:	609a      	str	r2, [r3, #8]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
20000a68:	6a58      	ldr	r0, [r3, #36]	@ 0x24
20000a6a:	f010 0002 	ands.w	r0, r0, #2
20000a6e:	d10c      	bne.n	20000a8a <MXC_FLC_RevA_Write128+0x86>
}
20000a70:	bc10      	pop	{r4}
20000a72:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000a74:	6a58      	ldr	r0, [r3, #36]	@ 0x24
20000a76:	f020 0002 	bic.w	r0, r0, #2
20000a7a:	6258      	str	r0, [r3, #36]	@ 0x24
20000a7c:	e7d3      	b.n	20000a26 <MXC_FLC_RevA_Write128+0x22>
        return E_BAD_PARAM;
20000a7e:	f06f 0002 	mvn.w	r0, #2
20000a82:	4770      	bx	lr
        return E_BUSY;
20000a84:	f06f 0005 	mvn.w	r0, #5
}
20000a88:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000a8a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
20000a8c:	f022 0202 	bic.w	r2, r2, #2
        return E_BAD_STATE;
20000a90:	f06f 0006 	mvn.w	r0, #6
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000a94:	625a      	str	r2, [r3, #36]	@ 0x24
        return E_BAD_STATE;
20000a96:	e7eb      	b.n	20000a70 <MXC_FLC_RevA_Write128+0x6c>
20000a98:	20001768 	.word	0x20001768
20000a9c:	431bde83 	.word	0x431bde83

20000aa0 <MXC_FLC_Com_VerifyData>:
// Length is number of 32-bit words
int MXC_FLC_Com_VerifyData(uint32_t address, uint32_t length, uint32_t *data)
{
    volatile uint32_t *ptr;

    for (ptr = (uint32_t *)address; ptr < (((uint32_t *)(address)) + length); ptr++, data++) {
20000aa0:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
20000aa4:	4560      	cmp	r0, ip
20000aa6:	d20d      	bcs.n	20000ac4 <MXC_FLC_Com_VerifyData+0x24>
20000aa8:	3a04      	subs	r2, #4
20000aaa:	e001      	b.n	20000ab0 <MXC_FLC_Com_VerifyData+0x10>
20000aac:	4560      	cmp	r0, ip
20000aae:	d209      	bcs.n	20000ac4 <MXC_FLC_Com_VerifyData+0x24>
        if (*ptr != *data) {
20000ab0:	6801      	ldr	r1, [r0, #0]
20000ab2:	f852 3f04 	ldr.w	r3, [r2, #4]!
20000ab6:	4299      	cmp	r1, r3
    for (ptr = (uint32_t *)address; ptr < (((uint32_t *)(address)) + length); ptr++, data++) {
20000ab8:	f100 0004 	add.w	r0, r0, #4
        if (*ptr != *data) {
20000abc:	d0f6      	beq.n	20000aac <MXC_FLC_Com_VerifyData+0xc>
            return E_BAD_STATE;
20000abe:	f06f 0006 	mvn.w	r0, #6
        }
    }

    return E_NO_ERROR;
}
20000ac2:	4770      	bx	lr
    return E_NO_ERROR;
20000ac4:	2000      	movs	r0, #0
20000ac6:	4770      	bx	lr

20000ac8 <MXC_FLC_Com_Write>:
#else
__attribute__((section(".flashprog")))
#endif
// make sure to disable ICC with ICC_Disable(); before Running this function
int MXC_FLC_Com_Write(uint32_t address, uint32_t length, uint32_t *buffer)
{
20000ac8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    uint32_t current_data_32;
    uint8_t *current_data = (uint8_t *)&current_data_32;
    uint8_t *buffer8 = (uint8_t *)buffer;

    // Align the address to a word boundary and read/write if we have to
    if (address & 0x3) {
20000acc:	f010 0703 	ands.w	r7, r0, #3
{
20000ad0:	b087      	sub	sp, #28
20000ad2:	4604      	mov	r4, r0
20000ad4:	460e      	mov	r6, r1
20000ad6:	4615      	mov	r5, r2
    if (address & 0x3) {
20000ad8:	d00b      	beq.n	20000af2 <MXC_FLC_Com_Write+0x2a>
20000ada:	e012      	b.n	20000b02 <MXC_FLC_Com_Write+0x3a>
        length -= bytes_written;
        buffer8 += bytes_written;
    }

    // Align the address to a 4-word (128bit) boundary
    while ((length >= 4) && ((address & 0xF) != 0)) {
20000adc:	0723      	lsls	r3, r4, #28
20000ade:	d028      	beq.n	20000b32 <MXC_FLC_Com_Write+0x6a>
        memcpy(current_data, buffer8, 4);
20000ae0:	6829      	ldr	r1, [r5, #0]
20000ae2:	9101      	str	r1, [sp, #4]
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000ae4:	4620      	mov	r0, r4
20000ae6:	f000 f867 	bl	20000bb8 <__MXC_FLC_Write32_veneer>
            return err;
        }

        address += 4;
        length -= 4;
20000aea:	3e04      	subs	r6, #4
        address += 4;
20000aec:	3404      	adds	r4, #4
        buffer8 += 4;
20000aee:	3504      	adds	r5, #4
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000af0:	b920      	cbnz	r0, 20000afc <MXC_FLC_Com_Write+0x34>
    while ((length >= 4) && ((address & 0xF) != 0)) {
20000af2:	2e03      	cmp	r6, #3
20000af4:	d8f2      	bhi.n	20000adc <MXC_FLC_Com_Write+0x14>
        address += 4;
        length -= 4;
        buffer8 += 4;
    }

    if (length > 0) {
20000af6:	2e00      	cmp	r6, #0
20000af8:	d143      	bne.n	20000b82 <MXC_FLC_Com_Write+0xba>
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
            return err;
        }
    }

    return E_NO_ERROR;
20000afa:	4630      	mov	r0, r6
}
20000afc:	b007      	add	sp, #28
20000afe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        memcpy(current_data, (void *)(address & (~0x3)), 4);
20000b02:	f020 0903 	bic.w	r9, r0, #3
        memcpy(&current_data[4 - bytes_written], buffer8, bytes_written);
20000b06:	ab01      	add	r3, sp, #4
        bytes_written = 4 - (address & 0x3);
20000b08:	f1c7 0804 	rsb	r8, r7, #4
        memcpy(&current_data[4 - bytes_written], buffer8, bytes_written);
20000b0c:	19d8      	adds	r0, r3, r7
20000b0e:	4629      	mov	r1, r5
        memcpy(current_data, (void *)(address & (~0x3)), 4);
20000b10:	f8d9 3000 	ldr.w	r3, [r9]
20000b14:	9301      	str	r3, [sp, #4]
        memcpy(&current_data[4 - bytes_written], buffer8, bytes_written);
20000b16:	4642      	mov	r2, r8
20000b18:	f000 f84a 	bl	20000bb0 <__memcpy_veneer>
        if ((err = MXC_FLC_Write32(address - (address % 4), current_data_32)) != E_NO_ERROR) {
20000b1c:	9901      	ldr	r1, [sp, #4]
20000b1e:	4648      	mov	r0, r9
20000b20:	f000 f84a 	bl	20000bb8 <__MXC_FLC_Write32_veneer>
20000b24:	2800      	cmp	r0, #0
20000b26:	d1e9      	bne.n	20000afc <MXC_FLC_Com_Write+0x34>
        address += bytes_written;
20000b28:	3e04      	subs	r6, #4
20000b2a:	4444      	add	r4, r8
        length -= bytes_written;
20000b2c:	443e      	add	r6, r7
        buffer8 += bytes_written;
20000b2e:	4445      	add	r5, r8
20000b30:	e7df      	b.n	20000af2 <MXC_FLC_Com_Write+0x2a>
    if (length >= 16) {
20000b32:	2e0f      	cmp	r6, #15
20000b34:	d902      	bls.n	20000b3c <MXC_FLC_Com_Write+0x74>
20000b36:	e010      	b.n	20000b5a <MXC_FLC_Com_Write+0x92>
    while (length >= 4) {
20000b38:	2e03      	cmp	r6, #3
20000b3a:	d9dc      	bls.n	20000af6 <MXC_FLC_Com_Write+0x2e>
        memcpy(current_data, buffer8, 4);
20000b3c:	6829      	ldr	r1, [r5, #0]
20000b3e:	9101      	str	r1, [sp, #4]
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000b40:	4620      	mov	r0, r4
20000b42:	f000 f839 	bl	20000bb8 <__MXC_FLC_Write32_veneer>
        length -= 4;
20000b46:	3e04      	subs	r6, #4
        address += 4;
20000b48:	3404      	adds	r4, #4
        buffer8 += 4;
20000b4a:	3504      	adds	r5, #4
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000b4c:	2800      	cmp	r0, #0
20000b4e:	d0f3      	beq.n	20000b38 <MXC_FLC_Com_Write+0x70>
}
20000b50:	b007      	add	sp, #28
20000b52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        while (length >= 16) {
20000b56:	2e0f      	cmp	r6, #15
20000b58:	d9ee      	bls.n	20000b38 <MXC_FLC_Com_Write+0x70>
            memcpy(buff128, buffer8, 16);
20000b5a:	6828      	ldr	r0, [r5, #0]
20000b5c:	6869      	ldr	r1, [r5, #4]
20000b5e:	68aa      	ldr	r2, [r5, #8]
20000b60:	68eb      	ldr	r3, [r5, #12]
20000b62:	f10d 0c08 	add.w	ip, sp, #8
20000b66:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
            if ((err = MXC_FLC_Write128(address, buff128)) != E_NO_ERROR) {
20000b6a:	4620      	mov	r0, r4
20000b6c:	a902      	add	r1, sp, #8
20000b6e:	f7ff fddb 	bl	20000728 <MXC_FLC_Write128>
            length -= 16;
20000b72:	3e10      	subs	r6, #16
            address += 16;
20000b74:	3410      	adds	r4, #16
            buffer8 += 16;
20000b76:	3510      	adds	r5, #16
            if ((err = MXC_FLC_Write128(address, buff128)) != E_NO_ERROR) {
20000b78:	2800      	cmp	r0, #0
20000b7a:	d0ec      	beq.n	20000b56 <MXC_FLC_Com_Write+0x8e>
}
20000b7c:	b007      	add	sp, #28
20000b7e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        memcpy(current_data, (void *)(address), 4);
20000b82:	6823      	ldr	r3, [r4, #0]
20000b84:	9301      	str	r3, [sp, #4]
        memcpy(current_data, buffer8, length);
20000b86:	4629      	mov	r1, r5
20000b88:	4632      	mov	r2, r6
20000b8a:	a801      	add	r0, sp, #4
20000b8c:	f000 f810 	bl	20000bb0 <__memcpy_veneer>
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000b90:	9901      	ldr	r1, [sp, #4]
20000b92:	4620      	mov	r0, r4
}
20000b94:	b007      	add	sp, #28
20000b96:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000b9a:	f000 b80d 	b.w	20000bb8 <__MXC_FLC_Write32_veneer>
20000b9e:	bf00      	nop

20000ba0 <MXC_FLC_Com_Read>:
#pragma section = ".flashprog"
#else
__attribute__((section(".flashprog")))
#endif
void MXC_FLC_Com_Read(int address, void *buffer, int len)
{
20000ba0:	4603      	mov	r3, r0
    memcpy(buffer, (void *)address, len);
20000ba2:	4608      	mov	r0, r1
20000ba4:	4619      	mov	r1, r3
20000ba6:	f000 b803 	b.w	20000bb0 <__memcpy_veneer>
20000baa:	bf00      	nop
20000bac:	0000      	movs	r0, r0
	...

20000bb0 <__memcpy_veneer>:
20000bb0:	f85f f000 	ldr.w	pc, [pc]	@ 20000bb4 <__memcpy_veneer+0x4>
20000bb4:	10015a01 	.word	0x10015a01

20000bb8 <__MXC_FLC_Write32_veneer>:
20000bb8:	f85f f000 	ldr.w	pc, [pc]	@ 20000bbc <__MXC_FLC_Write32_veneer+0x4>
20000bbc:	10011709 	.word	0x10011709

20000bc0 <__init_array_start>:
20000bc0:	10014ef9 	.word	0x10014ef9

20000bc4 <__frame_dummy_init_array_entry>:
20000bc4:	10010271                                q...

20000bc8 <__do_global_dtors_aux_fini_array_entry>:
20000bc8:	10010249                                I...
